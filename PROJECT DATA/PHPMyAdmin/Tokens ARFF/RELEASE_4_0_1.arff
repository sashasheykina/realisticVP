@relation R_data_frame

@attribute tokens string
@attribute IsVulnerable {no,yes}

@data
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($field) = T_VARIABLE($_REQUEST) [ ] ; T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( , , ) ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_VARIABLE($foreigners) = ( T_VARIABLE($cfgRelation) [ ] ? T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) : T_STRING ) ; T_VARIABLE($override_total) = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($pos) ) ) { T_VARIABLE($pos) = T_LNUMBER ; } T_VARIABLE($foreign_limit) = . T_VARIABLE($pos) . . T_VARIABLE($GLOBALS) [ ] [ ] . ; T_IF ( T_ISSET ( T_VARIABLE($foreign_navig) ) T_BOOLEAN_AND T_VARIABLE($foreign_navig) T_IS_EQUAL T_STRING ( ) ) { T_UNSET ( T_VARIABLE($foreign_limit) ) ; } T_VARIABLE($foreignData) = T_STRING ( T_VARIABLE($foreigners) , T_VARIABLE($field) , T_VARIABLE($override_total) , T_ISSET ( T_VARIABLE($foreign_filter) ) ? T_VARIABLE($foreign_filter) : , T_VARIABLE($foreign_limit) ) ; T_IF ( T_ISSET ( T_VARIABLE($rownumber) ) ) { T_VARIABLE($rownumber_param) = . T_STRING ( T_VARIABLE($rownumber) ) ; } T_ELSE { T_VARIABLE($rownumber_param) = ; } T_VARIABLE($gotopage) = ; T_VARIABLE($showall) = ; T_IF ( T_STRING ( T_VARIABLE($foreignData) [ ] ) ) { T_IF ( T_VARIABLE($cfg) [ ] T_BOOLEAN_AND ( T_VARIABLE($foreignData) [ ] > T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($showall) = . T_STRING ( ) . ; } T_VARIABLE($session_max_rows) = T_VARIABLE($GLOBALS) [ ] [ ] ; T_VARIABLE($pageNow) = @ T_STRING ( T_VARIABLE($pos) / T_VARIABLE($session_max_rows) ) + T_LNUMBER ; T_VARIABLE($nbTotalPage) = @ T_STRING ( T_VARIABLE($foreignData) [ ] / T_VARIABLE($session_max_rows) ) ; T_IF ( T_VARIABLE($foreignData) [ ] > T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($gotopage) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($session_max_rows) , T_VARIABLE($pageNow) , T_VARIABLE($nbTotalPage) , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_STRING ( ) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($rownumber) ) ) { T_VARIABLE($element_name) = . T_STRING ( T_VARIABLE($rownumber) ) . . . T_STRING ( T_VARIABLE($rownumber) ) . ; } T_ELSE { T_VARIABLE($element_name) = ; } T_VARIABLE($error) = T_STRING ( T_STRING ( . . . ) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($fieldkey) ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($fieldkey) ) ) { T_VARIABLE($fieldkey) = T_LNUMBER ; } T_VARIABLE($code) = T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_VARIABLE($element_name) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($fieldkey) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($error) T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($code) ) ; T_VARIABLE($output) = . . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) . . T_STRING ( T_VARIABLE($field) ) . . . ( T_ISSET ( T_VARIABLE($fieldkey) ) ? T_STRING ( T_VARIABLE($fieldkey) ) : ) . ; T_IF ( T_ISSET ( T_VARIABLE($rownumber) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($rownumber) ) . ; } T_VARIABLE($output) T_CONCAT_EQUAL . . T_STRING ( ) . . . . ( T_ISSET ( T_VARIABLE($foreign_filter) ) ? T_STRING ( T_VARIABLE($foreign_filter) ) : ) . . . T_STRING ( ) . . . . T_VARIABLE($gotopage) . . . T_VARIABLE($showall) . . . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_IF ( T_STRING ( T_VARIABLE($foreignData) [ ] ) ) { T_VARIABLE($header) = . T_STRING ( ) . . T_STRING ( ) . . T_STRING ( ) . . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($header) . . . . T_VARIABLE($header) . . . . ; T_VARIABLE($values) = T_ARRAY ( ) ; T_VARIABLE($keys) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($foreignData) [ ] T_AS T_VARIABLE($relrow) ) { T_IF ( T_VARIABLE($foreignData) [ ] T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($values) [ ] = T_VARIABLE($relrow) [ T_VARIABLE($foreignData) [ ] ] ; } T_ELSE { T_VARIABLE($values) [ ] = ; } T_VARIABLE($keys) [ ] = T_VARIABLE($relrow) [ T_VARIABLE($foreignData) [ ] ] ; } T_STRING ( T_VARIABLE($keys) ) ; T_VARIABLE($hcount) = T_LNUMBER ; T_VARIABLE($odd_row) = T_STRING ; T_VARIABLE($val_ordered_current_row) = T_LNUMBER ; T_VARIABLE($val_ordered_current_equals_data) = T_STRING ; T_VARIABLE($key_ordered_current_equals_data) = T_STRING ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($key_ordered_current_row) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($hcount) T_INC ; T_IF ( T_VARIABLE($cfg) [ ] > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($hcount) > T_VARIABLE($cfg) [ ] ) { T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($header) ; T_VARIABLE($hcount) = T_LNUMBER ; T_VARIABLE($odd_row) = T_STRING ; } T_VARIABLE($key_ordered_current_key) = T_VARIABLE($keys) [ T_VARIABLE($key_ordered_current_row) ] ; T_VARIABLE($key_ordered_current_val) = T_VARIABLE($values) [ T_VARIABLE($key_ordered_current_row) ] ; T_VARIABLE($val_ordered_current_key) = T_VARIABLE($keys) [ T_VARIABLE($val_ordered_current_row) ] ; T_VARIABLE($val_ordered_current_val) = T_VARIABLE($values) [ T_VARIABLE($val_ordered_current_row) ] ; T_VARIABLE($val_ordered_current_row) T_INC ; T_IF ( T_STRING ( T_VARIABLE($val_ordered_current_val) ) T_IS_SMALLER_OR_EQUAL T_VARIABLE($cfg) [ ] ) { T_VARIABLE($val_ordered_current_val) = T_STRING ( T_VARIABLE($val_ordered_current_val) ) ; T_VARIABLE($val_ordered_current_val_title) = ; } T_ELSE { T_VARIABLE($val_ordered_current_val_title) = T_STRING ( T_VARIABLE($val_ordered_current_val) ) ; T_VARIABLE($val_ordered_current_val) = T_STRING ( T_STRING ( T_VARIABLE($val_ordered_current_val) , T_LNUMBER , T_VARIABLE($cfg) [ ] ) . ) ; } T_IF ( T_STRING ( T_VARIABLE($key_ordered_current_val) ) T_IS_SMALLER_OR_EQUAL T_VARIABLE($cfg) [ ] ) { T_VARIABLE($key_ordered_current_val) = T_STRING ( T_VARIABLE($key_ordered_current_val) ) ; T_VARIABLE($key_ordered_current_val_title) = ; } T_ELSE { T_VARIABLE($key_ordered_current_val_title) = T_STRING ( T_VARIABLE($key_ordered_current_val) ) ; T_VARIABLE($key_ordered_current_val) = T_STRING ( T_STRING ( T_VARIABLE($key_ordered_current_val) , T_LNUMBER , T_VARIABLE($cfg) [ ] ) . ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($data) ) ) { T_VARIABLE($val_ordered_current_equals_data) = T_VARIABLE($val_ordered_current_key) T_IS_EQUAL T_VARIABLE($data) ; T_VARIABLE($key_ordered_current_equals_data) = T_VARIABLE($key_ordered_current_key) T_IS_EQUAL T_VARIABLE($data) ; } T_VARIABLE($output) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_VARIABLE($output) T_CONCAT_EQUAL . ( T_VARIABLE($key_ordered_current_equals_data) ? : ) . . T_STRING ( ) . ( T_VARIABLE($key_ordered_current_val_title) T_IS_NOT_EQUAL ? . T_VARIABLE($key_ordered_current_val_title) : ) . . . T_STRING ( T_VARIABLE($field) ) . . T_STRING ( T_VARIABLE($key_ordered_current_key) , T_STRING ) . . T_STRING ( T_VARIABLE($key_ordered_current_key) ) . . ( T_VARIABLE($key_ordered_current_equals_data) ? : ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . ( T_VARIABLE($key_ordered_current_equals_data) ? : ) . . T_STRING ( ) . ( T_VARIABLE($key_ordered_current_val_title) T_IS_NOT_EQUAL ? . T_VARIABLE($key_ordered_current_val_title) : ) . . T_STRING ( T_VARIABLE($field) ) . . T_STRING ( T_VARIABLE($key_ordered_current_key) , T_STRING ) . . T_VARIABLE($key_ordered_current_val) . . ( T_VARIABLE($key_ordered_current_equals_data) ? : ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . . T_VARIABLE($GLOBALS) [ ] . . ; T_VARIABLE($output) T_CONCAT_EQUAL . ( T_VARIABLE($val_ordered_current_equals_data) ? : ) . . T_STRING ( ) . ( T_VARIABLE($val_ordered_current_val_title) T_IS_NOT_EQUAL ? . T_VARIABLE($val_ordered_current_val_title) : ) . . T_STRING ( T_VARIABLE($field) ) . . T_STRING ( T_VARIABLE($val_ordered_current_key) , T_STRING ) . . T_VARIABLE($val_ordered_current_val) . . ( T_VARIABLE($val_ordered_current_equals_data) ? : ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . ( T_VARIABLE($val_ordered_current_equals_data) ? : ) . . T_STRING ( ) . ( T_VARIABLE($val_ordered_current_val_title) T_IS_NOT_EQUAL ? . T_VARIABLE($val_ordered_current_val_title) : ) . . T_STRING ( T_VARIABLE($field) ) . . T_STRING ( T_VARIABLE($val_ordered_current_key) , T_STRING ) . . T_STRING ( T_VARIABLE($val_ordered_current_key) ) . . ( T_VARIABLE($val_ordered_current_equals_data) ? : ) . ; T_VARIABLE($output) T_CONCAT_EQUAL ; } } T_VARIABLE($output) T_CONCAT_EQUAL . ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($output) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($filename) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($filename) ) ) { T_IF ( T_STRING ( T_VARIABLE($filename) , - T_LNUMBER ) T_IS_EQUAL ) { T_STRING ( ) ; T_STRING ( T_VARIABLE($filename) ) ; T_VARIABLE($changelog) = T_STRING ( ) ; T_STRING ( ) ; } T_ELSE { T_VARIABLE($changelog) = T_STRING ( T_VARIABLE($filename) ) ; } } T_ELSE { T_STRING ( T_STRING ( ) , T_VARIABLE($filename) ) ; T_EXIT ; } T_VARIABLE($changelog) = T_STRING ( T_VARIABLE($changelog) ) ; T_VARIABLE($tracker_url) = ; T_VARIABLE($tracker_url_bug) = ; T_VARIABLE($tracker_url_rfe) = ; T_VARIABLE($tracker_url_patch) = ; T_VARIABLE($github_url) = ; T_VARIABLE($replaces) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW . T_VARIABLE($tracker_url) . , T_DOUBLE_ARROW , T_DOUBLE_ARROW . T_VARIABLE($github_url) . , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW . T_VARIABLE($tracker_url) . , T_DOUBLE_ARROW . T_VARIABLE($tracker_url_patch) . , T_DOUBLE_ARROW . T_VARIABLE($tracker_url_rfe) . , T_DOUBLE_ARROW . T_VARIABLE($tracker_url_bug) . , T_DOUBLE_ARROW . T_VARIABLE($tracker_url_bug) . , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW . . T_VARIABLE($github_url) . . , T_DOUBLE_ARROW . . T_VARIABLE($github_url) . . , T_DOUBLE_ARROW , ) ; T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO ; T_ECHO T_STRING ( T_STRING ( T_VARIABLE($replaces) ) , T_VARIABLE($replaces) , T_VARIABLE($changelog) ) ; T_ECHO ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) ) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_VARIABLE($cfg) [ ] = ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) T_INC ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_IF ( ! T_STRING ) { T_INCLUDE_ONCE ; } T_REQUIRE ; T_VARIABLE($post_params) = T_ARRAY ( , ) ; T_FOREACH ( T_VARIABLE($post_params) T_AS T_VARIABLE($one_post_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_post_param) ] = T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ; } } T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( ) ) ; T_VARIABLE($err_url) = . T_STRING ( ) ; T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($new_db) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($db_collation) ) ) { T_LIST ( T_VARIABLE($db_charset) ) = T_STRING ( , T_VARIABLE($db_collation) ) ; T_IF ( T_STRING ( T_VARIABLE($db_charset) , T_VARIABLE($mysql_charsets) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($db_collation) , T_VARIABLE($mysql_collations) [ T_VARIABLE($db_charset) ] ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($db_collation) ) ; } T_VARIABLE($db_collation_for_ajax) = T_VARIABLE($db_collation) ; T_UNSET ( T_VARIABLE($db_charset) , T_VARIABLE($db_collation) ) ; } T_VARIABLE($sql_query) T_CONCAT_EQUAL ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_IF ( ! T_VARIABLE($result) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($GLOBALS) [ ] = ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; } T_ELSE { T_INCLUDE_ONCE ; } } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_db) ) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($new_db) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($db_url_params) [ ] = T_VARIABLE($new_db) ; T_VARIABLE($is_superuser) = T_STRING ( ) ; T_VARIABLE($column_order) = T_STRING ( ) ; T_VARIABLE($url_query) = T_STRING ( T_VARIABLE($new_db) ) ; T_VARIABLE($new_db_string) = ; T_IF ( T_EMPTY ( T_VARIABLE($db_collation_for_ajax) ) ) { T_VARIABLE($db_collation_for_ajax) = T_STRING ( ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($dbstats) ) ) { T_VARIABLE($current) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($new_db) , T_DOUBLE_ARROW T_VARIABLE($db_collation_for_ajax) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; } T_ELSE { T_VARIABLE($current) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($new_db) ) ; } T_LIST ( T_VARIABLE($column_order) , T_VARIABLE($generated_html) ) = T_STRING ( T_VARIABLE($current) , T_VARIABLE($is_superuser) , T_VARIABLE($url_query) , T_VARIABLE($column_order) , T_VARIABLE($replication_types) , T_VARIABLE($replication_info) ) ; T_VARIABLE($new_db_string) T_CONCAT_EQUAL T_VARIABLE($generated_html) ; T_VARIABLE($new_db_string) T_CONCAT_EQUAL ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($new_db_string) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING , T_VARIABLE($sql_query) , ) ) ; } T_ELSE { T_INCLUDE_ONCE . T_VARIABLE($cfg) [ ] ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_IF ( ! T_ISSET ( T_VARIABLE($selected_tbl) ) ) { T_INCLUDE ; T_INCLUDE ; } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( ) ) ; T_IF ( T_STRING ( T_VARIABLE($table) ) ) { T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_ELSE { T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($db) ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($comment) = T_STRING ( T_VARIABLE($db) ) ; T_IF ( T_VARIABLE($comment) ) { T_ECHO . T_STRING ( ) . . T_STRING ( T_VARIABLE($comment) ) . ; } } T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($tables) = T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($count) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($table) ) { T_VARIABLE($comments) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_ECHO . ; T_ECHO . T_STRING ( T_VARIABLE($table) ) . . ; T_VARIABLE($show_comment) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , ) ; T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($indexes) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($primary) = ; T_VARIABLE($indexes) = T_ARRAY ( ) ; T_VARIABLE($lastIndex) = ; T_VARIABLE($indexes_info) = T_ARRAY ( ) ; T_VARIABLE($indexes_data) = T_ARRAY ( ) ; T_VARIABLE($pk_array) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($indexes) T_AS T_VARIABLE($row) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($primary) T_CONCAT_EQUAL T_VARIABLE($row) [ ] . ; T_VARIABLE($pk_array) [ T_VARIABLE($row) [ ] ] = T_LNUMBER ; } T_IF ( T_VARIABLE($row) [ ] T_IS_NOT_EQUAL T_VARIABLE($lastIndex) ) { T_VARIABLE($indexes) [ ] = T_VARIABLE($row) [ ] ; T_VARIABLE($lastIndex) = T_VARIABLE($row) [ ] ; } T_VARIABLE($indexes_info) [ T_VARIABLE($row) [ ] ] [ ] [ ] = T_VARIABLE($row) [ ] ; T_VARIABLE($indexes_info) [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($indexes_info) [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) [ ] ; } T_VARIABLE($indexes_info) [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) [ ] ; T_VARIABLE($indexes_data) [ T_VARIABLE($row) [ ] ] [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($indexes_data) [ T_VARIABLE($row) [ ] ] [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) [ ] ; } } T_VARIABLE($columns) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($fields_cnt) = T_STRING ( T_VARIABLE($columns) ) ; T_IF ( T_STRING < T_LNUMBER ) { T_VARIABLE($show_create_table_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($show_create_table) = T_STRING ( T_VARIABLE($show_create_table_query) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($analyzed_sql) = T_STRING ( T_STRING ( T_VARIABLE($show_create_table) ) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($res_rel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_STRING ( T_VARIABLE($res_rel) ) > T_LNUMBER ) { T_VARIABLE($have_rel) = T_STRING ; } T_ELSE { T_VARIABLE($have_rel) = T_STRING ; } } T_ELSE { T_VARIABLE($have_rel) = T_STRING ; } T_IF ( ! T_EMPTY ( T_VARIABLE($show_comment) ) ) { T_ECHO T_STRING ( ) . . T_STRING ( T_VARIABLE($show_comment) ) . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($have_rel) ) { T_ECHO . T_STRING ( ) . . ; } T_ECHO . T_STRING ( ) . . ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_ECHO . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($row) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($row) [ ] = ; } T_VARIABLE($extracted_columnspec) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) ; T_IF ( T_IS_EQUAL T_VARIABLE($extracted_columnspec) [ ] T_BOOLEAN_OR T_IS_EQUAL T_VARIABLE($extracted_columnspec) [ ] ) { T_VARIABLE($type_nowrap) = ; } T_ELSE { T_VARIABLE($type_nowrap) = ; } T_VARIABLE($type) = T_STRING ( T_VARIABLE($extracted_columnspec) [ ] ) ; T_VARIABLE($attribute) = T_VARIABLE($extracted_columnspec) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($row) [ ] = ; } } T_ELSE { T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($row) [ ] ) ; } T_VARIABLE($field_name) = T_VARIABLE($row) [ ] ; T_IF ( T_STRING < T_LNUMBER T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($field_name) ] [ ] ) T_BOOLEAN_AND T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($field_name) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($field_name) ] [ ] ) { T_VARIABLE($row) [ ] = ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($odd_row) ? : ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($pk_array) [ T_VARIABLE($row) [ ] ] ) ) { T_ECHO . T_STRING ( T_VARIABLE($field_name) ) . ; } T_ELSE { T_ECHO T_STRING ( T_VARIABLE($field_name) ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($type_nowrap) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($type) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO ( ( T_VARIABLE($row) [ ] T_IS_EQUAL ) ? T_STRING ( ) : T_STRING ( ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_ECHO T_VARIABLE($row) [ ] ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($have_rel) ) { T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] ) ) { T_ECHO T_STRING ( T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] . . T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] ) ; } T_ECHO . ; } T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($comments) [ T_VARIABLE($field_name) ] ) ) { T_ECHO T_STRING ( T_VARIABLE($comments) [ T_VARIABLE($field_name) ] ) ; } T_ECHO . ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($mime_map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_STRING ) ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($field_name) ] ) ) { T_ECHO T_STRING ( T_STRING ( , , T_VARIABLE($mime_map) [ T_VARIABLE($field_name) ] [ ] ) ) ; } T_ECHO . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_VARIABLE($count) T_INC ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($db) ) ) > T_LNUMBER ) { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($db) , T_STRING ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($_PMA_RTE) = ; T_REQUIRE_ONCE ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($sub_part) = ; T_REQUIRE_ONCE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_REQUIRE_ONCE ; T_VARIABLE($export_page_title) = T_STRING ( ) ; T_IF ( T_VARIABLE($num_tables) < T_LNUMBER ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_EXIT ; } T_VARIABLE($multi_values) = ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($selected_tbl) ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($table_select) ) ) { T_VARIABLE($table_select) = T_VARIABLE($selected_tbl) ; } T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($_GET) [ ] = T_STRING ( T_VARIABLE($_GET) [ ] ) ; T_VARIABLE($_GET) [ ] = T_STRING ( , T_VARIABLE($_GET) [ ] ) ; } T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($each_table) ) { T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($each_table) [ ] , T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($is_selected) = ; } T_ELSE { T_VARIABLE($is_selected) = ; } } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($unselectall) ) T_BOOLEAN_OR ( ! T_EMPTY ( T_VARIABLE($table_select) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($each_table) [ ] , T_VARIABLE($table_select) ) ) ) { T_VARIABLE($is_selected) = ; } T_ELSE { T_VARIABLE($is_selected) = ; } T_VARIABLE($table_html) = T_STRING ( T_VARIABLE($each_table) [ ] ) ; T_VARIABLE($multi_values) T_CONCAT_EQUAL . T_VARIABLE($table_html) . . T_VARIABLE($is_selected) . . T_STRING ( , , T_VARIABLE($table_html) ) . . ; } T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($export_type) = ; T_REQUIRE_ONCE ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE ; T_REQUIRE ; T_VARIABLE($import_type) = ; T_REQUIRE ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($db) ) T_BOOLEAN_AND ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($move) = T_STRING ; } T_ELSE { T_VARIABLE($move) = T_STRING ; } T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($sql_query) = ; T_VARIABLE($_error) = T_STRING ; T_IF ( T_VARIABLE($move) T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sql_query) = T_STRING ( ) ; } T_STRING ( T_VARIABLE($db) ) ; T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($tables_full) = T_STRING ( T_VARIABLE($db) ) ; T_INCLUDE_ONCE ; T_VARIABLE($export_sql_plugin) = T_STRING ( , , , T_ARRAY ( T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($single_table) ) , T_DOUBLE_ARROW ) ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ( T_VARIABLE($tables_full) , T_VARIABLE($export_sql_plugin) , T_VARIABLE($move) , T_VARIABLE($db) ) ; T_VARIABLE($views) = T_STRING ( T_VARIABLE($tables_full) , T_VARIABLE($export_sql_plugin) , T_VARIABLE($db) ) ; T_LIST ( T_VARIABLE($sql_query) , T_VARIABLE($_error) ) = T_STRING ( T_VARIABLE($tables_full) , T_VARIABLE($sql_query) , T_VARIABLE($move) , T_VARIABLE($db) ) ; T_IF ( ! T_VARIABLE($_error) ) { T_VARIABLE($_error) = T_STRING ( T_VARIABLE($views) , T_VARIABLE($move) , T_VARIABLE($db) ) ; } T_UNSET ( T_VARIABLE($views) ) ; T_IF ( ! T_VARIABLE($_error) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] ) > T_LNUMBER ) { T_STRING ( ) ; } T_IF ( ! T_STRING T_BOOLEAN_AND T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_STRING ( T_VARIABLE($db) ) ; } T_STRING ( T_VARIABLE($db) ) ; T_STRING ( T_VARIABLE($_error) , T_VARIABLE($db) ) ; T_IF ( ! T_VARIABLE($_error) T_BOOLEAN_AND T_VARIABLE($move) ) { T_INCLUDE_ONCE ; T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($local_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($local_query) ; T_STRING ( T_VARIABLE($local_query) ) ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSEIF ( ! T_VARIABLE($_error) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_VARIABLE($reload) = T_STRING ; T_IF ( ! T_VARIABLE($_error) T_BOOLEAN_AND T_VARIABLE($move) ) { T_VARIABLE($db) = T_VARIABLE($_REQUEST) [ ] ; } T_ELSEIF ( ! T_VARIABLE($_error) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($db) = T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; } } T_IF ( T_VARIABLE($_error) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($message) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } } T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING , T_VARIABLE($sql_query) ) ) ; T_EXIT ; } } T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($_REQUEST) [ ] ) ; } T_IF ( T_EMPTY ( T_VARIABLE($is_info) ) ) { T_INCLUDE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_VARIABLE($sub_part) = ; T_INCLUDE ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($message) ) ) { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) , T_VARIABLE($sql_query) ) ; T_UNSET ( T_VARIABLE($message) ) ; } } T_VARIABLE($_REQUEST) [ ] = T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($is_information_schema) = T_STRING ( T_VARIABLE($db) ) ; T_IF ( ! T_VARIABLE($is_information_schema) ) { T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($db) ) ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( ) ; T_INCLUDE ; T_VARIABLE($content) = T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($content) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($db) T_IS_NOT_EQUAL ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($db) ) ) ; } T_IF ( ( T_VARIABLE($is_superuser) T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] [ ] ) T_BOOLEAN_AND ! T_VARIABLE($db_is_information_schema) T_BOOLEAN_AND ( T_STRING T_BOOLEAN_OR T_VARIABLE($db) T_IS_NOT_EQUAL ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($db) ) ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($db) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ) ; T_IF ( T_VARIABLE($num_tables) > T_LNUMBER T_BOOLEAN_AND ! T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfg) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($cfg) [ ] . . T_VARIABLE($url_query) . , T_STRING ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ T_VARIABLE($server) ] [ ] ) ) { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_IF ( T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($num_tables) > T_LNUMBER ) { T_VARIABLE($test_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_VARIABLE($test_rs) = T_STRING ( T_VARIABLE($test_query) , T_STRING , T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($url_query) ) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( ) ) ; T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_VARIABLE($tables) = T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($num_tables) = T_STRING ( T_VARIABLE($tables) ) ; T_ECHO ; T_IF ( T_VARIABLE($num_tables) T_IS_EQUAL T_LNUMBER ) { T_ECHO T_STRING ( ) ; } T_ELSE { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($cfg) [ ] ) { T_ECHO . T_STRING ( ) . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($sum_entries) = T_VARIABLE($sum_size) = T_LNUMBER ; T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($sts_data) ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($sts_data) [ ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($sts_data) [ ] ) T_IS_EQUAL ) { T_VARIABLE($merged_size) = T_STRING ; } T_ELSE { T_VARIABLE($merged_size) = T_STRING ; } T_VARIABLE($sum_entries) T_PLUS_EQUAL T_VARIABLE($sts_data) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($odd_row) ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($sts_data) [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($sts_data) [ ] ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($merged_size) ) { T_ECHO . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($sts_data) [ ] , T_LNUMBER ) . . ; } T_ELSE { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($sts_data) [ ] , T_LNUMBER ) . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($sts_data) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($cfg) [ ] ) { T_VARIABLE($tblsize) = T_VARIABLE($sts_data) [ ] + T_VARIABLE($sts_data) [ ] ; T_VARIABLE($sum_size) T_PLUS_EQUAL T_VARIABLE($tblsize) ; T_LIST ( T_VARIABLE($formated_size) , T_VARIABLE($unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tblsize) , T_LNUMBER , T_LNUMBER ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($formated_size) . . T_VARIABLE($unit) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } } T_ELSE { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($sts_data) [ ] ) ) { T_ECHO T_STRING ( T_VARIABLE($sts_data) [ ] ) ; T_VARIABLE($needs_break) = ; } T_ELSE { T_VARIABLE($needs_break) = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($sts_data) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($sts_data) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($sts_data) [ ] ) ) { T_ECHO T_VARIABLE($needs_break) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($sts_data) [ ] ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) . ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($sts_data) [ ] ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_IF ( ! T_EMPTY ( T_VARIABLE($sts_data) [ ] ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) . ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($sts_data) [ ] ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_IF ( ! T_EMPTY ( T_VARIABLE($sts_data) [ ] ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) . ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($sts_data) [ ] ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_STRING ( , , T_VARIABLE($num_tables) ) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($num_tables) , T_LNUMBER ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($sum_entries) , T_LNUMBER ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($cfg) [ ] ) { T_LIST ( T_VARIABLE($sum_formated) , T_VARIABLE($unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($sum_size) , T_LNUMBER , T_LNUMBER ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($sum_formated) . . T_VARIABLE($unit) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_ECHO ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_VARIABLE($message_to_display) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($sql_query) ) ) { T_IF ( ! T_STRING ( , T_VARIABLE($sql_query) ) ) { T_VARIABLE($message_to_display) = T_STRING ; } T_ELSE { T_VARIABLE($goto) = ; T_INCLUDE ; T_EXIT ; } } T_VARIABLE($sub_part) = ; T_REQUIRE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_VARIABLE($url_params) [ ] = ; T_REQUIRE ; T_IF ( T_VARIABLE($message_to_display) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; } T_UNSET ( T_VARIABLE($message_to_display) ) ; T_VARIABLE($db_qbe) = T_NEW T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($url) = . T_STRING ( T_STRING ( T_VARIABLE($url_params) , T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) , . T_VARIABLE($url) . , ) ) ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db_qbe) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($cfgRelation) ) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($_PMA_RTE) = ; T_REQUIRE_ONCE ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE ; T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , , T_STRING , T_VARIABLE($err_url) ) ; } T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_VARIABLE($url_params) [ ] = ; T_VARIABLE($db_search) = T_NEW T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING ) { T_INCLUDE ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db_search) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_EXIT ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db_search) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($url_params) ) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE ; T_REQUIRE_ONCE ; T_VARIABLE($goto) = ; T_VARIABLE($back) = ; T_VARIABLE($get_params) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($get_params) T_AS T_VARIABLE($one_get_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_GET) [ T_VARIABLE($one_get_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_get_param) ] = T_VARIABLE($_GET) [ T_VARIABLE($one_get_param) ] ; } } T_REQUIRE ; T_IF ( T_VARIABLE($num_tables) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($db_query_force) ) ) { T_VARIABLE($sub_part) = ; T_VARIABLE($is_info) = T_STRING ; T_INCLUDE ; T_EXIT ( ) ; } T_STRING ( T_STRING , T_STRING , T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_STRING ( T_VARIABLE($_REQUEST) [ ] ) : ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($post_params) = T_ARRAY ( , , , , , ) ; T_FOREACH ( T_VARIABLE($post_params) T_AS T_VARIABLE($one_post_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_post_param) ] = T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ; } } T_IF ( T_EMPTY ( T_VARIABLE($_POST) [ ] ) ) { T_IF ( ( ! T_EMPTY ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_POST) [ ] ) ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($action) = ; T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($db) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_OR T_STRING T_IS_IDENTICAL T_VARIABLE($_POST) [ ] ) { T_INCLUDE ; } T_IF ( T_EMPTY ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($_POST) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } } T_INCLUDE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_VARIABLE($sub_part) = ; T_INCLUDE ; T_IF ( ! T_STRING ) { T_INCLUDE_ONCE ; } T_ELSE { T_VARIABLE($server_slave_status) = T_STRING ; } } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($db_collation) = T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($titles) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_VARIABLE($num_tables) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( . T_STRING ( ) . . ) ; T_IF ( T_EMPTY ( T_VARIABLE($db_is_information_schema) ) ) { T_STRING ( ) ; T_INCLUDE ; T_VARIABLE($content) = T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($content) ) ; T_UNSET ( T_VARIABLE($content) ) ; } T_EXIT ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($pos) , T_DOUBLE_ARROW T_VARIABLE($db) ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_url_params) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_url_params) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($total_num_tables) , T_VARIABLE($pos) , T_VARIABLE($_url_params) , , , T_VARIABLE($GLOBALS) [ ] [ ] ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( . ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($db) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($db_is_information_schema) , T_VARIABLE($server_slave_status) ) ) ; T_VARIABLE($i) = T_VARIABLE($sum_entries) = T_LNUMBER ; T_VARIABLE($overhead_check) = ; T_VARIABLE($create_time_all) = ; T_VARIABLE($update_time_all) = ; T_VARIABLE($check_time_all) = ; T_VARIABLE($num_columns) = T_VARIABLE($cfg) [ ] > T_LNUMBER ? T_STRING ( T_VARIABLE($num_tables) / T_VARIABLE($cfg) [ ] ) + T_LNUMBER : T_LNUMBER ; T_VARIABLE($row_count) = T_LNUMBER ; T_VARIABLE($sum_size) = T_DOUBLE_CAST T_LNUMBER ; T_VARIABLE($overhead_size) = T_DOUBLE_CAST T_LNUMBER ; T_VARIABLE($hidden_fields) = T_ARRAY ( ) ; T_VARIABLE($odd_row) = T_STRING ; T_VARIABLE($sum_row_count_pre) = ; T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($keyname) T_DOUBLE_ARROW T_VARIABLE($current_table) ) { T_VARIABLE($drop_query) = ; T_VARIABLE($drop_message) = ; T_VARIABLE($overhead) = ; T_VARIABLE($table_is_view) = T_STRING ; T_VARIABLE($table_encoded) = T_STRING ( T_VARIABLE($current_table) [ ] ) ; T_VARIABLE($tbl_url_query) = T_VARIABLE($url_query) . . T_VARIABLE($table_encoded) ; T_LIST ( T_VARIABLE($current_table) , T_VARIABLE($formatted_size) , T_VARIABLE($unit) , T_VARIABLE($formatted_overhead) , T_VARIABLE($overhead_unit) , T_VARIABLE($overhead_size) , T_VARIABLE($table_is_view) , T_VARIABLE($sum_size) ) = T_STRING ( T_VARIABLE($current_table) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($is_show_stats) , T_VARIABLE($table_is_view) , T_VARIABLE($sum_size) , T_VARIABLE($overhead_size) ) ; T_IF ( ! T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($current_table) [ ] ) ) { T_VARIABLE($sum_entries) T_PLUS_EQUAL T_VARIABLE($current_table) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($current_table) [ ] ) ) { T_VARIABLE($collation) = . T_STRING ( T_VARIABLE($current_table) [ ] ) . . T_VARIABLE($current_table) [ ] . ; } T_ELSE { T_VARIABLE($collation) = ; } T_IF ( T_VARIABLE($is_show_stats) ) { T_IF ( T_VARIABLE($formatted_overhead) T_IS_NOT_EQUAL ) { T_VARIABLE($overhead) = . T_VARIABLE($tbl_url_query) . . . T_VARIABLE($formatted_overhead) . . . T_VARIABLE($overhead_unit) . . . ; T_VARIABLE($overhead_check) T_CONCAT_EQUAL . ( T_VARIABLE($i) + T_LNUMBER ) . ; } T_ELSE { T_VARIABLE($overhead) = ; } } T_UNSET ( T_VARIABLE($showtable) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_LIST ( T_VARIABLE($create_time) , T_VARIABLE($create_time_all) ) = T_STRING ( T_VARIABLE($current_table) , , T_VARIABLE($create_time_all) ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_LIST ( T_VARIABLE($update_time) , T_VARIABLE($update_time_all) ) = T_STRING ( T_VARIABLE($current_table) , , T_VARIABLE($update_time_all) ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_LIST ( T_VARIABLE($check_time) , T_VARIABLE($check_time_all) ) = T_STRING ( T_VARIABLE($current_table) , , T_VARIABLE($check_time_all) ) ; } T_LIST ( T_VARIABLE($alias) , T_VARIABLE($truename) ) = T_STRING ( T_VARIABLE($tooltip_aliasname) , T_VARIABLE($current_table) , T_VARIABLE($tooltip_truename) ) ; T_VARIABLE($i) T_INC ; T_VARIABLE($row_count) T_INC ; T_IF ( T_VARIABLE($table_is_view) ) { T_VARIABLE($hidden_fields) [ ] = . T_STRING ( T_VARIABLE($current_table) [ ] ) . ; } T_LIST ( T_VARIABLE($browse_table) , T_VARIABLE($search_table) , T_VARIABLE($browse_table_label) , T_VARIABLE($empty_table) , T_VARIABLE($tracking_icon) ) = T_STRING ( T_VARIABLE($current_table) , T_VARIABLE($table_is_view) , T_VARIABLE($tbl_url_query) , T_VARIABLE($titles) , T_VARIABLE($truename) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($url_query) ) ; T_IF ( ! T_VARIABLE($db_is_information_schema) ) { T_LIST ( T_VARIABLE($drop_query) , T_VARIABLE($drop_message) ) = T_STRING ( T_VARIABLE($table_is_view) , T_VARIABLE($current_table) ) ; } T_IF ( T_VARIABLE($num_columns) > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($num_tables) > T_VARIABLE($num_columns) T_BOOLEAN_AND ( T_VARIABLE($row_count) \% T_VARIABLE($num_columns) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($row_count) = T_LNUMBER ; T_VARIABLE($odd_row) = T_STRING ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING , T_VARIABLE($server_slave_status) ) ) ; } T_LIST ( T_VARIABLE($do) , T_VARIABLE($ignored) ) = T_STRING ( T_VARIABLE($server_slave_status) , T_VARIABLE($truename) ) ; T_LIST ( T_VARIABLE($html_output) , T_VARIABLE($odd_row) ) = T_STRING ( T_VARIABLE($i) , T_VARIABLE($odd_row) , T_VARIABLE($table_is_view) , T_VARIABLE($current_table) , T_VARIABLE($browse_table_label) , T_VARIABLE($tracking_icon) , T_VARIABLE($server_slave_status) , T_VARIABLE($browse_table) , T_VARIABLE($tbl_url_query) , T_VARIABLE($search_table) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($titles) , T_VARIABLE($empty_table) , T_VARIABLE($drop_query) , T_VARIABLE($drop_message) , T_VARIABLE($collation) , T_VARIABLE($formatted_size) , T_VARIABLE($unit) , T_VARIABLE($overhead) , ( T_ISSET ( T_VARIABLE($create_time) ) ? T_VARIABLE($create_time) : ) , ( T_ISSET ( T_VARIABLE($update_time) ) ? T_VARIABLE($update_time) : ) , ( T_ISSET ( T_VARIABLE($check_time) ) ? T_VARIABLE($check_time) : ) , T_VARIABLE($is_show_stats) , T_VARIABLE($ignored) , T_VARIABLE($do) , T_VARIABLE($colspan_for_structure) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($html_output) ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($num_tables) , T_VARIABLE($server_slave_status) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($sum_entries) , T_VARIABLE($db_collation) , T_VARIABLE($is_show_stats) , T_VARIABLE($sum_size) , T_VARIABLE($overhead_size) , T_VARIABLE($create_time_all) , T_VARIABLE($update_time_all) , T_VARIABLE($check_time_all) , T_VARIABLE($sum_row_count_pre) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($pmaThemeImage) , T_VARIABLE($text_dir) , T_VARIABLE($overhead_check) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($hidden_fields) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($total_num_tables) , T_VARIABLE($pos) , T_VARIABLE($_url_params) , , , T_VARIABLE($GLOBALS) [ ] [ ] ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($url_query) ) . T_STRING ( T_VARIABLE($url_query) ) ) ; T_IF ( T_EMPTY ( T_VARIABLE($db_is_information_schema) ) ) { T_STRING ( ) ; T_INCLUDE ; T_VARIABLE($content) = T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($content) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_VARIABLE($sub_part) = ; T_REQUIRE ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($_REQUEST) [ ] ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( ) ) ; T_EXIT ; } } T_VARIABLE($data) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] , , ) ; T_IF ( T_VARIABLE($num_tables) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($data) [ ] ) T_IS_EQUAL T_LNUMBER ) { T_ECHO . T_STRING ( ) . . ; T_IF ( T_EMPTY ( T_VARIABLE($db_is_information_schema) ) ) { T_INCLUDE ; } T_EXIT ; } T_VARIABLE($all_tables_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . . . ; T_VARIABLE($all_tables_result) = T_STRING ( T_VARIABLE($all_tables_query) ) ; T_IF ( T_STRING ( T_VARIABLE($all_tables_result) ) > T_LNUMBER ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($drop_image_or_text) = ; T_IF ( T_STRING T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($drop_image_or_text) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; } T_IF ( T_IS_IDENTICAL T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_OR T_STRING T_IS_IDENTICAL T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($drop_image_or_text) T_CONCAT_EQUAL T_STRING ( ) ; } T_VARIABLE($style) = ; T_WHILE ( T_VARIABLE($one_result) = T_STRING ( T_VARIABLE($all_tables_result) ) ) { T_LIST ( T_VARIABLE($table_name) , T_VARIABLE($version_number) ) = T_VARIABLE($one_result) ; T_VARIABLE($table_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table_name) ) . . T_VARIABLE($version_number) . ; T_VARIABLE($table_result) = T_STRING ( T_VARIABLE($table_query) ) ; T_VARIABLE($version_data) = T_STRING ( T_VARIABLE($table_result) ) ; T_IF ( T_VARIABLE($version_data) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($version_status) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($version_status) = T_STRING ( ) ; } T_VARIABLE($tmp_link) = . T_VARIABLE($url_query) . . T_STRING ( T_VARIABLE($version_data) [ ] ) ; T_VARIABLE($delete_link) = . T_VARIABLE($url_query) . . T_STRING ( T_VARIABLE($version_data) [ ] ) . ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($style) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($version_data) [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($version_data) [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($version_data) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($version_data) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($version_data) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($version_status) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($delete_link) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($drop_image_or_text) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($tmp_link) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($tmp_link) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($version_data) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($tmp_link) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($version_data) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($style) T_IS_EQUAL ) { T_VARIABLE($style) = ; } T_ELSE { T_VARIABLE($style) = ; } } T_UNSET ( T_VARIABLE($tmp_link) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_VARIABLE($sep) = T_VARIABLE($GLOBALS) [ ] [ ] ; T_VARIABLE($table_list) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_FOREACH ( T_VARIABLE($table_list) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_STRING ( ( . T_VARIABLE($sep) . ) , T_VARIABLE($value) ) T_BOOLEAN_AND T_VARIABLE($value) [ . T_VARIABLE($sep) . ] ) { T_FOREACH ( T_VARIABLE($value) T_AS T_VARIABLE($temp_table) ) { T_IF ( T_STRING ( T_VARIABLE($temp_table) ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($temp_table) ) ) { T_VARIABLE($tracking_version) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($temp_table) [ ] ) ; T_IF ( T_VARIABLE($tracking_version) T_IS_EQUAL - T_LNUMBER ) { T_VARIABLE($my_tables) [ ] = T_VARIABLE($temp_table) [ ] ; } } } } T_ELSE { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($value) [ ] ) T_IS_EQUAL - T_LNUMBER ) { T_VARIABLE($my_tables) [ ] = T_VARIABLE($value) [ ] ; } } } T_IF ( T_ISSET ( T_VARIABLE($my_tables) ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($style) = ; T_FOREACH ( T_VARIABLE($my_tables) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($tablename) ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($tablename) ) T_IS_EQUAL - T_LNUMBER ) { T_VARIABLE($my_link) = . T_VARIABLE($url_query) . . T_STRING ( T_VARIABLE($tablename) ) . ; T_VARIABLE($my_link) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($my_link) T_CONCAT_EQUAL ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($style) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($tablename) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($my_link) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($style) T_IS_EQUAL ) { T_VARIABLE($style) = ; } T_ELSE { T_VARIABLE($style) = ; } } } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_IF ( T_STRING ( T_VARIABLE($data) [ ] ) > T_LNUMBER ) { T_VARIABLE($log) = ; T_FOREACH ( T_VARIABLE($data) [ ] T_AS T_VARIABLE($entry) ) { T_VARIABLE($log) T_CONCAT_EQUAL . T_VARIABLE($entry) [ ] . . T_VARIABLE($entry) [ ] . . T_VARIABLE($entry) [ ] . ; } T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , T_VARIABLE($log) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($_PMA_RTE) = ; T_REQUIRE_ONCE ; T_CLOSE_TAG',no
'T_OPEN_TAG T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($hosts) = T_ARRAY ( , , , , ) ; T_FOREACH ( T_VARIABLE($hosts) T_AS T_VARIABLE($host) ) { T_VARIABLE($i) T_INC ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_VARIABLE($host) ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; }',no
'T_OPEN_TAG T_IF ( T_STRING T_IS_IDENTICAL @ T_INCLUDE_ONCE ) { T_EXIT ; } T_VARIABLE($AUTH_MAP) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , ) ; T_FUNCTION(show_page) ( T_VARIABLE($contents) ) { T_STRING ( ) ; T_ECHO . ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($_SESSION) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_ECHO . T_VARIABLE($_SESSION) [ ] . ; T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; } T_ECHO T_VARIABLE($contents) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_STRING ( T_LNUMBER , , , T_LNUMBER ) ; T_VARIABLE($session_name) = ; T_STRING ( T_VARIABLE($session_name) ) ; T_STRING ( ) ; T_VARIABLE($base) = ; T_IF ( T_ISSET ( T_VARIABLE($_SERVER) [ ] ) T_BOOLEAN_AND T_VARIABLE($_SERVER) [ ] T_IS_EQUAL ) { T_VARIABLE($base) T_CONCAT_EQUAL ; } T_VARIABLE($base) T_CONCAT_EQUAL . T_VARIABLE($_SERVER) [ ] . . T_VARIABLE($_SERVER) [ ] ; T_VARIABLE($realm) = T_VARIABLE($base) . ; T_VARIABLE($returnTo) = T_VARIABLE($base) . T_STRING ( T_VARIABLE($_SERVER) [ ] ) ; T_IF ( T_VARIABLE($returnTo) [ T_STRING ( T_VARIABLE($returnTo) ) - T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($returnTo) T_CONCAT_EQUAL ; } T_VARIABLE($returnTo) T_CONCAT_EQUAL ; T_IF ( ! T_STRING ( T_VARIABLE($_GET) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($_POST) ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($content) = ; T_STRING ( T_VARIABLE($content) ) ; T_EXIT ; } T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($identifier) = T_VARIABLE($_POST) [ ] ; } T_ELSE T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($identifier) = T_VARIABLE($_SESSION) [ ] ; } T_ELSE { T_VARIABLE($identifier) = T_STRING ; } T_TRY { T_VARIABLE($o) = T_NEW T_STRING ( T_VARIABLE($returnTo) , T_VARIABLE($realm) , T_VARIABLE($identifier) ) ; } T_CATCH ( T_STRING T_VARIABLE($e) ) { T_VARIABLE($contents) = ; T_VARIABLE($contents) T_CONCAT_EQUAL . T_VARIABLE($e) T_OBJECT_OPERATOR T_STRING ( ) . ; T_VARIABLE($contents) T_CONCAT_EQUAL ; T_STRING ( T_VARIABLE($contents) ) ; T_EXIT ; } T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_TRY { T_VARIABLE($authRequest) = T_VARIABLE($o) T_OBJECT_OPERATOR T_STRING ( ) ; } T_CATCH ( T_STRING T_VARIABLE($e) ) { T_VARIABLE($contents) = ; T_VARIABLE($contents) T_CONCAT_EQUAL . T_VARIABLE($e) T_OBJECT_OPERATOR T_STRING ( ) . ; T_VARIABLE($contents) T_CONCAT_EQUAL ; T_STRING ( T_VARIABLE($contents) ) ; T_EXIT ; } T_VARIABLE($url) = T_VARIABLE($authRequest) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($url) ) ; T_EXIT ; } T_ELSE { T_IF ( ! T_STRING ( T_VARIABLE($_POST) ) ) { T_LIST ( , T_VARIABLE($queryString) ) = T_STRING ( , T_VARIABLE($_SERVER) [ ] ) ; } T_ELSE { T_VARIABLE($queryString) = T_STRING ( ) ; } T_VARIABLE($message) = T_NEW T_STRING ( T_VARIABLE($queryString) , T_STRING T_DOUBLE_COLON T_STRING ) ; T_VARIABLE($id) = T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($id) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($AUTH_MAP) [ T_VARIABLE($id) ] ) ) { T_VARIABLE($_SESSION) [ ] = T_VARIABLE($AUTH_MAP) [ T_VARIABLE($id) ] [ ] ; T_VARIABLE($_SESSION) [ ] = T_VARIABLE($AUTH_MAP) [ T_VARIABLE($id) ] [ ] ; T_STRING ( ) ; T_STRING ( ) ; } T_ELSE { T_STRING ( ) ; T_EXIT ; } }',no
'T_OPEN_TAG T_STRING ( T_LNUMBER , , , T_LNUMBER ) ; T_VARIABLE($session_name) = ; T_STRING ( T_VARIABLE($session_name) ) ; T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = T_VARIABLE($_POST) [ ] ; T_VARIABLE($_SESSION) [ ] = T_VARIABLE($_POST) [ ] ; T_VARIABLE($_SESSION) [ ] = T_VARIABLE($_POST) [ ] ; T_VARIABLE($_SESSION) [ ] = T_VARIABLE($_POST) [ ] ; T_VARIABLE($_SESSION) [ ] = T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($id) = T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; } T_ELSE { T_STRING ( ) ; T_ECHO . ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_ECHO . T_VARIABLE($_SESSION) [ ] . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG',no
'T_OPEN_TAG T_FUNCTION(get_login_credentials) ( T_VARIABLE($user) ) { T_RETURN T_ARRAY ( , ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($post_params) = T_ARRAY ( , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ) ; T_FOREACH ( T_VARIABLE($post_params) T_AS T_VARIABLE($one_post_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_post_param) ] = T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ; } } T_VARIABLE($what) = T_STRING ( T_VARIABLE($what) ) ; T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( , ) ) ; T_VARIABLE($export_plugin) = T_STRING ( , T_VARIABLE($what) , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($export_type) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($single_table) ) ) ) ; T_VARIABLE($type) = T_VARIABLE($what) ; T_IF ( ! T_ISSET ( T_VARIABLE($export_plugin) ) ) { T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($compression_methods) = T_ARRAY ( , , , ) ; T_VARIABLE($compression) = T_STRING ; T_VARIABLE($onserver) = T_STRING ; T_VARIABLE($save_on_server) = T_STRING ; T_VARIABLE($buffer_needed) = T_STRING ; T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($quick_export) = T_STRING ; } T_ELSE { T_VARIABLE($quick_export) = T_STRING ; } T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($asfile) = T_STRING ; } T_ELSE { T_VARIABLE($asfile) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($compression_methods) ) ) { T_VARIABLE($compression) = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($buffer_needed) = T_STRING ; } T_IF ( ( T_VARIABLE($quick_export) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) T_BOOLEAN_OR ( ! T_VARIABLE($quick_export) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) ) { T_IF ( T_VARIABLE($quick_export) ) { T_VARIABLE($onserver) = T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_VARIABLE($onserver) = T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($save_on_server) = ! T_EMPTY ( T_VARIABLE($cfg) [ ] ) T_BOOLEAN_AND T_VARIABLE($onserver) ; } } T_IF ( T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND ! T_VARIABLE($asfile) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_IF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_VARIABLE($active_page) = ; T_INCLUDE ; } T_ELSEIF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_VARIABLE($active_page) = ; T_INCLUDE ; } T_ELSE { T_VARIABLE($active_page) = ; T_INCLUDE ; } T_EXIT ( ) ; } T_IF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_VARIABLE($err_url) = . T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($export_type) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($db) ) ; T_IF ( T_ISSET ( T_VARIABLE($table_select) ) ) { T_VARIABLE($tables) = T_VARIABLE($table_select) ; } T_ELSE { T_VARIABLE($tables) = T_ARRAY ( ) ; } } T_ELSEIF ( T_VARIABLE($export_type) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($db) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($table) ) ) { T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_ELSE { T_STRING ( T_STRING ( ) ) ; } @ T_STRING ( T_VARIABLE($cfg) [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] ) ) { @ T_STRING ( , T_VARIABLE($cfg) [ ] ) ; } T_VARIABLE($dump_buffer) = ; T_VARIABLE($dump_buffer_len) = T_LNUMBER ; T_VARIABLE($time_start) = T_STRING ( ) ; T_FUNCTION(PMA_isGzHandlerEnabled) ( ) { T_RETURN T_STRING ( , T_STRING ( ) ) ; } T_FUNCTION(PMA_gzencodeNeeded) ( ) { T_IF ( @ T_STRING ( ) T_BOOLEAN_AND ! @ T_STRING ( ) T_BOOLEAN_AND ! ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( , T_STRING ( ) ) ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_RETURN T_STRING ; } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(PMA_exportOutputHandler) ( T_VARIABLE($line) ) { T_GLOBAL T_VARIABLE($time_start) , T_VARIABLE($dump_buffer) , T_VARIABLE($dump_buffer_len) , T_VARIABLE($save_filename) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($line) = T_STRING ( T_VARIABLE($line) , T_VARIABLE($GLOBALS) [ ] , T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($dump_buffer) T_CONCAT_EQUAL T_VARIABLE($line) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($dump_buffer_len) T_PLUS_EQUAL T_STRING ( T_VARIABLE($line) ) ; T_IF ( T_VARIABLE($dump_buffer_len) > T_VARIABLE($GLOBALS) [ ] ) { T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($dump_buffer) = T_STRING ( , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($dump_buffer) ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_BOOLEAN_AND @ T_STRING ( ) ) { T_VARIABLE($dump_buffer) = T_STRING ( T_VARIABLE($dump_buffer) ) ; } T_ELSEIF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($dump_buffer) = T_STRING ( T_VARIABLE($dump_buffer) ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($write_result) = @ T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($dump_buffer) ) ; T_IF ( ! T_VARIABLE($write_result) T_BOOLEAN_OR ( T_VARIABLE($write_result) T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($dump_buffer) ) ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($save_filename) ) ; T_RETURN T_STRING ; } } T_ELSE { T_ECHO T_VARIABLE($dump_buffer) ; } T_VARIABLE($dump_buffer) = ; T_VARIABLE($dump_buffer_len) = T_LNUMBER ; } } T_ELSE { T_VARIABLE($time_now) = T_STRING ( ) ; T_IF ( T_VARIABLE($time_start) T_IS_GREATER_OR_EQUAL T_VARIABLE($time_now) + T_LNUMBER ) { T_VARIABLE($time_start) = T_VARIABLE($time_now) ; T_STRING ( ) ; } } } T_ELSE { T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($line) = T_STRING ( , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($line) ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND T_STRING ( T_VARIABLE($line) ) > T_LNUMBER ) { T_VARIABLE($write_result) = @ T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($line) ) ; T_IF ( ! T_VARIABLE($write_result) T_BOOLEAN_OR ( T_VARIABLE($write_result) T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($line) ) ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($save_filename) ) ; T_RETURN T_STRING ; } T_VARIABLE($time_now) = T_STRING ( ) ; T_IF ( T_VARIABLE($time_start) T_IS_GREATER_OR_EQUAL T_VARIABLE($time_now) + T_LNUMBER ) { T_VARIABLE($time_start) = T_VARIABLE($time_now) ; T_STRING ( ) ; } } T_ELSE { T_ECHO T_VARIABLE($line) ; } } T_ELSE { T_ECHO T_STRING ( T_VARIABLE($line) ) ; } } T_RETURN T_STRING ; } T_IF ( T_VARIABLE($what) T_IS_EQUAL ) { T_VARIABLE($crlf) = ; } T_ELSE { T_VARIABLE($crlf) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_VARIABLE($output_kanji_conversion) = T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($type) T_IS_NOT_EQUAL ; T_VARIABLE($output_charset_conversion) = T_VARIABLE($asfile) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($charset_of_file) ) T_BOOLEAN_AND T_VARIABLE($charset_of_file) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($type) T_IS_NOT_EQUAL ; T_VARIABLE($onfly_compression) = T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND ( T_VARIABLE($compression) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($compression) T_IS_EQUAL ) ; T_IF ( T_VARIABLE($onfly_compression) ) { T_VARIABLE($memory_limit) = T_STRING ( @ T_STRING ( ) ) ; T_IF ( T_EMPTY ( T_VARIABLE($memory_limit) ) ) { T_VARIABLE($memory_limit) = T_LNUMBER * T_LNUMBER * T_LNUMBER ; } T_IF ( T_STRING ( T_STRING ( T_VARIABLE($memory_limit) , - T_LNUMBER ) ) T_IS_EQUAL ) { T_VARIABLE($memory_limit) = T_INT_CAST T_STRING ( T_VARIABLE($memory_limit) , T_LNUMBER , - T_LNUMBER ) * T_LNUMBER * T_LNUMBER ; } T_ELSEIF ( T_STRING ( T_STRING ( T_VARIABLE($memory_limit) , - T_LNUMBER ) ) T_IS_EQUAL ) { T_VARIABLE($memory_limit) = T_INT_CAST T_STRING ( T_VARIABLE($memory_limit) , T_LNUMBER , - T_LNUMBER ) * T_LNUMBER ; } T_ELSEIF ( T_STRING ( T_STRING ( T_VARIABLE($memory_limit) , - T_LNUMBER ) ) T_IS_EQUAL ) { T_VARIABLE($memory_limit) = T_INT_CAST T_STRING ( T_VARIABLE($memory_limit) , T_LNUMBER , - T_LNUMBER ) * T_LNUMBER * T_LNUMBER * T_LNUMBER ; } T_ELSE { T_VARIABLE($memory_limit) = T_INT_CAST T_VARIABLE($memory_limit) ; } T_IF ( T_VARIABLE($memory_limit) > T_LNUMBER ) { T_VARIABLE($memory_limit) T_MINUS_EQUAL T_LNUMBER ; } T_VARIABLE($memory_limit) T_DIV_EQUAL T_LNUMBER ; } T_IF ( T_VARIABLE($asfile) ) { T_VARIABLE($pma_uri_parts) = T_STRING ( T_VARIABLE($cfg) [ ] ) ; T_IF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_IF ( T_ISSET ( T_VARIABLE($remember_template) ) ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , , T_VARIABLE($filename_template) ) ; } } T_ELSEIF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_IF ( T_ISSET ( T_VARIABLE($remember_template) ) ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , , T_VARIABLE($filename_template) ) ; } } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($remember_template) ) ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , , T_VARIABLE($filename_template) ) ; } } T_VARIABLE($filename) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($filename_template) ) ; T_VARIABLE($filename) = T_STRING ( T_VARIABLE($filename) , T_VARIABLE($replaceDots) = T_STRING ) ; T_VARIABLE($extension_start_pos) = T_STRING ( T_VARIABLE($filename) ) - T_STRING ( T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ) - T_LNUMBER ; T_VARIABLE($user_extension) = T_STRING ( T_VARIABLE($filename) , T_VARIABLE($extension_start_pos) , T_STRING ( T_VARIABLE($filename) ) ) ; T_VARIABLE($required_extension) = . T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($user_extension) ) T_IS_NOT_EQUAL T_VARIABLE($required_extension) ) { T_VARIABLE($filename) T_CONCAT_EQUAL T_VARIABLE($required_extension) ; } T_VARIABLE($mime_type) = T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($compression) T_IS_EQUAL ) { T_VARIABLE($filename) T_CONCAT_EQUAL ; T_VARIABLE($mime_type) = ; } T_ELSEIF ( T_VARIABLE($compression) T_IS_EQUAL ) { T_VARIABLE($filename) T_CONCAT_EQUAL ; T_VARIABLE($mime_type) = ; } T_ELSEIF ( T_VARIABLE($compression) T_IS_EQUAL ) { T_VARIABLE($filename) T_CONCAT_EQUAL ; T_VARIABLE($mime_type) = ; } } T_IF ( T_VARIABLE($save_on_server) ) { T_VARIABLE($save_filename) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfg) [ ] ) . T_STRING ( , , T_VARIABLE($filename) ) ; T_UNSET ( T_VARIABLE($message) ) ; T_IF ( T_STRING ( T_VARIABLE($save_filename) ) T_BOOLEAN_AND ( ( ! T_VARIABLE($quick_export) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($onserverover) ) ) T_BOOLEAN_OR ( T_VARIABLE($quick_export) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_NOT_EQUAL ) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($save_filename) ) ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($save_filename) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($save_filename) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($save_filename) ) ; } T_ELSE { T_IF ( ! T_VARIABLE($file_handle) = @ T_STRING ( T_VARIABLE($save_filename) , ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($save_filename) ) ; } } } T_IF ( T_ISSET ( T_VARIABLE($message) ) ) { T_IF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_VARIABLE($active_page) = ; T_INCLUDE ; } T_ELSEIF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_VARIABLE($active_page) = ; T_INCLUDE ; } T_ELSE { T_VARIABLE($active_page) = ; T_INCLUDE ; } T_EXIT ( ) ; } } T_IF ( ! T_VARIABLE($save_on_server) ) { T_IF ( T_VARIABLE($asfile) ) { @ T_STRING ( , ) ; T_VARIABLE($filename) = T_STRING ( T_VARIABLE($filename) ) ; T_STRING ( T_VARIABLE($filename) , T_VARIABLE($mime_type) ) ; } T_ELSE { T_IF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_VARIABLE($num_tables) = T_STRING ( T_VARIABLE($tables) ) ; T_IF ( T_VARIABLE($num_tables) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($active_page) = ; T_INCLUDE ; T_EXIT ( ) ; } } T_VARIABLE($backup_cfgServer) = T_VARIABLE($cfg) [ ] ; T_VARIABLE($cfg) [ ] = T_VARIABLE($backup_cfgServer) ; T_UNSET ( T_VARIABLE($backup_cfgServer) ) ; T_ECHO . . T_VARIABLE($cell_align_left) . . ; T_VARIABLE($back_button) = ; T_IF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_VARIABLE($back_button) T_CONCAT_EQUAL . T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_VARIABLE($back_button) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($db) ) ; } T_ELSE { T_VARIABLE($back_button) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_IF ( T_VARIABLE($export_type) T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSEIF ( T_VARIABLE($export_type) T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) ; } T_FOREACH ( T_VARIABLE($_REQUEST) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($back_button) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($name) ) . . T_STRING ( T_VARIABLE($value) ) ; } T_VARIABLE($back_button) T_CONCAT_EQUAL ; T_ECHO T_VARIABLE($back_button) ; T_ECHO . . . ; } } T_DO { T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) ) ) { T_BREAK ; } T_VARIABLE($do_relation) = T_ISSET ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] ) ; T_VARIABLE($do_comments) = T_ISSET ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] ) ; T_VARIABLE($do_mime) = T_ISSET ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] ) ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_OR T_VARIABLE($do_comments) T_BOOLEAN_OR T_VARIABLE($do_mime) ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; } T_IF ( T_VARIABLE($do_mime) ) { T_INCLUDE_ONCE ; } T_VARIABLE($do_dates) = T_ISSET ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] ) ; T_IF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_IF ( T_ISSET ( T_VARIABLE($db_select) ) ) { T_VARIABLE($tmp_select) = T_STRING ( T_VARIABLE($db_select) , ) ; T_VARIABLE($tmp_select) = . T_VARIABLE($tmp_select) . ; } T_FOREACH ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($current_db) ) { T_IF ( ( T_ISSET ( T_VARIABLE($tmp_select) ) T_BOOLEAN_AND T_STRING ( . T_VARIABLE($tmp_select) , . T_VARIABLE($current_db) . ) ) T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($tmp_select) ) ) { T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($current_db) ) ) { T_BREAK T_LNUMBER ; } T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($current_db) ) ) { T_BREAK T_LNUMBER ; } T_IF ( T_STRING ( T_VARIABLE($export_plugin) , ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] , ) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($current_db) ) ; } T_VARIABLE($tables) = T_STRING ( T_VARIABLE($current_db) ) ; T_VARIABLE($views) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($table) ) { T_VARIABLE($is_view) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($is_view) ) { T_VARIABLE($views) [ ] = T_VARIABLE($table) ; } T_IF ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL ) { T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($current_db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($err_url) , T_VARIABLE($is_view) ? : , T_VARIABLE($export_type) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($do_dates) ) ) { T_BREAK T_LNUMBER ; } } T_IF ( ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL ) T_BOOLEAN_AND ! ( T_VARIABLE($is_view) T_BOOLEAN_OR T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_db) , T_VARIABLE($table) ) ) ) { T_VARIABLE($local_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($current_db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($err_url) , T_VARIABLE($local_query) ) ) { T_BREAK T_LNUMBER ; } } T_IF ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL ) { T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($current_db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($err_url) , , T_VARIABLE($export_type) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($do_dates) ) ) { T_BREAK T_LNUMBER ; } } } T_FOREACH ( T_VARIABLE($views) T_AS T_VARIABLE($view) ) { T_IF ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL ) { T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($current_db) , T_VARIABLE($view) , T_VARIABLE($crlf) , T_VARIABLE($err_url) , , T_VARIABLE($export_type) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($do_dates) ) ) { T_BREAK T_LNUMBER ; } } } T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($current_db) ) ) { T_BREAK T_LNUMBER ; } } } } T_ELSEIF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) ) ) { T_BREAK ; } T_IF ( T_STRING ( T_VARIABLE($export_plugin) , ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] , ) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) ) ; } T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($views) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($table) ) { T_VARIABLE($is_view) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($is_view) ) { T_VARIABLE($views) [ ] = T_VARIABLE($table) ; } T_IF ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL ) { T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($err_url) , T_VARIABLE($is_view) ? : , T_VARIABLE($export_type) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($do_dates) ) ) { T_BREAK T_LNUMBER ; } } T_IF ( ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL ) T_BOOLEAN_AND ! ( T_VARIABLE($is_view) T_BOOLEAN_OR T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ) ) { T_VARIABLE($local_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($err_url) , T_VARIABLE($local_query) ) ) { T_BREAK T_LNUMBER ; } } T_IF ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL ) { T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($err_url) , , T_VARIABLE($export_type) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($do_dates) ) ) { T_BREAK T_LNUMBER ; } } } T_FOREACH ( T_VARIABLE($views) T_AS T_VARIABLE($view) ) { T_IF ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL ) { T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($view) , T_VARIABLE($crlf) , T_VARIABLE($err_url) , , T_VARIABLE($export_type) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($do_dates) ) ) { T_BREAK T_LNUMBER ; } } } T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) ) ) { T_BREAK ; } } T_ELSE { T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) ) ) { T_BREAK ; } T_IF ( T_ISSET ( T_VARIABLE($allrows) ) T_BOOLEAN_AND T_VARIABLE($allrows) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($limit_to) > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($limit_from) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($add_query) = . ( ( T_VARIABLE($limit_from) > T_LNUMBER ) ? T_VARIABLE($limit_from) . : ) . T_VARIABLE($limit_to) ; } T_ELSE { T_VARIABLE($add_query) = ; } T_VARIABLE($is_view) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL ) { T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($err_url) , T_VARIABLE($is_view) ? : , T_VARIABLE($export_type) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($do_dates) ) ) { T_BREAK ; } } T_IF ( ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL ) T_BOOLEAN_AND ! T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($sql_query) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($add_query) ) ) { T_VARIABLE($sql_query) = T_STRING ( , , T_VARIABLE($sql_query) ) ; } T_VARIABLE($local_query) = T_VARIABLE($sql_query) . T_VARIABLE($add_query) ; T_STRING ( T_VARIABLE($db) ) ; } T_ELSE { T_VARIABLE($local_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . T_VARIABLE($add_query) ; } T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($err_url) , T_VARIABLE($local_query) ) ) { T_BREAK ; } } T_IF ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] T_IS_EQUAL ) { T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($err_url) , , T_VARIABLE($export_type) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($do_dates) ) ) { T_BREAK T_LNUMBER ; } } T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) ) ) { T_BREAK ; } } T_IF ( ! T_VARIABLE($export_plugin) T_OBJECT_OPERATOR T_STRING ( ) ) { T_BREAK ; } } T_WHILE ( T_STRING ) ; T_IF ( T_VARIABLE($save_on_server) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($message) ) ) { T_IF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_VARIABLE($active_page) = ; T_INCLUDE ; } T_ELSEIF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_VARIABLE($active_page) = ; T_INCLUDE ; } T_ELSE { T_VARIABLE($active_page) = ; T_INCLUDE ; } T_EXIT ( ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($asfile) ) ) { T_IF ( T_VARIABLE($output_charset_conversion) ) { T_VARIABLE($dump_buffer) = T_STRING ( , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($dump_buffer) ) ; } T_IF ( T_VARIABLE($compression) T_IS_EQUAL ) { T_IF ( @ T_STRING ( ) ) { T_VARIABLE($zipfile) = T_NEW T_STRING ( ) ; T_VARIABLE($zipfile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dump_buffer) , T_STRING ( T_VARIABLE($filename) , T_LNUMBER , - T_LNUMBER ) ) ; T_VARIABLE($dump_buffer) = T_VARIABLE($zipfile) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_ELSEIF ( T_VARIABLE($compression) T_IS_EQUAL ) { T_IF ( @ T_STRING ( ) ) { T_VARIABLE($dump_buffer) = T_STRING ( T_VARIABLE($dump_buffer) ) ; } } T_ELSEIF ( T_VARIABLE($compression) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($dump_buffer) = T_STRING ( T_VARIABLE($dump_buffer) ) ; } T_IF ( T_VARIABLE($save_on_server) ) { T_VARIABLE($write_result) = @ T_STRING ( T_VARIABLE($file_handle) , T_VARIABLE($dump_buffer) ) ; T_STRING ( T_VARIABLE($file_handle) ) ; T_IF ( T_STRING ( T_VARIABLE($dump_buffer) ) > T_LNUMBER T_BOOLEAN_AND ( ! T_VARIABLE($write_result) T_BOOLEAN_OR ( T_VARIABLE($write_result) T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($dump_buffer) ) ) ) ) { T_VARIABLE($message) = T_NEW T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($save_filename) ) ; } T_ELSE { T_VARIABLE($message) = T_NEW T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($save_filename) ) ; } T_IF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_VARIABLE($active_page) = ; T_INCLUDE_ONCE ; } T_ELSEIF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_VARIABLE($active_page) = ; T_INCLUDE_ONCE ; } T_ELSE { T_VARIABLE($active_page) = ; T_INCLUDE_ONCE ; } T_EXIT ( ) ; } T_ELSE { T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_ECHO T_VARIABLE($dump_buffer) ; } } T_ELSE { T_ECHO . . . ; T_ECHO T_VARIABLE($back_button) ; T_ECHO ; T_ECHO . ; T_ECHO ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG',no
'T_OPEN_TAG T_STRING ( , T_STRING ) ; T_REQUIRE_ONCE ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($allowed) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_IF ( ! T_ISSET ( T_VARIABLE($allowed) [ T_VARIABLE($_REQUEST) [ ] ] ) ) { T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($extension) = T_VARIABLE($allowed) [ T_VARIABLE($_REQUEST) [ ] ] ; T_VARIABLE($valid_match) = . T_VARIABLE($extension) . ; T_IF ( ! T_STRING ( T_VARIABLE($valid_match) , T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( ! T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($filename) = . T_VARIABLE($extension) ; } T_ELSE { T_VARIABLE($filename) = T_VARIABLE($_REQUEST) [ ] . . T_VARIABLE($extension) ; } } T_ELSE { T_VARIABLE($filename) = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( T_VARIABLE($extension) T_IS_NOT_EQUAL ) { T_VARIABLE($data) = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_STRING ( T_VARIABLE($_REQUEST) [ ] , ) + T_LNUMBER ) ; T_VARIABLE($data) = T_STRING ( T_VARIABLE($data) ) ; } T_ELSE { T_VARIABLE($data) = T_VARIABLE($_REQUEST) [ ] ; } T_STRING ( T_VARIABLE($filename) , T_VARIABLE($_REQUEST) [ ] , T_STRING ( T_VARIABLE($data) ) ) ; T_ECHO T_VARIABLE($data) ; } T_ELSE T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_STRING ( , ) ; T_ECHO T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSE T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_STRING ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($_FILES) [ ] [ ] ) ) { T_EXIT ( ) ; } T_ECHO T_STRING ( T_VARIABLE($_FILES) [ ] [ ] ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_FUNCTION(escape) ( T_VARIABLE($variable) ) { T_RETURN T_ISSET ( T_VARIABLE($variable) ) ? T_STRING ( T_VARIABLE($variable) ) : ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($gis_data) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , ) ) { T_VARIABLE($gis_data) = T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($gis_types) = T_ARRAY ( , , , , , , ) ; T_IF ( ! T_ISSET ( T_VARIABLE($gis_data) [ ] ) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($gis_data) [ ] = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_IS_NOT_EQUAL ) { T_VARIABLE($start) = ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) ? T_LNUMBER : T_LNUMBER ; T_VARIABLE($gis_data) [ ] = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($start) , T_STRING ( T_VARIABLE($_REQUEST) [ ] , ) - T_VARIABLE($start) ) ; } T_IF ( ( ! T_ISSET ( T_VARIABLE($gis_data) [ ] ) ) T_BOOLEAN_OR ( ! T_STRING ( T_VARIABLE($gis_data) [ ] , T_VARIABLE($gis_types) ) ) ) { T_VARIABLE($gis_data) [ ] = T_VARIABLE($gis_types) [ T_LNUMBER ] ; } } T_VARIABLE($geom_type) = T_VARIABLE($gis_data) [ ] ; T_VARIABLE($gis_obj) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($geom_type) ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($gis_data) = T_STRING ( T_VARIABLE($gis_data) , T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ; } T_VARIABLE($srid) = ( T_ISSET ( T_VARIABLE($gis_data) [ ] ) T_BOOLEAN_AND T_VARIABLE($gis_data) [ ] T_IS_NOT_EQUAL ) ? T_STRING ( T_VARIABLE($gis_data) [ ] ) : T_LNUMBER ; T_VARIABLE($wkt) = T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($gis_data) , T_LNUMBER ) ; T_VARIABLE($wkt_with_zero) = T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($gis_data) , T_LNUMBER , ) ; T_VARIABLE($result) = . T_VARIABLE($wkt) . . T_VARIABLE($srid) ; T_VARIABLE($format) = ( T_STRING T_IS_EQUAL T_BOOLEAN_AND T_STRING T_IS_SMALLER_OR_EQUAL T_LNUMBER ) ? : ; T_VARIABLE($visualizationSettings) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($data) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($wkt_with_zero) , T_DOUBLE_ARROW T_VARIABLE($srid) ) ) ; T_VARIABLE($visualization) = T_STRING ( T_VARIABLE($data) , T_VARIABLE($visualizationSettings) , T_VARIABLE($format) ) ; T_VARIABLE($open_layers) = T_STRING ( T_VARIABLE($data) , T_VARIABLE($visualizationSettings) , ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($extra_data) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($result) , T_DOUBLE_ARROW T_VARIABLE($visualization) , T_DOUBLE_ARROW T_VARIABLE($open_layers) , ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($extra_data) ) ; T_EXIT ; } T_STRING ( ) ; T_ECHO ; T_ECHO . . T_VARIABLE($GLOBALS) [ ] . ; T_ECHO ; T_ECHO ; T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ; T_ECHO ; T_ECHO . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_ECHO . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; } T_ECHO T_STRING ( ) ; T_ECHO ; T_ECHO . ( T_VARIABLE($srid) T_IS_NOT_EQUAL T_LNUMBER ? : ) . ; T_ECHO T_VARIABLE($visualization) ; T_ECHO ; T_ECHO . ( T_VARIABLE($srid) T_IS_EQUAL T_LNUMBER ? : ) . ; T_ECHO ; T_ECHO ; T_ECHO . ( T_VARIABLE($srid) T_IS_NOT_EQUAL T_LNUMBER ? : ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO T_VARIABLE($open_layers) ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_FOREACH ( T_VARIABLE($gis_types) T_AS T_VARIABLE($gis_type) ) { T_ECHO . T_VARIABLE($gis_type) . ; T_IF ( T_VARIABLE($geom_type) T_IS_EQUAL T_VARIABLE($gis_type) ) { T_ECHO ; } T_ECHO . T_VARIABLE($gis_type) . ; } T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_VARIABLE($srid) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_VARIABLE($geom_count) = T_LNUMBER ; T_IF ( T_VARIABLE($geom_type) T_IS_EQUAL ) { T_VARIABLE($geom_count) = ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($geom_type) ] [ ] ) ) ? T_VARIABLE($gis_data) [ T_VARIABLE($geom_type) ] [ ] : T_LNUMBER ; T_IF ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($geom_type) ] [ ] ) ) { T_VARIABLE($geom_count) T_INC ; } T_ECHO . . T_VARIABLE($geom_count) . ; } T_FOR ( T_VARIABLE($a) = T_LNUMBER ; T_VARIABLE($a) < T_VARIABLE($geom_count) ; T_VARIABLE($a) T_INC ) { T_IF ( T_VARIABLE($geom_type) T_IS_EQUAL ) { T_ECHO ; T_ECHO T_STRING ( ) . . ( T_VARIABLE($a) + T_LNUMBER ) . ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ ] ) ) { T_VARIABLE($type) = T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ ] ; } T_ELSE { T_VARIABLE($type) = T_VARIABLE($gis_types) [ T_LNUMBER ] ; } T_ECHO . T_VARIABLE($a) . ; T_FOREACH ( T_STRING ( T_VARIABLE($gis_types) , T_LNUMBER , T_LNUMBER ) T_AS T_VARIABLE($gis_type) ) { T_ECHO . T_VARIABLE($gis_type) . ; T_IF ( T_VARIABLE($type) T_IS_EQUAL T_VARIABLE($gis_type) ) { T_ECHO ; } T_ECHO . T_VARIABLE($gis_type) . ; } T_ECHO ; } T_ELSE { T_VARIABLE($type) = T_VARIABLE($geom_type) ; } T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_ECHO ; T_ECHO T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_VARIABLE($a) . . . T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ ] [ ] ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_VARIABLE($a) . . . T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ ] [ ] ) . ; } T_ELSEIF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($no_of_points) = T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ ] ) ? T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($no_of_points) < T_LNUMBER ) { T_VARIABLE($no_of_points) = T_LNUMBER ; } T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($no_of_points) < T_LNUMBER ) { T_VARIABLE($no_of_points) = T_LNUMBER ; } T_IF ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ ] ) ) { T_VARIABLE($no_of_points) T_INC ; } T_ECHO . T_VARIABLE($no_of_points) . . . T_VARIABLE($a) . . T_VARIABLE($type) . ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($no_of_points) ; T_VARIABLE($i) T_INC ) { T_ECHO ; T_STRING ( T_STRING ( ) , T_VARIABLE($i) + T_LNUMBER ) ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . . T_VARIABLE($a) . . T_VARIABLE($type) . . T_VARIABLE($i) . . . T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ T_VARIABLE($i) ] [ ] ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . . T_VARIABLE($a) . . T_VARIABLE($type) . . T_VARIABLE($i) . . . T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ T_VARIABLE($i) ] [ ] ) . ; } T_ECHO . . T_VARIABLE($a) . . T_VARIABLE($type) . . . T_STRING ( ) . ; } T_ELSEIF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($no_of_lines) = T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ ] ) ? T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($no_of_lines) < T_LNUMBER ) { T_VARIABLE($no_of_lines) = T_LNUMBER ; } T_IF ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ ] ) ) { T_VARIABLE($no_of_lines) T_INC ; } T_ECHO . T_VARIABLE($no_of_lines) . . . T_VARIABLE($a) . . T_VARIABLE($type) . ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($no_of_lines) ; T_VARIABLE($i) T_INC ) { T_ECHO ; T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_ECHO T_STRING ( ) . . ( T_VARIABLE($i) + T_LNUMBER ) . ; } T_ELSE { T_IF ( T_VARIABLE($i) T_IS_EQUAL T_LNUMBER ) { T_ECHO T_STRING ( ) . ; } T_ELSE { T_ECHO T_STRING ( ) . . T_VARIABLE($i) . ; } } T_VARIABLE($no_of_points) = T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ T_VARIABLE($i) ] [ ] ) ? T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ T_VARIABLE($i) ] [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($no_of_points) < T_LNUMBER ) { T_VARIABLE($no_of_points) = T_LNUMBER ; } T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($no_of_points) < T_LNUMBER ) { T_VARIABLE($no_of_points) = T_LNUMBER ; } T_IF ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ T_VARIABLE($i) ] [ ] ) ) { T_VARIABLE($no_of_points) T_INC ; } T_ECHO . T_VARIABLE($no_of_points) . . . T_VARIABLE($a) . . T_VARIABLE($type) . . T_VARIABLE($i) . ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($no_of_points) ; T_VARIABLE($j) T_INC ) { T_ECHO ( ) ; T_STRING ( T_STRING ( ) , T_VARIABLE($j) + T_LNUMBER ) ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . . T_VARIABLE($a) . . T_VARIABLE($type) . . T_VARIABLE($i) . . T_VARIABLE($j) . . . T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . . T_VARIABLE($a) . . T_VARIABLE($type) . . T_VARIABLE($i) . . T_VARIABLE($j) . . . T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) . ; } T_ECHO . . T_VARIABLE($a) . . T_VARIABLE($type) . . T_VARIABLE($i) . . . T_STRING ( ) . ; } T_VARIABLE($caption) = ( T_VARIABLE($type) T_IS_EQUAL ) ? T_STRING ( ) : T_STRING ( ) ; T_ECHO ; T_ECHO . . T_VARIABLE($a) . . T_VARIABLE($type) . . . T_VARIABLE($caption) . ; } T_ELSEIF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($no_of_polygons) = T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ ] ) ? T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($no_of_polygons) < T_LNUMBER ) { T_VARIABLE($no_of_polygons) = T_LNUMBER ; } T_IF ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ ] ) ) { T_VARIABLE($no_of_polygons) T_INC ; } T_ECHO . . T_VARIABLE($a) . . T_VARIABLE($type) . . . T_VARIABLE($no_of_polygons) . ; T_FOR ( T_VARIABLE($k) = T_LNUMBER ; T_VARIABLE($k) < T_VARIABLE($no_of_polygons) ; T_VARIABLE($k) T_INC ) { T_ECHO ; T_ECHO T_STRING ( ) . . ( T_VARIABLE($k) + T_LNUMBER ) . ; T_VARIABLE($no_of_lines) = T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ T_VARIABLE($k) ] [ ] ) ? T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ T_VARIABLE($k) ] [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($no_of_lines) < T_LNUMBER ) { T_VARIABLE($no_of_lines) = T_LNUMBER ; } T_IF ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ T_VARIABLE($k) ] [ ] ) ) { T_VARIABLE($no_of_lines) T_INC ; } T_ECHO . . T_VARIABLE($a) . . T_VARIABLE($type) . . T_VARIABLE($k) . . . T_VARIABLE($no_of_lines) . ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($no_of_lines) ; T_VARIABLE($i) T_INC ) { T_ECHO ; T_IF ( T_VARIABLE($i) T_IS_EQUAL T_LNUMBER ) { T_ECHO T_STRING ( ) . ; } T_ELSE { T_ECHO T_STRING ( ) . . T_VARIABLE($i) . ; } T_VARIABLE($no_of_points) = T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ T_VARIABLE($k) ] [ T_VARIABLE($i) ] [ ] ) ? T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ T_VARIABLE($k) ] [ T_VARIABLE($i) ] [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($no_of_points) < T_LNUMBER ) { T_VARIABLE($no_of_points) = T_LNUMBER ; } T_IF ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ T_VARIABLE($k) ] [ T_VARIABLE($i) ] [ ] ) ) { T_VARIABLE($no_of_points) T_INC ; } T_ECHO . . T_VARIABLE($a) . . T_VARIABLE($type) . . T_VARIABLE($k) . . T_VARIABLE($i) . . . T_VARIABLE($no_of_points) . ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($no_of_points) ; T_VARIABLE($j) T_INC ) { T_ECHO ; T_STRING ( T_STRING ( ) , T_VARIABLE($j) + T_LNUMBER ) ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . . T_VARIABLE($a) . . T_VARIABLE($type) . . T_VARIABLE($k) . . T_VARIABLE($i) . . T_VARIABLE($j) . . . T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ T_VARIABLE($k) ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . . T_VARIABLE($a) . . T_VARIABLE($type) . . T_VARIABLE($k) . . T_VARIABLE($i) . . T_VARIABLE($j) . . . T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($a) ] [ T_VARIABLE($type) ] [ T_VARIABLE($k) ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) . ; } T_ECHO . . T_VARIABLE($a) . . T_VARIABLE($type) . . T_VARIABLE($k) . . T_VARIABLE($i) . . . T_STRING ( ) . ; } T_ECHO ; T_ECHO . . T_VARIABLE($a) . . T_VARIABLE($type) . . T_VARIABLE($k) . . . T_STRING ( ) . ; T_ECHO ; } T_ECHO ; T_ECHO . . T_VARIABLE($a) . . T_VARIABLE($type) . . . T_STRING ( ) . ; } } T_IF ( T_VARIABLE($geom_type) T_IS_EQUAL ) { T_ECHO ; T_ECHO . . T_STRING ( ) . ; } T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO T_STRING ( . ) ; T_ECHO ; T_ECHO ; T_ECHO T_VARIABLE($result) ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( ) ) ; T_STRING ( ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($post_params) = T_ARRAY ( , , , , , , , , , , , , , ) ; T_FOREACH ( T_VARIABLE($post_params) T_AS T_VARIABLE($one_post_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_post_param) ] = T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ; } } T_VARIABLE($_SESSION) [ ] [ ] = T_STRING ; T_VARIABLE($_SESSION) [ ] [ ] = T_STRING ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = T_STRING ; } T_IF ( ! T_EMPTY ( T_VARIABLE($sql_query) ) ) { T_VARIABLE($import_text) = T_VARIABLE($sql_query) ; T_VARIABLE($import_type) = ; T_VARIABLE($format) = ; T_IF ( T_STRING ( , T_VARIABLE($sql_query) ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ; } T_IF ( T_STRING ( , T_VARIABLE($sql_query) ) ) { T_VARIABLE($ajax_reload) [ ] = T_STRING ; } T_IF ( T_STRING ( , T_VARIABLE($sql_query) , T_VARIABLE($rename_table_names) ) ) { T_VARIABLE($ajax_reload) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($rename_table_names) [ T_LNUMBER ] ) ; T_VARIABLE($ajax_reload) [ ] = T_STRING ; } T_VARIABLE($sql_query) = ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($sql_localfile) ) ) { T_VARIABLE($local_import_file) = T_VARIABLE($sql_localfile) ; T_VARIABLE($import_type) = ; T_VARIABLE($format) = ; T_UNSET ( T_VARIABLE($sql_localfile) ) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($sql_file) ) ) { T_VARIABLE($import_file) = T_VARIABLE($sql_file) ; T_VARIABLE($import_type) = ; T_VARIABLE($format) = ; T_UNSET ( T_VARIABLE($sql_file) ) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($id_bookmark) ) ) { T_VARIABLE($import_type) = ; T_VARIABLE($format) = ; } ; T_IF ( T_VARIABLE($_POST) T_IS_EQUAL T_ARRAY ( ) T_BOOLEAN_AND T_VARIABLE($_GET) T_IS_EQUAL T_ARRAY ( ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($goto) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_EXIT ; } T_VARIABLE($post_patterns) = T_ARRAY ( , . T_VARIABLE($format) . ) ; T_FOREACH ( T_STRING ( T_VARIABLE($_POST) ) T_AS T_VARIABLE($post_key) ) { T_FOREACH ( T_VARIABLE($post_patterns) T_AS T_VARIABLE($one_post_pattern) ) { T_IF ( T_STRING ( T_VARIABLE($one_post_pattern) , T_VARIABLE($post_key) ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($post_key) ] = T_VARIABLE($_POST) [ T_VARIABLE($post_key) ] ; } } } T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( , ) ) ; T_VARIABLE($format) = T_STRING ( T_VARIABLE($format) ) ; T_REQUIRE_ONCE ; T_IF ( T_VARIABLE($import_type) T_IS_EQUAL ) { T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($err_url) ; T_VARIABLE($goto) = ; } T_ELSEIF ( T_VARIABLE($import_type) T_IS_EQUAL ) { T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($err_url) ; T_VARIABLE($goto) = ; } T_ELSEIF ( T_VARIABLE($import_type) T_IS_EQUAL ) { T_VARIABLE($err_url) = . T_STRING ( ) ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($err_url) ; T_VARIABLE($goto) = ; } T_ELSE { T_IF ( T_EMPTY ( T_VARIABLE($goto) ) T_BOOLEAN_OR ! T_STRING ( , T_VARIABLE($goto) ) ) { T_IF ( T_STRING ( T_VARIABLE($table) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($goto) = ; } T_ELSEIF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($goto) = ; } T_ELSE { T_VARIABLE($goto) = ; } } T_IF ( T_STRING ( T_VARIABLE($table) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($common) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($common) = T_STRING ( T_VARIABLE($db) ) ; } T_ELSE { T_VARIABLE($common) = T_STRING ( ) ; } T_VARIABLE($err_url) = T_VARIABLE($goto) . . T_VARIABLE($common) . ( T_STRING ( , T_VARIABLE($goto) ) ? . T_STRING ( T_VARIABLE($table) ) : ) ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($err_url) ; } T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_STRING ( T_VARIABLE($db) ) ; } @ T_STRING ( T_VARIABLE($cfg) [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] ) ) { @ T_STRING ( , T_VARIABLE($cfg) [ ] ) ; } T_VARIABLE($timestamp) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($allow_interrupt) ) ) { T_VARIABLE($maximum_time) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($maximum_time) = T_LNUMBER ; } T_VARIABLE($timeout_passed) = T_STRING ; T_VARIABLE($error) = T_STRING ; T_VARIABLE($read_multiply) = T_LNUMBER ; T_VARIABLE($finished) = T_STRING ; T_VARIABLE($offset) = T_LNUMBER ; T_VARIABLE($max_sql_len) = T_LNUMBER ; T_VARIABLE($file_to_unlink) = ; T_VARIABLE($sql_query) = ; T_VARIABLE($sql_query_disabled) = T_STRING ; T_VARIABLE($go_sql) = T_STRING ; T_VARIABLE($executed_queries) = T_LNUMBER ; T_VARIABLE($run_query) = T_STRING ; T_VARIABLE($charset_conversion) = T_STRING ; T_VARIABLE($reset_charset) = T_STRING ; T_VARIABLE($bookmark_created) = T_STRING ; T_IF ( ! T_EMPTY ( T_VARIABLE($id_bookmark) ) ) { T_VARIABLE($id_bookmark) = T_INT_CAST T_VARIABLE($id_bookmark) ; T_INCLUDE_ONCE ; T_SWITCH ( T_VARIABLE($action_bookmark) ) { T_CASE T_LNUMBER : T_VARIABLE($import_text) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($id_bookmark) , , T_ISSET ( T_VARIABLE($action_bookmark_all) ) ) ; T_IF ( T_ISSET ( T_VARIABLE($bookmark_variable) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($bookmark_variable) ) ) { T_VARIABLE($import_text) = T_STRING ( , . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($bookmark_variable) ) . , T_VARIABLE($import_text) ) ; } T_IF ( T_STRING ( , T_VARIABLE($import_text) ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ; } T_IF ( T_STRING ( , T_VARIABLE($import_text) ) ) { T_VARIABLE($ajax_reload) [ ] = T_STRING ; } T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($import_text) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($id_bookmark) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($import_text) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($action_bookmark) ) ; T_EXIT ; } T_ELSE { T_VARIABLE($run_query) = T_STRING ; } T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($import_text) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($id_bookmark) ) ; T_STRING ( T_VARIABLE($db) , T_VARIABLE($id_bookmark) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($action_bookmark) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($id_bookmark) ) ; T_EXIT ; } T_ELSE { T_VARIABLE($run_query) = T_STRING ; T_VARIABLE($error) = T_STRING ; } T_BREAK ; } } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($run_query) = T_STRING ; T_VARIABLE($go_sql) = T_STRING ; } T_VARIABLE($memory_limit) = T_STRING ( @ T_STRING ( ) ) ; T_IF ( T_EMPTY ( T_VARIABLE($memory_limit) ) ) { T_VARIABLE($memory_limit) = T_LNUMBER * T_LNUMBER * T_LNUMBER ; } T_IF ( T_VARIABLE($memory_limit) T_IS_EQUAL - T_LNUMBER ) { T_VARIABLE($memory_limit) = T_LNUMBER * T_LNUMBER * T_LNUMBER ; } T_IF ( T_STRING ( T_STRING ( T_VARIABLE($memory_limit) , - T_LNUMBER ) ) T_IS_EQUAL ) { T_VARIABLE($memory_limit) = T_INT_CAST T_STRING ( T_VARIABLE($memory_limit) , T_LNUMBER , - T_LNUMBER ) * T_LNUMBER * T_LNUMBER ; } T_ELSEIF ( T_STRING ( T_STRING ( T_VARIABLE($memory_limit) , - T_LNUMBER ) ) T_IS_EQUAL ) { T_VARIABLE($memory_limit) = T_INT_CAST T_STRING ( T_VARIABLE($memory_limit) , T_LNUMBER , - T_LNUMBER ) * T_LNUMBER ; } T_ELSEIF ( T_STRING ( T_STRING ( T_VARIABLE($memory_limit) , - T_LNUMBER ) ) T_IS_EQUAL ) { T_VARIABLE($memory_limit) = T_INT_CAST T_STRING ( T_VARIABLE($memory_limit) , T_LNUMBER , - T_LNUMBER ) * T_LNUMBER * T_LNUMBER * T_LNUMBER ; } T_ELSE { T_VARIABLE($memory_limit) = T_INT_CAST T_VARIABLE($memory_limit) ; } T_VARIABLE($read_limit) = T_VARIABLE($memory_limit) / T_LNUMBER ; T_IF ( T_ISSET ( T_VARIABLE($_FILES) [ ] ) ) { T_VARIABLE($import_file) = T_VARIABLE($_FILES) [ ] [ ] ; } T_IF ( ! T_EMPTY ( T_VARIABLE($local_import_file) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($cfg) [ ] ) ) { T_VARIABLE($local_import_file) = T_STRING ( T_VARIABLE($local_import_file) ) ; T_VARIABLE($import_file) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfg) [ ] ) . T_VARIABLE($local_import_file) ; } T_ELSEIF ( T_EMPTY ( T_VARIABLE($import_file) ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($import_file) ) ) { T_VARIABLE($import_file) = ; } T_IF ( T_VARIABLE($import_file) T_IS_NOT_EQUAL T_BOOLEAN_AND ! T_VARIABLE($error) ) { T_VARIABLE($open_basedir) = @ T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($open_basedir) ) ) { T_VARIABLE($tmp_subdir) = ( T_STRING ? : ) ; T_IF ( T_STRING ( T_VARIABLE($tmp_subdir) ) ) { T_VARIABLE($import_file_new) = T_VARIABLE($tmp_subdir) . T_STRING ( T_VARIABLE($import_file) ) . T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($import_file) , T_VARIABLE($import_file_new) ) ) { T_VARIABLE($import_file) = T_VARIABLE($import_file_new) ; T_VARIABLE($file_to_unlink) = T_VARIABLE($import_file_new) ; } T_VARIABLE($size) = T_STRING ( T_VARIABLE($import_file) ) ; } } T_VARIABLE($compression) = T_STRING ( T_VARIABLE($import_file) ) ; T_IF ( T_VARIABLE($compression) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($error) = T_STRING ; } T_ELSE { T_SWITCH ( T_VARIABLE($compression) ) { T_CASE : T_IF ( T_VARIABLE($cfg) [ ] T_BOOLEAN_AND @ T_STRING ( ) ) { T_VARIABLE($import_handle) = @ T_STRING ( T_VARIABLE($import_file) , ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($compression) ) ; T_VARIABLE($error) = T_STRING ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($cfg) [ ] T_BOOLEAN_AND @ T_STRING ( ) ) { T_VARIABLE($import_handle) = @ T_STRING ( T_VARIABLE($import_file) , ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($compression) ) ; T_VARIABLE($error) = T_STRING ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($cfg) [ ] T_BOOLEAN_AND @ T_STRING ( ) ) { T_INCLUDE_ONCE ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($import_file) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($result) [ ] ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($result) [ ] ) ; T_VARIABLE($error) = T_STRING ; } T_ELSE { T_VARIABLE($import_text) = T_VARIABLE($result) [ ] ; } } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($compression) ) ; T_VARIABLE($error) = T_STRING ; } T_BREAK ; T_CASE : T_VARIABLE($import_handle) = @ T_STRING ( T_VARIABLE($import_file) , ) ; T_BREAK ; T_DEFAULT : T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($compression) ) ; T_VARIABLE($error) = T_STRING ; T_BREAK ; } } T_IF ( ! T_VARIABLE($error) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($import_handle) ) T_BOOLEAN_AND T_VARIABLE($import_handle) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($error) = T_STRING ; } } T_ELSEIF ( ! T_VARIABLE($error) ) { T_IF ( ! T_ISSET ( T_VARIABLE($import_text) ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($import_text) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($error) = T_STRING ; } } T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($charset_of_file) ) ) { T_IF ( T_VARIABLE($charset_of_file) T_IS_NOT_EQUAL ) { T_VARIABLE($charset_conversion) = T_STRING ; } } T_ELSEIF ( T_ISSET ( T_VARIABLE($charset_of_file) ) T_BOOLEAN_AND T_VARIABLE($charset_of_file) T_IS_NOT_EQUAL ) { T_IF ( T_STRING ) { T_VARIABLE($error) = T_STRING ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_STRING ( . T_VARIABLE($charset_of_file) . ) ; T_VARIABLE($sql_query_disabled) = T_STRING ; T_VARIABLE($reset_charset) = T_STRING ; } } T_IF ( ! T_VARIABLE($error) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($skip) ) ) { T_VARIABLE($original_skip) = T_VARIABLE($skip) ; T_WHILE ( T_VARIABLE($skip) > T_LNUMBER ) { T_STRING ( T_VARIABLE($skip) < T_VARIABLE($read_limit) ? T_VARIABLE($skip) : T_VARIABLE($read_limit) ) ; T_VARIABLE($read_multiply) = T_LNUMBER ; T_VARIABLE($skip) T_MINUS_EQUAL T_VARIABLE($read_limit) ; } T_UNSET ( T_VARIABLE($skip) ) ; } T_VARIABLE($sql_data) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER ) ; T_IF ( ! T_VARIABLE($error) ) { T_INCLUDE_ONCE ; T_VARIABLE($import_plugin) = T_STRING ( , T_VARIABLE($format) , , T_VARIABLE($import_type) ) ; T_IF ( T_VARIABLE($import_plugin) T_IS_EQUAL T_STRING ) { T_VARIABLE($error) = T_STRING ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($import_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($sql_data) ) ; } } T_IF ( ! T_VARIABLE($error) T_BOOLEAN_AND T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($import_handle) T_BOOLEAN_AND T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($import_handle) ) { T_STRING ( T_VARIABLE($import_handle) ) ; } T_IF ( T_VARIABLE($file_to_unlink) T_IS_NOT_EQUAL ) { T_STRING ( T_VARIABLE($file_to_unlink) ) ; } T_IF ( T_VARIABLE($reset_charset) ) { T_STRING ( ) ; T_STRING ( . T_VARIABLE($collation_connection) . ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($id_bookmark) ) T_BOOLEAN_AND T_VARIABLE($action_bookmark) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($display_query) = T_VARIABLE($import_text) ; T_VARIABLE($error) = T_STRING ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($id_bookmark) ) T_BOOLEAN_AND T_VARIABLE($action_bookmark) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSEIF ( T_VARIABLE($bookmark_created) ) { T_VARIABLE($special_message) = . T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($bkm_label) ) ) ; } T_ELSEIF ( T_VARIABLE($finished) T_BOOLEAN_AND ! T_VARIABLE($error) ) { T_IF ( T_VARIABLE($import_type) T_IS_EQUAL ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_ELSE { T_IF ( T_VARIABLE($import_notice) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( . T_STRING ( ) . ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($executed_queries) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($import_notice) ) ; T_IF ( T_ISSET ( T_VARIABLE($local_import_file) ) ) { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($local_import_file) . ) ; } T_ELSE { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($_FILES) [ ] [ ] . ) ; } } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($executed_queries) ) ; T_IF ( T_ISSET ( T_VARIABLE($local_import_file) ) ) { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($local_import_file) . ) ; } T_ELSE { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($_FILES) [ ] [ ] . ) ; } } } } T_IF ( T_VARIABLE($timeout_passed) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_IF ( T_VARIABLE($offset) T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($original_skip) ) T_BOOLEAN_AND T_VARIABLE($original_skip) T_IS_EQUAL T_VARIABLE($offset) ) ) { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($message) ) ) { T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_STRING ( T_VARIABLE($sql_query) ) T_IS_SMALLER_OR_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] ) { T_INCLUDE_ONCE ; } T_IF ( T_ISSET ( T_VARIABLE($my_die) ) ) { T_FOREACH ( T_VARIABLE($my_die) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($die) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($die) [ ] , T_VARIABLE($die) [ ] , , T_VARIABLE($err_url) , T_VARIABLE($error) ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($last_query_with_results) ) ) { T_VARIABLE($disp_query) = T_VARIABLE($sql_query) ; T_VARIABLE($disp_message) = T_STRING ( ) ; T_VARIABLE($sql_query) = T_VARIABLE($last_query_with_results) ; T_VARIABLE($go_sql) = T_STRING ; } T_IF ( T_VARIABLE($go_sql) ) { T_INCLUDE ; } T_ELSE { T_VARIABLE($active_page) = T_VARIABLE($goto) ; T_INCLUDE . T_VARIABLE($goto) ; } T_CLOSE_TAG',yes
'T_OPEN_TAG T_IF ( T_STRING ( T_STRING , , ) T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($sessionupload) = T_ARRAY ( ) ; T_STRING ( , T_STRING ( ) ) ; T_STRING ( ) ; T_FOREACH ( T_VARIABLE($_SESSION) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_STRING ( T_VARIABLE($key) , T_LNUMBER , T_STRING ( T_STRING ) ) T_IS_EQUAL T_STRING ) { T_VARIABLE($sessionupload) [ T_VARIABLE($key) ] = T_VARIABLE($value) ; } } T_STRING ( , T_STRING ( T_VARIABLE($sessionupload) ) ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( T_VARIABLE($_COOKIE) [ ] ) ; } T_STRING ( , T_LNUMBER ) ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_IF ( T_STRING ( ) ) { T_VARIABLE($sessionupload) = T_STRING ( T_STRING ) ; T_FOREACH ( T_VARIABLE($sessionupload) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($_SESSION) [ T_VARIABLE($key) ] = T_VARIABLE($value) ; } T_FOREACH ( T_VARIABLE($_SESSION) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_STRING ( T_VARIABLE($key) , T_LNUMBER , T_STRING ( T_STRING ) ) T_IS_EQUAL T_STRING T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($sessionupload) [ T_VARIABLE($key) ] ) ) { T_UNSET ( T_VARIABLE($_SESSION) [ T_VARIABLE($key) ] ) ; } } } T_VARIABLE($get_params) = T_ARRAY ( , ) ; T_FOREACH ( T_VARIABLE($get_params) T_AS T_VARIABLE($one_get_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_GET) [ T_VARIABLE($one_get_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_get_param) ] = T_VARIABLE($_GET) [ T_VARIABLE($one_get_param) ] ; } } T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_STRING ( ) ; T_STRING ( T_LNUMBER ) ; T_WHILE ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING ) { T_STRING ( T_LNUMBER ) ; } T_ECHO T_VARIABLE($_SESSION) [ ] [ ] ; T_ECHO . ; T_ECHO . T_VARIABLE($_SESSION) [ ] [ ] . . T_STRING ( ) . . ; T_ECHO . ; } T_ELSE { T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($drops) = T_ARRAY ( , , , , ) ; T_FOREACH ( T_VARIABLE($drops) T_AS T_VARIABLE($each_drop) ) { T_IF ( T_STRING ( T_VARIABLE($each_drop) , T_VARIABLE($_GET) ) ) { T_UNSET ( T_VARIABLE($_GET) [ T_VARIABLE($each_drop) ] ) ; } } T_UNSET ( T_VARIABLE($drops) , T_VARIABLE($each_drop) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($goto_whitelist) ) ) { T_INCLUDE T_VARIABLE($_REQUEST) [ ] ; T_EXIT ; } T_REQUIRE_ONCE ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_EXIT ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_STRING ( ) ; T_EXIT ; } T_ECHO ; } T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($show_query) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($message) ) ) { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) ) ; T_UNSET ( T_VARIABLE($message) ) ; } T_VARIABLE($common_url_query) = T_STRING ( , ) ; T_IF ( T_VARIABLE($server) > T_LNUMBER ) { T_INCLUDE ; T_INCLUDE ; T_VARIABLE($server_info) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ) { T_VARIABLE($server_info) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($cfg) [ ] [ ] ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($server_info) T_CONCAT_EQUAL ; } } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ) { T_VARIABLE($server_info) T_CONCAT_EQUAL T_STRING ( ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($server_info) T_CONCAT_EQUAL ; } T_VARIABLE($mysql_cur_user_and_host) = T_STRING ( ) ; T_VARIABLE($short_server_info) = ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ? T_VARIABLE($GLOBALS) [ ] [ ] [ ] : T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; } T_ECHO . ; T_ECHO ; T_IF ( T_VARIABLE($server) > T_LNUMBER T_BOOLEAN_OR ( ! T_VARIABLE($cfg) [ ] T_BOOLEAN_AND T_STRING ( T_VARIABLE($cfg) [ ] ) > T_LNUMBER ) ) { T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_IF ( ! T_VARIABLE($cfg) [ ] T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($cfg) [ ] ) > T_LNUMBER T_BOOLEAN_OR T_VARIABLE($server) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($cfg) [ ] ) T_IS_EQUAL T_LNUMBER ) ) { T_ECHO ; T_INCLUDE_ONCE ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( T_STRING , T_STRING ) ; T_ECHO ; } T_IF ( T_VARIABLE($server) > T_LNUMBER T_BOOLEAN_AND ! T_STRING ) { T_INCLUDE_ONCE ; T_IF ( T_VARIABLE($cfg) [ ] [ ] T_IS_NOT_EQUAL ) { T_IF ( T_VARIABLE($cfg) [ ] ) { T_VARIABLE($conditional_class) = ; T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( ) , , . T_VARIABLE($common_url_query) , T_STRING , T_STRING , , , T_VARIABLE($conditional_class) ) ; } } T_ECHO ; T_ECHO . . T_STRING ( T_STRING , T_STRING , T_LNUMBER , ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( , ) . . . . . T_STRING ( T_STRING , , , T_VARIABLE($collation_connection) , T_STRING , T_LNUMBER , T_STRING ) . . . . ; } T_ECHO ; T_ECHO ; } T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_IF ( T_EMPTY ( T_VARIABLE($cfg) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] ) > T_LNUMBER ) { T_ECHO ; T_INCLUDE_ONCE ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( ) ; T_ECHO ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_ECHO ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_ECHO ; } T_ECHO ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_ECHO ; T_ECHO ; T_IF ( T_VARIABLE($server) > T_LNUMBER ) { T_ECHO ; T_ECHO T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( ) , , . T_VARIABLE($common_url_query) , T_STRING , T_STRING , T_STRING , ) ; T_ECHO ; } T_ECHO ; T_ECHO ; T_ECHO ; T_IF ( T_VARIABLE($server) > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] ) { T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . ; T_STRING ( T_STRING ( ) . . T_VARIABLE($server_info) , ) ; T_STRING ( T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( ) , ) ; T_STRING ( T_STRING ( ) . . T_STRING . . T_STRING , ) ; T_STRING ( T_STRING ( ) . . T_STRING ( ) , ) ; T_STRING ( T_STRING ( ) . . T_STRING ( T_VARIABLE($mysql_cur_user_and_host) ) , ) ; T_ECHO ; T_ECHO . T_STRING ( ) . . . . T_VARIABLE($mysql_charsets_descriptions) [ T_VARIABLE($mysql_charset_map) [ ] ] . . . T_VARIABLE($mysql_charset_map) [ ] . . . . . . ; T_ECHO ; T_ECHO ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] [ ] ) { T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( T_VARIABLE($_SERVER) [ ] , ) ; T_IF ( T_VARIABLE($server) > T_LNUMBER ) { T_VARIABLE($client_version_str) = T_STRING ( ) ; T_IF ( T_STRING ( , T_VARIABLE($client_version_str) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] , T_ARRAY ( , ) ) ) { T_VARIABLE($client_version_str) = . T_VARIABLE($client_version_str) ; } T_STRING ( T_STRING ( ) . . T_VARIABLE($client_version_str) , ) ; T_VARIABLE($php_ext_string) = T_STRING ( ) . . T_VARIABLE($GLOBALS) [ ] [ ] [ ] . . T_STRING T_DOUBLE_COLON T_STRING ( . T_VARIABLE($GLOBALS) [ ] [ ] [ ] . ) ; T_STRING ( T_VARIABLE($php_ext_string) , ) ; } } T_IF ( T_VARIABLE($cfg) [ ] ) { T_STRING ( T_STRING ( ) , , . T_VARIABLE($common_url_query) , T_STRING , ) ; } T_ECHO ; T_ECHO ; } T_ECHO ; T_ECHO ; T_ECHO ; T_VARIABLE($class) = T_STRING ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND ( ! T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_OR T_STRING T_IS_NOT_EQUAL ) ) { T_VARIABLE($class) = ; } T_STRING ( T_STRING ( ) . . T_STRING , , T_STRING , T_STRING , T_STRING , T_STRING , T_VARIABLE($class) ) ; T_STRING ( T_STRING ( ) , , T_STRING T_DOUBLE_COLON T_STRING ( ) , T_STRING , ) ; T_STRING ( T_STRING ( ) , , T_STRING ( ) , T_STRING , ) ; T_STRING ( T_STRING ( ) , , T_STRING ( ) , T_STRING , ) ; T_STRING ( T_STRING ( ) , , T_STRING ( ) , T_STRING , ) ; T_STRING ( T_STRING ( ) , , T_STRING ( ) , T_STRING , ) ; T_STRING ( T_STRING ( ) , , T_STRING ( ) , T_STRING , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($server) T_IS_NOT_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($cfg) [ ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($cfg) [ ] [ ] T_IS_EQUAL ) { T_STRING ( T_STRING ( ) , T_STRING ) ; } T_IF ( @ T_STRING ( ) T_BOOLEAN_AND @ T_STRING ( ) > T_LNUMBER ) { T_STRING ( T_STRING ( ) , T_STRING ) ; } T_IF ( ! @ T_STRING ( ) ) { T_STRING ( T_STRING ( ) , T_STRING ) ; } T_VARIABLE($gc_time) = T_INT_CAST @ T_STRING ( ) ; T_IF ( T_VARIABLE($gc_time) < T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( T_STRING ( ) , T_STRING ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_NOT_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] < T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( T_STRING ( ) , T_STRING ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_SESSION) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_STRING ( T_STRING ( ) , T_STRING ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_STRING ( ) , T_STRING ) ; } T_IF ( T_VARIABLE($server) > T_LNUMBER ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfg) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($cfg) [ ] . . T_VARIABLE($common_url_query) . , T_STRING ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ T_VARIABLE($server) ] [ ] ) ) { T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; } T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_IF ( T_STRING ( ) T_BOOLEAN_AND ! T_STRING ) { T_VARIABLE($_client_info) = T_STRING ( ) ; T_IF ( T_VARIABLE($server) > T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($_client_info) , ) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_STRING ( T_STRING , T_LNUMBER , T_LNUMBER ) T_IS_NOT_EQUAL T_STRING ( T_STRING , T_LNUMBER , T_LNUMBER ) ) { T_STRING ( T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($_client_info) , T_STRING ( T_STRING , T_LNUMBER , T_STRING ( T_STRING . , ) ) ) ) , T_STRING ) ; } T_UNSET ( T_VARIABLE($_client_info) ) ; } T_IF ( T_VARIABLE($cfg) [ ] T_IS_EQUAL T_STRING T_BOOLEAN_AND @ T_STRING ( ) ) { T_STRING ( T_STRING ( T_STRING ( ) , , ) , T_STRING ) ; } T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ! T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( ) ; } T_IF ( T_STRING ( ) ) { T_INCLUDE ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($lang) ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($lang) ] < T_VARIABLE($cfg) [ ] ) { T_STRING ( , T_STRING ) ; } } T_FUNCTION(PMA_printListItem) ( T_VARIABLE($name) , T_VARIABLE($id) = T_STRING , T_VARIABLE($url) = T_STRING , T_VARIABLE($mysql_help_page) = T_STRING , T_VARIABLE($target) = T_STRING , T_VARIABLE($a_id) = T_STRING , T_VARIABLE($class) = T_STRING , T_VARIABLE($a_class) = T_STRING ) { T_ECHO . T_VARIABLE($id) . ; T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($class) ) { T_ECHO . T_VARIABLE($class) . ; } T_ECHO ; T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($url) ) { T_ECHO . T_VARIABLE($url) . ; T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($target) ) { T_ECHO . T_VARIABLE($target) . ; } T_IF ( T_STRING T_IS_NOT_EQUAL T_VARIABLE($a_id) ) { T_ECHO . T_VARIABLE($a_id) . ; } T_IF ( T_STRING T_IS_NOT_EQUAL T_VARIABLE($a_class) ) { T_ECHO . T_VARIABLE($a_class) . ; } T_ECHO ; } T_ECHO T_VARIABLE($name) ; T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($url) ) { T_ECHO . ; } T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($mysql_help_page) ) { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($mysql_help_page) ) ; } T_ECHO ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_STRING ( ) ; T_STRING ( ) ; T_STRING ( . T_STRING ( , T_STRING ( ) + T_LNUMBER ) . ) ; T_STRING ( , T_STRING ) ; T_REQUIRE_ONCE ; T_IF ( T_STRING ( T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) . ) ) { T_INCLUDE T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) . ; } T_VARIABLE($sprites) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($sprites) = T_STRING ( ) ; } T_VARIABLE($keys) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($sprites) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($keys) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($key) T_ENCAPSED_AND_WHITESPACE ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($keys) , ) . ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_STRING ( ) ; T_STRING ( ) ; T_STRING ( . T_STRING ( , T_STRING ( ) + T_LNUMBER ) . ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_GET) [ ] ) ) { T_FOREACH ( T_VARIABLE($_GET) [ ] T_AS T_VARIABLE($script) ) { T_VARIABLE($script_name) = ; T_VARIABLE($path) = T_STRING ( , T_VARIABLE($script) ) ; T_FOREACH ( T_VARIABLE($path) T_AS T_VARIABLE($index) T_DOUBLE_ARROW T_VARIABLE($filename) ) { T_IF ( ! T_STRING ( , T_VARIABLE($filename) ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($filename) ) ) { T_VARIABLE($script_name) T_CONCAT_EQUAL T_STRING . T_VARIABLE($filename) ; } } T_IF ( T_STRING ( , T_VARIABLE($script_name) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($script_name) ) ) { T_STRING ( T_VARIABLE($script_name) ) ; T_ECHO ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_STRING ( ) ; T_STRING ( ) ; T_STRING ( . T_STRING ( , T_STRING ( ) + T_LNUMBER ) . ) ; T_STRING ( , T_STRING ) ; T_REQUIRE_ONCE ; T_STRING ( ) ; T_REQUIRE_ONCE ; T_VARIABLE($js_messages) [ ] = T_VARIABLE($cfg) [ ] ? : T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( , ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = . T_STRING ( ) . . T_STRING ( ) . . T_STRING ( ) . . T_STRING ( ) . . T_STRING ( ) . . T_STRING ( ) . ; T_VARIABLE($js_messages) [ ] = . T_STRING ( ) . ; T_VARIABLE($js_messages) [ ] = . T_STRING ( ) . ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_SWITCH ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_CASE : T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_BREAK ; T_DEFAULT : T_BREAK ; } T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_VARIABLE($js_messages) [ ] = T_STRING ( ) ; T_ECHO ; T_FOREACH ( T_VARIABLE($js_messages) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($js_message) ) { T_STRING ( . T_VARIABLE($name) . , T_VARIABLE($js_message) ) ; } T_ECHO . T_VARIABLE($GLOBALS) [ ] . . ; T_ECHO . T_VARIABLE($GLOBALS) [ ] . ; T_ECHO . T_STRING . ; T_ECHO ; T_STRING ( , T_STRING ( ) ) ; T_STRING ( , T_STRING ( , ) ) ; T_STRING ( , T_STRING ( , ) ) ; T_STRING ( , T_STRING ( ) ) ; T_STRING ( , T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ) ; T_STRING ( , T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( , ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ) ; T_STRING ( , T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ) ; T_STRING ( , T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ) ; T_STRING ( , T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ) ; T_STRING ( , T_STRING ( ) ) ; T_STRING ( , ( T_STRING ( ) T_IS_EQUAL ) ) ; T_VARIABLE($year_suffix) = T_STRING ( , ) ; T_STRING ( , ( T_VARIABLE($year_suffix) T_IS_EQUAL ? : T_VARIABLE($year_suffix) ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO ; T_STRING ( , T_STRING ( ) ) ; T_STRING ( , T_STRING ( ) ) ; T_STRING ( , T_STRING ( ) ) ; T_STRING ( , T_STRING ( ) ) ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_VAR T_VARIABLE($variables) ; T_VAR T_VARIABLE($parseResult) ; T_VAR T_VARIABLE($runResult) ; T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_STRING ( , T_LNUMBER , T_LNUMBER ) , T_STRING ( , T_LNUMBER , T_LNUMBER ) ) ; T_IF ( T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING ( , T_LNUMBER , T_LNUMBER ) ) ; } T_INCLUDE_ONCE ; T_VARIABLE($sysinfo) = T_STRING ( ) ; T_VARIABLE($memory) = T_VARIABLE($sysinfo) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($memory) [ ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( T_VARIABLE($description) , T_VARIABLE($exception) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ ] = T_VARIABLE($description) . . T_STRING ( T_STRING ( ) , T_VARIABLE($exception) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] T_AS T_VARIABLE($rule) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_LNUMBER ; T_VARIABLE($precond) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($rule) [ ] ) ) { T_TRY { T_VARIABLE($precond) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($rule) [ ] ) ; } T_CATCH ( T_STRING T_VARIABLE($e) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($rule) [ ] ) , T_VARIABLE($e) ) ; T_CONTINUE ; } } T_IF ( ! T_VARIABLE($precond) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($rule) ) ; } T_ELSE { T_TRY { T_VARIABLE($value) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($rule) [ ] ) ; } T_CATCH ( T_STRING T_VARIABLE($e) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($rule) [ ] ) , T_VARIABLE($e) ) ; T_CONTINUE ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($value) ; T_TRY { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($rule) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($rule) ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($rule) ) ; } } T_CATCH ( T_STRING T_VARIABLE($e) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($rule) [ ] ) , T_VARIABLE($e) ) ; } } } T_RETURN T_STRING ; } T_STATIC T_STRING ( T_VARIABLE($str) ) { T_RETURN T_STRING ( , , T_VARIABLE($str) ) ; } T_STRING ( T_VARIABLE($str) , T_VARIABLE($param) = T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($param) ) ) { T_RETURN T_STRING ( T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($str) ) ) ) ; } T_ELSE { T_VARIABLE($printf) = . T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($str) ) ) . ; T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($printf) . T_VARIABLE($param) . , T_STRING ( T_VARIABLE($printf) ) ) ; } } T_STATIC T_STRING ( T_VARIABLE($rule) ) { T_VARIABLE($jst) = T_STRING ( , T_VARIABLE($rule) [ ] , T_LNUMBER ) ; T_IF ( T_STRING ( T_VARIABLE($jst) ) > T_LNUMBER ) { T_RETURN T_ARRAY ( T_VARIABLE($jst) [ T_LNUMBER ] , T_VARIABLE($jst) [ T_LNUMBER ] ) ; } T_RETURN T_ARRAY ( T_VARIABLE($rule) [ ] ) ; } T_STRING ( T_VARIABLE($type) , T_VARIABLE($rule) ) { T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_CASE : T_VARIABLE($jst) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($rule) ) ; T_IF ( T_STRING ( T_VARIABLE($jst) ) > T_LNUMBER ) { T_TRY { T_VARIABLE($str) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($jst) [ T_LNUMBER ] , T_VARIABLE($jst) [ T_LNUMBER ] ) ; } T_CATCH ( T_STRING T_VARIABLE($e) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($rule) [ ] ) , T_VARIABLE($e) ) ; T_RETURN ; } T_VARIABLE($rule) [ ] = T_VARIABLE($str) ; } T_ELSE { T_VARIABLE($rule) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($rule) [ ] ) ; } T_VARIABLE($rule) [ ] = T_VARIABLE($rule) [ ] ; T_VARIABLE($rule) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($rule) [ ] ) ; T_VARIABLE($rule) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($rule) [ ] ) ; T_VARIABLE($rule) [ ] = T_STRING ( , . T_STRING ( ) . , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($rule) [ ] ) ) ; T_VARIABLE($rule) [ ] = T_STRING ( , T_ARRAY ( T_VARIABLE($this) , ) , T_VARIABLE($rule) [ ] ) ; T_BREAK ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($type) ] [ ] = T_VARIABLE($rule) ; } T_PRIVATE T_STRING ( T_VARIABLE($matches) ) { T_RETURN . T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] ) . ; } T_PRIVATE T_STRING ( T_VARIABLE($matches) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_RETURN ; } T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] T_AS T_VARIABLE($rule) ) { T_IF ( T_VARIABLE($rule) [ ] T_IS_EQUAL T_VARIABLE($matches) [ T_LNUMBER ] ) { T_RETURN ; } } T_RETURN ; } T_PRIVATE T_STRING ( T_VARIABLE($matches) ) { T_RETURN T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($matches) [ T_LNUMBER ] ] ) ? ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($matches) [ T_LNUMBER ] ] ) ? T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($matches) [ T_LNUMBER ] ] : . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($matches) [ T_LNUMBER ] ] . ) : T_VARIABLE($matches) [ T_LNUMBER ] ; } T_STRING ( T_VARIABLE($expr) , T_VARIABLE($ignoreUntil) = T_LNUMBER ) { T_IF ( T_VARIABLE($ignoreUntil) > T_LNUMBER ) { T_VARIABLE($exprIgnore) = T_STRING ( T_VARIABLE($expr) , T_LNUMBER , T_VARIABLE($ignoreUntil) ) ; T_VARIABLE($expr) = T_STRING ( T_VARIABLE($expr) , T_VARIABLE($ignoreUntil) ) ; } T_VARIABLE($expr) = T_STRING ( , T_ARRAY ( T_VARIABLE($this) , ) , T_VARIABLE($expr) ) ; T_VARIABLE($expr) = T_STRING ( , T_ARRAY ( T_VARIABLE($this) , ) , T_VARIABLE($expr) ) ; T_IF ( T_VARIABLE($ignoreUntil) > T_LNUMBER ) { T_VARIABLE($expr) = T_VARIABLE($exprIgnore) . T_VARIABLE($expr) ; } T_VARIABLE($value) = T_LNUMBER ; T_VARIABLE($err) = T_LNUMBER ; T_STRING ( ) ; T_EVAL ( . T_VARIABLE($expr) . ) ; T_VARIABLE($err) = T_STRING ( ) ; T_STRING ( ) ; T_IF ( T_VARIABLE($err) ) { T_THROW T_NEW T_STRING ( T_STRING ( T_VARIABLE($err) ) . . T_STRING ( T_VARIABLE($expr) ) . ) ; } T_RETURN T_VARIABLE($value) ; } T_STATIC T_STRING ( ) { T_VARIABLE($file) = T_STRING ( , T_STRING ) ; T_VARIABLE($errors) = T_ARRAY ( ) ; T_VARIABLE($rules) = T_ARRAY ( ) ; T_VARIABLE($lines) = T_ARRAY ( ) ; T_VARIABLE($ruleSyntax) = T_ARRAY ( , , , , , ) ; T_VARIABLE($numRules) = T_STRING ( T_VARIABLE($ruleSyntax) ) ; T_VARIABLE($numLines) = T_STRING ( T_VARIABLE($file) ) ; T_VARIABLE($ruleNo) = - T_LNUMBER ; T_VARIABLE($ruleLine) = - T_LNUMBER ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($numLines) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($line) = T_VARIABLE($file) [ T_VARIABLE($i) ] ; T_IF ( T_VARIABLE($line) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($line) [ T_LNUMBER ] T_IS_EQUAL ) { T_CONTINUE ; } T_IF ( T_STRING ( T_VARIABLE($line) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_IF ( T_VARIABLE($ruleLine) > T_LNUMBER ) { T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_VARIABLE($i) + T_LNUMBER , T_VARIABLE($ruleSyntax) [ T_VARIABLE($ruleLine) T_INC ] ) ; T_CONTINUE ; } T_IF ( T_STRING ( , T_VARIABLE($line) , T_VARIABLE($match) ) ) { T_VARIABLE($ruleLine) = T_LNUMBER ; T_VARIABLE($ruleNo) T_INC ; T_VARIABLE($rules) [ T_VARIABLE($ruleNo) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($match) [ T_LNUMBER ] ) ; T_VARIABLE($lines) [ T_VARIABLE($ruleNo) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($i) + T_LNUMBER ) ; T_IF ( T_ISSET ( T_VARIABLE($match) [ T_LNUMBER ] ) ) { T_VARIABLE($rules) [ T_VARIABLE($ruleNo) ] [ ] = T_VARIABLE($match) [ T_LNUMBER ] ; T_VARIABLE($lines) [ T_VARIABLE($ruleNo) ] [ ] = T_VARIABLE($i) + T_LNUMBER ; } } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_VARIABLE($i) + T_LNUMBER ) ; } T_CONTINUE ; } T_ELSE { T_IF ( T_VARIABLE($ruleLine) T_IS_EQUAL - T_LNUMBER ) { T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_VARIABLE($i) + T_LNUMBER ) ; } } T_IF ( T_VARIABLE($ruleLine) > T_LNUMBER ) { T_IF ( ! T_ISSET ( T_VARIABLE($line) [ T_LNUMBER ] ) ) { T_CONTINUE ; } T_IF ( T_VARIABLE($line) [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_VARIABLE($i) + T_LNUMBER , T_VARIABLE($line) [ T_LNUMBER ] ) ; T_CONTINUE ; } T_VARIABLE($rules) [ T_VARIABLE($ruleNo) ] [ T_VARIABLE($ruleSyntax) [ T_VARIABLE($ruleLine) ] ] = T_STRING ( T_STRING ( T_VARIABLE($line) , T_LNUMBER ) ) ; T_VARIABLE($lines) [ T_VARIABLE($ruleNo) ] [ T_VARIABLE($ruleSyntax) [ T_VARIABLE($ruleLine) ] ] = T_VARIABLE($i) + T_LNUMBER ; T_VARIABLE($ruleLine) T_PLUS_EQUAL T_LNUMBER ; } T_IF ( T_VARIABLE($ruleLine) T_IS_EQUAL T_VARIABLE($numRules) ) { T_VARIABLE($ruleLine) = - T_LNUMBER ; } } T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($rules) , T_DOUBLE_ARROW T_VARIABLE($lines) , T_DOUBLE_ARROW T_VARIABLE($errors) ) ; } } T_FUNCTION(ADVISOR_bytime) ( T_VARIABLE($num) , T_VARIABLE($precision) ) { T_VARIABLE($per) = ; T_IF ( T_VARIABLE($num) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($per) = T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($num) * T_LNUMBER T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($num) = T_VARIABLE($num) * T_LNUMBER ; T_VARIABLE($per) = T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($num) * T_LNUMBER * T_LNUMBER T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($num) = T_VARIABLE($num) * T_LNUMBER * T_LNUMBER ; T_VARIABLE($per) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($num) = T_VARIABLE($num) * T_LNUMBER * T_LNUMBER * T_LNUMBER ; T_VARIABLE($per) = T_STRING ( ) ; } T_VARIABLE($num) = T_STRING ( T_VARIABLE($num) , T_VARIABLE($precision) ) ; T_IF ( T_VARIABLE($num) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($num) = . T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , - T_VARIABLE($precision) ) ; } T_RETURN T_VARIABLE($num) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($per) ; } T_FUNCTION(ADVISOR_timespanFormat) ( T_VARIABLE($seconds) ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($seconds) ) ; } T_FUNCTION(ADVISOR_formatByteDown) ( T_VARIABLE($value) , T_VARIABLE($limes) = T_LNUMBER , T_VARIABLE($comma) = T_LNUMBER ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) , T_VARIABLE($limes) , T_VARIABLE($comma) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_Bookmark_getParams) ( ) { T_STATIC T_VARIABLE($cfgBookmark) = T_STRING ; T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($cfgBookmark) ) { T_RETURN T_VARIABLE($cfgBookmark) ; } T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($cfgBookmark) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] [ ] [ ] , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] [ ] [ ] , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] [ ] [ ] , ) ; } T_ELSE { T_VARIABLE($cfgBookmark) = T_STRING ; } T_RETURN T_VARIABLE($cfgBookmark) ; } T_FUNCTION(PMA_Bookmark_getList) ( T_VARIABLE($db) ) { T_GLOBAL T_VARIABLE($controllink) ; T_VARIABLE($cfgBookmark) = T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($cfgBookmark) ) ) { T_RETURN T_ARRAY ( ) ; } T_VARIABLE($query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgBookmark) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgBookmark) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgBookmark) [ ] ) . . ; T_VARIABLE($per_user) = T_STRING ( T_VARIABLE($query) , , , T_VARIABLE($controllink) , T_STRING ) ; T_VARIABLE($query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgBookmark) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgBookmark) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . ; T_VARIABLE($global) = T_STRING ( T_VARIABLE($query) , , , T_VARIABLE($controllink) , T_STRING ) ; T_FOREACH ( T_VARIABLE($global) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($global) [ T_VARIABLE($key) ] = T_VARIABLE($val) . . T_STRING ( ) . ; } T_VARIABLE($ret) = T_VARIABLE($global) + T_VARIABLE($per_user) ; T_STRING ( T_VARIABLE($ret) ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(PMA_Bookmark_get) ( T_VARIABLE($db) , T_VARIABLE($id) , T_VARIABLE($id_field) = , T_VARIABLE($action_bookmark_all) = T_STRING , T_VARIABLE($exact_user_match) = T_STRING ) { T_GLOBAL T_VARIABLE($controllink) ; T_VARIABLE($cfgBookmark) = T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($cfgBookmark) ) ) { T_RETURN ; } T_VARIABLE($query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgBookmark) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgBookmark) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_IF ( ! T_VARIABLE($action_bookmark_all) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgBookmark) [ ] ) . ; T_IF ( ! T_VARIABLE($exact_user_match) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($id_field) ) . . T_VARIABLE($id) ; T_RETURN T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER , T_VARIABLE($controllink) ) ; } T_FUNCTION(PMA_Bookmark_save) ( T_VARIABLE($fields) , T_VARIABLE($all_users) = T_STRING ) { T_GLOBAL T_VARIABLE($controllink) ; T_VARIABLE($cfgBookmark) = T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($cfgBookmark) ) ) { T_RETURN T_STRING ; } T_VARIABLE($query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgBookmark) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgBookmark) [ ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($fields) [ ] ) . . . ( T_VARIABLE($all_users) ? : T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($fields) [ ] ) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($fields) [ ] ) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($fields) [ ] ) . ; T_RETURN T_STRING ( T_VARIABLE($query) , T_VARIABLE($controllink) ) ; } T_FUNCTION(PMA_Bookmark_delete) ( T_VARIABLE($db) , T_VARIABLE($id) ) { T_GLOBAL T_VARIABLE($controllink) ; T_VARIABLE($cfgBookmark) = T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($cfgBookmark) ) ) { T_RETURN T_STRING ; } T_VARIABLE($query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgBookmark) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgBookmark) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgBookmark) [ ] ) . . . . T_VARIABLE($id) ; T_RETURN T_STRING ( T_VARIABLE($query) , T_VARIABLE($controllink) ) ; } T_VARIABLE($GLOBALS) [ ] [ ] = T_STRING ( ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_getColumnOrder) ( ) { T_VARIABLE($column_order) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($column_order) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($column_order) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($column_order) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($column_order) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($column_order) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($column_order) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , ) ; T_RETURN T_VARIABLE($column_order) ; } T_FUNCTION(PMA_buildHtmlForDb) ( T_VARIABLE($current) , T_VARIABLE($is_superuser) , T_VARIABLE($url_query) , T_VARIABLE($column_order) , T_VARIABLE($replication_types) , T_VARIABLE($replication_info) ) { T_VARIABLE($out) = ; T_IF ( T_VARIABLE($is_superuser) T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($out) T_CONCAT_EQUAL ; T_VARIABLE($out) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($current) [ ] ) . . . T_STRING ( T_VARIABLE($current) [ ] ) . ; T_IF ( T_STRING ( T_VARIABLE($current) [ ] , T_STRING ) ) { T_VARIABLE($out) T_CONCAT_EQUAL ; } T_VARIABLE($out) T_CONCAT_EQUAL ; } T_VARIABLE($out) T_CONCAT_EQUAL . . T_VARIABLE($GLOBALS) [ ] [ ] . . T_VARIABLE($url_query) . . T_STRING ( T_VARIABLE($current) [ ] ) . . T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($current) [ ] ) ) . . . T_STRING ( T_VARIABLE($current) [ ] ) . . ; T_FOREACH ( T_VARIABLE($column_order) T_AS T_VARIABLE($stat_name) T_DOUBLE_ARROW T_VARIABLE($stat) ) { T_IF ( T_STRING ( T_VARIABLE($stat_name) , T_VARIABLE($current) ) ) { T_IF ( T_STRING ( T_VARIABLE($stat) [ ] ) ) { T_VARIABLE($column_order) [ T_VARIABLE($stat_name) ] [ ] T_PLUS_EQUAL T_VARIABLE($current) [ T_VARIABLE($stat_name) ] ; } T_IF ( T_VARIABLE($stat) [ ] T_IS_IDENTICAL ) { T_LIST ( T_VARIABLE($value) , T_VARIABLE($unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current) [ T_VARIABLE($stat_name) ] , T_LNUMBER , T_LNUMBER ) ; } T_ELSEIF ( T_VARIABLE($stat) [ ] T_IS_IDENTICAL ) { T_VARIABLE($value) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current) [ T_VARIABLE($stat_name) ] , T_LNUMBER ) ; } T_ELSE { T_VARIABLE($value) = T_STRING ( T_VARIABLE($current) [ T_VARIABLE($stat_name) ] , T_LNUMBER ) ; } T_VARIABLE($out) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($stat) [ ] ) ) { T_VARIABLE($out) T_CONCAT_EQUAL . T_VARIABLE($stat) [ ] ( T_VARIABLE($current) [ T_VARIABLE($stat_name) ] ) . ; } T_VARIABLE($out) T_CONCAT_EQUAL T_VARIABLE($value) ; T_IF ( T_ISSET ( T_VARIABLE($stat) [ ] ) ) { T_VARIABLE($out) T_CONCAT_EQUAL ; } T_VARIABLE($out) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($stat) [ ] T_IS_IDENTICAL ) { T_VARIABLE($out) T_CONCAT_EQUAL . T_VARIABLE($unit) . ; } } } T_FOREACH ( T_VARIABLE($replication_types) T_AS T_VARIABLE($type) ) { T_IF ( T_VARIABLE($replication_info) [ T_VARIABLE($type) ] [ ] ) { T_VARIABLE($out) T_CONCAT_EQUAL ; T_VARIABLE($key) = T_STRING ( T_VARIABLE($current) [ ] , T_VARIABLE($replication_info) [ T_VARIABLE($type) ] [ ] ) ; T_IF ( T_STRING ( T_VARIABLE($key) ) > T_LNUMBER ) { T_VARIABLE($out) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($key) = T_STRING ( T_VARIABLE($current) [ ] , T_VARIABLE($replication_info) [ T_VARIABLE($type) ] [ ] ) ; T_IF ( T_STRING ( T_VARIABLE($key) ) > T_LNUMBER T_BOOLEAN_OR ( T_VARIABLE($replication_info) [ T_VARIABLE($type) ] [ ] [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($replication_info) [ T_VARIABLE($type) ] [ ] ) T_IS_EQUAL T_LNUMBER ) ) { T_VARIABLE($out) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; } } T_VARIABLE($out) T_CONCAT_EQUAL ; } } T_IF ( T_VARIABLE($is_superuser) T_BOOLEAN_AND ! T_STRING ) { T_VARIABLE($out) T_CONCAT_EQUAL . . . T_STRING ( T_VARIABLE($current) [ ] ) . . . T_VARIABLE($url_query) . . T_STRING ( T_VARIABLE($current) [ ] ) . . T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($current) [ ] ) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . ; } T_RETURN T_ARRAY ( T_VARIABLE($column_order) , T_VARIABLE($out) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_IF ( T_VARIABLE($cfg) [ ] T_IS_EQUAL ) { T_IF ( @ T_STRING ( ) ) { T_IF ( ( @ T_STRING ( T_STRING , ) ) T_BOOLEAN_AND ( @ T_STRING ( T_STRING , ) T_IS_EQUAL T_LNUMBER ) T_BOOLEAN_AND ( @ T_STRING ( T_STRING , ) T_IS_EQUAL T_LNUMBER ) ) { T_VARIABLE($PMA_recoding_engine) = T_STRING ; } T_ELSE { T_VARIABLE($PMA_recoding_engine) = T_STRING ; } } T_ELSE { T_VARIABLE($PMA_recoding_engine) = T_STRING ; T_STRING ( ) ; } } T_ELSEIF ( T_VARIABLE($cfg) [ ] T_IS_EQUAL ) { T_IF ( @ T_STRING ( ) ) { T_VARIABLE($PMA_recoding_engine) = T_STRING ; } T_ELSE { T_VARIABLE($PMA_recoding_engine) = T_STRING ; T_STRING ( ) ; } } T_ELSEIF ( T_VARIABLE($cfg) [ ] T_IS_EQUAL ) { T_IF ( @ T_STRING ( ) ) { T_IF ( ( @ T_STRING ( T_STRING , ) ) T_BOOLEAN_AND ( @ T_STRING ( T_STRING , ) T_IS_EQUAL T_LNUMBER ) T_BOOLEAN_AND ( @ T_STRING ( T_STRING , ) T_IS_EQUAL T_LNUMBER ) ) { T_VARIABLE($PMA_recoding_engine) = T_STRING ; } T_ELSE { T_VARIABLE($PMA_recoding_engine) = T_STRING ; } } T_ELSEIF ( @ T_STRING ( ) ) { T_VARIABLE($PMA_recoding_engine) = T_STRING ; } T_ELSE { T_VARIABLE($PMA_recoding_engine) = T_STRING ; } } T_ELSE { T_VARIABLE($PMA_recoding_engine) = T_STRING ; } T_IF ( T_VARIABLE($PMA_recoding_engine) T_IS_EQUAL T_STRING ) { T_INCLUDE_ONCE ; } T_FUNCTION(PMA_convert_string) ( T_VARIABLE($src_charset) , T_VARIABLE($dest_charset) , T_VARIABLE($what) ) { T_IF ( T_VARIABLE($src_charset) T_IS_EQUAL T_VARIABLE($dest_charset) ) { T_RETURN T_VARIABLE($what) ; } T_SWITCH ( T_VARIABLE($GLOBALS) [ ] ) { T_CASE T_STRING : T_RETURN T_STRING ( T_VARIABLE($src_charset) . . T_VARIABLE($dest_charset) , T_VARIABLE($what) ) ; T_CASE T_STRING : T_RETURN T_STRING ( T_VARIABLE($src_charset) , T_VARIABLE($dest_charset) . T_VARIABLE($GLOBALS) [ ] [ ] , T_VARIABLE($what) ) ; T_CASE T_STRING : T_RETURN T_STRING ( T_VARIABLE($src_charset) , T_VARIABLE($dest_charset) . T_VARIABLE($GLOBALS) [ ] [ ] , T_VARIABLE($what) ) ; T_DEFAULT : T_RETURN T_VARIABLE($what) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_VARIABLE($GLOBALS) [ ] = T_STRING ( ) ; T_FUNCTION(PMA_analyseShowGrant) ( ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; T_RETURN ; } T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($GLOBALS) [ ] = T_ARRAY ( ) ; T_VARIABLE($rs_usr) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($rs_usr) ) { T_RETURN ; } T_VARIABLE($re0) = ; T_VARIABLE($re1) = ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($rs_usr) ) ) { T_VARIABLE($db_name_offset) = T_STRING ( T_VARIABLE($row) [ T_LNUMBER ] , ) + T_LNUMBER ; T_VARIABLE($show_grants_dbname) = T_STRING ( T_VARIABLE($row) [ T_LNUMBER ] , T_VARIABLE($db_name_offset) , T_STRING ( T_VARIABLE($row) [ T_LNUMBER ] , , T_VARIABLE($db_name_offset) ) - T_VARIABLE($db_name_offset) ) ; T_VARIABLE($show_grants_dbname) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($show_grants_dbname) , ) ; T_VARIABLE($show_grants_str) = T_STRING ( T_VARIABLE($row) [ T_LNUMBER ] , T_LNUMBER , ( T_STRING ( T_VARIABLE($row) [ T_LNUMBER ] , ) - T_LNUMBER ) ) ; T_IF ( T_VARIABLE($show_grants_str) T_IS_EQUAL ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ; } T_IF ( T_VARIABLE($show_grants_str) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($show_grants_str) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($show_grants_str) T_IS_EQUAL T_BOOLEAN_OR T_STRING ( T_VARIABLE($show_grants_str) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_IF ( T_VARIABLE($show_grants_dbname) T_IS_EQUAL ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($GLOBALS) [ ] [ ] = ; T_BREAK ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] [ ] = T_VARIABLE($show_grants_dbname) ; T_VARIABLE($dbname_to_test) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($show_grants_dbname) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_CONTINUE ; } T_IF ( ( T_STRING ( . T_VARIABLE($re0) . , T_VARIABLE($show_grants_dbname) ) T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($show_grants_dbname) ) ) T_BOOLEAN_OR ( ! T_STRING ( . T_STRING ( . T_VARIABLE($re1) . , , T_VARIABLE($dbname_to_test) ) ) T_BOOLEAN_AND T_STRING ( T_STRING ( ) , T_LNUMBER , T_LNUMBER ) T_IS_NOT_EQUAL T_LNUMBER ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ( . T_VARIABLE($re0) . , , T_VARIABLE($show_grants_dbname) ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ( . T_VARIABLE($re1) . , , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; } } } } T_STRING ( T_VARIABLE($rs_usr) ) ; T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($GLOBALS) [ ] , T_STRING ) ; T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($GLOBALS) [ ] , T_STRING ) ; T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($GLOBALS) [ ] , T_STRING ) ; T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($GLOBALS) [ ] , T_STRING ) ; T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($GLOBALS) [ ] , T_STRING ) ; } T_IF ( ! T_STRING ) { T_STRING ( ) ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($GLOBALS) [ ] = T_ARRAY ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_remove_request_vars) ( & T_VARIABLE($whitelist) ) { T_VARIABLE($keys) = T_STRING ( T_STRING ( T_ARRAY_CAST T_VARIABLE($_REQUEST) , T_ARRAY_CAST T_VARIABLE($_GET) , T_ARRAY_CAST T_VARIABLE($_POST) , T_ARRAY_CAST T_VARIABLE($_COOKIE) ) ) ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($key) ) { T_IF ( ! T_STRING ( T_VARIABLE($key) , T_VARIABLE($whitelist) ) ) { T_UNSET ( T_VARIABLE($_REQUEST) [ T_VARIABLE($key) ] , T_VARIABLE($_GET) [ T_VARIABLE($key) ] , T_VARIABLE($_POST) [ T_VARIABLE($key) ] , T_VARIABLE($GLOBALS) [ T_VARIABLE($key) ] ) ; } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ T_VARIABLE($key) ] ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($_REQUEST) [ T_VARIABLE($key) ] ) ) { T_UNSET ( T_VARIABLE($_REQUEST) [ T_VARIABLE($key) ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($key) ] ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($_POST) [ T_VARIABLE($key) ] ) ) { T_UNSET ( T_VARIABLE($_POST) [ T_VARIABLE($key) ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) [ T_VARIABLE($key) ] ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($_COOKIE) [ T_VARIABLE($key) ] ) ) { T_UNSET ( T_VARIABLE($_COOKIE) [ T_VARIABLE($key) ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($_GET) [ T_VARIABLE($key) ] ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($_GET) [ T_VARIABLE($key) ] ) ) { T_UNSET ( T_VARIABLE($_GET) [ T_VARIABLE($key) ] ) ; } } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( T_STRING ( T_STRING , , ) ) { T_EXIT ( ) ; } T_IF ( ! T_STRING ( ) ) { T_STRING ( , T_LNUMBER ) ; } T_REQUIRE ; T_VARIABLE($GLOBALS) [ ] = T_NEW T_STRING ( ) ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_IF ( T_STRING ( T_STRING ( ) , , ) ) { @ T_STRING ( , T_STRING ) ; } T_IF ( T_STRING ( T_STRING ( ) , , ) ) { @ T_STRING ( , T_STRING ) ; } T_STRING ( , T_STRING ) ; T_REQUIRE ; T_REQUIRE ; T_REQUIRE ; T_REQUIRE ; T_REQUIRE ; T_REQUIRE ; T_REQUIRE ; T_REQUIRE ; T_REQUIRE ; T_IF ( ! T_STRING ( ) ) { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; } T_VARIABLE($PMA_PHP_SELF) = T_STRING ( ) ; T_VARIABLE($_PATH_INFO) = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_PATH_INFO) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($PMA_PHP_SELF) ) ) { T_VARIABLE($path_info_pos) = T_STRING ( T_VARIABLE($PMA_PHP_SELF) , T_VARIABLE($_PATH_INFO) ) ; T_IF ( T_VARIABLE($path_info_pos) + T_STRING ( T_VARIABLE($_PATH_INFO) ) T_IS_IDENTICAL T_STRING ( T_VARIABLE($PMA_PHP_SELF) ) ) { T_VARIABLE($PMA_PHP_SELF) = T_STRING ( T_VARIABLE($PMA_PHP_SELF) , T_LNUMBER , T_VARIABLE($path_info_pos) ) ; } } T_VARIABLE($PMA_PHP_SELF) = T_STRING ( T_VARIABLE($PMA_PHP_SELF) ) ; T_VARIABLE($variables_whitelist) = T_ARRAY ( , , , , , , , , , , , , ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( ! T_STRING ( T_VARIABLE($key) , T_VARIABLE($variables_whitelist) ) ) { T_UNSET ( $ T_VARIABLE($key) ) ; } } T_UNSET ( T_VARIABLE($key) , T_VARIABLE($value) , T_VARIABLE($variables_whitelist) ) ; T_VARIABLE($__redirect) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($subform_id) = T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($subform) = T_VARIABLE($_POST) [ ] [ T_VARIABLE($subform_id) ] ; T_VARIABLE($_POST) = T_VARIABLE($subform) ; T_VARIABLE($_REQUEST) = T_VARIABLE($subform) ; T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_POST) [ ] T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($PMA_PHP_SELF) ) ) { T_VARIABLE($__redirect) = T_VARIABLE($_POST) [ ] ; T_UNSET ( T_VARIABLE($_POST) [ ] ) ; } T_UNSET ( T_VARIABLE($subform_id) , T_VARIABLE($subform) ) ; } T_ELSE { T_VARIABLE($_REQUEST) = T_STRING ( T_VARIABLE($_GET) , T_VARIABLE($_POST) ) ; } T_IF ( T_STRING ( T_STRING ( ) , , ) ) { T_IF ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( ) ) { T_STRING ( T_VARIABLE($_GET) , , T_STRING ) ; T_STRING ( T_VARIABLE($_POST) , , T_STRING ) ; T_STRING ( T_VARIABLE($_COOKIE) , , T_STRING ) ; T_STRING ( T_VARIABLE($_REQUEST) , , T_STRING ) ; } } T_STRING ( @ T_STRING ( ) ) ; T_IF ( ! T_STRING ( ) ) { T_STRING ( , T_STRING ) ; } T_VARIABLE($GLOBALS) [ ] = T_NEW T_STRING ( T_STRING ) ; T_IF ( ! T_STRING ( ) ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($pma_cookie_version) = T_LNUMBER ; T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) ) T_BOOLEAN_AND ( T_ISSET ( T_VARIABLE($_COOKIE) [ ] ) T_BOOLEAN_AND T_VARIABLE($_COOKIE) [ ] < T_VARIABLE($pma_cookie_version) ) ) { T_FOREACH ( T_VARIABLE($_COOKIE) T_AS T_VARIABLE($cookie_name) T_DOUBLE_ARROW T_VARIABLE($tmp) ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($cookie_name) ) ; } T_VARIABLE($_COOKIE) = T_ARRAY ( ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($pma_cookie_version) ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_AND ! T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($url) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( T_VARIABLE($url) . T_STRING ( T_VARIABLE($_GET) , ) ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_EXIT ; } T_REQUIRE ; T_VARIABLE($GLOBALS) [ ] = T_ARRAY ( ) ; T_VARIABLE($goto_whitelist) = T_ARRAY ( , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ) ; T_IF ( ! T_STRING ( T_VARIABLE($__redirect) , T_VARIABLE($goto_whitelist) ) ) { T_VARIABLE($__redirect) = T_STRING ; } T_VARIABLE($GLOBALS) [ ] = ; T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($goto_whitelist) ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($GLOBALS) [ ] [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_UNSET ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_GET) [ ] , T_VARIABLE($_POST) [ ] , T_VARIABLE($_COOKIE) [ ] ) ; } T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($goto_whitelist) ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_UNSET ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_GET) [ ] , T_VARIABLE($_POST) [ ] , T_VARIABLE($_COOKIE) [ ] ) ; } T_VARIABLE($token_mismatch) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($token_mismatch) = ( T_VARIABLE($_SESSION) [ ] T_IS_NOT_EQUAL T_VARIABLE($_REQUEST) [ ] ) ; } T_IF ( T_VARIABLE($token_mismatch) ) { T_VARIABLE($allow_list) = T_ARRAY ( , , , , , , , , , , , , ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($allow_list) [ ] = ; } T_INCLUDE ; T_STRING ( T_VARIABLE($allow_list) ) ; } T_VARIABLE($GLOBALS) [ ] = ; T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($GLOBALS) [ ] [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_VARIABLE($GLOBALS) [ ] = ; T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($GLOBALS) [ ] [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($recent_table) = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_STRING ) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($recent_table) [ ] ; T_VARIABLE($GLOBALS) [ ] [ ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($recent_table) [ ] ; T_VARIABLE($GLOBALS) [ ] [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_VARIABLE($GLOBALS) [ ] = ; T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_REQUIRE ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) { T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($GLOBALS) [ ] = ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($GLOBALS) [ ] = ; } T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($error) = . T_STRING ( ) . . . T_STRING ( ) . . ; T_STRING ( T_VARIABLE($error) , T_STRING ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($error) = T_STRING ( T_STRING ( ) , T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_VARIABLE($error) , T_STRING ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ) { T_STRING ( T_STRING ( ) , T_STRING ) ; } T_VARIABLE($GLOBALS) [ ] = T_LNUMBER ; T_IF ( ! T_ISSET ( T_VARIABLE($cfg) [ ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($cfg) [ ] ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($cfg) [ ] = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_VARIABLE($default_server) ) ; } T_ELSE { T_VARIABLE($new_servers) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($cfg) [ ] T_AS T_VARIABLE($server_index) T_DOUBLE_ARROW T_VARIABLE($each_server) ) { T_IF ( ! T_STRING ( T_VARIABLE($server_index) ) T_BOOLEAN_OR T_VARIABLE($server_index) < T_LNUMBER ) { T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($server_index) ) , T_STRING ) ; } T_VARIABLE($each_server) = T_STRING ( T_VARIABLE($default_server) , T_VARIABLE($each_server) ) ; T_IF ( T_VARIABLE($each_server) [ ] T_IS_EQUAL T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($each_server) [ ] ) ) { T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($server_index) ) , T_STRING ) ; } T_IF ( T_VARIABLE($each_server) [ ] T_IS_EQUAL T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($each_server) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($each_server) [ ] ) ) { T_VARIABLE($each_server) [ ] = T_STRING ( ) . T_VARIABLE($server_index) ; } T_VARIABLE($new_servers) [ T_VARIABLE($server_index) ] = T_VARIABLE($each_server) ; } T_VARIABLE($cfg) [ ] = T_VARIABLE($new_servers) ; T_UNSET ( T_VARIABLE($new_servers) , T_VARIABLE($server_index) , T_VARIABLE($each_server) ) ; } T_UNSET ( T_VARIABLE($default_server) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = T_NEW T_STRING ; } T_ELSE { T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($tmp) = T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($tmp) ) ) { T_VARIABLE($tmp) = T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($tmp) ) ; T_UNSET ( T_VARIABLE($tmp) ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_VARIABLE($_SESSION) [ ] = T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( @ T_STRING ( T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_INCLUDE T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( ! T_STRING ( ) ) { T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_FOREACH ( T_VARIABLE($cfg) [ ] T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($server) ) { T_IF ( T_VARIABLE($server) [ ] T_IS_EQUAL T_VARIABLE($_REQUEST) [ ] ) { T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($i) ; T_BREAK ; } } T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_UNSET ( T_VARIABLE($i) ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ T_VARIABLE($_REQUEST) [ ] ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($cfg) [ ] = T_VARIABLE($cfg) [ ] [ T_VARIABLE($GLOBALS) [ ] ] ; } T_ELSE { T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ T_VARIABLE($cfg) [ ] ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($cfg) [ ] ; T_VARIABLE($cfg) [ ] = T_VARIABLE($cfg) [ ] [ T_VARIABLE($GLOBALS) [ ] ] ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_ARRAY ( ) ; } } T_VARIABLE($GLOBALS) [ ] [ ] = T_VARIABLE($GLOBALS) [ ] ; T_IF ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($lang) T_IS_EQUAL ) { T_INCLUDE_ONCE ; } T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($GLOBALS) [ ] ) ; } T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] ) ) { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_VARIABLE($cache_key) = . T_VARIABLE($GLOBALS) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] [ ] ) ) { T_VARIABLE($value) = T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] [ ] ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($value) ) ; T_VARIABLE($GLOBALS) [ ] [ ] = T_VARIABLE($value) ; T_UNSET ( T_VARIABLE($value) ) ; } T_UNSET ( T_VARIABLE($cache_key) ) ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ( T_VARIABLE($cfg) [ ] [ ] ) ; T_VARIABLE($auth_class) = . T_STRING ( T_VARIABLE($cfg) [ ] [ ] ) ; T_IF ( ! T_STRING ( . T_VARIABLE($auth_class) . ) ) { T_STRING ( T_STRING ( ) . . T_VARIABLE($cfg) [ ] [ ] ) ; } T_INCLUDE_ONCE . T_VARIABLE($auth_class) . ; T_VARIABLE($plugin_manager) = T_STRING ; T_VARIABLE($auth_plugin) = T_NEW T_VARIABLE($auth_class) ( T_VARIABLE($plugin_manager) ) ; T_IF ( ! T_VARIABLE($auth_plugin) T_OBJECT_OPERATOR T_STRING ( ) ) { T_STRING ( ) ; T_VARIABLE($auth_plugin) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_VARIABLE($auth_plugin) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($cfg) [ ] [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($cfg) [ ] [ ] [ ] ) ) { T_INCLUDE_ONCE ; T_VARIABLE($allowDeny_forbidden) = T_STRING ; T_IF ( T_VARIABLE($cfg) [ ] [ ] [ ] T_IS_EQUAL ) { T_VARIABLE($allowDeny_forbidden) = T_STRING ; T_IF ( T_STRING ( ) ) { T_VARIABLE($allowDeny_forbidden) = T_STRING ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($allowDeny_forbidden) = T_STRING ; } } T_ELSEIF ( T_VARIABLE($cfg) [ ] [ ] [ ] T_IS_EQUAL ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($allowDeny_forbidden) = T_STRING ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($allowDeny_forbidden) = T_STRING ; } } T_ELSEIF ( T_VARIABLE($cfg) [ ] [ ] [ ] T_IS_EQUAL ) { T_IF ( T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_VARIABLE($allowDeny_forbidden) = T_STRING ; } T_ELSE { T_VARIABLE($allowDeny_forbidden) = T_STRING ; } } T_IF ( T_VARIABLE($allowDeny_forbidden) ) { T_STRING ( T_VARIABLE($cfg) [ ] [ ] , ) ; T_VARIABLE($auth_plugin) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_IF ( ! T_VARIABLE($cfg) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($cfg) [ ] [ ] T_IS_EQUAL ) { T_VARIABLE($allowDeny_forbidden) = T_STRING ; T_STRING ( T_VARIABLE($cfg) [ ] [ ] , ) ; T_VARIABLE($auth_plugin) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( ! T_VARIABLE($cfg) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($cfg) [ ] [ ] T_IS_EQUAL ) { T_VARIABLE($login_without_password_is_forbidden) = T_STRING ; T_STRING ( T_VARIABLE($cfg) [ ] [ ] , ) ; T_VARIABLE($auth_plugin) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_STRING ( T_VARIABLE($cfg) [ ] [ ] ) T_IS_EQUAL ) { T_VARIABLE($cfg) [ ] [ ] = ; } T_VARIABLE($controllink) = T_STRING ; T_IF ( T_VARIABLE($cfg) [ ] [ ] T_IS_NOT_EQUAL ) { T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ) { T_VARIABLE($controllink) = T_STRING ( T_VARIABLE($cfg) [ ] [ ] , T_VARIABLE($cfg) [ ] [ ] , T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($cfg) [ ] [ ] ) ) ; } T_ELSE { T_VARIABLE($controllink) = T_STRING ( T_VARIABLE($cfg) [ ] [ ] , T_VARIABLE($cfg) [ ] [ ] , T_STRING ) ; } } T_VARIABLE($userlink) = T_STRING ( T_VARIABLE($cfg) [ ] [ ] , T_VARIABLE($cfg) [ ] [ ] , T_STRING ) ; T_IF ( ! T_VARIABLE($controllink) ) { T_VARIABLE($controllink) = T_VARIABLE($userlink) ; } T_STRING ( T_VARIABLE($cfg) [ ] [ ] ) ; T_IF ( T_STRING < T_LNUMBER ) { T_STRING ( T_STRING ( ) , T_ARRAY ( , ) ) ; } T_IF ( T_STRING ) { T_VARIABLE($GLOBALS) [ ] = T_NEW T_STRING ( ) ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] = T_NEW T_STRING ( ) ; } T_IF ( T_STRING ) { T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; } T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_VARIABLE($pma) = T_NEW T_STRING ; T_VARIABLE($pma) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($userlink) ; T_VARIABLE($pma) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($controllink) ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($_SESSION) [ ] [ ] T_IS_NOT_EQUAL T_VARIABLE($GLOBALS) [ ] ) { T_UNSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ; } T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( ) ) { T_VARIABLE($_SESSION) [ ] = T_STRING ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($token_mismatch) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ) ; T_EXIT ; } } T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_FILES) [ ] ) ) { T_STRING ( T_STRING ( ) ) ; } T_IF ( T_STRING ( T_VARIABLE($_REQUEST) ) > T_LNUMBER ) { T_STRING ( T_STRING ( ) ) ; } T_FOREACH ( T_VARIABLE($GLOBALS) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($dummy) ) { T_IF ( T_STRING ( T_VARIABLE($key) ) ) { T_STRING ( T_STRING ( ) ) ; } } T_UNSET ( T_VARIABLE($dummy) ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ( ) T_BOOLEAN_AND T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($__redirect) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($__redirect) , T_VARIABLE($goto_whitelist) ) ) { T_INCLUDE T_VARIABLE($__redirect) ; T_EXIT ( ) ; } T_CLOSE_TAG',yes
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING { T_VAR T_VARIABLE($default_source) = ; T_VAR T_VARIABLE($default) = T_ARRAY ( ) ; T_VAR T_VARIABLE($settings) = T_ARRAY ( ) ; T_VAR T_VARIABLE($source) = ; T_VAR T_VARIABLE($source_mtime) = T_LNUMBER ; T_VAR T_VARIABLE($default_source_mtime) = T_LNUMBER ; T_VAR T_VARIABLE($set_mtime) = T_LNUMBER ; T_VAR T_VARIABLE($error_config_file) = T_STRING ; T_VAR T_VARIABLE($error_config_default_file) = T_STRING ; T_VAR T_VARIABLE($error_pma_uri) = T_STRING ; T_VAR T_VARIABLE($default_server) = T_ARRAY ( ) ; T_VAR T_VARIABLE($done) = T_STRING ; T_STRING ( T_VARIABLE($source) = T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($source) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_STRING ( ) { T_IF ( @ T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) T_IS_EQUAL ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) < T_LNUMBER ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; } } } T_STRING ( ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($HTTP_USER_AGENT) = T_STRING ( ) ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($HTTP_USER_AGENT) ) ) { T_VARIABLE($HTTP_USER_AGENT) = ; } T_IF ( T_STRING ( T_VARIABLE($HTTP_USER_AGENT) , ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($HTTP_USER_AGENT) , ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($HTTP_USER_AGENT) , ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($HTTP_USER_AGENT) , ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($HTTP_USER_AGENT) , ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_IF ( T_STRING ( , T_VARIABLE($HTTP_USER_AGENT) , T_VARIABLE($log_version) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($log_version) [ T_LNUMBER ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($HTTP_USER_AGENT) , T_VARIABLE($log_version) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($log_version) [ T_LNUMBER ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($HTTP_USER_AGENT) , T_VARIABLE($log_version) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($log_version) [ T_LNUMBER ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($HTTP_USER_AGENT) , T_VARIABLE($log_version) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($log_version) [ T_LNUMBER ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($HTTP_USER_AGENT) , T_VARIABLE($log_version) ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($HTTP_USER_AGENT) , T_VARIABLE($log_version2) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($log_version) [ T_LNUMBER ] . . T_VARIABLE($log_version2) [ T_LNUMBER ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($HTTP_USER_AGENT) , T_VARIABLE($log_version) ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($HTTP_USER_AGENT) , T_VARIABLE($log_version2) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($log_version2) [ T_LNUMBER ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($HTTP_USER_AGENT) , T_VARIABLE($log_version) ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($HTTP_USER_AGENT) , T_VARIABLE($log_version2) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($log_version) [ T_LNUMBER ] . . T_VARIABLE($log_version2) [ T_LNUMBER ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($HTTP_USER_AGENT) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($HTTP_USER_AGENT) , T_VARIABLE($log_version) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($log_version) [ T_LNUMBER ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } } T_STRING ( ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_EQUAL ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; } T_ELSEIF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_EQUAL ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; } T_ELSE { T_IF ( ! @ T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; } T_ELSE { T_IF ( @ T_STRING ( ) ) { T_VARIABLE($gd_nfo) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($gd_nfo) [ ] , ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; } } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; } } } } T_STRING ( ) { T_IF ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( T_STRING ( ) , ) T_BOOLEAN_AND T_STRING ( T_STRING ( ) , ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; } } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; T_IF ( T_STRING ( ) ) { T_IF ( T_STRING ( T_STRING , ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; } T_ELSEIF ( T_STRING ( T_STRING , ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; } } } T_STRING ( ) { T_VARIABLE($match) = T_ARRAY ( ) ; T_IF ( ! T_STRING ( , T_STRING ( ) , T_VARIABLE($match) ) ) { T_STRING ( , T_STRING ( ) , T_VARIABLE($match) ) ; } T_IF ( T_ISSET ( T_VARIABLE($match) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($match) [ T_LNUMBER ] ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($match) [ T_LNUMBER ] ) ) { T_VARIABLE($match) [ T_LNUMBER ] = T_LNUMBER ; } T_IF ( ! T_ISSET ( T_VARIABLE($match) [ T_LNUMBER ] ) ) { T_VARIABLE($match) [ T_LNUMBER ] = T_LNUMBER ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_INT_CAST T_STRING ( , T_VARIABLE($match) [ T_LNUMBER ] , T_VARIABLE($match) [ T_LNUMBER ] , T_VARIABLE($match) [ T_LNUMBER ] ) ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( ) ) ; } T_STRING ( ) { T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_IF ( T_VARIABLE($_SESSION) [ ] ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; } T_RETURN T_VARIABLE($_SESSION) [ ] ; } T_VARIABLE($git_folder) = ; T_IF ( ! @ T_STRING ( T_VARIABLE($git_folder) ) T_BOOLEAN_OR ! @ T_STRING ( T_VARIABLE($git_folder) . ) ) { T_VARIABLE($_SESSION) [ ] = T_STRING ; T_RETURN T_STRING ; } T_VARIABLE($_SESSION) [ ] = T_STRING ; T_RETURN T_STRING ; } T_STRING ( ) { T_VARIABLE($git_folder) = ; T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_RETURN ; } T_IF ( ! T_VARIABLE($ref_head) = @ T_STRING ( T_VARIABLE($git_folder) . ) ) { T_RETURN ; } T_VARIABLE($branch) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($ref_head) , ) ) { T_VARIABLE($ref_head) = T_STRING ( T_STRING ( T_VARIABLE($ref_head) ) , T_LNUMBER ) ; T_IF ( T_STRING ( T_VARIABLE($ref_head) , T_LNUMBER , T_LNUMBER ) T_IS_IDENTICAL ) { T_VARIABLE($branch) = T_STRING ( T_VARIABLE($ref_head) , T_LNUMBER ) ; } T_ELSE { T_VARIABLE($branch) = T_STRING ( T_VARIABLE($ref_head) ) ; } T_VARIABLE($ref_file) = T_VARIABLE($git_folder) . . T_VARIABLE($ref_head) ; T_IF ( @ T_STRING ( T_VARIABLE($ref_file) ) ) { T_IF ( ! T_VARIABLE($hash) = @ T_STRING ( T_VARIABLE($ref_file) ) ) { T_RETURN ; } T_VARIABLE($hash) = T_STRING ( T_VARIABLE($hash) ) ; } T_ELSE { T_IF ( ! T_VARIABLE($packed_refs) = @ T_STRING ( T_VARIABLE($git_folder) . ) ) { T_RETURN ; } T_VARIABLE($ref_lines) = T_STRING ( , T_VARIABLE($packed_refs) ) ; T_FOREACH ( T_VARIABLE($ref_lines) T_AS T_VARIABLE($line) ) { T_IF ( T_VARIABLE($line) [ T_LNUMBER ] T_IS_EQUAL ) { T_CONTINUE ; } T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($line) ) ; T_IF ( T_STRING ( T_VARIABLE($parts) ) T_IS_NOT_EQUAL T_LNUMBER ) { T_CONTINUE ; } T_IF ( T_VARIABLE($parts) [ T_LNUMBER ] T_IS_EQUAL T_VARIABLE($ref_head) ) { T_VARIABLE($hash) = T_VARIABLE($parts) [ T_LNUMBER ] ; T_BREAK ; } } T_IF ( ! T_ISSET ( T_VARIABLE($hash) ) ) { T_RETURN ; } } } T_ELSE { T_VARIABLE($hash) = T_STRING ( T_VARIABLE($ref_head) ) ; } T_VARIABLE($commit) = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ . T_VARIABLE($hash) ] ) ) { T_VARIABLE($git_file_name) = T_VARIABLE($git_folder) . . T_STRING ( T_VARIABLE($hash) , T_LNUMBER , T_LNUMBER ) . . T_STRING ( T_VARIABLE($hash) , T_LNUMBER ) ; T_IF ( T_STRING ( T_VARIABLE($git_file_name) ) ) { T_IF ( ! T_VARIABLE($commit) = @ T_STRING ( T_VARIABLE($git_file_name) ) ) { T_RETURN ; } T_VARIABLE($commit) = T_STRING ( , T_STRING ( T_VARIABLE($commit) ) , T_LNUMBER ) ; T_VARIABLE($commit) = T_STRING ( , T_VARIABLE($commit) [ T_LNUMBER ] ) ; T_VARIABLE($_SESSION) [ . T_VARIABLE($hash) ] = T_VARIABLE($commit) ; } T_ELSE { T_VARIABLE($pack_names) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($packs) = @ T_STRING ( T_VARIABLE($git_folder) . ) ) { T_FOREACH ( T_STRING ( , T_VARIABLE($packs) ) T_AS T_VARIABLE($line) ) { T_IF ( T_STRING ( T_STRING ( T_VARIABLE($line) ) ) T_IS_EQUAL T_LNUMBER ) { T_CONTINUE ; } T_IF ( T_VARIABLE($line) [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_CONTINUE ; } T_VARIABLE($pack_names) [ ] = T_STRING ( T_VARIABLE($line) , T_LNUMBER ) ; } } T_ELSE { T_VARIABLE($it) = T_NEW T_STRING ( T_VARIABLE($git_folder) . ) ; T_FOREACH ( T_VARIABLE($it) T_AS T_VARIABLE($file_info) ) { T_VARIABLE($file_name) = T_VARIABLE($file_info) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($file_info) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($file_name) , - T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($pack_names) [ ] = T_VARIABLE($file_name) ; } } } T_VARIABLE($hash) = T_STRING ( T_VARIABLE($hash) ) ; T_FOREACH ( T_VARIABLE($pack_names) T_AS T_VARIABLE($pack_name) ) { T_VARIABLE($index_name) = T_STRING ( , , T_VARIABLE($pack_name) ) ; T_IF ( ! T_VARIABLE($index_data) = @ T_STRING ( T_VARIABLE($git_folder) . . T_VARIABLE($index_name) ) ) { T_CONTINUE ; } T_IF ( T_STRING ( T_VARIABLE($index_data) , T_LNUMBER , T_LNUMBER ) T_IS_NOT_EQUAL ) { T_CONTINUE ; } T_VARIABLE($version) = T_STRING ( , T_STRING ( T_VARIABLE($index_data) , T_LNUMBER , T_LNUMBER ) ) ; T_IF ( T_VARIABLE($version) [ T_LNUMBER ] T_IS_NOT_EQUAL T_LNUMBER ) { T_CONTINUE ; } T_VARIABLE($fanout) = T_STRING ( , T_STRING ( T_VARIABLE($index_data) , T_LNUMBER , T_LNUMBER * T_LNUMBER ) ) ; T_VARIABLE($firstbyte) = T_STRING ( T_STRING ( T_VARIABLE($hash) , T_LNUMBER , T_LNUMBER ) , T_LNUMBER ) ; T_IF ( T_VARIABLE($firstbyte) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($start) = T_LNUMBER ; } T_ELSE { T_VARIABLE($start) = T_VARIABLE($fanout) [ T_VARIABLE($firstbyte) ] ; } T_VARIABLE($end) = T_VARIABLE($fanout) [ T_VARIABLE($firstbyte) + T_LNUMBER ] ; T_VARIABLE($position) = T_VARIABLE($start) ; T_VARIABLE($found) = T_STRING ; T_VARIABLE($offset) = T_LNUMBER + ( T_LNUMBER * T_LNUMBER ) ; T_FOR ( T_VARIABLE($position) = T_VARIABLE($start) ; T_VARIABLE($position) < T_VARIABLE($end) ; T_VARIABLE($position) T_INC ) { T_VARIABLE($sha) = T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($index_data) , T_VARIABLE($offset) + ( T_VARIABLE($position) * T_LNUMBER ) , T_LNUMBER ) ) ) ; T_IF ( T_VARIABLE($sha) T_IS_EQUAL T_VARIABLE($hash) ) { T_VARIABLE($found) = T_STRING ; T_BREAK ; } } T_IF ( ! T_VARIABLE($found) ) { T_CONTINUE ; } T_VARIABLE($offset) = T_LNUMBER + ( T_LNUMBER * T_LNUMBER ) + ( T_LNUMBER * T_VARIABLE($fanout) [ T_LNUMBER ] ) ; T_VARIABLE($pack_offset) = T_STRING ( , T_STRING ( T_VARIABLE($index_data) , T_VARIABLE($offset) + ( T_VARIABLE($position) * T_LNUMBER ) , T_LNUMBER ) ) ; T_VARIABLE($pack_offset) = T_VARIABLE($pack_offset) [ T_LNUMBER ] ; T_VARIABLE($pack_file) = T_STRING ( T_VARIABLE($git_folder) . . T_VARIABLE($pack_name) , ) ; T_IF ( T_VARIABLE($pack_file) T_IS_IDENTICAL T_STRING ) { T_CONTINUE ; } T_STRING ( T_VARIABLE($pack_file) , T_VARIABLE($pack_offset) ) ; T_VARIABLE($header) = T_STRING ( T_STRING ( T_VARIABLE($pack_file) , T_LNUMBER ) ) ; T_VARIABLE($type) = ( T_VARIABLE($header) T_SR T_LNUMBER ) & T_LNUMBER ; T_VARIABLE($hasnext) = ( T_VARIABLE($header) & T_LNUMBER ) T_SR T_LNUMBER ; T_VARIABLE($size) = T_VARIABLE($header) & T_LNUMBER ; T_VARIABLE($offset) = T_LNUMBER ; T_WHILE ( T_VARIABLE($hasnext) ) { T_VARIABLE($byte) = T_STRING ( T_STRING ( T_VARIABLE($pack_file) , T_LNUMBER ) ) ; T_VARIABLE($size) T_OR_EQUAL ( T_VARIABLE($byte) & T_LNUMBER ) T_SL T_VARIABLE($offset) ; T_VARIABLE($hasnext) = ( T_VARIABLE($byte) & T_LNUMBER ) T_SR T_LNUMBER ; T_VARIABLE($offset) T_PLUS_EQUAL T_LNUMBER ; } T_IF ( T_VARIABLE($type) T_IS_NOT_EQUAL T_LNUMBER ) { T_CONTINUE ; } T_VARIABLE($commit) = T_STRING ( T_VARIABLE($pack_file) , T_VARIABLE($size) ) ; T_VARIABLE($commit) = T_STRING ( T_VARIABLE($commit) ) ; T_VARIABLE($commit) = T_STRING ( , T_VARIABLE($commit) ) ; T_VARIABLE($_SESSION) [ . T_VARIABLE($hash) ] = T_VARIABLE($commit) ; T_STRING ( T_VARIABLE($pack_file) ) ; } } } T_ELSE { T_VARIABLE($commit) = T_VARIABLE($_SESSION) [ . T_VARIABLE($hash) ] ; } T_VARIABLE($is_remote_commit) = T_STRING ; T_IF ( T_VARIABLE($commit) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_SESSION) [ . T_VARIABLE($hash) ] ) ) { T_VARIABLE($is_remote_commit) = T_VARIABLE($_SESSION) [ . T_VARIABLE($hash) ] ; } T_ELSE { T_VARIABLE($link) = . T_VARIABLE($hash) ; T_VARIABLE($is_found) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($link) , ! T_VARIABLE($commit) ) ; T_SWITCH ( T_VARIABLE($is_found) ) { T_CASE T_STRING : T_VARIABLE($is_remote_commit) = T_STRING ; T_VARIABLE($_SESSION) [ . T_VARIABLE($hash) ] = T_STRING ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($is_remote_commit) = T_STRING ; T_BREAK ; T_DEFAULT : T_VARIABLE($is_remote_commit) = T_STRING ; T_VARIABLE($_SESSION) [ . T_VARIABLE($hash) ] = T_STRING ; T_IF ( T_VARIABLE($commit) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($commit_json) = T_STRING ( T_VARIABLE($is_found) ) ; } T_BREAK ; } } T_VARIABLE($is_remote_branch) = T_STRING ; T_IF ( T_VARIABLE($is_remote_commit) T_BOOLEAN_AND T_VARIABLE($branch) T_IS_NOT_IDENTICAL T_STRING ) { T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ . T_VARIABLE($hash) ] ) ) { T_VARIABLE($is_remote_branch) = T_VARIABLE($_SESSION) [ . T_VARIABLE($hash) ] ; } T_ELSE { T_VARIABLE($link) = . . T_VARIABLE($branch) ; T_VARIABLE($is_found) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($link) ) ; T_SWITCH ( T_VARIABLE($is_found) ) { T_CASE T_STRING : T_VARIABLE($is_remote_branch) = T_STRING ; T_VARIABLE($_SESSION) [ . T_VARIABLE($hash) ] = T_STRING ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($is_remote_branch) = T_STRING ; T_VARIABLE($_SESSION) [ . T_VARIABLE($hash) ] = T_STRING ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($is_remote_branch) = T_STRING ; T_BREAK ; } } } T_IF ( T_VARIABLE($commit) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($author) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($committer) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_DO { T_VARIABLE($dataline) = T_STRING ( T_VARIABLE($commit) ) ; T_VARIABLE($datalinearr) = T_STRING ( , T_VARIABLE($dataline) , T_LNUMBER ) ; T_VARIABLE($linetype) = T_VARIABLE($datalinearr) [ T_LNUMBER ] ; T_IF ( T_STRING ( T_VARIABLE($linetype) , T_ARRAY ( , ) ) ) { T_VARIABLE($user) = T_VARIABLE($datalinearr) [ T_LNUMBER ] ; T_STRING ( , T_VARIABLE($user) , T_VARIABLE($user) ) ; T_VARIABLE($user2) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($user) [ T_LNUMBER ] ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($user) [ T_LNUMBER ] ) , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($user) [ T_LNUMBER ] ) ) ; T_IF ( T_ISSET ( T_VARIABLE($user) [ T_LNUMBER ] ) ) { T_VARIABLE($user2) [ ] T_CONCAT_EQUAL T_VARIABLE($user) [ T_LNUMBER ] ; } $ T_VARIABLE($linetype) = T_VARIABLE($user2) ; } } T_WHILE ( T_VARIABLE($dataline) T_IS_NOT_EQUAL ) ; T_VARIABLE($message) = T_STRING ( T_STRING ( , T_VARIABLE($commit) ) ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($commit_json) ) ) { T_VARIABLE($author) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($commit_json) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($commit_json) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($commit_json) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($committer) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($commit_json) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($commit_json) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($commit_json) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($message) = T_STRING ( T_VARIABLE($commit_json) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_RETURN ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($hash) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($branch) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($author) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($committer) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($is_remote_commit) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($is_remote_branch) ) ; } T_STRING ( T_VARIABLE($link) , T_VARIABLE($get_body) = T_STRING ) { T_IF ( ! T_STRING ( ) ) { T_RETURN T_STRING ; } T_VARIABLE($ch) = T_STRING ( T_VARIABLE($link) ) ; T_STRING ( T_VARIABLE($ch) , T_STRING , T_LNUMBER ) ; T_STRING ( T_VARIABLE($ch) , T_STRING , T_LNUMBER ) ; T_STRING ( T_VARIABLE($ch) , T_STRING , T_LNUMBER ) ; T_STRING ( T_VARIABLE($ch) , T_STRING , T_LNUMBER ) ; T_STRING ( T_VARIABLE($ch) , T_STRING , T_LNUMBER ) ; T_STRING ( T_VARIABLE($ch) , T_STRING , T_LNUMBER ) ; T_STRING ( T_VARIABLE($ch) , T_STRING , . T_STRING ) ; T_STRING ( T_VARIABLE($ch) , T_STRING , T_LNUMBER ) ; T_VARIABLE($data) = @ T_STRING ( T_VARIABLE($ch) ) ; T_IF ( T_VARIABLE($data) T_IS_IDENTICAL T_STRING ) { T_RETURN T_STRING ; } T_VARIABLE($ok) = ; T_VARIABLE($notfound) = ; T_IF ( T_STRING ( T_VARIABLE($data) , T_LNUMBER , T_STRING ( T_VARIABLE($ok) ) ) T_IS_IDENTICAL T_VARIABLE($ok) ) { T_RETURN T_VARIABLE($get_body) ? T_STRING ( T_VARIABLE($data) , T_STRING ( T_VARIABLE($data) , ) + T_LNUMBER ) : T_STRING ; } T_ELSEIF ( T_STRING ( T_VARIABLE($data) , T_LNUMBER , T_STRING ( T_VARIABLE($notfound) ) ) T_IS_IDENTICAL T_VARIABLE($notfound) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_STRING ( ) { T_VARIABLE($cfg) = T_ARRAY ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_RETURN T_STRING ; } T_INCLUDE T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($cfg) [ ] [ T_LNUMBER ] ; T_UNSET ( T_VARIABLE($cfg) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($cfg) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($cfg) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_RETURN T_STRING ; } T_STRING ( T_VARIABLE($source) = T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($source) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($source) ) ; } T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_RETURN T_STRING ; } T_VARIABLE($cfg) = T_ARRAY ( ) ; T_VARIABLE($old_error_reporting) = T_STRING ( T_LNUMBER ) ; T_VARIABLE($eval_result) = T_EVAL ( . . T_STRING ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) ) ; T_STRING ( T_VARIABLE($old_error_reporting) ) ; T_IF ( T_VARIABLE($eval_result) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] ) ) { T_VARIABLE($cfg) [ ] = T_STRING ( , , T_STRING ( , , T_VARIABLE($cfg) [ ] ) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] ) ) { T_VARIABLE($cfg) [ ] = T_STRING ( , , T_STRING ( , , T_VARIABLE($cfg) [ ] ) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($cfg) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_COOKIE) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_VARIABLE($_COOKIE) [ ] ) ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_STRING ; } T_STRING ( ) { T_VARIABLE($server) = T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ? T_VARIABLE($GLOBALS) [ ] [ ] : T_LNUMBER ) ; T_VARIABLE($cache_key) = . T_VARIABLE($server) ; T_IF ( T_VARIABLE($server) > T_LNUMBER T_BOOLEAN_AND ! T_STRING ( ) ) { T_VARIABLE($config_mtime) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] ) T_BOOLEAN_OR T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] < T_VARIABLE($config_mtime) ) { T_INCLUDE_ONCE ; T_VARIABLE($prefs) = T_STRING ( ) ; T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] = T_STRING ( T_VARIABLE($prefs) [ ] ) ; T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] = T_VARIABLE($prefs) [ ] ; T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] = T_VARIABLE($prefs) [ ] ; T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] = T_VARIABLE($config_mtime) ; } } T_ELSEIF ( T_VARIABLE($server) T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_RETURN ; } T_VARIABLE($config_data) = T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] ) ; T_VARIABLE($org_fontsize) = ; T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($org_fontsize) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($config_data) ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($config_data) ) ; T_IF ( T_STRING ( ) ) { T_RETURN ; } T_VARIABLE($tmanager) = T_VARIABLE($_SESSION) [ ] ; T_IF ( T_VARIABLE($tmanager) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( ( ! T_ISSET ( T_VARIABLE($config_data) [ ] ) T_BOOLEAN_AND T_VARIABLE($tmanager) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($config_data) [ ] ) T_BOOLEAN_AND T_VARIABLE($config_data) [ ] T_IS_NOT_EQUAL T_VARIABLE($tmanager) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING , , T_VARIABLE($tmanager) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) , ) ; } } T_ELSE { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] T_IS_NOT_EQUAL T_VARIABLE($tmanager) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($tmanager) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($tmanager) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) ; T_VARIABLE($tmanager) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_IF ( ( ! T_ISSET ( T_VARIABLE($config_data) [ ] ) T_BOOLEAN_AND T_VARIABLE($org_fontsize) T_IS_NOT_EQUAL ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($config_data) [ ] ) T_BOOLEAN_AND T_VARIABLE($org_fontsize) T_IS_NOT_EQUAL T_VARIABLE($config_data) [ ] ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING , , T_VARIABLE($org_fontsize) , ) ; } T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_IF ( ( ! T_ISSET ( T_VARIABLE($config_data) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($config_data) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_VARIABLE($config_data) [ ] ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING , , T_VARIABLE($GLOBALS) [ ] , ) ; } } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($config_data) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($config_data) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($GLOBALS) [ ] ) ; } } T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_IF ( ( ! T_ISSET ( T_VARIABLE($config_data) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($config_data) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_VARIABLE($config_data) [ ] ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING , , T_VARIABLE($GLOBALS) [ ] , ) ; } } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($config_data) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($config_data) [ ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($GLOBALS) [ ] ) ; } } } T_STRING ( T_VARIABLE($cookie_name) , T_VARIABLE($cfg_path) , T_VARIABLE($new_cfg_value) , T_VARIABLE($default_value) = T_STRING ) { T_VARIABLE($prefs_type) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($prefs_type) ) { T_INCLUDE_ONCE ; T_IF ( T_VARIABLE($default_value) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($default_value) = T_STRING ( T_VARIABLE($cfg_path) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( T_VARIABLE($cfg_path) , T_VARIABLE($new_cfg_value) , T_VARIABLE($default_value) ) ; } T_IF ( T_VARIABLE($prefs_type) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($cookie_name) ) { T_IF ( T_VARIABLE($default_value) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($default_value) = T_STRING ( T_VARIABLE($cfg_path) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($cookie_name) , T_VARIABLE($new_cfg_value) , T_VARIABLE($default_value) ) ; } T_STRING ( T_VARIABLE($cfg_path) , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($new_cfg_value) ) ; T_STRING ( T_VARIABLE($cfg_path) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($new_cfg_value) ) ; } T_STRING ( T_VARIABLE($cookie_name) , T_VARIABLE($cfg_value) ) { T_VARIABLE($cookie_exists) = T_ISSET ( T_VARIABLE($_COOKIE) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_COOKIE) [ T_VARIABLE($cookie_name) ] ) ; T_VARIABLE($prefs_type) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($prefs_type) T_IS_EQUAL ) { T_IF ( T_VARIABLE($cookie_exists) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($cookie_name) ) ; } } T_ELSE T_IF ( T_VARIABLE($cookie_exists) ) { T_RETURN T_VARIABLE($_COOKIE) [ T_VARIABLE($cookie_name) ] ; } T_RETURN T_VARIABLE($cfg_value) ; } T_STRING ( T_VARIABLE($source) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($source) ) ; } T_STRING ( ) { T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_RETURN T_STRING ; } T_IF ( ! T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_RETURN T_STRING ; } T_IF ( ! T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_VARIABLE($contents) = T_STRING ; T_VARIABLE($handle) = @ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; T_IF ( T_VARIABLE($handle) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($contents) = @ T_STRING ( T_VARIABLE($handle) , T_LNUMBER ) ; @ T_STRING ( T_VARIABLE($handle) ) ; } T_IF ( T_VARIABLE($contents) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_STRING ( T_STRING ( T_STRING ( ) ? T_STRING ( ) : , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) ; T_RETURN T_STRING ; } } T_RETURN T_STRING ; } T_STRING ( ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($perms) = @ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_IF ( ! ( T_VARIABLE($perms) T_IS_IDENTICAL T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($perms) & T_LNUMBER ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_IF ( T_STRING ( ) ) { T_VARIABLE($msg) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($msg) = ; } T_STRING ( T_VARIABLE($msg) ) ; } } } } T_STRING ( T_VARIABLE($setting) ) { T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($setting) ] ) ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($setting) ] ; } T_RETURN T_STRING ; } T_STRING ( T_VARIABLE($setting) , T_VARIABLE($value) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($setting) ] ) T_BOOLEAN_OR T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($setting) ] T_IS_NOT_EQUAL T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($setting) ] = T_VARIABLE($value) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; } } T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( ) { T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($fontsize) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_COOKIE) [ ] ) ) { T_VARIABLE($fontsize) = T_STRING ( T_VARIABLE($_COOKIE) [ ] ) ; } T_ELSE { T_VARIABLE($fontsize) = T_LNUMBER ; } T_RETURN ( T_VARIABLE($fontsize) + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) + T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING + T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( ) { T_VARIABLE($pma_absolute_uri) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($is_https) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($pma_absolute_uri) ) < T_LNUMBER ) { T_VARIABLE($url) = T_ARRAY ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($url) [ ] ) ) { T_IF ( T_VARIABLE($is_https) ) { T_VARIABLE($url) [ ] = ; } T_ELSE { T_VARIABLE($url) [ ] = ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($parsed_url) = T_STRING ( T_VARIABLE($url) [ ] . . T_STRING ( ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($parsed_url) [ ] ) ) { T_VARIABLE($url) = T_VARIABLE($parsed_url) ; } T_ELSE { T_VARIABLE($url) [ ] = T_STRING ( ) ; } } T_ELSEIF ( T_STRING ( ) ) { T_VARIABLE($url) [ ] = T_STRING ( ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_RETURN T_STRING ; } T_IF ( T_EMPTY ( T_VARIABLE($url) [ ] ) T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($url) [ ] = T_STRING ( ) ; } T_IF ( T_EMPTY ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($path) = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($url) [ ] = T_VARIABLE($path) [ ] ; } } T_VARIABLE($pma_absolute_uri) = T_VARIABLE($url) [ ] . ; T_IF ( ! T_EMPTY ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($pma_absolute_uri) T_CONCAT_EQUAL T_VARIABLE($url) [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($pma_absolute_uri) T_CONCAT_EQUAL . T_VARIABLE($url) [ ] ; } T_VARIABLE($pma_absolute_uri) T_CONCAT_EQUAL ; } T_VARIABLE($pma_absolute_uri) T_CONCAT_EQUAL T_VARIABLE($url) [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($url) [ ] ) T_BOOLEAN_AND ( ( T_VARIABLE($url) [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($url) [ ] T_IS_NOT_EQUAL T_LNUMBER ) T_BOOLEAN_OR ( T_VARIABLE($url) [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($url) [ ] T_IS_NOT_EQUAL T_LNUMBER ) ) ) { T_VARIABLE($pma_absolute_uri) T_CONCAT_EQUAL . T_VARIABLE($url) [ ] ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($path) = T_STRING ( , , T_STRING ( T_VARIABLE($url) [ ] . ) ) ; } T_ELSE { T_VARIABLE($path) = T_STRING ( T_VARIABLE($url) [ ] . ) ; } T_IF ( T_STRING ( ) T_BOOLEAN_AND T_STRING T_IS_EQUAL ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($path) = T_STRING ( , , T_STRING ( T_STRING ( T_VARIABLE($path) ) ) ) ; } T_ELSE { T_VARIABLE($path) = T_STRING ( T_STRING ( T_VARIABLE($path) ) ) ; } } T_IF ( T_VARIABLE($path) T_IS_EQUAL ) { T_VARIABLE($path) = ; } T_IF ( T_STRING ( T_VARIABLE($path) , - T_LNUMBER ) T_IS_NOT_EQUAL ) { T_VARIABLE($path) T_CONCAT_EQUAL ; } T_VARIABLE($pma_absolute_uri) T_CONCAT_EQUAL T_VARIABLE($path) ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($pma_absolute_uri) , - T_LNUMBER ) T_IS_NOT_EQUAL ) { T_VARIABLE($pma_absolute_uri) T_CONCAT_EQUAL ; } T_IF ( T_STRING ( T_VARIABLE($pma_absolute_uri) , T_LNUMBER , T_LNUMBER ) T_IS_NOT_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($pma_absolute_uri) , T_LNUMBER , T_LNUMBER ) T_IS_NOT_EQUAL ) { T_VARIABLE($pma_absolute_uri) = ( T_VARIABLE($is_https) ? : ) . . ( T_STRING ( T_VARIABLE($pma_absolute_uri) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ? : ) . T_VARIABLE($pma_absolute_uri) ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($pma_absolute_uri) ) ; } T_STRING ( ) { T_VARIABLE($url) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($parsed) = T_STRING ( T_VARIABLE($url) ) ; T_IF ( T_VARIABLE($parsed) T_IS_IDENTICAL T_STRING ) { T_RETURN T_STRING ( , , T_VARIABLE($url) ) ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($port_number) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_VARIABLE($port_number) = T_LNUMBER ; } T_RETURN . T_VARIABLE($parsed) [ ] . . T_VARIABLE($port_number) . T_VARIABLE($parsed) [ ] ; } T_STRING ( ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ; } } T_STRING ( ) { T_VARIABLE($new_fontsize) = ; T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($new_fontsize) = T_VARIABLE($_GET) [ ] ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($new_fontsize) = T_VARIABLE($_POST) [ ] ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_COOKIE) [ ] ) ) { T_VARIABLE($new_fontsize) = T_VARIABLE($_COOKIE) [ ] ; } T_IF ( T_STRING ( , T_VARIABLE($new_fontsize) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($new_fontsize) ) ; } T_ELSEIF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; } T_STRING ( ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_IF ( T_IS_EQUAL T_STRING ( T_STRING ( ) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; } } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; } } T_STRING ( ) { T_IF ( ! T_VARIABLE($filesize) = T_STRING ( ) ) { T_VARIABLE($filesize) = ; } T_IF ( T_VARIABLE($postsize) = T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_STRING ( T_VARIABLE($filesize) ) , T_STRING ( T_VARIABLE($postsize) ) ) ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_VARIABLE($filesize) ) ) ; } } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_PUBLIC T_STRING ( ) { T_STATIC T_VARIABLE($is_https) = T_STRING ; T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($is_https) ) { T_RETURN T_VARIABLE($is_https) ; } T_VARIABLE($url) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_IF ( T_ISSET ( T_VARIABLE($url) [ ] ) T_BOOLEAN_AND T_VARIABLE($url) [ ] T_IS_EQUAL ) { T_VARIABLE($is_https) = T_STRING ; } T_ELSE { T_VARIABLE($is_https) = T_STRING ; } T_RETURN T_VARIABLE($is_https) ; } T_STRING ( ) { T_VARIABLE($is_https) = T_STRING ; T_VARIABLE($url) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($url) = @ T_STRING ( T_STRING ( ) ) ; T_IF ( T_VARIABLE($url) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($url) = T_ARRAY ( ) ; } } T_IF ( T_EMPTY ( T_VARIABLE($url) [ ] ) ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($url) [ ] = T_STRING ( ) ; } T_ELSEIF ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( T_STRING ( ) ) T_IS_EQUAL ) { T_VARIABLE($url) [ ] = ; } T_ELSEIF ( T_STRING ( ) ) { T_VARIABLE($url) [ ] = T_STRING ( T_STRING ( ) ) ; } T_ELSEIF ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( T_STRING ( ) ) T_IS_EQUAL ) { T_VARIABLE($url) [ ] = ; } T_ELSE { T_VARIABLE($url) [ ] = ; } } T_IF ( T_ISSET ( T_VARIABLE($url) [ ] ) T_BOOLEAN_AND T_VARIABLE($url) [ ] T_IS_EQUAL ) { T_VARIABLE($is_https) = T_STRING ; } T_ELSE { T_VARIABLE($is_https) = T_STRING ; } T_RETURN T_VARIABLE($is_https) ; } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_PUBLIC T_STRING ( ) { T_STATIC T_VARIABLE($cookie_path) = T_STRING ; T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($cookie_path) T_BOOLEAN_AND ! T_STRING ( ) ) { T_RETURN T_VARIABLE($cookie_path) ; } T_VARIABLE($parsed_url) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($cookie_path) = T_VARIABLE($parsed_url) [ ] ; T_RETURN T_VARIABLE($cookie_path) ; } T_STRING ( ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($defines) = T_ARRAY ( , , , , , , , , , , ) ; T_FOREACH ( T_VARIABLE($defines) T_AS T_VARIABLE($define) ) { T_IF ( ! T_STRING ( T_VARIABLE($define) ) ) { T_STRING ( T_VARIABLE($define) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($define) ) ) ; } } } T_STATIC T_PROTECTED T_STRING ( T_VARIABLE($current_size) = ) { T_VARIABLE($unit) = T_STRING ( , , T_VARIABLE($current_size) ) ; T_VARIABLE($value) = T_STRING ( , , T_VARIABLE($current_size) ) ; T_VARIABLE($factors) = T_ARRAY ( ) ; T_VARIABLE($options) = T_ARRAY ( ) ; T_VARIABLE($options) [ T_VARIABLE($value) ] = T_VARIABLE($value) . T_VARIABLE($unit) ; T_IF ( T_VARIABLE($unit) T_IS_IDENTICAL ) { T_VARIABLE($factors) [ ] = T_LNUMBER ; T_VARIABLE($factors) [ ] = T_LNUMBER ; T_VARIABLE($factors) [ ] = T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($unit) T_IS_IDENTICAL ) { T_VARIABLE($factors) [ ] = T_DNUMBER ; T_VARIABLE($factors) [ ] = T_DNUMBER ; T_VARIABLE($factors) [ ] = T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($unit) T_IS_IDENTICAL ) { T_VARIABLE($factors) [ ] = T_DNUMBER ; T_VARIABLE($factors) [ ] = T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($unit) T_IS_IDENTICAL ) { T_VARIABLE($factors) [ ] = T_LNUMBER ; T_VARIABLE($factors) [ ] = T_LNUMBER ; T_VARIABLE($factors) [ ] = T_LNUMBER ; } T_ELSE { T_VARIABLE($factors) [ ] = T_DNUMBER ; T_VARIABLE($factors) [ ] = T_DNUMBER ; T_VARIABLE($factors) [ ] = T_LNUMBER ; T_VARIABLE($factors) [ ] = T_LNUMBER ; T_VARIABLE($factors) [ ] = T_LNUMBER ; } T_FOREACH ( T_VARIABLE($factors) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($factor) ) { T_VARIABLE($option_inc) = T_VARIABLE($value) + T_VARIABLE($factor) ; T_VARIABLE($option_dec) = T_VARIABLE($value) - T_VARIABLE($factor) ; T_WHILE ( T_STRING ( T_VARIABLE($options) ) < T_LNUMBER ) { T_VARIABLE($options) [ T_VARIABLE($option_inc) ] = T_VARIABLE($option_inc) . T_VARIABLE($unit) ; T_IF ( T_VARIABLE($option_dec) > T_VARIABLE($factors) [ T_LNUMBER ] ) { T_VARIABLE($options) [ T_VARIABLE($option_dec) ] = T_VARIABLE($option_dec) . T_VARIABLE($unit) ; } T_VARIABLE($option_inc) T_PLUS_EQUAL T_VARIABLE($factor) ; T_VARIABLE($option_dec) T_MINUS_EQUAL T_VARIABLE($factor) ; T_IF ( T_ISSET ( T_VARIABLE($factors) [ T_VARIABLE($key) + T_LNUMBER ] ) T_BOOLEAN_AND T_VARIABLE($option_inc) T_IS_GREATER_OR_EQUAL T_VARIABLE($value) + T_VARIABLE($factors) [ T_VARIABLE($key) + T_LNUMBER ] ) { T_BREAK ; } } } T_STRING ( T_VARIABLE($options) ) ; T_RETURN T_VARIABLE($options) ; } T_STATIC T_PROTECTED T_STRING ( ) { T_VARIABLE($current_size) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($current_size) ) ) { T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) [ ] ) ) { T_VARIABLE($current_size) = T_VARIABLE($_COOKIE) [ ] ; } T_ELSE { T_VARIABLE($current_size) = ; } } T_VARIABLE($options) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_size) ) ; T_VARIABLE($return) = . T_STRING ( ) . . . . . ; T_FOREACH ( T_VARIABLE($options) T_AS T_VARIABLE($option) ) { T_VARIABLE($return) T_CONCAT_EQUAL . T_VARIABLE($option) . ; T_IF ( T_VARIABLE($option) T_IS_EQUAL T_VARIABLE($current_size) ) { T_VARIABLE($return) T_CONCAT_EQUAL ; } T_VARIABLE($return) T_CONCAT_EQUAL . T_VARIABLE($option) . . ; } T_VARIABLE($return) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($return) ; } T_STATIC T_PUBLIC T_STRING ( ) { T_RETURN . . . T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . ; } T_STRING ( T_VARIABLE($cookie) ) { T_IF ( T_STRING ( ) ) { T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) [ T_VARIABLE($cookie) ] ) ) { T_UNSET ( T_VARIABLE($_COOKIE) [ T_VARIABLE($cookie) ] ) ; } T_RETURN T_STRING ; } T_RETURN T_STRING ( T_VARIABLE($cookie) , , T_STRING ( ) - T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_STRING ( T_VARIABLE($cookie) , T_VARIABLE($value) , T_VARIABLE($default) = T_STRING , T_VARIABLE($validity) = T_STRING , T_VARIABLE($httponly) = T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($value) ) T_BOOLEAN_AND T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($default) T_BOOLEAN_AND T_VARIABLE($value) T_IS_IDENTICAL T_VARIABLE($default) ) { T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) [ T_VARIABLE($cookie) ] ) ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($cookie) ) ; } T_RETURN T_STRING ; } T_IF ( ! T_STRING ( T_VARIABLE($value) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_COOKIE) [ T_VARIABLE($cookie) ] ) ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($cookie) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($_COOKIE) [ T_VARIABLE($cookie) ] ) T_BOOLEAN_OR T_VARIABLE($_COOKIE) [ T_VARIABLE($cookie) ] T_IS_NOT_IDENTICAL T_VARIABLE($value) ) { T_IF ( T_VARIABLE($validity) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($validity) = T_STRING ( ) + T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($validity) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($validity) = T_LNUMBER ; } T_ELSE { T_VARIABLE($validity) = T_STRING ( ) + T_VARIABLE($validity) ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($_COOKIE) [ T_VARIABLE($cookie) ] = T_VARIABLE($value) ; T_RETURN T_STRING ; } T_RETURN T_STRING ( T_VARIABLE($cookie) , T_VARIABLE($value) , T_VARIABLE($validity) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($httponly) ) ; } T_RETURN T_STRING ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_STRING { T_PRIVATE T_VARIABLE($_cfg) ; T_PRIVATE T_VARIABLE($_orgCfgObject) ; T_PRIVATE T_VARIABLE($_cfgDb) ; T_PRIVATE T_VARIABLE($_persistKeys) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_cfgUpdateReadMapping) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_setFilter) ; T_PRIVATE T_VARIABLE($_id) ; T_PRIVATE T_VARIABLE($_flattenArrayResult) ; T_PRIVATE T_STATIC T_VARIABLE($_instance) ; T_PRIVATE T_STRING ( ) { T_VARIABLE($cfg) = & T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_INCLUDE ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_NEW T_STRING ( T_STRING ) ; T_VARIABLE($cfg_db) = & T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_INCLUDE ; T_IF ( T_STRING ( T_VARIABLE($cfg_db) [ ] ) ) { T_FOREACH ( T_VARIABLE($cfg_db) [ ] T_AS T_VARIABLE($path) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_STRING ( T_VARIABLE($path) , T_VARIABLE($cfg) , T_VARIABLE($value) ) ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = . T_VARIABLE($GLOBALS) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( ) ; } } T_PUBLIC T_STATIC T_STRING ( ) { T_IF ( T_STRING ( T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ) ) { T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) = T_NEW T_STRING ( ) ; } T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($keys) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($keys) ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($keys) ) { T_IF ( T_VARIABLE($keys) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_RETURN ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($keys) ) ; } T_PUBLIC T_STRING ( T_ARRAY T_VARIABLE($mapping) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($mapping) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( ) ; } T_PUBLIC T_STRING ( T_ARRAY T_VARIABLE($cfg) ) { T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($cfg) ; } T_PUBLIC T_STRING ( T_VARIABLE($path) , T_VARIABLE($value) , T_VARIABLE($canonical_path) = T_STRING ) { T_IF ( T_VARIABLE($canonical_path) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($canonical_path) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) ) ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($canonical_path) ] ) ) { T_RETURN ; } T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($canonical_path) ] ) ) { T_VARIABLE($default_value) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($canonical_path) ) ; T_VARIABLE($instance_default_value) = T_STRING ( T_VARIABLE($canonical_path) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ) ; T_IF ( ( T_VARIABLE($value) T_IS_IDENTICAL T_VARIABLE($default_value) T_BOOLEAN_AND ( T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($instance_default_value) T_IS_IDENTICAL T_VARIABLE($default_value) ) ) T_BOOLEAN_OR ( T_EMPTY ( T_VARIABLE($value) ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($default_value) ) T_BOOLEAN_AND ( T_STRING ( ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($current_global) ) ) ) ) { T_STRING ( T_VARIABLE($path) , T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] ) ; T_RETURN ; } } T_STRING ( T_VARIABLE($path) , T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] , T_VARIABLE($value) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($value) , T_VARIABLE($key) , T_VARIABLE($prefix) ) { T_IF ( T_STRING ( T_VARIABLE($value) ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($value) [ T_LNUMBER ] ) ) { T_VARIABLE($prefix) T_CONCAT_EQUAL T_VARIABLE($key) . ; T_STRING ( T_VARIABLE($value) , T_ARRAY ( T_VARIABLE($this) , ) , T_VARIABLE($prefix) ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($prefix) . T_VARIABLE($key) ] = T_VARIABLE($value) ; } } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_VARIABLE($this) , ) , ) ; T_VARIABLE($flat_cfg) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_RETURN T_VARIABLE($flat_cfg) ; } T_PUBLIC T_STRING ( T_ARRAY T_VARIABLE($cfg) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($cfg) , T_ARRAY ( T_VARIABLE($this) , ) , ) ; T_VARIABLE($flat_cfg) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_FOREACH ( T_VARIABLE($flat_cfg) T_AS T_VARIABLE($path) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($path) ] ) ) { T_VARIABLE($path) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($path) ] ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) , T_VARIABLE($value) , T_VARIABLE($path) ) ; } } T_PUBLIC T_STRING ( T_VARIABLE($path) , T_VARIABLE($default) = T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($path) , T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] , T_VARIABLE($default) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($canonical_path) , T_VARIABLE($default) = T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($canonical_path) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($default) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($path) , T_VARIABLE($default) = T_STRING ) { T_VARIABLE($v) = T_STRING ( T_VARIABLE($path) , T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] , T_STRING ) ; T_IF ( T_VARIABLE($v) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN T_VARIABLE($v) ; } T_VARIABLE($path) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) ) ; T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) , T_VARIABLE($default) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($path) ) { T_RETURN T_STRING ( , , T_VARIABLE($path) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($path) , T_VARIABLE($default) = T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($path) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($default) ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_ISSET ( T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] ) ? T_STRING ( T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] ) : T_LNUMBER ; } T_PUBLIC T_STRING ( ) { T_RETURN T_ISSET ( T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] ) ? T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] : T_STRING ; } T_STRING ( T_VARIABLE($server) ) { T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] [ T_VARIABLE($server) ] ) ) { T_RETURN ; } T_VARIABLE($path) = . T_VARIABLE($server) ; T_VARIABLE($dsn) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) T_ENCAPSED_AND_WHITESPACE ) . ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) T_ENCAPSED_AND_WHITESPACE ) T_IS_EQUAL ) { T_VARIABLE($dsn) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) T_ENCAPSED_AND_WHITESPACE ) ; T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) T_ENCAPSED_AND_WHITESPACE ) ) { T_VARIABLE($dsn) T_CONCAT_EQUAL ; } T_VARIABLE($dsn) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) T_ENCAPSED_AND_WHITESPACE ) T_IS_EQUAL ) { T_VARIABLE($dsn) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) T_ENCAPSED_AND_WHITESPACE ) ; T_VARIABLE($port) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) T_ENCAPSED_AND_WHITESPACE ) ; T_IF ( T_VARIABLE($port) ) { T_VARIABLE($dsn) T_CONCAT_EQUAL . T_VARIABLE($port) ; } } T_ELSE { T_VARIABLE($dsn) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) T_ENCAPSED_AND_WHITESPACE ) ; } T_RETURN T_VARIABLE($dsn) ; } T_PUBLIC T_STRING ( T_VARIABLE($id) ) { T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] [ T_VARIABLE($id) ] ) ) { T_RETURN ; } T_VARIABLE($verbose) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($id) T_ENCAPSED_AND_WHITESPACE ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($verbose) ) ) { T_RETURN T_VARIABLE($verbose) ; } T_VARIABLE($host) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($id) T_ENCAPSED_AND_WHITESPACE ) ; T_RETURN T_EMPTY ( T_VARIABLE($host) ) ? : T_VARIABLE($host) ; } T_PUBLIC T_STRING ( T_VARIABLE($server) ) { T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] [ T_VARIABLE($server) ] ) ) { T_RETURN ; } T_VARIABLE($last_server) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOR ( T_VARIABLE($i) = T_VARIABLE($server) ; T_VARIABLE($i) < T_VARIABLE($last_server) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] [ T_VARIABLE($i) ] = T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] [ T_VARIABLE($i) + T_LNUMBER ] ; } T_UNSET ( T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] [ T_VARIABLE($last_server) ] ) ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] ) T_BOOLEAN_AND T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_UNSET ( T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] ) ; } } T_PUBLIC T_STRING ( ) { T_IF ( ! T_STRING ( ) ) { T_INCLUDE_ONCE ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($c) = T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($map_to) T_DOUBLE_ARROW T_VARIABLE($map_from) ) { T_STRING ( T_VARIABLE($map_to) , T_VARIABLE($c) , T_STRING ( T_VARIABLE($map_from) , T_VARIABLE($c) ) ) ; T_STRING ( T_VARIABLE($map_from) , T_VARIABLE($c) ) ; } T_RETURN T_VARIABLE($c) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($_SESSION) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] , T_ARRAY ( T_VARIABLE($this) , ) , ) ; T_VARIABLE($c) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($persistKeys) = T_STRING ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( T_VARIABLE($c) ) ) ; T_FOREACH ( T_VARIABLE($persistKeys) T_AS T_VARIABLE($k) ) { T_VARIABLE($c) [ T_VARIABLE($k) ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($k) ) ; } T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($map_to) T_DOUBLE_ARROW T_VARIABLE($map_from) ) { T_IF ( ! T_ISSET ( T_VARIABLE($c) [ T_VARIABLE($map_from) ] ) ) { T_CONTINUE ; } T_VARIABLE($c) [ T_VARIABLE($map_to) ] = T_VARIABLE($c) [ T_VARIABLE($map_from) ] ; T_UNSET ( T_VARIABLE($c) [ T_VARIABLE($map_from) ] ) ; } T_RETURN T_VARIABLE($c) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_FUNCTION(PMA_lang) ( T_VARIABLE($lang_key) , T_VARIABLE($args) = T_STRING ) { T_VARIABLE($message) = T_ISSET ( T_VARIABLE($GLOBALS) [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($lang_key) ] ) ? T_VARIABLE($GLOBALS) [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($lang_key) ] : T_VARIABLE($lang_key) ; T_VARIABLE($message) = T_STRING ( T_VARIABLE($message) ) ; T_IF ( T_STRING ( ) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_VARIABLE($message) ; } T_ELSE { T_VARIABLE($args) = T_STRING ( ) ; T_STRING ( T_VARIABLE($args) ) ; T_RETURN T_STRING ( T_VARIABLE($message) , T_VARIABLE($args) ) ; } } T_FUNCTION(PMA_lang_name) ( T_VARIABLE($canonical_path) , T_VARIABLE($type) = , T_VARIABLE($default) = ) { T_VARIABLE($lang_key) = T_STRING ( T_ARRAY ( , ) , T_ARRAY ( , ) , T_VARIABLE($canonical_path) ) . . T_VARIABLE($type) ; T_RETURN T_ISSET ( T_VARIABLE($GLOBALS) [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($lang_key) ] ) ? ( T_VARIABLE($type) T_IS_EQUAL ? T_STRING ( T_VARIABLE($lang_key) ) : T_VARIABLE($GLOBALS) [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($lang_key) ] ) : ( T_VARIABLE($default) T_IS_EQUAL ? T_VARIABLE($lang_key) : T_VARIABLE($default) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_ARRAY ( ) ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] [ ] = T_ARRAY ( ) ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = . . ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_ARRAY ( ) ; T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_ARRAY ( ) ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_ARRAY ( , ) ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_ARRAY ( ) ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] = T_ARRAY ( ) ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_ARRAY ( , , , , ) ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_ARRAY ( , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ) ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_ARRAY ( ) ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_ARRAY ( ) ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = ; T_VARIABLE($cfg) [ ] = T_ARRAY ( ) ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_VARIABLE($cfg) [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_ARRAY ( ) ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] = T_ARRAY ( ) ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] [ ] = ; T_VARIABLE($cfg) [ ] = T_ARRAY ( ) ; T_VARIABLE($cfg) [ ] [ ] = T_STRING ; T_VARIABLE($cfg) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($cfg) [ ] = T_LNUMBER ; T_CLOSE_TAG',no
'T_OPEN_TAG T_STRING { T_PUBLIC T_VARIABLE($name) ; T_PUBLIC T_VARIABLE($index) ; T_PUBLIC T_VARIABLE($fields) ; T_PUBLIC T_VARIABLE($default) ; T_PRIVATE T_VARIABLE($_fieldsTypes) ; T_PUBLIC T_STRING ( T_VARIABLE($form_name) , T_ARRAY T_VARIABLE($form) , T_VARIABLE($index) = T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($index) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($form_name) , T_VARIABLE($form) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($option_name) ) { T_VARIABLE($key) = T_STRING ( T_STRING ( T_VARIABLE($option_name) , T_STRING ( T_VARIABLE($option_name) , ) ) , ) ; T_RETURN T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] ) ? T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] : T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($option_path) ) { T_VARIABLE($value) = T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($option_path) ) ; T_IF ( T_VARIABLE($value) T_IS_IDENTICAL T_STRING ) { T_STRING ( T_VARIABLE($option_path) T_ENCAPSED_AND_WHITESPACE , T_STRING ) ; T_RETURN T_ARRAY ( ) ; } T_IF ( ! T_STRING ( T_VARIABLE($value) ) ) { T_STRING ( T_VARIABLE($option_path) T_ENCAPSED_AND_WHITESPACE , T_STRING ) ; T_RETURN T_ARRAY ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($value) [ T_LNUMBER ] ) T_BOOLEAN_AND T_VARIABLE($value) [ T_LNUMBER ] T_IS_IDENTICAL ) { T_STRING ( T_VARIABLE($value) ) ; } T_ELSE { T_VARIABLE($has_string_keys) = T_STRING ; T_VARIABLE($keys) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($value) ) ; T_VARIABLE($i) T_INC ) { T_IF ( ! T_ISSET ( T_VARIABLE($value) [ T_VARIABLE($i) ] ) ) { T_VARIABLE($has_string_keys) = T_STRING ; T_BREAK ; } T_VARIABLE($keys) [ ] = T_STRING ( T_VARIABLE($value) [ T_VARIABLE($i) ] ) ? T_INT_CAST T_VARIABLE($value) [ T_VARIABLE($i) ] : T_VARIABLE($value) [ T_VARIABLE($i) ] ; } T_IF ( ! T_VARIABLE($has_string_keys) ) { T_VARIABLE($value) = T_STRING ( T_VARIABLE($keys) , T_VARIABLE($value) ) ; } } T_RETURN T_VARIABLE($value) ; } T_PRIVATE T_STRING ( T_VARIABLE($value) , T_VARIABLE($key) , T_VARIABLE($prefix) ) { T_STATIC T_VARIABLE($group_counter) = T_LNUMBER ; T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_VARIABLE($prefix) T_CONCAT_EQUAL T_VARIABLE($key) . ; T_STRING ( T_VARIABLE($value) , T_ARRAY ( T_VARIABLE($this) , ) , T_VARIABLE($prefix) ) ; } T_ELSE { T_IF ( ! T_STRING ( T_VARIABLE($key) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($prefix) . T_VARIABLE($key) ] = T_VARIABLE($value) ; T_VARIABLE($value) = T_VARIABLE($key) ; } T_IF ( T_VARIABLE($value) T_IS_EQUAL ) { T_VARIABLE($value) T_CONCAT_EQUAL . T_VARIABLE($group_counter) T_INC ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($prefix) . T_VARIABLE($value) ; } } T_PROTECTED T_STRING ( T_VARIABLE($form) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($form) , T_ARRAY ( T_VARIABLE($this) , ) , ) ; T_VARIABLE($paths) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($paths) T_AS T_VARIABLE($path) ) { T_VARIABLE($key) = T_STRING ( T_STRING ( T_VARIABLE($path) , T_STRING ( T_VARIABLE($path) , ) ) , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] = T_VARIABLE($path) ; } } T_PROTECTED T_STRING ( ) { T_VARIABLE($cf) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($path) ) { T_IF ( T_STRING ( T_VARIABLE($name) , ) T_IS_IDENTICAL T_LNUMBER ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($name) ] = ; T_CONTINUE ; } T_VARIABLE($v) = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) ) ; T_IF ( T_VARIABLE($v) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($type) = T_STRING ( T_VARIABLE($v) ) ? : T_VARIABLE($v) ; } T_ELSE { T_VARIABLE($type) = T_STRING ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) ) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($name) ] = T_VARIABLE($type) ; } } T_PUBLIC T_STRING ( T_VARIABLE($form_name) , T_VARIABLE($form) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($form_name) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($form) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING { T_PRIVATE T_VARIABLE($_forms) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_errors) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_translatedPaths) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_systemPaths) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_jsLangStrings) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_isValidated) = T_STRING ; T_PRIVATE T_VARIABLE($_userprefsKeys) ; T_PRIVATE T_VARIABLE($_userprefsDisallow) ; T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_STRING ( ) ; } T_PUBLIC T_STRING ( T_VARIABLE($form_name) , T_ARRAY T_VARIABLE($form) , T_VARIABLE($server_id) = T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($form_name) ] = T_NEW T_STRING ( T_VARIABLE($form_name) , T_VARIABLE($form) , T_VARIABLE($server_id) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($form_name) ] T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($path) ) { T_VARIABLE($work_path) = T_VARIABLE($server_id) T_IS_IDENTICAL T_STRING ? T_VARIABLE($path) : T_STRING ( , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($server_id) T_ENCAPSED_AND_WHITESPACE , T_VARIABLE($path) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($work_path) ] = T_VARIABLE($path) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($work_path) ] = T_STRING ( , , T_VARIABLE($work_path) ) ; } } T_PUBLIC T_STRING ( T_VARIABLE($allow_partial_save) = T_STRING , T_VARIABLE($check_form_submit) = T_STRING ) { T_IF ( T_VARIABLE($check_form_submit) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_RETURN T_STRING ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) > T_LNUMBER ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) , T_VARIABLE($allow_partial_save) ) ; } T_RETURN T_STRING ; } T_PRIVATE T_STRING ( ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_RETURN ; } T_VARIABLE($cf) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($paths) = T_ARRAY ( ) ; T_VARIABLE($values) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($form) ) { T_VARIABLE($paths) [ ] = T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING ; T_FOREACH ( T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($path) ) { T_VARIABLE($work_path) = T_STRING ( T_VARIABLE($path) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($values) [ T_VARIABLE($path) ] = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($work_path) ) ; T_VARIABLE($paths) [ ] = T_VARIABLE($path) ; } } T_VARIABLE($errors) = T_STRING ( T_VARIABLE($paths) , T_VARIABLE($values) , T_STRING ) ; T_IF ( T_STRING ( T_VARIABLE($errors) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($errors) ) > T_LNUMBER ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($errors) T_AS T_VARIABLE($path) T_DOUBLE_ARROW T_VARIABLE($error_list) ) { T_VARIABLE($work_path) = T_STRING ( T_VARIABLE($path) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( ! T_VARIABLE($work_path) ) { T_VARIABLE($work_path) = T_VARIABLE($path) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($work_path) ] = T_VARIABLE($error_list) ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($tabbed_form) = T_STRING , T_VARIABLE($show_restore_default) = T_STRING ) { T_STATIC T_VARIABLE($js_lang_sent) = T_STRING ; T_VARIABLE($js) = T_ARRAY ( ) ; T_VARIABLE($js_default) = T_ARRAY ( ) ; T_VARIABLE($tabbed_form) = T_VARIABLE($tabbed_form) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) > T_LNUMBER ) ; T_VARIABLE($validators) = T_STRING ( ) ; T_STRING ( ) ; T_IF ( T_VARIABLE($tabbed_form) ) { T_VARIABLE($tabs) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($form) ) { T_VARIABLE($tabs) [ T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( T_VARIABLE($tabs) ) ; } T_VARIABLE($is_new_server) = T_STRING ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($form) ) { T_IF ( T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING T_IS_IDENTICAL T_LNUMBER ) { T_VARIABLE($is_new_server) = T_STRING ; T_BREAK ; } } T_IF ( ! T_VARIABLE($is_new_server) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($form) ) { T_VARIABLE($form_desc) = T_ISSET ( T_VARIABLE($GLOBALS) [ T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING } T_ENCAPSED_AND_WHITESPACE ] ) ? T_STRING ( T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING } T_ENCAPSED_AND_WHITESPACE ) : ; T_VARIABLE($form_errors) = T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING ] ) ? T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING ] : T_STRING ; T_STRING ( T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING ) , T_VARIABLE($form_desc) , T_VARIABLE($form_errors) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING ) ) ; T_FOREACH ( T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($field) T_DOUBLE_ARROW T_VARIABLE($path) ) { T_VARIABLE($work_path) = T_STRING ( T_VARIABLE($path) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($translated_path) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($work_path) ] ; T_VARIABLE($userprefs_allow) = T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($path) ] ) ? ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($path) ] ) : T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($form) , T_VARIABLE($field) , T_VARIABLE($path) , T_VARIABLE($work_path) , T_VARIABLE($translated_path) , T_VARIABLE($show_restore_default) , T_VARIABLE($userprefs_allow) , T_VARIABLE($js_default) ) ; T_IF ( T_ISSET ( T_VARIABLE($validators) [ T_VARIABLE($path) ] ) ) { T_STRING ( T_VARIABLE($translated_path) , T_VARIABLE($validators) [ T_VARIABLE($path) ] , T_VARIABLE($js) ) ; } } T_STRING ( ) ; } T_IF ( T_VARIABLE($tabbed_form) ) { T_STRING ( ) ; } T_STRING ( ) ; T_IF ( ! T_VARIABLE($js_lang_sent) ) { T_VARIABLE($js_lang_sent) = T_STRING ; T_VARIABLE($js_lang) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($strName) T_DOUBLE_ARROW T_VARIABLE($strValue) ) { T_VARIABLE($js_lang) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($strName) T_ENCAPSED_AND_WHITESPACE . T_STRING ( T_VARIABLE($strValue) , T_STRING ) . ; } T_VARIABLE($js) [ ] = . T_STRING ( , T_VARIABLE($js_lang) ) . ; } T_VARIABLE($js) [ ] = . T_STRING ( , T_VARIABLE($js_default) ) . ; T_STRING ( T_VARIABLE($js) ) ; } T_PRIVATE T_FUNCTION(_displayFieldInput) ( T_STRING T_VARIABLE($form) , T_VARIABLE($field) , T_VARIABLE($system_path) , T_VARIABLE($work_path) , T_VARIABLE($translated_path) , T_VARIABLE($show_restore_default) , T_VARIABLE($userprefs_allow) , T_ARRAY & T_VARIABLE($js_default) ) { T_VARIABLE($name) = T_STRING ( T_VARIABLE($system_path) ) ; T_VARIABLE($description) = T_STRING ( T_VARIABLE($system_path) , , ) ; T_VARIABLE($cf) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($value) = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($work_path) ) ; T_VARIABLE($value_default) = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($system_path) ) ; T_VARIABLE($value_is_default) = T_STRING ; T_IF ( T_VARIABLE($value) T_IS_IDENTICAL T_STRING T_BOOLEAN_OR T_VARIABLE($value) T_IS_IDENTICAL T_VARIABLE($value_default) ) { T_VARIABLE($value) = T_VARIABLE($value_default) ; T_VARIABLE($value_is_default) = T_STRING ; } T_VARIABLE($opts) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($system_path) ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($system_path) ) , T_DOUBLE_ARROW T_VARIABLE($show_restore_default) , T_DOUBLE_ARROW T_VARIABLE($userprefs_allow) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($system_path) , , ) ) ; T_IF ( T_ISSET ( T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($system_path) ] ) ) { T_VARIABLE($opts) [ ] = T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($system_path) ] ; } T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($work_path) ] ) ) { T_VARIABLE($opts) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($work_path) ] ; } T_SWITCH ( T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($field) ) ) { T_CASE : T_VARIABLE($type) = ; T_BREAK ; T_CASE : T_VARIABLE($type) = ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($type) = ; T_BREAK ; T_CASE : T_VARIABLE($type) = ; T_BREAK ; T_CASE : T_VARIABLE($type) = ; T_VARIABLE($opts) [ ] = T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($field) ] ) ; T_BREAK ; T_CASE : T_VARIABLE($type) = ; T_VARIABLE($value) = T_ARRAY_CAST T_VARIABLE($value) ; T_VARIABLE($value_default) = T_ARRAY_CAST T_VARIABLE($value_default) ; T_BREAK ; T_CASE : T_IF ( T_STRING ( T_VARIABLE($field) , T_LNUMBER , T_LNUMBER ) T_IS_NOT_EQUAL ) { T_STRING ( T_STRING ( T_VARIABLE($field) , T_LNUMBER ) ) ; } T_ELSE { T_STRING ( ) ; } T_RETURN ; T_CASE : T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($system_path) T_ENCAPSED_AND_WHITESPACE , T_STRING ) ; T_RETURN ; } T_IF ( T_VARIABLE($system_path) T_IS_EQUAL ) { T_FOREACH ( T_VARIABLE($value) T_AS T_VARIABLE($ip) T_DOUBLE_ARROW & T_VARIABLE($v) ) { T_IF ( ! T_STRING ( , T_VARIABLE($ip) ) ) { T_VARIABLE($v) = T_VARIABLE($ip) . . T_VARIABLE($v) ; } } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($system_path) , T_VARIABLE($opts) ) ; T_VARIABLE($js_line) = . T_VARIABLE($translated_path) . ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_CASE : T_CASE : T_VARIABLE($js_line) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($value_default) ) . ; T_BREAK ; T_CASE : T_VARIABLE($js_line) T_CONCAT_EQUAL T_VARIABLE($value_default) ? : ; T_BREAK ; T_CASE : T_VARIABLE($value_default_js) = T_STRING ( T_VARIABLE($value_default) ) ? T_INT_CAST T_VARIABLE($value_default) : T_VARIABLE($value_default) ; T_VARIABLE($js_line) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($value_default_js) ) . ; T_BREAK ; T_CASE : T_VARIABLE($js_line) T_CONCAT_EQUAL . T_STRING ( T_STRING ( , T_VARIABLE($value_default) ) ) . ; T_BREAK ; } T_VARIABLE($js_default) [ ] = T_VARIABLE($js_line) ; T_STRING ( T_VARIABLE($translated_path) , T_VARIABLE($name) , T_VARIABLE($type) , T_VARIABLE($value) , T_VARIABLE($description) , T_VARIABLE($value_is_default) , T_VARIABLE($opts) ) ; } T_PUBLIC T_FUNCTION(displayErrors) ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_IS_EQUAL T_LNUMBER ) { T_RETURN ; } T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($system_path) T_DOUBLE_ARROW T_VARIABLE($error_list) ) { T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($system_path) ] ) ) { T_VARIABLE($path) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($system_path) ] ; T_VARIABLE($name) = T_STRING ( T_VARIABLE($path) ) ; } T_ELSE { T_VARIABLE($name) = T_VARIABLE($GLOBALS) [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($system_path) ] ; } T_STRING ( T_VARIABLE($name) , T_VARIABLE($error_list) ) ; } } T_PUBLIC T_FUNCTION(fixErrors) ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_IS_EQUAL T_LNUMBER ) { T_RETURN ; } T_VARIABLE($cf) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_AS T_VARIABLE($work_path) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($work_path) ] ) ) { T_CONTINUE ; } T_VARIABLE($canonical_path) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($work_path) ] ; T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($work_path) , T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($canonical_path) ) ) ; } } T_PRIVATE T_FUNCTION(_validateSelect) ( & T_VARIABLE($value) , T_ARRAY T_VARIABLE($allowed) ) { T_VARIABLE($value_cmp) = T_STRING ( T_VARIABLE($value) ) ? T_INT_CAST T_VARIABLE($value) : T_VARIABLE($value) ; T_FOREACH ( T_VARIABLE($allowed) T_AS T_VARIABLE($vk) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_IF ( ( T_VARIABLE($vk) T_IS_EQUAL T_VARIABLE($value) T_BOOLEAN_AND ! ( T_STRING ( T_VARIABLE($value_cmp) ) T_LOGICAL_XOR T_STRING ( T_VARIABLE($vk) ) ) ) T_BOOLEAN_OR T_VARIABLE($vk) T_IS_IDENTICAL T_VARIABLE($value) ) { T_IF ( ! T_STRING ( T_VARIABLE($value) ) ) { T_STRING ( T_VARIABLE($value) , T_STRING ( T_VARIABLE($vk) ) ) ; } T_RETURN T_STRING ; } } T_RETURN T_STRING ; } T_PUBLIC T_FUNCTION(save) ( T_VARIABLE($forms) , T_VARIABLE($allow_partial_save) = T_STRING ) { T_VARIABLE($result) = T_STRING ; T_VARIABLE($cf) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($forms) = T_ARRAY_CAST T_VARIABLE($forms) ; T_VARIABLE($values) = T_ARRAY ( ) ; T_VARIABLE($to_save) = T_ARRAY ( ) ; T_VARIABLE($is_setup_script) = T_STRING ( ) ; T_IF ( T_VARIABLE($is_setup_script) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($forms) T_AS T_VARIABLE($form_name) ) { T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($form_name) ] ) ) { T_VARIABLE($form) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($form_name) ] ; } T_ELSE { T_CONTINUE ; } T_VARIABLE($change_index) = T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING T_IS_IDENTICAL T_LNUMBER ? T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) + T_LNUMBER : T_STRING ; T_FOREACH ( T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($field) T_DOUBLE_ARROW T_VARIABLE($system_path) ) { T_VARIABLE($work_path) = T_STRING ( T_VARIABLE($system_path) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($key) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($work_path) ] ; T_VARIABLE($type) = T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($field) ) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_CONTINUE ; } T_IF ( ! T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($key) ] ) ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($_POST) [ T_VARIABLE($key) ] = T_STRING ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING ] [ ] = T_STRING ( T_STRING ( ) , . T_STRING ( T_VARIABLE($system_path) ) . ) ; T_VARIABLE($result) = T_STRING ; T_CONTINUE ; } } T_IF ( T_VARIABLE($is_setup_script) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($system_path) ] ) ) { T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($system_path) ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($key) . ] ) ) { T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($system_path) ] ) ; } T_ELSE T_IF ( ! T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($key) . ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($system_path) ] = T_STRING ; } } T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_STRING ( T_VARIABLE($_POST) [ T_VARIABLE($key) ] , ) ; T_BREAK ; T_CASE : T_CASE : T_IF ( T_VARIABLE($_POST) [ T_VARIABLE($key) ] T_IS_NOT_IDENTICAL ) { T_STRING ( T_VARIABLE($_POST) [ T_VARIABLE($key) ] , T_VARIABLE($type) ) ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($key) T_IS_IDENTICAL T_BOOLEAN_OR T_VARIABLE($key) T_IS_IDENTICAL ) { T_IF ( T_VARIABLE($_POST) [ T_VARIABLE($key) ] T_IS_NOT_IDENTICAL ) { T_STRING ( T_VARIABLE($_POST) [ T_VARIABLE($key) ] , ) ; } } T_VARIABLE($successfully_validated) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ T_VARIABLE($key) ] , T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($system_path) ) ) ; T_IF ( ! T_VARIABLE($successfully_validated) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($work_path) ] [ ] = T_STRING ( ) ; T_VARIABLE($result) = T_STRING ; T_CONTINUE ; } T_BREAK ; T_CASE : T_CASE : T_VARIABLE($_POST) [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($_POST) [ T_VARIABLE($key) ] ) ; T_BREAK ; T_CASE : T_VARIABLE($post_values) = T_STRING ( T_VARIABLE($_POST) [ T_VARIABLE($key) ] ) ? T_VARIABLE($_POST) [ T_VARIABLE($key) ] : T_STRING ( , T_VARIABLE($_POST) [ T_VARIABLE($key) ] ) ; T_VARIABLE($_POST) [ T_VARIABLE($key) ] = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($post_values) T_AS T_VARIABLE($v) ) { T_VARIABLE($v) = T_STRING ( T_VARIABLE($v) ) ; T_IF ( T_VARIABLE($v) T_IS_NOT_IDENTICAL ) { T_VARIABLE($_POST) [ T_VARIABLE($key) ] [ ] = T_VARIABLE($v) ; } } T_BREAK ; } T_VARIABLE($values) [ T_VARIABLE($system_path) ] = T_VARIABLE($_POST) [ T_VARIABLE($key) ] ; T_IF ( T_VARIABLE($change_index) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($work_path) = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($form) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($change_index) T_ENCAPSED_AND_WHITESPACE , T_VARIABLE($work_path) ) ; } T_VARIABLE($to_save) [ T_VARIABLE($work_path) ] = T_VARIABLE($system_path) ; } } T_IF ( T_VARIABLE($allow_partial_save) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_FOREACH ( T_VARIABLE($to_save) T_AS T_VARIABLE($work_path) T_DOUBLE_ARROW T_VARIABLE($path) ) { T_IF ( T_VARIABLE($path) T_IS_EQUAL ) { T_VARIABLE($proxies) = T_ARRAY ( ) ; T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($values) [ T_VARIABLE($path) ] T_AS T_VARIABLE($value) ) { T_VARIABLE($matches) = T_ARRAY ( ) ; T_VARIABLE($match) = T_STRING ( , T_VARIABLE($value) , T_VARIABLE($matches) ) ; T_IF ( T_VARIABLE($match) ) { T_VARIABLE($ip) = T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] ) ; T_VARIABLE($proxies) [ T_VARIABLE($ip) ] = T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] ) ; } T_ELSE { T_VARIABLE($proxies) [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) ] = T_VARIABLE($value) ; T_VARIABLE($i) T_INC ; } } T_VARIABLE($values) [ T_VARIABLE($path) ] = T_VARIABLE($proxies) ; } T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($work_path) , T_VARIABLE($values) [ T_VARIABLE($path) ] , T_VARIABLE($path) ) ; } T_IF ( T_VARIABLE($is_setup_script) ) { T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_VARIABLE($result) ; } T_PUBLIC T_FUNCTION(hasErrors) ( ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) > T_LNUMBER ; } T_PUBLIC T_FUNCTION(getDocLink) ( T_VARIABLE($path) ) { T_VARIABLE($test) = T_STRING ( T_VARIABLE($path) , T_LNUMBER , T_LNUMBER ) ; T_IF ( T_VARIABLE($test) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($test) T_IS_EQUAL ) { T_RETURN ; } T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( , . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) ) ) ; } T_PUBLIC T_FUNCTION(getWikiLink) ( T_VARIABLE($path) ) { T_VARIABLE($opt_name) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) ) ; T_IF ( T_STRING ( T_VARIABLE($opt_name) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($opt_name) = T_STRING ( T_VARIABLE($opt_name) , T_LNUMBER ) ; T_IF ( T_STRING ( T_VARIABLE($opt_name) , ) T_IS_IDENTICAL T_LNUMBER ) { T_VARIABLE($opt_name) = T_STRING ( , , T_VARIABLE($opt_name) ) . ; } } T_VARIABLE($test) = T_STRING ( T_VARIABLE($path) , T_LNUMBER , T_LNUMBER ) ; T_IF ( T_VARIABLE($test) T_IS_EQUAL ) { T_VARIABLE($opt_name) = T_STRING ( T_VARIABLE($opt_name) , T_LNUMBER ) ; T_IF ( T_VARIABLE($opt_name) T_IS_EQUAL ) { T_VARIABLE($opt_name) = ; } } T_IF ( T_VARIABLE($test) T_IS_EQUAL ) { T_VARIABLE($opt_name) = T_STRING ( T_VARIABLE($opt_name) , T_LNUMBER ) ; } T_RETURN T_STRING ( . T_VARIABLE($opt_name) ) ; } T_PRIVATE T_FUNCTION(_getOptName) ( T_VARIABLE($path) ) { T_RETURN T_STRING ( T_ARRAY ( , ) , T_ARRAY ( , ) , T_VARIABLE($path) ) ; } T_PRIVATE T_FUNCTION(_loadUserprefsInfo) ( ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_IDENTICAL T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_STRING ( ) ) ; T_VARIABLE($userprefs_disallow) = T_STRING ( ) ? T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( , T_ARRAY ( ) ) : T_VARIABLE($GLOBALS) [ ] [ ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($userprefs_disallow) ) ; } } T_PRIVATE T_FUNCTION(_setComments) ( T_VARIABLE($system_path) , T_ARRAY & T_VARIABLE($opts) ) { T_IF ( T_VARIABLE($system_path) T_IS_EQUAL ) { T_VARIABLE($comment) = ; T_IF ( ! T_STRING ( ) ) { T_VARIABLE($opts) [ ] [ ] T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($comment) = T_STRING ( T_STRING ( ) , , ) ; } T_IF ( ! T_STRING ( ) ) { T_VARIABLE($opts) [ ] [ ] T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($comment) T_CONCAT_EQUAL ( T_VARIABLE($comment) ? : ) . T_STRING ( T_STRING ( ) , , ) ; } T_VARIABLE($opts) [ ] = T_VARIABLE($comment) ; T_VARIABLE($opts) [ ] = T_STRING ; } T_IF ( T_VARIABLE($system_path) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($system_path) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($system_path) T_IS_EQUAL ) { T_VARIABLE($comment) = ; T_VARIABLE($funcs) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( , ) ) ; T_IF ( ! T_STRING ( T_VARIABLE($funcs) [ T_VARIABLE($system_path) ] [ T_LNUMBER ] ) ) { T_VARIABLE($comment) = T_STRING ( T_STRING ( ) , T_VARIABLE($funcs) [ T_VARIABLE($system_path) ] [ T_LNUMBER ] ) ; } T_IF ( ! T_STRING ( T_VARIABLE($funcs) [ T_VARIABLE($system_path) ] [ T_LNUMBER ] ) ) { T_VARIABLE($comment) T_CONCAT_EQUAL ( T_VARIABLE($comment) ? : ) . T_STRING ( T_STRING ( ) , T_VARIABLE($funcs) [ T_VARIABLE($system_path) ] [ T_LNUMBER ] ) ; } T_VARIABLE($opts) [ ] = T_VARIABLE($comment) ; T_VARIABLE($opts) [ ] = T_STRING ; } T_IF ( T_VARIABLE($system_path) T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($opts) [ ] = T_STRING ( ) ; T_VARIABLE($opts) [ ] = T_STRING ; } T_IF ( T_VARIABLE($system_path) T_IS_EQUAL ) { T_IF ( ! T_STRING ( ) ) { @ T_INCLUDE_ONCE ; T_IF ( ! T_STRING ( ) ) { T_VARIABLE($opts) [ ] = T_STRING ( ) ; T_VARIABLE($opts) [ ] = T_STRING ; } } } T_IF ( ! T_STRING ( ) ) { T_IF ( ( T_VARIABLE($system_path) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($system_path) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($system_path) T_IS_EQUAL ) ) { T_VARIABLE($opts) [ ] = T_STRING ( T_STRING ( ) , T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($system_path) ] ) ; } } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_FUNCTION(PMA_displayFormTop) ( T_VARIABLE($action) = T_STRING , T_VARIABLE($method) = , T_VARIABLE($hidden_fields) = T_STRING ) { T_STATIC T_VARIABLE($has_check_page_refresh) = T_STRING ; T_IF ( T_VARIABLE($action) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($action) = T_VARIABLE($_SERVER) [ ] ; } T_IF ( T_VARIABLE($method) T_IS_NOT_EQUAL ) { T_VARIABLE($method) = ; } T_ECHO . T_VARIABLE($method) . . T_STRING ( T_VARIABLE($action) ) . ; T_ECHO ; T_IF ( ! T_VARIABLE($has_check_page_refresh) ) { T_VARIABLE($has_check_page_refresh) = T_STRING ; T_ECHO . . ; } T_ECHO T_STRING ( , , T_LNUMBER , ) . ; T_ECHO T_STRING ( T_ARRAY_CAST T_VARIABLE($hidden_fields) ) ; } T_FUNCTION(PMA_displayTabsTop) ( T_VARIABLE($tabs) ) { T_ECHO ; T_FOREACH ( T_VARIABLE($tabs) T_AS T_VARIABLE($tab_id) T_DOUBLE_ARROW T_VARIABLE($tab_name) ) { T_ECHO . T_VARIABLE($tab_id) . . T_STRING ( T_VARIABLE($tab_name) ) . ; } T_ECHO ; T_ECHO ; T_ECHO ; } T_FUNCTION(PMA_displayFieldsetTop) ( T_VARIABLE($title) = , T_VARIABLE($description) = , T_VARIABLE($errors) = T_STRING , T_VARIABLE($attributes) = T_ARRAY ( ) ) { T_GLOBAL T_VARIABLE($_FormDisplayGroup) ; T_VARIABLE($_FormDisplayGroup) = T_LNUMBER ; T_VARIABLE($attributes) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW ) , T_VARIABLE($attributes) ) ; T_FOREACH ( T_VARIABLE($attributes) T_AS T_VARIABLE($k) T_DOUBLE_ARROW & T_VARIABLE($attr) ) { T_VARIABLE($attr) = T_VARIABLE($k) . . T_STRING ( T_VARIABLE($attr) ) . ; } T_ECHO . T_STRING ( , T_VARIABLE($attributes) ) . ; T_ECHO . T_VARIABLE($title) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($description) ) ) { T_ECHO . T_VARIABLE($description) . ; } T_IF ( T_STRING ( T_VARIABLE($errors) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($errors) ) > T_LNUMBER ) { T_ECHO ; T_FOREACH ( T_VARIABLE($errors) T_AS T_VARIABLE($error) ) { T_ECHO . T_VARIABLE($error) . ; } T_ECHO ; } T_ECHO ; } T_FUNCTION(PMA_displayInput) ( T_VARIABLE($path) , T_VARIABLE($name) , T_VARIABLE($type) , T_VARIABLE($value) , T_VARIABLE($description) = , T_VARIABLE($value_is_default) = T_STRING , T_VARIABLE($opts) = T_STRING ) { T_GLOBAL T_VARIABLE($_FormDisplayGroup) ; T_STATIC T_VARIABLE($icons) ; T_VARIABLE($is_setup_script) = T_STRING ( ) ; T_IF ( T_VARIABLE($icons) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($icons) = T_ARRAY ( ) ; T_VARIABLE($icon_init) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( , T_STRING ( ) ) , T_DOUBLE_ARROW T_ARRAY ( , T_STRING ( ) ) , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( , ) ) ; T_IF ( T_VARIABLE($is_setup_script) ) { T_FOREACH ( T_VARIABLE($icon_init) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($title) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($v) [ T_LNUMBER ] ) ) { T_VARIABLE($title) = . T_VARIABLE($v) [ T_LNUMBER ] . ; } T_VARIABLE($icons) [ T_VARIABLE($k) ] = T_STRING ( , T_VARIABLE($v) [ T_LNUMBER ] , T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($GLOBALS) [ ] [ ] } T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($v) [ T_LNUMBER ] } , T_VARIABLE($title) ) ; } } T_ELSE { T_FOREACH ( T_VARIABLE($icon_init) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($icons) [ T_VARIABLE($k) ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($v) [ T_LNUMBER ] , T_VARIABLE($v) [ T_LNUMBER ] ) ; } } } T_VARIABLE($has_errors) = T_ISSET ( T_VARIABLE($opts) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($opts) [ ] ) ; T_VARIABLE($option_is_disabled) = ! T_VARIABLE($is_setup_script) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($opts) [ ] ) T_BOOLEAN_AND ! T_VARIABLE($opts) [ ] ; T_VARIABLE($name_id) = . T_STRING ( T_VARIABLE($path) ) . . T_STRING ( T_VARIABLE($path) ) . ; T_VARIABLE($field_class) = T_VARIABLE($type) T_IS_EQUAL ? : ; T_IF ( ! T_VARIABLE($value_is_default) ) { T_VARIABLE($field_class) T_CONCAT_EQUAL ( T_VARIABLE($field_class) T_IS_EQUAL ? : ) . ( T_VARIABLE($has_errors) ? : ) ; } T_VARIABLE($field_class) = T_VARIABLE($field_class) ? . T_VARIABLE($field_class) . : ; T_VARIABLE($tr_class) = T_VARIABLE($_FormDisplayGroup) > T_LNUMBER ? . T_VARIABLE($_FormDisplayGroup) : ; T_IF ( T_ISSET ( T_VARIABLE($opts) [ ] ) T_BOOLEAN_AND T_VARIABLE($opts) [ ] T_IS_EQUAL ) { T_UNSET ( T_VARIABLE($opts) [ ] ) ; T_VARIABLE($_FormDisplayGroup) T_INC ; T_VARIABLE($tr_class) = . T_VARIABLE($_FormDisplayGroup) ; } T_IF ( T_VARIABLE($option_is_disabled) ) { T_VARIABLE($tr_class) T_CONCAT_EQUAL ( T_VARIABLE($tr_class) ? : ) . ; } T_VARIABLE($tr_class) = T_VARIABLE($tr_class) ? . T_VARIABLE($tr_class) . : ; T_ECHO . T_VARIABLE($tr_class) . ; T_ECHO ; T_ECHO . T_STRING ( T_VARIABLE($path) ) . . T_VARIABLE($name) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($opts) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($opts) [ ] ) ) { T_ECHO ; T_IF ( ! T_EMPTY ( T_VARIABLE($opts) [ ] ) ) { T_ECHO . T_VARIABLE($opts) [ ] . . T_VARIABLE($icons) [ ] . ; T_ECHO ; } T_IF ( ! T_EMPTY ( T_VARIABLE($opts) [ ] ) ) { T_ECHO . T_VARIABLE($opts) [ ] . . T_VARIABLE($icons) [ ] . ; T_ECHO ; } T_ECHO ; } T_IF ( T_VARIABLE($option_is_disabled) ) { T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO . T_STRING ( ) . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($description) ) ) { T_ECHO . T_VARIABLE($description) . ; } T_ECHO ; T_ECHO ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_ECHO . T_VARIABLE($name_id) . T_VARIABLE($field_class) . . T_STRING ( T_VARIABLE($value) ) . ; T_BREAK ; T_CASE : T_ECHO . T_VARIABLE($name_id) . T_VARIABLE($field_class) . . T_STRING ( T_VARIABLE($value) ) . ; T_BREAK ; T_CASE : T_ECHO . T_VARIABLE($name_id) . T_VARIABLE($field_class) . . T_STRING ( T_VARIABLE($value) ) . ; T_BREAK ; T_CASE : T_ECHO . T_VARIABLE($field_class) . . T_VARIABLE($name_id) . ( T_VARIABLE($value) ? : ) . ; T_BREAK ; T_CASE : T_ECHO . T_VARIABLE($name_id) . T_VARIABLE($field_class) . ; T_VARIABLE($escape) = ! ( T_ISSET ( T_VARIABLE($opts) [ ] ) T_BOOLEAN_AND T_VARIABLE($opts) [ ] ) ; T_VARIABLE($values_disabled) = T_ISSET ( T_VARIABLE($opts) [ ] ) ? T_STRING ( T_VARIABLE($opts) [ ] ) : T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($opts) [ ] T_AS T_VARIABLE($opt_value_key) T_DOUBLE_ARROW T_VARIABLE($opt_value) ) { T_IF ( T_STRING ( T_VARIABLE($opt_value) ) ) { T_VARIABLE($opt_value) = T_STRING ( T_VARIABLE($opt_value) ? T_STRING ( ) : T_STRING ( ) ) ; } T_IF ( T_VARIABLE($escape) ) { T_VARIABLE($display) = T_STRING ( T_VARIABLE($opt_value) ) ; T_VARIABLE($display_value) = T_STRING ( T_VARIABLE($opt_value_key) ) ; } T_ELSE { T_VARIABLE($display) = T_VARIABLE($opt_value) ; T_VARIABLE($display_value) = T_VARIABLE($opt_value_key) ; } T_VARIABLE($selected) = T_STRING ( T_VARIABLE($value) ) ? T_INT_CAST T_VARIABLE($value) T_IS_IDENTICAL T_VARIABLE($opt_value_key) : T_VARIABLE($opt_value_key) T_IS_IDENTICAL T_VARIABLE($value) ; T_ECHO . T_VARIABLE($display_value) . ; T_IF ( T_VARIABLE($selected) ) { T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($values_disabled) [ T_VARIABLE($opt_value_key) ] ) ) { T_ECHO ; } T_ECHO . T_VARIABLE($display) . ; } T_ECHO ; T_BREAK ; T_CASE : T_ECHO . T_VARIABLE($name_id) . T_VARIABLE($field_class) . . T_STRING ( T_STRING ( , T_VARIABLE($value) ) ) . ; T_BREAK ; } T_IF ( T_ISSET ( T_VARIABLE($opts) [ ] ) T_BOOLEAN_AND T_VARIABLE($opts) [ ] ) { T_VARIABLE($class) = ; T_IF ( T_ISSET ( T_VARIABLE($opts) [ ] ) T_BOOLEAN_AND T_VARIABLE($opts) [ ] ) { T_VARIABLE($class) T_CONCAT_EQUAL ; } T_ECHO . T_VARIABLE($class) . . T_STRING ( T_VARIABLE($opts) [ ] ) . ; } T_IF ( T_VARIABLE($is_setup_script) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($opts) [ ] ) T_BOOLEAN_AND T_VARIABLE($opts) [ ] ) { T_ECHO . T_STRING ( T_VARIABLE($opts) [ ] ) . . T_VARIABLE($icons) [ ] . ; } T_IF ( T_ISSET ( T_VARIABLE($opts) [ ] ) T_BOOLEAN_AND T_VARIABLE($opts) [ ] ) { T_ECHO . T_STRING ( T_VARIABLE($path) T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($opts) [ ] } ) . . T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($opts) [ ] ) ) . . T_VARIABLE($icons) [ ] . ; } T_IF ( T_ISSET ( T_VARIABLE($opts) [ ] ) T_BOOLEAN_AND T_VARIABLE($opts) [ ] ) { T_ECHO . T_VARIABLE($path) . . T_STRING ( ) . . T_VARIABLE($icons) [ ] . ; } T_IF ( T_VARIABLE($has_errors) ) { T_ECHO ; T_FOREACH ( T_VARIABLE($opts) [ ] T_AS T_VARIABLE($error) ) { T_ECHO . T_STRING ( T_VARIABLE($error) ) . ; } T_ECHO ; } T_ECHO ; T_IF ( T_VARIABLE($is_setup_script) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($opts) [ ] ) ) { T_ECHO . T_STRING ( ) . ; T_ECHO . T_VARIABLE($path) . ; T_IF ( T_VARIABLE($opts) [ ] ) { T_ECHO ; } ; T_ECHO ; T_ECHO ; } T_ELSE T_IF ( T_VARIABLE($is_setup_script) ) { T_ECHO ; } T_ECHO ; } T_FUNCTION(PMA_displayGroupHeader) ( T_VARIABLE($header_text) ) { T_GLOBAL T_VARIABLE($_FormDisplayGroup) ; T_VARIABLE($_FormDisplayGroup) T_INC ; T_IF ( ! T_VARIABLE($header_text) ) { T_RETURN ; } T_VARIABLE($colspan) = T_STRING ( ) ? T_LNUMBER : T_LNUMBER ; T_ECHO . T_VARIABLE($_FormDisplayGroup) . ; T_ECHO . T_VARIABLE($colspan) . ; T_ECHO T_VARIABLE($header_text) ; T_ECHO ; T_ECHO ; } T_FUNCTION(PMA_displayGroupFooter) ( ) { T_GLOBAL T_VARIABLE($_FormDisplayGroup) ; T_VARIABLE($_FormDisplayGroup) T_DEC ; } T_FUNCTION(PMA_displayFieldsetBottom) ( ) { T_VARIABLE($colspan) = T_LNUMBER ; T_IF ( T_STRING ( ) ) { T_VARIABLE($colspan) T_INC ; } T_ECHO ; T_ECHO . T_VARIABLE($colspan) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; } T_FUNCTION(PMA_displayFieldsetBottomSimple) ( ) { T_ECHO ; T_ECHO ; } T_FUNCTION(PMA_displayTabsBottom) ( ) { T_ECHO ; } T_FUNCTION(PMA_displayFormBottom) ( ) { T_ECHO ; } T_FUNCTION(PMA_addJsValidate) ( T_VARIABLE($field_id) , T_VARIABLE($validators) , & T_VARIABLE($js_array) ) { T_FOREACH ( T_ARRAY_CAST T_VARIABLE($validators) T_AS T_VARIABLE($validator) ) { T_VARIABLE($validator) = T_ARRAY_CAST T_VARIABLE($validator) ; T_VARIABLE($v_name) = T_STRING ( T_VARIABLE($validator) ) ; T_VARIABLE($v_args) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($validator) T_AS T_VARIABLE($arg) ) { T_VARIABLE($v_args) [ ] = T_STRING ( T_VARIABLE($arg) ) ; } T_VARIABLE($v_args) = T_VARIABLE($v_args) ? . T_STRING ( , T_VARIABLE($v_args) ) . : ; T_VARIABLE($js_array) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($field_id) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($v_name) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($v_args) T_ENCAPSED_AND_WHITESPACE ; } } T_FUNCTION(PMA_displayJavascript) ( T_VARIABLE($js_array) ) { T_IF ( T_EMPTY ( T_VARIABLE($js_array) ) ) { T_RETURN ; } T_ECHO . ; T_ECHO T_STRING ( , T_VARIABLE($js_array) ) . ; T_ECHO . ; } T_FUNCTION(PMA_displayErrors) ( T_VARIABLE($name) , T_VARIABLE($error_list) ) { T_ECHO ; T_ECHO . T_STRING ( T_VARIABLE($name) ) . ; T_FOREACH ( T_VARIABLE($error_list) T_AS T_VARIABLE($error) ) { T_ECHO . T_STRING ( T_VARIABLE($error) ) . ; } T_ECHO ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_STRING ( ) ; } T_VARIABLE($strConfigAllowArbitraryServer_desc) = T_STRING ( ) ; T_VARIABLE($strConfigAllowArbitraryServer_name) = T_STRING ( ) ; T_VARIABLE($strConfigAllowUserDropDatabase_name) = T_STRING ( ) ; T_VARIABLE($strConfigblowfish_secret_desc) = T_STRING ( ) ; T_VARIABLE($strConfigblowfish_secret_name) = T_STRING ( ) ; T_VARIABLE($strConfigBrowseMarkerEnable_desc) = T_STRING ( ) ; T_VARIABLE($strConfigBrowseMarkerEnable_name) = T_STRING ( ) ; T_VARIABLE($strConfigBrowsePointerEnable_desc) = T_STRING ( ) ; T_VARIABLE($strConfigBrowsePointerEnable_name) = T_STRING ( ) ; T_VARIABLE($strConfigBZipDump_desc) = T_STRING ( ) ; T_VARIABLE($strConfigBZipDump_name) = T_STRING ( ) ; T_VARIABLE($strConfigCharEditing_desc) = T_STRING ( ) ; T_VARIABLE($strConfigCharEditing_name) = T_STRING ( ) ; T_VARIABLE($strConfigCodemirrorEnable_desc) = T_STRING ( ) ; T_VARIABLE($strConfigCodemirrorEnable_name) = T_STRING ( ) ; T_VARIABLE($strConfigMinSizeForInputField_desc) = T_STRING ( ) ; T_VARIABLE($strConfigMinSizeForInputField_name) = T_STRING ( ) ; T_VARIABLE($strConfigMaxSizeForInputField_desc) = T_STRING ( ) ; T_VARIABLE($strConfigMaxSizeForInputField_name) = T_STRING ( ) ; T_VARIABLE($strConfigCharTextareaCols_desc) = T_STRING ( ) ; T_VARIABLE($strConfigCharTextareaCols_name) = T_STRING ( ) ; T_VARIABLE($strConfigCharTextareaRows_desc) = T_STRING ( ) ; T_VARIABLE($strConfigCharTextareaRows_name) = T_STRING ( ) ; T_VARIABLE($strConfigCheckConfigurationPermissions_name) = T_STRING ( ) ; T_VARIABLE($strConfigCompressOnFly_desc) = T_STRING ( ) ; T_VARIABLE($strConfigCompressOnFly_name) = T_STRING ( ) ; T_VARIABLE($strConfigConfigurationFile) = T_STRING ( ) ; T_VARIABLE($strConfigConfirm_desc) = T_STRING ( ) ; T_VARIABLE($strConfigConfirm_name) = T_STRING ( ) ; T_VARIABLE($strConfigDBG_sql_name) = T_STRING ( ) ; T_VARIABLE($strConfigDefaultDisplay_name) = T_STRING ( ) ; T_VARIABLE($strConfigDefaultTabDatabase_desc) = T_STRING ( ) ; T_VARIABLE($strConfigDefaultTabDatabase_name) = T_STRING ( ) ; T_VARIABLE($strConfigDefaultTabServer_desc) = T_STRING ( ) ; T_VARIABLE($strConfigDefaultTabServer_name) = T_STRING ( ) ; T_VARIABLE($strConfigDefaultTabTable_desc) = T_STRING ( ) ; T_VARIABLE($strConfigDefaultTabTable_name) = T_STRING ( ) ; T_VARIABLE($strConfigHideStructureActions_desc) = T_STRING ( ) ; T_VARIABLE($strConfigHideStructureActions_name) = T_STRING ( ) ; T_VARIABLE($strConfigDisplayBinaryAsHex_desc) = T_STRING ( ) ; T_VARIABLE($strConfigDisplayBinaryAsHex_name) = T_STRING ( ) ; T_VARIABLE($strConfigDisplayServersList_desc) = T_STRING ( ) ; T_VARIABLE($strConfigDisplayServersList_name) = T_STRING ( ) ; T_VARIABLE($strConfigDisableMultiTableMaintenance_desc) = T_STRING ( ) ; T_VARIABLE($strConfigDisableMultiTableMaintenance_name) = T_STRING ( ) ; T_VARIABLE($strConfigEditInWindow_desc) = T_STRING ( ) ; T_VARIABLE($strConfigEditInWindow_name) = T_STRING ( ) ; T_VARIABLE($strConfigError_Handler_display_name) = T_STRING ( ) ; T_VARIABLE($strConfigError_Handler_gather_name) = T_STRING ( ) ; T_VARIABLE($strConfigExecTimeLimit_desc) = T_STRING ( ) ; T_VARIABLE($strConfigExecTimeLimit_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_asfile_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_charset_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_codegen_format_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_compression_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_csv_columns_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_csv_enclosed_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_csv_escaped_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_csv_null_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_csv_removeCRLF_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_csv_separator_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_csv_terminated_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_excel_columns_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_excel_edition_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_excel_null_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_excel_removeCRLF_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_file_template_database_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_file_template_server_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_file_template_table_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_format_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_htmlword_columns_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_htmlword_null_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_htmlword_structure_or_data_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_latex_caption_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_latex_columns_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_latex_comments_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_latex_data_caption_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_latex_data_continued_caption_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_latex_data_label_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_latex_mime_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_latex_null_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_latex_relation_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_latex_structure_caption_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_latex_structure_continued_caption_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_latex_structure_label_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_latex_structure_or_data_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_method_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_ods_columns_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_ods_null_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_odt_columns_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_odt_comments_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_odt_mime_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_odt_null_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_odt_relation_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_odt_structure_or_data_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_onserver_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_onserver_overwrite_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_quick_export_onserver_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_quick_export_onserver_overwrite_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_remember_file_template_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_auto_increment_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_backquotes_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_compatibility_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_create_table_statements_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_dates_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_delayed_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_disable_fk_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_drop_database_name) = T_STRING ( T_STRING ( ) , ) ; T_VARIABLE($strConfigExport_sql_drop_table_name) = T_STRING ( T_STRING ( ) , ) ; T_VARIABLE($strConfigExport_sql_hex_for_blob_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_if_not_exists_name) = T_STRING ( T_STRING ( ) , ) ; T_VARIABLE($strConfigExport_sql_ignore_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_include_comments_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_insert_syntax_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_max_query_size_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_mime_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_procedure_function_name) = T_STRING ( T_STRING ( ) , ) ; T_VARIABLE($strConfigExport_sql_relation_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_structure_or_data_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_type_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_use_transaction_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_sql_utc_time_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_texytext_columns_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_texytext_null_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_texytext_structure_or_data_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_xls_columns_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_xls_null_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_xlsx_columns_name) = T_STRING ( ) ; T_VARIABLE($strConfigExport_xlsx_null_name) = T_STRING ( ) ; T_VARIABLE($strConfigForceSSL_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForceSSL_name) = T_STRING ( ) ; T_VARIABLE($strConfigForeignKeyDropdownOrder_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForeignKeyDropdownOrder_name) = T_STRING ( ) ; T_VARIABLE($strConfigForeignKeyMaxLimit_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForeignKeyMaxLimit_name) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Browse) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Browse_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_CodeGen) = ; T_VARIABLE($strConfigForm_CodeGen_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Csv) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Csv_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Developer) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Developer_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Edit) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Edit_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Export) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Export_defaults) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Export_defaults_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Features) = T_STRING ( ) ; T_VARIABLE($strConfigForm_General) = T_STRING ( ) ; T_VARIABLE($strConfigForm_General_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Import) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Import_defaults) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Import_defaults_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Import_export) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Import_export_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Latex) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Latex_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Navi_databases) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Navi_databases_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Navi_panel) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Navi_panel_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Navi_servers) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Navi_servers_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Navi_tables) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Navi_tables_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Main_panel) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Microsoft_Office) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Microsoft_Office_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Open_Document) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Open_Document_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Other_core_settings) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Other_core_settings_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Page_titles) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Page_titles_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Query_window) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Query_window_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Security) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Security_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Server) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Server_auth) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Server_auth_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Server_config) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Server_config_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Server_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Server_pmadb) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Server_pmadb_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Server_tracking) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Server_tracking_desc) = T_STRING ( ) ; T_VARIABLE($strConfigFormset_Export) = T_STRING ( ) ; T_VARIABLE($strConfigFormset_Features) = T_STRING ( ) ; T_VARIABLE($strConfigFormset_Import) = T_STRING ( ) ; T_VARIABLE($strConfigFormset_Navi_panel) = T_STRING ( ) ; T_VARIABLE($strConfigFormset_Main_panel) = T_STRING ( ) ; T_VARIABLE($strConfigFormset_Sql_queries) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Sql) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Sql_box) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Sql_box_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Sql_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Sql_queries) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Sql_queries_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Sql_validator) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Sql_validator_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Startup) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Startup_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_DbStructure) = T_STRING ( ) ; T_VARIABLE($strConfigForm_DbStructure_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_TableStructure) = T_STRING ( ) ; T_VARIABLE($strConfigForm_TableStructure_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Tabs) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Tabs_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Text_fields) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Text_fields_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Texy) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Texy_desc) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Warnings) = T_STRING ( ) ; T_VARIABLE($strConfigForm_Warnings_desc) = T_STRING ( ) ; T_VARIABLE($strConfigGZipDump_desc) = T_STRING ( ) ; T_VARIABLE($strConfigGZipDump_name) = T_STRING ( ) ; T_VARIABLE($strConfigIconvExtraParams_name) = T_STRING ( ) ; T_VARIABLE($strConfigIgnoreMultiSubmitErrors_desc) = T_STRING ( ) ; T_VARIABLE($strConfigIgnoreMultiSubmitErrors_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_allow_interrupt_desc) = T_STRING ( ) ; T_VARIABLE($strConfigImport_allow_interrupt_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_charset_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_csv_col_names_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_csv_enclosed_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_csv_escaped_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_csv_ignore_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_csv_replace_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_csv_terminated_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_format_desc) = T_STRING ( ) ; T_VARIABLE($strConfigImport_format_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_ldi_enclosed_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_ldi_escaped_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_ldi_ignore_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_ldi_local_option_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_ldi_replace_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_ldi_terminated_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_ods_col_names_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_ods_empty_rows_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_ods_recognize_currency_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_ods_recognize_percentages_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_skip_queries_desc) = T_STRING ( ) ; T_VARIABLE($strConfigImport_skip_queries_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_sql_compatibility_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_sql_no_auto_value_on_zero_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_xls_col_names_name) = T_STRING ( ) ; T_VARIABLE($strConfigImport_xlsx_col_names_name) = T_STRING ( ) ; T_VARIABLE($strConfigInitialSlidersState_name) = T_STRING ( ) ; T_VARIABLE($strConfigInsertRows_desc) = T_STRING ( ) ; T_VARIABLE($strConfigInsertRows_name) = T_STRING ( ) ; T_VARIABLE($strConfigLimitChars_desc) = T_STRING ( ) ; T_VARIABLE($strConfigLimitChars_name) = T_STRING ( ) ; T_VARIABLE($strConfigLoginCookieDeleteAll_desc) = T_STRING ( ) ; T_VARIABLE($strConfigLoginCookieDeleteAll_name) = T_STRING ( ) ; T_VARIABLE($strConfigLoginCookieRecall_desc) = T_STRING ( ) ; T_VARIABLE($strConfigLoginCookieRecall_name) = T_STRING ( ) ; T_VARIABLE($strConfigLoginCookieStore_desc) = T_STRING ( ) ; T_VARIABLE($strConfigLoginCookieStore_name) = T_STRING ( ) ; T_VARIABLE($strConfigLoginCookieValidity_desc) = T_STRING ( ) ; T_VARIABLE($strConfigLoginCookieValidity_name) = T_STRING ( ) ; T_VARIABLE($strConfigLongtextDoubleTextarea_desc) = T_STRING ( ) ; T_VARIABLE($strConfigLongtextDoubleTextarea_name) = T_STRING ( ) ; T_VARIABLE($strConfigMaxCharactersInDisplayedSQL_desc) = T_STRING ( ) ; T_VARIABLE($strConfigMaxCharactersInDisplayedSQL_name) = T_STRING ( ) ; T_VARIABLE($strConfigMaxDbList_cmt) = T_STRING ( ) ; T_VARIABLE($strConfigMaxDbList_desc) = T_STRING ( ) ; T_VARIABLE($strConfigMaxDbList_name) = T_STRING ( ) ; T_VARIABLE($strConfigMaxNavigationItems_desc) = T_STRING ( ) ; T_VARIABLE($strConfigMaxNavigationItems_name) = T_STRING ( ) ; T_VARIABLE($strConfigMaxRows_desc) = T_STRING ( ) ; T_VARIABLE($strConfigMaxRows_name) = T_STRING ( ) ; T_VARIABLE($strConfigMaxTableList_cmt) = T_STRING ( ) ; T_VARIABLE($strConfigMaxTableList_desc) = T_STRING ( ) ; T_VARIABLE($strConfigMaxTableList_name) = T_STRING ( ) ; T_VARIABLE($strConfigMcryptDisableWarning_desc) = T_STRING ( ) ; T_VARIABLE($strConfigMcryptDisableWarning_name) = T_STRING ( ) ; T_VARIABLE($strConfigMemoryLimit_desc) = T_STRING ( ) ; T_VARIABLE($strConfigMemoryLimit_name) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationDisplayLogo_desc) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationDisplayLogo_name) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationLogoLink_desc) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationLogoLink_name) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationLogoLinkWindow_desc) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationLogoLinkWindow_name) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationDisplayServers_desc) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationDisplayServers_name) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationTreeDefaultTabTable_name) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationTreeDisplayItemFilterMinimum_desc) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationTreeDisplayItemFilterMinimum_name) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationTreeDisplayDbFilterMinimum_name) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationTreeEnableGrouping_desc) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationTreeEnableGrouping_name) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationTreeDbSeparator_desc) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationTreeDbSeparator_name) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationTreeTableSeparator_desc) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationTreeTableSeparator_name) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationTreeTableLevel_name) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationTreePointerEnable_desc) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationTreePointerEnable_name) = T_STRING ( ) ; T_VARIABLE($strConfigNumRecentTables_desc) = T_STRING ( ) ; T_VARIABLE($strConfigNumRecentTables_name) = T_STRING ( ) ; T_VARIABLE($strConfigRowActionLinks_desc) = T_STRING ( ) ; T_VARIABLE($strConfigRowActionLinks_name) = T_STRING ( ) ; T_VARIABLE($strConfigNaturalOrder_desc) = T_STRING ( ) ; T_VARIABLE($strConfigNaturalOrder_name) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationBarIconic_desc) = T_STRING ( ) ; T_VARIABLE($strConfigNavigationBarIconic_name) = T_STRING ( ) ; T_VARIABLE($strConfigOBGzip_desc) = T_STRING ( ) ; T_VARIABLE($strConfigOBGzip_name) = T_STRING ( ) ; T_VARIABLE($strConfigOrder_desc) = T_STRING ( ) ; T_VARIABLE($strConfigOrder_name) = T_STRING ( ) ; T_VARIABLE($strConfigPersistentConnections_desc) = T_STRING ( ) ; T_VARIABLE($strConfigPersistentConnections_name) = T_STRING ( ) ; T_VARIABLE($strConfigPmaNoRelation_DisableWarning_desc) = T_STRING ( ) ; T_VARIABLE($strConfigPmaNoRelation_DisableWarning_name) = T_STRING ( ) ; T_VARIABLE($strConfigServerLibraryDifference_DisableWarning_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServerLibraryDifference_DisableWarning_name) = T_STRING ( ) ; T_VARIABLE($strConfigReservedWordDisableWarning_desc) = T_STRING ( ) ; T_VARIABLE($strConfigReservedWordDisableWarning_name) = T_STRING ( ) ; T_VARIABLE($strConfigPropertiesIconic_desc) = T_STRING ( ) ; T_VARIABLE($strConfigPropertiesIconic_name) = T_STRING ( ) ; T_VARIABLE($strConfigProtectBinary_desc) = T_STRING ( ) ; T_VARIABLE($strConfigProtectBinary_name) = T_STRING ( ) ; T_VARIABLE($strConfigQueryHistoryDB_desc) = T_STRING ( ) ; T_VARIABLE($strConfigQueryHistoryDB_name) = T_STRING ( ) ; T_VARIABLE($strConfigQueryHistoryMax_cmt) = T_STRING ( ) ; T_VARIABLE($strConfigQueryHistoryMax_desc) = T_STRING ( ) ; T_VARIABLE($strConfigQueryHistoryMax_name) = T_STRING ( ) ; T_VARIABLE($strConfigQueryWindowDefTab_desc) = T_STRING ( ) ; T_VARIABLE($strConfigQueryWindowDefTab_name) = T_STRING ( ) ; T_VARIABLE($strConfigQueryWindowHeight_desc) = T_STRING ( ) ; T_VARIABLE($strConfigQueryWindowHeight_name) = T_STRING ( ) ; T_VARIABLE($strConfigQueryWindowWidth_desc) = T_STRING ( ) ; T_VARIABLE($strConfigQueryWindowWidth_name) = T_STRING ( ) ; T_VARIABLE($strConfigRecodingEngine_desc) = T_STRING ( ) ; T_VARIABLE($strConfigRecodingEngine_name) = T_STRING ( ) ; T_VARIABLE($strConfigRememberSorting_desc) = T_STRING ( ) ; T_VARIABLE($strConfigRememberSorting_name) = T_STRING ( ) ; T_VARIABLE($strConfigRepeatCells_desc) = T_STRING ( ) ; T_VARIABLE($strConfigRepeatCells_name) = T_STRING ( ) ; T_VARIABLE($strConfigRestoreDefaultValue) = T_STRING ( ) ; T_VARIABLE($strConfigGridEditing_name) = T_STRING ( ) ; T_VARIABLE($strConfigSaveCellsAtOnce_name) = T_STRING ( ) ; T_VARIABLE($strConfigSaveDir_desc) = T_STRING ( ) ; T_VARIABLE($strConfigSaveDir_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_AllowDeny_order_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_AllowDeny_order_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_AllowDeny_rules_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_AllowDeny_rules_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_AllowNoPassword_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_AllowRoot_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_auth_http_realm_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_auth_http_realm_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_auth_swekey_config_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_auth_swekey_config_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_auth_type_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_auth_type_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_bookmarktable_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_bookmarktable_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_column_info_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_column_info_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_compress_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_compress_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_connect_type_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_connect_type_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_controlpass_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_controluser_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_controluser_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_controlhost_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_controlhost_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_CountTables_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_CountTables_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_designer_coords_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_designer_coords_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_DisableIS_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_DisableIS_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_extension_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_extension_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_hide_db_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_hide_db_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_history_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_history_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_host_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_host_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_LogoutURL_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_MaxTableUiprefs_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_MaxTableUiprefs_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_nopassword_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_nopassword_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_only_db_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_only_db_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_password_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_password_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_pdf_pages_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_pdf_pages_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_pmadb_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_pmadb_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_port_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_port_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_recent_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_recent_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_relation_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_relation_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_ShowDatabasesCommand_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_ShowDatabasesCommand_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_SignonSession_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_SignonSession_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_SignonURL_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_socket_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_socket_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_ssl_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_ssl_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_table_coords_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_table_coords_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_table_info_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_table_info_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_table_uiprefs_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_table_uiprefs_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_tracking_add_drop_database_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_tracking_add_drop_database_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_tracking_add_drop_table_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_tracking_add_drop_table_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_tracking_add_drop_view_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_tracking_add_drop_view_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_tracking_default_statements_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_tracking_default_statements_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_tracking_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_tracking_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_tracking_version_auto_create_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_tracking_version_auto_create_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_userconfig_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_userconfig_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_user_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_user_name) = T_STRING ( ) ; T_VARIABLE($strConfigServers_verbose_desc) = T_STRING ( ) ; T_VARIABLE($strConfigServers_verbose_name) = T_STRING ( ) ; T_VARIABLE($strConfigShowAll_desc) = T_STRING ( ) ; T_VARIABLE($strConfigShowAll_name) = T_STRING ( ) ; T_VARIABLE($strConfigShowChgPassword_desc) = T_STRING ( ) ; T_VARIABLE($strConfigShowChgPassword_name) = T_STRING ( ) ; T_VARIABLE($strConfigShowCreateDb_name) = T_STRING ( ) ; T_VARIABLE($strConfigShowDbStructureCreation_desc) = T_STRING ( ) ; T_VARIABLE($strConfigShowDbStructureCreation_name) = T_STRING ( ) ; T_VARIABLE($strConfigShowDbStructureLastUpdate_desc) = T_STRING ( ) ; T_VARIABLE($strConfigShowDbStructureLastUpdate_name) = T_STRING ( ) ; T_VARIABLE($strConfigShowDbStructureLastCheck_desc) = T_STRING ( ) ; T_VARIABLE($strConfigShowDbStructureLastCheck_name) = T_STRING ( ) ; T_VARIABLE($strConfigShowDisplayDirection_desc) = T_STRING ( ) ; T_VARIABLE($strConfigShowDisplayDirection_name) = T_STRING ( ) ; T_VARIABLE($strConfigShowFieldTypesInDataEditView_desc) = T_STRING ( ) ; T_VARIABLE($strConfigShowFieldTypesInDataEditView_name) = T_STRING ( ) ; T_VARIABLE($strConfigShowFunctionFields_desc) = T_STRING ( ) ; T_VARIABLE($strConfigShowFunctionFields_name) = T_STRING ( ) ; T_VARIABLE($strConfigShowHint_desc) = T_STRING ( ) ; T_VARIABLE($strConfigShowHint_name) = T_STRING ( ) ; T_VARIABLE($strConfigShowPhpInfo_desc) = T_STRING ( ) ; T_VARIABLE($strConfigShowPhpInfo_name) = T_STRING ( ) ; T_VARIABLE($strConfigShowServerInfo_name) = T_STRING ( ) ; T_VARIABLE($strConfigShowSQL_desc) = T_STRING ( ) ; T_VARIABLE($strConfigShowSQL_name) = T_STRING ( ) ; T_VARIABLE($strConfigRetainQueryBox_desc) = T_STRING ( ) ; T_VARIABLE($strConfigRetainQueryBox_name) = T_STRING ( ) ; T_VARIABLE($strConfigShowStats_desc) = T_STRING ( ) ; T_VARIABLE($strConfigShowStats_name) = T_STRING ( ) ; T_VARIABLE($strConfigShowTooltip_name) = T_STRING ( ) ; T_VARIABLE($strConfigSkipLockedTables_desc) = T_STRING ( ) ; T_VARIABLE($strConfigSkipLockedTables_name) = T_STRING ( ) ; T_VARIABLE($strConfigSQLQuery_Edit_name) = T_STRING ( ) ; T_VARIABLE($strConfigSQLQuery_Explain_name) = T_STRING ( ) ; T_VARIABLE($strConfigSQLQuery_Refresh_name) = T_STRING ( ) ; T_VARIABLE($strConfigSQLQuery_ShowAsPHP_name) = T_STRING ( ) ; T_VARIABLE($strConfigSQLQuery_Validate_desc) = T_STRING ( ) ; T_VARIABLE($strConfigSQLQuery_Validate_name) = T_STRING ( ) ; T_VARIABLE($strConfigSQLValidator_password_name) = T_STRING ( ) ; T_VARIABLE($strConfigSQLValidator_use_desc) = T_STRING ( ) ; T_VARIABLE($strConfigSQLValidator_use_name) = T_STRING ( ) ; T_VARIABLE($strConfigSQLValidator_username_desc) = T_STRING ( ) ; T_VARIABLE($strConfigSQLValidator_username_name) = T_STRING ( ) ; T_VARIABLE($strConfigSuhosinDisableWarning_desc) = T_STRING ( ) ; T_VARIABLE($strConfigSuhosinDisableWarning_name) = T_STRING ( ) ; T_VARIABLE($strConfigTextareaCols_desc) = T_STRING ( ) ; T_VARIABLE($strConfigTextareaCols_name) = T_STRING ( ) ; T_VARIABLE($strConfigTextareaRows_desc) = T_STRING ( ) ; T_VARIABLE($strConfigTextareaRows_name) = T_STRING ( ) ; T_VARIABLE($strConfigTitleDatabase_desc) = T_STRING ( ) ; T_VARIABLE($strConfigTitleDatabase_name) = T_STRING ( ) ; T_VARIABLE($strConfigTitleDefault_desc) = T_STRING ( ) ; T_VARIABLE($strConfigTitleDefault_name) = T_STRING ( ) ; T_VARIABLE($strConfigTitleServer_desc) = T_STRING ( ) ; T_VARIABLE($strConfigTitleServer_name) = T_STRING ( ) ; T_VARIABLE($strConfigTitleTable_desc) = T_STRING ( ) ; T_VARIABLE($strConfigTitleTable_name) = T_STRING ( ) ; T_VARIABLE($strConfigTrustedProxies_desc) = T_STRING ( ) ; T_VARIABLE($strConfigTrustedProxies_name) = T_STRING ( ) ; T_VARIABLE($strConfigUploadDir_desc) = T_STRING ( ) ; T_VARIABLE($strConfigUploadDir_name) = T_STRING ( ) ; T_VARIABLE($strConfigUseDbSearch_desc) = T_STRING ( ) ; T_VARIABLE($strConfigUseDbSearch_name) = T_STRING ( ) ; T_VARIABLE($strConfigUserprefsDeveloperTab_desc) = T_STRING ( ) ; T_VARIABLE($strConfigUserprefsDeveloperTab_name) = T_STRING ( ) ; T_VARIABLE($strConfigVersionCheckLink) = T_STRING ( ) ; T_VARIABLE($strConfigVersionCheck_desc) = T_STRING ( ) ; T_VARIABLE($strConfigVersionCheck_name) = T_STRING ( ) ; T_VARIABLE($strConfigZipDump_desc) = T_STRING ( ) ; T_VARIABLE($strConfigZipDump_name) = T_STRING ( ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_VARIABLE($forms) = T_ARRAY ( ) ; T_VARIABLE($forms) [ ] = T_ARRAY ( , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( , , , , , , , , ) ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( , . T_STRING ( ) , , , , . T_STRING ( ) , T_DOUBLE_ARROW , , . T_STRING ( ) , , , . T_STRING ( ) , , , ) ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( , , , , , , , , ) ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , , , , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( , , , , , ) ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , T_DOUBLE_ARROW , , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , , , , , , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , , , ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , , , , , , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , , , , , , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , , ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( . T_STRING ( ) , , , , , , , , . T_STRING ( ) , , , , , , , ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( . T_STRING ( ) , , , , ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , . T_STRING ( ) , , , , . T_STRING ( ) , , , , T_DOUBLE_ARROW , , , , , , , ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , , , , , , , , . T_STRING ( ) , , , , . T_STRING ( ) , , , T_DOUBLE_ARROW , , , , , , . T_STRING ( ) , , , , , , , ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( . T_STRING ( ) , , , , , , , , , . T_STRING ( ) , , , , ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , . T_STRING ( ) , , , , , , , , . T_STRING ( ) , , , , , ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( . T_STRING ( ) , , , ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( . T_STRING ( ) , , , , . T_STRING ( ) , , . T_STRING ( ) , , , , , . T_STRING ( ) , , ) ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , . T_STRING ( ) , , ) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_VARIABLE($forms) = T_ARRAY ( ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , , , , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , , , , , , , , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( . T_STRING ( ) , , , , , , , , . T_STRING ( ) , , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( . T_STRING ( ) , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , . T_STRING ( ) , , , , . T_STRING ( ) , , , , T_DOUBLE_ARROW , , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , , , , , , , , . T_STRING ( ) , , , , . T_STRING ( ) , , , T_DOUBLE_ARROW , , , , , , . T_STRING ( ) , , , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( . T_STRING ( ) , , , , , , , , , . T_STRING ( ) , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , , . T_STRING ( ) , , , , , , , , . T_STRING ( ) , , , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( . T_STRING ( ) , , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( . T_STRING ( ) , , , , . T_STRING ( ) , , . T_STRING ( ) , , , , , . T_STRING ( ) , , ) ; T_VARIABLE($forms) [ ] [ ] = T_ARRAY ( , . T_STRING ( ) , , ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_FUNCTION(PMA_config_get_validators) ( ) { T_STATIC T_VARIABLE($validators) = T_STRING ; T_IF ( T_VARIABLE($validators) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($cf) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($validators) = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( , T_ARRAY ( ) ) ; T_IF ( ! T_STRING ( ) ) { T_VARIABLE($org_cfg) = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($uvs) = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( , T_ARRAY ( ) ) ; T_FOREACH ( T_VARIABLE($uvs) T_AS T_VARIABLE($field) T_DOUBLE_ARROW T_VARIABLE($uv_list) ) { T_VARIABLE($uv_list) = T_ARRAY_CAST T_VARIABLE($uv_list) ; T_FOREACH ( T_VARIABLE($uv_list) T_AS & T_VARIABLE($uv) ) { T_IF ( ! T_STRING ( T_VARIABLE($uv) ) ) { T_CONTINUE ; } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($uv) ) ; T_VARIABLE($i) T_INC ) { T_IF ( T_STRING ( T_VARIABLE($uv) [ T_VARIABLE($i) ] , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($uv) [ T_VARIABLE($i) ] = T_STRING ( T_STRING ( T_VARIABLE($uv) [ T_VARIABLE($i) ] , T_LNUMBER ) , T_VARIABLE($org_cfg) T_OBJECT_OPERATOR T_STRING ) ; } } } T_VARIABLE($validators) [ T_VARIABLE($field) ] = T_ISSET ( T_VARIABLE($validators) [ T_VARIABLE($field) ] ) ? T_STRING ( T_ARRAY_CAST T_VARIABLE($validators) [ T_VARIABLE($field) ] , T_VARIABLE($uv_list) ) : T_VARIABLE($uv_list) ; } } } T_RETURN T_VARIABLE($validators) ; } T_FUNCTION(PMA_config_validate) ( T_VARIABLE($validator_id) , & T_VARIABLE($values) , T_VARIABLE($isPostSource) ) { T_VARIABLE($validator_id) = T_ARRAY_CAST T_VARIABLE($validator_id) ; T_VARIABLE($validators) = T_STRING ( ) ; T_VARIABLE($vids) = T_ARRAY ( ) ; T_VARIABLE($cf) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_FOREACH ( T_VARIABLE($validator_id) T_AS & T_VARIABLE($vid) ) { T_VARIABLE($vid) = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($vid) ) ; T_IF ( T_ISSET ( T_VARIABLE($validators) [ T_VARIABLE($vid) ] ) ) { T_VARIABLE($vids) [ ] = T_VARIABLE($vid) ; } } T_IF ( T_EMPTY ( T_VARIABLE($vids) ) ) { T_RETURN T_STRING ; } T_VARIABLE($arguments) = T_ARRAY ( ) ; T_VARIABLE($key_map) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($values) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($k2) = T_VARIABLE($isPostSource) ? T_STRING ( , , T_VARIABLE($k) ) : T_VARIABLE($k) ; T_VARIABLE($k2) = T_STRING ( T_VARIABLE($k2) , ) ? T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($k2) ) : T_VARIABLE($k2) ; T_VARIABLE($key_map) [ T_VARIABLE($k2) ] = T_VARIABLE($k) ; T_VARIABLE($arguments) [ T_VARIABLE($k2) ] = T_VARIABLE($v) ; } T_VARIABLE($result) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($vids) T_AS T_VARIABLE($vid) ) { T_FOREACH ( T_ARRAY_CAST T_VARIABLE($validators) [ T_VARIABLE($vid) ] T_AS T_VARIABLE($validator) ) { T_VARIABLE($vdef) = T_ARRAY_CAST T_VARIABLE($validator) ; T_VARIABLE($vname) = T_STRING ( T_VARIABLE($vdef) ) ; T_VARIABLE($args) = T_STRING ( T_ARRAY ( T_VARIABLE($vid) , & T_VARIABLE($arguments) ) , T_VARIABLE($vdef) ) ; T_VARIABLE($r) = T_STRING ( T_VARIABLE($vname) , T_VARIABLE($args) ) ; T_IF ( T_STRING ( T_VARIABLE($r) ) ) { T_FOREACH ( T_VARIABLE($r) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($error_list) ) { T_IF ( ! T_VARIABLE($isPostSource) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($error_list) ) ) { T_CONTINUE ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($result) [ T_VARIABLE($key) ] = T_ARRAY ( ) ; } T_VARIABLE($result) [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($result) [ T_VARIABLE($key) ] , T_ARRAY_CAST T_VARIABLE($error_list) ) ; } } } } T_VARIABLE($new_result) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($result) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($k2) = T_ISSET ( T_VARIABLE($key_map) [ T_VARIABLE($k) ] ) ? T_VARIABLE($key_map) [ T_VARIABLE($k) ] : T_VARIABLE($k) ; T_VARIABLE($new_result) [ T_VARIABLE($k2) ] = T_VARIABLE($v) ; } T_RETURN T_EMPTY ( T_VARIABLE($new_result) ) ? T_STRING : T_VARIABLE($new_result) ; } T_FUNCTION(PMA_null_error_handler) ( ) { T_RETURN T_STRING ; } T_FUNCTION(test_php_errormsg) ( T_VARIABLE($start) = T_STRING ) { T_STATIC T_VARIABLE($old_html_errors) , T_VARIABLE($old_track_errors) , T_VARIABLE($old_error_reporting) ; T_STATIC T_VARIABLE($old_display_errors) ; T_IF ( T_VARIABLE($start) ) { T_VARIABLE($old_html_errors) = T_STRING ( ) ; T_VARIABLE($old_track_errors) = T_STRING ( ) ; T_VARIABLE($old_display_errors) = T_STRING ( ) ; T_VARIABLE($old_error_reporting) = T_STRING ( T_STRING ) ; T_STRING ( , T_STRING ) ; T_STRING ( , T_STRING ) ; T_STRING ( , T_STRING ) ; T_STRING ( ) ; T_STRING ( ) ; } T_ELSE { T_STRING ( ) ; T_STRING ( ) ; T_STRING ( T_VARIABLE($old_error_reporting) ) ; T_STRING ( , T_VARIABLE($old_html_errors) ) ; T_STRING ( , T_VARIABLE($old_track_errors) ) ; T_STRING ( , T_VARIABLE($old_display_errors) ) ; } } T_FUNCTION(test_db_connection) ( T_VARIABLE($extension) , T_VARIABLE($connect_type) , T_VARIABLE($host) , T_VARIABLE($port) , T_VARIABLE($socket) , T_VARIABLE($user) , T_VARIABLE($pass) = T_STRING , T_VARIABLE($error_key) = ) { T_VARIABLE($socket) = T_EMPTY ( T_VARIABLE($socket) ) T_BOOLEAN_OR T_VARIABLE($connect_type) T_IS_EQUAL ? T_STRING : T_VARIABLE($socket) ; T_VARIABLE($port) = T_EMPTY ( T_VARIABLE($port) ) T_BOOLEAN_OR T_VARIABLE($connect_type) T_IS_EQUAL ? T_STRING : . T_VARIABLE($port) ; T_VARIABLE($error) = T_STRING ; T_IF ( T_VARIABLE($extension) T_IS_EQUAL ) { T_WHILE ( T_LNUMBER ) { T_VARIABLE($drizzle) = @ T_STRING ( ) ; T_IF ( ! T_VARIABLE($drizzle) ) { T_VARIABLE($error) = T_STRING ( ) ; T_BREAK ; } T_VARIABLE($conn) = T_VARIABLE($socket) ? @ T_STRING ( T_VARIABLE($socket) , T_VARIABLE($user) , T_VARIABLE($pass) , T_STRING , T_LNUMBER ) : @ T_STRING ( T_VARIABLE($drizzle) , T_VARIABLE($host) , T_VARIABLE($port) , T_VARIABLE($user) , T_VARIABLE($pass) , T_STRING , T_LNUMBER ) ; T_IF ( ! T_VARIABLE($conn) ) { T_VARIABLE($error) = T_STRING ( ) ; T_STRING ( T_VARIABLE($drizzle) ) ; T_BREAK ; } T_VARIABLE($res) = @ T_STRING ( T_VARIABLE($conn) , ) ; T_IF ( ! T_VARIABLE($res) ) { T_VARIABLE($error) = T_STRING ( ) ; } T_ELSE { T_STRING ( T_VARIABLE($res) ) ; } T_STRING ( T_VARIABLE($conn) ) ; T_STRING ( T_VARIABLE($drizzle) ) ; T_BREAK ; } } T_ELSE T_IF ( T_VARIABLE($extension) T_IS_EQUAL ) { T_VARIABLE($conn) = @ T_STRING ( T_VARIABLE($host) . T_VARIABLE($socket) . T_VARIABLE($port) , T_VARIABLE($user) , T_VARIABLE($pass) ) ; T_IF ( ! T_VARIABLE($conn) ) { T_VARIABLE($error) = T_STRING ( ) ; } T_ELSE { T_STRING ( T_VARIABLE($conn) ) ; } } T_ELSE { T_VARIABLE($conn) = @ T_STRING ( T_VARIABLE($host) , T_VARIABLE($user) , T_VARIABLE($pass) , T_STRING , T_VARIABLE($port) , T_VARIABLE($socket) ) ; T_IF ( ! T_VARIABLE($conn) ) { T_VARIABLE($error) = T_STRING ( ) ; } T_ELSE { T_STRING ( T_VARIABLE($conn) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($php_errormsg) ) ) { T_VARIABLE($error) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($php_errormsg) ; } T_RETURN T_STRING ( T_VARIABLE($error) ) ? T_STRING : T_ARRAY ( T_VARIABLE($error_key) T_DOUBLE_ARROW T_VARIABLE($error) ) ; } T_FUNCTION(validate_server) ( T_VARIABLE($path) , T_VARIABLE($values) ) { T_VARIABLE($result) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($error) = T_STRING ; T_IF ( T_VARIABLE($values) [ ] T_IS_EQUAL T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($values) [ ] ) ) { T_VARIABLE($result) [ ] = T_STRING ( ) ; T_VARIABLE($error) = T_STRING ; } T_IF ( T_VARIABLE($values) [ ] T_IS_EQUAL T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($values) [ ] ) ) { T_VARIABLE($result) [ ] = T_STRING ( . ) ; T_VARIABLE($error) = T_STRING ; } T_IF ( T_VARIABLE($values) [ ] T_IS_EQUAL T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($values) [ ] ) ) { T_VARIABLE($result) [ ] = T_STRING ( ) ; T_VARIABLE($error) = T_STRING ; } T_IF ( ! T_VARIABLE($error) T_BOOLEAN_AND T_VARIABLE($values) [ ] T_IS_EQUAL ) { T_VARIABLE($password) = T_VARIABLE($values) [ ] ? T_STRING : T_VARIABLE($values) [ ] ; T_VARIABLE($test) = T_STRING ( T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , T_VARIABLE($password) , ) ; T_IF ( T_VARIABLE($test) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($result) , T_VARIABLE($test) ) ; } } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(validate_pmadb) ( T_VARIABLE($path) , T_VARIABLE($values) ) { T_VARIABLE($result) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($error) = T_STRING ; T_IF ( T_VARIABLE($values) [ ] T_IS_EQUAL ) { T_RETURN T_VARIABLE($result) ; } T_VARIABLE($result) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($values) [ ] T_IS_EQUAL ) { T_VARIABLE($result) [ ] = T_STRING ( ) ; T_VARIABLE($error) = T_STRING ; } T_IF ( T_VARIABLE($values) [ ] T_IS_EQUAL ) { T_VARIABLE($result) [ ] = T_STRING ( ) ; T_VARIABLE($error) = T_STRING ; } T_IF ( ! T_VARIABLE($error) ) { T_VARIABLE($test) = T_STRING ( T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , ) ; T_IF ( T_VARIABLE($test) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($result) , T_VARIABLE($test) ) ; } } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(validate_regex) ( T_VARIABLE($path) , T_VARIABLE($values) ) { T_VARIABLE($result) = T_ARRAY ( T_VARIABLE($path) T_DOUBLE_ARROW ) ; T_IF ( T_VARIABLE($values) [ T_VARIABLE($path) ] T_IS_EQUAL ) { T_RETURN T_VARIABLE($result) ; } T_STRING ( ) ; T_VARIABLE($matches) = T_ARRAY ( ) ; T_STRING ( . T_VARIABLE($values) [ T_VARIABLE($path) ] . , , T_VARIABLE($matches) ) ; T_STRING ( T_STRING ) ; T_IF ( T_ISSET ( T_VARIABLE($php_errormsg) ) ) { T_VARIABLE($error) = T_STRING ( , , T_VARIABLE($php_errormsg) ) ; T_RETURN T_ARRAY ( T_VARIABLE($path) T_DOUBLE_ARROW T_VARIABLE($error) ) ; } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(validate_trusted_proxies) ( T_VARIABLE($path) , T_VARIABLE($values) ) { T_VARIABLE($result) = T_ARRAY ( T_VARIABLE($path) T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_IF ( T_EMPTY ( T_VARIABLE($values) [ T_VARIABLE($path) ] ) ) { T_RETURN T_VARIABLE($result) ; } T_IF ( T_STRING ( T_VARIABLE($values) [ T_VARIABLE($path) ] ) ) { T_VARIABLE($lines) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($values) [ T_VARIABLE($path) ] T_AS T_VARIABLE($ip) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($lines) [ ] = T_STRING ( , T_VARIABLE($ip) ) ? T_VARIABLE($v) : T_VARIABLE($ip) . . T_VARIABLE($v) ; } } T_ELSE { T_VARIABLE($lines) = T_STRING ( , T_VARIABLE($values) [ T_VARIABLE($path) ] ) ; } T_FOREACH ( T_VARIABLE($lines) T_AS T_VARIABLE($line) ) { T_VARIABLE($line) = T_STRING ( T_VARIABLE($line) ) ; T_VARIABLE($matches) = T_ARRAY ( ) ; T_IF ( ! T_STRING ( , T_VARIABLE($line) , T_VARIABLE($matches) ) ) { T_VARIABLE($result) [ T_VARIABLE($path) ] [ ] = T_STRING ( ) . . T_VARIABLE($line) ; T_CONTINUE ; } T_IF ( T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] , T_STRING , T_STRING ) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] , T_STRING , T_STRING ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($ip) = T_STRING ( T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] ) ) ; T_VARIABLE($result) [ T_VARIABLE($path) ] [ ] = T_STRING ( T_STRING ( ) , T_VARIABLE($ip) ) ; T_CONTINUE ; } } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(test_number) ( T_VARIABLE($path) , T_VARIABLE($values) , T_VARIABLE($allow_neg) , T_VARIABLE($allow_zero) , T_VARIABLE($max_value) , T_VARIABLE($error_string) ) { T_IF ( T_VARIABLE($values) [ T_VARIABLE($path) ] T_IS_IDENTICAL ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($values) [ T_VARIABLE($path) ] ) T_IS_NOT_EQUAL T_VARIABLE($values) [ T_VARIABLE($path) ] T_BOOLEAN_OR ( ! T_VARIABLE($allow_neg) T_BOOLEAN_AND T_VARIABLE($values) [ T_VARIABLE($path) ] < T_LNUMBER ) T_BOOLEAN_OR ( ! T_VARIABLE($allow_zero) T_BOOLEAN_AND T_VARIABLE($values) [ T_VARIABLE($path) ] T_IS_EQUAL T_LNUMBER ) T_BOOLEAN_OR T_VARIABLE($values) [ T_VARIABLE($path) ] > T_VARIABLE($max_value) ) { T_RETURN T_VARIABLE($error_string) ; } T_RETURN ; } T_FUNCTION(validate_port_number) ( T_VARIABLE($path) , T_VARIABLE($values) ) { T_RETURN T_ARRAY ( T_VARIABLE($path) T_DOUBLE_ARROW T_STRING ( T_VARIABLE($path) , T_VARIABLE($values) , T_STRING , T_STRING , T_LNUMBER , T_STRING ( ) ) ) ; } T_FUNCTION(validate_positive_number) ( T_VARIABLE($path) , T_VARIABLE($values) ) { T_RETURN T_ARRAY ( T_VARIABLE($path) T_DOUBLE_ARROW T_STRING ( T_VARIABLE($path) , T_VARIABLE($values) , T_STRING , T_STRING , T_STRING , T_STRING ( ) ) ) ; } T_FUNCTION(validate_non_negative_number) ( T_VARIABLE($path) , T_VARIABLE($values) ) { T_RETURN T_ARRAY ( T_VARIABLE($path) T_DOUBLE_ARROW T_STRING ( T_VARIABLE($path) , T_VARIABLE($values) , T_STRING , T_STRING , T_STRING , T_STRING ( ) ) ) ; } T_FUNCTION(validate_by_regex) ( T_VARIABLE($path) , T_VARIABLE($values) , T_VARIABLE($regex) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($regex) , T_VARIABLE($values) [ T_VARIABLE($path) ] ) ; T_RETURN T_ARRAY ( T_VARIABLE($path) T_DOUBLE_ARROW ( T_VARIABLE($result) ? : T_STRING ( ) ) ) ; } T_FUNCTION(validate_upper_bound) ( T_VARIABLE($path) , T_VARIABLE($values) , T_VARIABLE($max_value) ) { T_VARIABLE($result) = T_VARIABLE($values) [ T_VARIABLE($path) ] T_IS_SMALLER_OR_EQUAL T_VARIABLE($max_value) ; T_RETURN T_ARRAY ( T_VARIABLE($path) T_DOUBLE_ARROW ( T_VARIABLE($result) ? : T_STRING ( T_STRING ( ) , T_VARIABLE($max_value) ) ) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_VARIABLE($cfg_db) = T_ARRAY ( ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( , , , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , , ) ) , T_DOUBLE_ARROW ) ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( , , , ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( , T_STRING , T_STRING ) ; T_VARIABLE($cfg_db) [ ] = ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( , ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( , , , , ) ; T_VARIABLE($cfg_db) [ ] = ; T_VARIABLE($cfg_db) [ ] = ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( , , ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( T_STRING , , , ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( , , ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( , ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( , , , , ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( , , , ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( , , , , ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( , , , ) ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($cfg_db) [ ] [ ] = T_ARRAY ( , , , ) ; T_VARIABLE($cfg_db) [ ] [ ] = T_STRING ( T_ARRAY ( ) , T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_VARIABLE($cfg_db) [ ] [ ] = T_VARIABLE($cfg_db) [ ] [ ] = T_ARRAY ( , , , , , , , , ) ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = T_ARRAY ( , T_STRING , T_STRING ) ; T_VARIABLE($cfg_db) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($cfg_db) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($cfg_db) [ ] [ ] = T_ARRAY ( , , , , , , , , , , , , , ) ; T_VARIABLE($cfg_db) [ ] [ ] = T_ARRAY ( , , , ) ; T_VARIABLE($cfg_db) [ ] [ ] = T_STRING ( T_ARRAY ( ) , T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_VARIABLE($cfg_db) [ ] [ ] = T_ARRAY ( , , ) ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($cfg_db) [ ] [ ] = T_VARIABLE($cfg_db) [ ] [ ] ; T_VARIABLE($cfg_db) [ ] [ ] = T_ARRAY ( , , ) ; T_VARIABLE($cfg_db) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = T_VARIABLE($cfg_db) [ ] [ ] ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] [ ] = T_VARIABLE($cfg_db) [ ] [ ] ; T_VARIABLE($cfg_db) [ ] [ ] = T_VARIABLE($cfg_db) [ ] [ ] ; T_VARIABLE($cfg_db) [ ] [ ] = ; T_VARIABLE($cfg_db) [ ] = T_ARRAY ( ) ; T_VARIABLE($cfg_db) [ ] [ ] = T_STRING ( ) ? : ; T_VARIABLE($cfg_dbcfg_db) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , ) ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , ) ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , ) ) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_ifSetOr) ( & T_VARIABLE($var) , T_VARIABLE($default) = T_STRING , T_VARIABLE($type) = ) { T_IF ( ! T_STRING ( T_VARIABLE($var) , T_VARIABLE($type) , T_VARIABLE($default) ) ) { T_RETURN T_VARIABLE($default) ; } T_RETURN T_VARIABLE($var) ; } T_FUNCTION(PMA_isValid) ( & T_VARIABLE($var) , T_VARIABLE($type) = , T_VARIABLE($compare) = T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($var) ) ) { T_RETURN T_STRING ; } T_IF ( T_VARIABLE($type) T_IS_IDENTICAL T_STRING ) { T_RETURN T_STRING ; } T_IF ( T_STRING ( T_VARIABLE($type) ) ) { T_RETURN T_STRING ( T_VARIABLE($var) , T_VARIABLE($type) ) ; } T_VARIABLE($type) = T_STRING ( T_VARIABLE($type) ) ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_VARIABLE($type) = ; T_BREAK ; T_CASE : T_VARIABLE($type) = ; T_BREAK ; T_CASE : T_VARIABLE($type) = ; T_BREAK ; T_CASE : T_VARIABLE($type) = ; T_BREAK ; T_CASE : T_VARIABLE($type) = ; T_BREAK ; T_CASE : T_VARIABLE($type) = ; T_BREAK ; } T_IF ( T_VARIABLE($type) T_IS_IDENTICAL ) { T_RETURN T_VARIABLE($var) T_IS_IDENTICAL T_VARIABLE($compare) ; } T_IF ( T_VARIABLE($type) T_IS_IDENTICAL ) { T_SWITCH ( T_STRING ( T_VARIABLE($compare) ) ) { T_CASE : T_CASE : T_VARIABLE($type) = ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($type) = ; T_BREAK ; T_DEFAULT : T_VARIABLE($type) = T_STRING ( T_VARIABLE($compare) ) ; } } T_ELSEIF ( T_VARIABLE($type) T_IS_IDENTICAL ) { T_VARIABLE($type) = T_STRING ( T_VARIABLE($compare) ) ; } T_IF ( T_VARIABLE($type) T_IS_IDENTICAL T_BOOLEAN_OR T_VARIABLE($type) T_IS_IDENTICAL ) { T_VARIABLE($is_scalar) = T_STRING ( T_VARIABLE($var) ) ; T_IF ( T_VARIABLE($is_scalar) T_BOOLEAN_AND T_VARIABLE($type) T_IS_IDENTICAL ) { T_RETURN T_BOOL_CAST T_STRING ( T_VARIABLE($var) ) ; } T_RETURN T_VARIABLE($is_scalar) ; } T_IF ( T_VARIABLE($type) T_IS_IDENTICAL ) { T_RETURN T_STRING ( T_VARIABLE($var) ) ; } T_IF ( T_STRING ( T_VARIABLE($var) ) T_IS_IDENTICAL T_VARIABLE($type) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_FUNCTION(PMA_securePath) ( T_VARIABLE($path) ) { T_VARIABLE($path) = T_STRING ( , , T_VARIABLE($path) ) ; T_RETURN T_VARIABLE($path) ; } T_FUNCTION(PMA_fatalError) ( T_VARIABLE($error_message) , T_VARIABLE($message_args) = T_STRING , T_VARIABLE($delete_session) = T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($message_args) ) ) { T_VARIABLE($error_message) = T_STRING ( T_VARIABLE($error_message) , T_VARIABLE($message_args) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($message_args) ) ) { T_VARIABLE($error_message) = T_STRING ( T_VARIABLE($error_message) , T_VARIABLE($message_args) ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($error_message) ) ) ; } T_ELSE { T_VARIABLE($error_message) = T_STRING ( T_VARIABLE($error_message) , T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_IF ( ! T_STRING ( ) ) { T_FUNCTION(__) ( T_VARIABLE($text) ) { T_RETURN T_VARIABLE($text) ; } } T_VARIABLE($error_header) = T_STRING ( ) ; T_VARIABLE($lang) = T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ T_LNUMBER ] ; T_VARIABLE($dir) = T_VARIABLE($GLOBALS) [ ] ; T_IF ( T_VARIABLE($delete_session) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_COOKIE) [ T_VARIABLE($GLOBALS) [ ] ] ) ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; } T_INCLUDE ; } T_IF ( ! T_STRING ( ) ) { T_EXIT ; } } T_FUNCTION(PMA_getPHPDocLink) ( T_VARIABLE($target) ) { T_VARIABLE($php_doc_languages) = T_ARRAY ( , , , , , , , , , , , ) ; T_VARIABLE($lang) = ; T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($php_doc_languages) ) ) { T_VARIABLE($lang) = T_VARIABLE($GLOBALS) [ ] ; } T_RETURN T_STRING ( . T_VARIABLE($lang) . . T_VARIABLE($target) ) ; } T_FUNCTION(PMA_warnMissingExtension) ( T_VARIABLE($extension) , T_VARIABLE($fatal) = T_STRING , T_VARIABLE($extra) = ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($message) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($message) = ; } T_VARIABLE($doclink) = T_STRING ( . T_VARIABLE($extension) . ) ; T_VARIABLE($message) = T_STRING ( T_VARIABLE($message) , . T_VARIABLE($doclink) . . T_VARIABLE($extension) . ) ; T_IF ( T_VARIABLE($extra) T_IS_NOT_EQUAL ) { T_VARIABLE($message) T_CONCAT_EQUAL . T_VARIABLE($extra) ; } T_IF ( T_VARIABLE($fatal) ) { T_STRING ( T_VARIABLE($message) ) ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($message) , T_STRING , , , T_STRING ) ; } } T_FUNCTION(PMA_getTableCount) ( T_VARIABLE($db) ) { T_VARIABLE($tables) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($tables) ) { T_VARIABLE($num_tables) = T_STRING ( T_VARIABLE($tables) ) ; T_STRING ( T_VARIABLE($tables) ) ; } T_ELSE { T_VARIABLE($num_tables) = T_LNUMBER ; } T_RETURN T_VARIABLE($num_tables) ; } T_FUNCTION(PMA_getRealSize) ( T_VARIABLE($size) = T_LNUMBER ) { T_IF ( ! T_VARIABLE($size) ) { T_RETURN T_LNUMBER ; } T_VARIABLE($scan) [ ] = T_LNUMBER ; T_VARIABLE($scan) [ ] = T_LNUMBER ; T_VARIABLE($scan) [ ] = T_LNUMBER ; T_VARIABLE($scan) [ ] = T_LNUMBER ; T_VARIABLE($scan) [ ] = T_LNUMBER ; T_VARIABLE($scan) [ ] = T_LNUMBER ; T_VARIABLE($scan) [ ] = T_LNUMBER ; T_FOREACH ( T_VARIABLE($scan) T_AS T_VARIABLE($unit) T_DOUBLE_ARROW T_VARIABLE($factor) ) { T_IF ( T_STRING ( T_VARIABLE($size) ) > T_STRING ( T_VARIABLE($unit) ) T_BOOLEAN_AND T_STRING ( T_STRING ( T_VARIABLE($size) , T_STRING ( T_VARIABLE($size) ) - T_STRING ( T_VARIABLE($unit) ) ) ) T_IS_EQUAL T_VARIABLE($unit) ) { T_RETURN T_STRING ( T_VARIABLE($size) , T_LNUMBER , T_STRING ( T_VARIABLE($size) ) - T_STRING ( T_VARIABLE($unit) ) ) * T_VARIABLE($factor) ; } } T_RETURN T_VARIABLE($size) ; } T_FUNCTION(PMA_arrayMergeRecursive) ( ) { T_SWITCH ( T_STRING ( ) ) { T_CASE T_LNUMBER : T_RETURN T_STRING ; T_BREAK ; T_CASE T_LNUMBER : T_RETURN T_STRING ( T_LNUMBER ) ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($args) = T_STRING ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_RETURN T_VARIABLE($args) [ T_LNUMBER ] ; } T_FOREACH ( T_VARIABLE($args) [ T_LNUMBER ] T_AS T_VARIABLE($key2) T_DOUBLE_ARROW T_VARIABLE($value2) ) { T_IF ( T_ISSET ( T_VARIABLE($args) [ T_LNUMBER ] [ T_VARIABLE($key2) ] ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($key2) ) ) { T_VARIABLE($args) [ T_LNUMBER ] [ T_VARIABLE($key2) ] = T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] [ T_VARIABLE($key2) ] , T_VARIABLE($value2) ) ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($key2) ) T_BOOLEAN_AND T_VARIABLE($key2) T_IS_EQUAL T_LNUMBER ) { T_UNSET ( T_VARIABLE($args) [ T_LNUMBER ] ) ; } T_VARIABLE($args) [ T_LNUMBER ] [ T_VARIABLE($key2) ] = T_VARIABLE($value2) ; } } T_RETURN T_VARIABLE($args) [ T_LNUMBER ] ; T_BREAK ; T_DEFAULT : T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($args) [ T_LNUMBER ] = T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] , T_VARIABLE($args) [ T_LNUMBER ] ) ; T_STRING ( T_VARIABLE($args) ) ; T_RETURN T_STRING ( , T_VARIABLE($args) ) ; T_BREAK ; } } T_FUNCTION(PMA_arrayWalkRecursive) ( & T_VARIABLE($array) , T_VARIABLE($function) , T_VARIABLE($apply_to_keys_also) = T_STRING ) { T_STATIC T_VARIABLE($recursive_counter) = T_LNUMBER ; T_IF ( T_INC T_VARIABLE($recursive_counter) > T_LNUMBER ) { T_STRING ( T_STRING ( ) ) ; } T_FOREACH ( T_VARIABLE($array) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_STRING ( T_VARIABLE($array) [ T_VARIABLE($key) ] , T_VARIABLE($function) , T_VARIABLE($apply_to_keys_also) ) ; } T_ELSE { T_VARIABLE($array) [ T_VARIABLE($key) ] = T_VARIABLE($function) ( T_VARIABLE($value) ) ; } T_IF ( T_VARIABLE($apply_to_keys_also) T_BOOLEAN_AND T_STRING ( T_VARIABLE($key) ) ) { T_VARIABLE($new_key) = T_VARIABLE($function) ( T_VARIABLE($key) ) ; T_IF ( T_VARIABLE($new_key) T_IS_NOT_EQUAL T_VARIABLE($key) ) { T_VARIABLE($array) [ T_VARIABLE($new_key) ] = T_VARIABLE($array) [ T_VARIABLE($key) ] ; T_UNSET ( T_VARIABLE($array) [ T_VARIABLE($key) ] ) ; } } } T_VARIABLE($recursive_counter) T_DEC ; } T_FUNCTION(PMA_checkPageValidity) ( & T_VARIABLE($page) , T_VARIABLE($whitelist) ) { T_IF ( ! T_ISSET ( T_VARIABLE($page) ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($page) ) ) { T_RETURN T_STRING ; } T_IF ( T_STRING ( T_VARIABLE($page) , T_VARIABLE($whitelist) ) ) { T_RETURN T_STRING ; } T_ELSEIF ( T_STRING ( T_STRING ( T_VARIABLE($page) , T_LNUMBER , T_STRING ( T_VARIABLE($page) . , ) ) , T_VARIABLE($whitelist) ) ) { T_RETURN T_STRING ; } T_ELSE { T_VARIABLE($_page) = T_STRING ( T_VARIABLE($page) ) ; T_IF ( T_STRING ( T_STRING ( T_VARIABLE($_page) , T_LNUMBER , T_STRING ( T_VARIABLE($_page) . , ) ) , T_VARIABLE($whitelist) ) ) { T_RETURN T_STRING ; } } T_RETURN T_STRING ; } T_FUNCTION(PMA_getenv) ( T_VARIABLE($var_name) ) { T_IF ( T_ISSET ( T_VARIABLE($_SERVER) [ T_VARIABLE($var_name) ] ) ) { T_RETURN T_VARIABLE($_SERVER) [ T_VARIABLE($var_name) ] ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_ENV) [ T_VARIABLE($var_name) ] ) ) { T_RETURN T_VARIABLE($_ENV) [ T_VARIABLE($var_name) ] ; } T_ELSEIF ( T_STRING ( T_VARIABLE($var_name) ) ) { T_RETURN T_STRING ( T_VARIABLE($var_name) ) ; } T_ELSEIF ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($var_name) , T_STRING ) ) { T_RETURN T_STRING ( T_VARIABLE($var_name) , T_STRING ) ; } T_RETURN ; } T_FUNCTION(PMA_sendHeaderLocation) ( T_VARIABLE($uri) , T_VARIABLE($use_refresh) = T_STRING ) { T_IF ( T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($uri) ) > T_LNUMBER ) { T_INCLUDE_ONCE ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_ECHO . ; T_ECHO . ; T_ECHO . ; T_ECHO . ; T_ECHO . T_STRING ( T_VARIABLE($uri) ) . . ; T_ECHO . ; T_ECHO . ; T_ECHO . T_STRING ( T_VARIABLE($uri) ) . . ; T_ECHO . ; T_ECHO . ; T_ECHO . ; T_ECHO . ; T_ECHO . ; T_ECHO . ; T_ECHO . T_STRING ( T_VARIABLE($uri) ) . . T_STRING ( ) . . ; T_ECHO . ; T_ECHO . ; } T_ELSE { T_IF ( T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($uri) , ) T_IS_IDENTICAL T_STRING ) { T_STRING ( . T_VARIABLE($uri) . . T_STRING ) ; } T_ELSE { T_VARIABLE($separator) = T_STRING ( ) ; T_STRING ( . T_VARIABLE($uri) . T_VARIABLE($separator) . T_STRING ) ; } } T_ELSE { T_STRING ( ) ; T_IF ( T_STRING ( ) ) { T_IF ( T_STRING ( ) ) { T_ECHO ; T_STRING ( ) ; T_ECHO ; } T_STRING ( , T_STRING ) ; } T_IF ( T_STRING T_BOOLEAN_AND T_VARIABLE($use_refresh) ) { T_STRING ( . T_VARIABLE($uri) ) ; } T_ELSE { T_STRING ( . T_VARIABLE($uri) ) ; } } } } T_FUNCTION(PMA_noCacheHeader) ( ) { T_IF ( T_STRING ( ) ) { T_RETURN ; } T_STRING ( . T_STRING ( T_STRING ) ) ; T_STRING ( . ) ; T_IF ( T_STRING T_IS_EQUAL ) { T_STRING ( ) ; } T_ELSE { T_STRING ( ) ; T_STRING ( . T_STRING ( T_STRING ) ) ; } } T_FUNCTION(PMA_downloadHeader) ( T_VARIABLE($filename) , T_VARIABLE($mimetype) , T_VARIABLE($length) = T_LNUMBER , T_VARIABLE($no_cache) = T_STRING ) { T_IF ( T_VARIABLE($no_cache) ) { T_STRING ( ) ; } T_VARIABLE($filename) = T_STRING ( T_ARRAY ( , , , ) , , T_VARIABLE($filename) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($filename) ) ) { T_STRING ( ) ; T_STRING ( . T_VARIABLE($filename) . ) ; } T_STRING ( . T_VARIABLE($mimetype) ) ; T_STRING ( ) ; T_IF ( T_VARIABLE($length) > T_LNUMBER ) { T_STRING ( . T_VARIABLE($length) ) ; } } T_FUNCTION(PMA_arrayRead) ( T_VARIABLE($path) , T_VARIABLE($array) , T_VARIABLE($default) = T_STRING ) { T_VARIABLE($keys) = T_STRING ( , T_VARIABLE($path) ) ; T_VARIABLE($value) = & T_VARIABLE($array) ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($key) ) { T_IF ( ! T_ISSET ( T_VARIABLE($value) [ T_VARIABLE($key) ] ) ) { T_RETURN T_VARIABLE($default) ; } T_VARIABLE($value) = & T_VARIABLE($value) [ T_VARIABLE($key) ] ; } T_RETURN T_VARIABLE($value) ; } T_FUNCTION(PMA_arrayWrite) ( T_VARIABLE($path) , & T_VARIABLE($array) , T_VARIABLE($value) ) { T_VARIABLE($keys) = T_STRING ( , T_VARIABLE($path) ) ; T_VARIABLE($last_key) = T_STRING ( T_VARIABLE($keys) ) ; T_VARIABLE($a) = & T_VARIABLE($array) ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($key) ) { T_IF ( ! T_ISSET ( T_VARIABLE($a) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($a) [ T_VARIABLE($key) ] = T_ARRAY ( ) ; } T_VARIABLE($a) = & T_VARIABLE($a) [ T_VARIABLE($key) ] ; } T_VARIABLE($a) [ T_VARIABLE($last_key) ] = T_VARIABLE($value) ; } T_FUNCTION(PMA_arrayRemove) ( T_VARIABLE($path) , & T_VARIABLE($array) ) { T_VARIABLE($keys) = T_STRING ( , T_VARIABLE($path) ) ; T_VARIABLE($keys_last) = T_STRING ( T_VARIABLE($keys) ) ; T_VARIABLE($path) = T_ARRAY ( ) ; T_VARIABLE($depth) = T_LNUMBER ; T_VARIABLE($path) [ T_LNUMBER ] = & T_VARIABLE($array) ; T_VARIABLE($found) = T_STRING ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($key) ) { T_IF ( ! T_ISSET ( T_VARIABLE($path) [ T_VARIABLE($depth) ] [ T_VARIABLE($key) ] ) ) { T_VARIABLE($found) = T_STRING ; T_BREAK ; } T_VARIABLE($depth) T_INC ; T_VARIABLE($path) [ T_VARIABLE($depth) ] = & T_VARIABLE($path) [ T_VARIABLE($depth) - T_LNUMBER ] [ T_VARIABLE($key) ] ; } T_IF ( T_VARIABLE($found) ) { T_UNSET ( T_VARIABLE($path) [ T_VARIABLE($depth) ] [ T_VARIABLE($keys_last) ] ) ; T_VARIABLE($depth) T_DEC ; } T_FOR ( ; T_VARIABLE($depth) T_IS_GREATER_OR_EQUAL T_LNUMBER ; T_VARIABLE($depth) T_DEC ) { T_IF ( ! T_ISSET ( T_VARIABLE($path) [ T_VARIABLE($depth) + T_LNUMBER ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($path) [ T_VARIABLE($depth) + T_LNUMBER ] ) T_IS_EQUAL T_LNUMBER ) { T_UNSET ( T_VARIABLE($path) [ T_VARIABLE($depth) ] [ T_VARIABLE($keys) [ T_VARIABLE($depth) ] ] ) ; } T_ELSE { T_BREAK ; } } } T_FUNCTION(PMA_linkURL) ( T_VARIABLE($url) ) { T_IF ( ! T_STRING ( , T_VARIABLE($url) ) T_BOOLEAN_OR T_STRING ( ) ) { T_RETURN T_VARIABLE($url) ; } T_ELSE { T_IF ( ! T_STRING ( ) ) { T_INCLUDE_ONCE ; } T_VARIABLE($params) = T_ARRAY ( ) ; T_VARIABLE($params) [ ] = T_VARIABLE($url) ; T_RETURN . T_STRING ( T_VARIABLE($params) ) ; } } T_FUNCTION(PMA_addJSCode) ( T_VARIABLE($str) ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($str) ) ; } T_FUNCTION(PMA_addJSVar) ( T_VARIABLE($key) , T_VARIABLE($value) , T_VARIABLE($escape) = T_STRING ) { T_STRING ( T_STRING ( T_VARIABLE($key) , T_VARIABLE($value) , T_VARIABLE($escape) ) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(PMA_DBI_checkDbExtension) ( T_VARIABLE($extension) = ) { T_IF ( T_VARIABLE($extension) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( ) ) { T_RETURN T_STRING ; } T_ELSE T_IF ( T_STRING ( T_VARIABLE($extension) . ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_IF ( T_STRING ( ) ) { T_INCLUDE_ONCE ; } T_ELSE { T_IF ( ! T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] , T_STRING , T_STRING T_DOUBLE_COLON T_STRING ( , ) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] T_IS_IDENTICAL ) { T_VARIABLE($alternativ_extension) = ; } T_ELSE { T_VARIABLE($alternativ_extension) = ; } T_IF ( ! T_STRING ( T_VARIABLE($alternativ_extension) ) ) { T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] , T_STRING , T_STRING T_DOUBLE_COLON T_STRING ( , ) ) ; } T_VARIABLE($GLOBALS) [ ] [ ] [ ] = T_VARIABLE($alternativ_extension) ; T_UNSET ( T_VARIABLE($alternativ_extension) ) ; } T_INCLUDE_ONCE . T_VARIABLE($GLOBALS) [ ] [ ] [ ] . ; } T_FUNCTION(PMA_DBI_query) ( T_VARIABLE($query) , T_VARIABLE($link) = T_STRING , T_VARIABLE($options) = T_LNUMBER , T_VARIABLE($cache_affected_rows) = T_STRING ) { T_VARIABLE($res) = T_STRING ( T_VARIABLE($query) , T_VARIABLE($link) , T_VARIABLE($options) , T_VARIABLE($cache_affected_rows) ) T_LOGICAL_OR T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($link) ) , T_VARIABLE($query) ) ; T_RETURN T_VARIABLE($res) ; } T_FUNCTION(PMA_DBI_DBG_query) ( T_VARIABLE($query) , T_VARIABLE($link) , T_VARIABLE($result) , T_VARIABLE($time) ) { T_VARIABLE($hash) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($hash) ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($hash) ] [ ] T_INC ; } T_ELSE { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($hash) ] = T_ARRAY ( ) ; T_IF ( T_VARIABLE($result) T_IS_EQUAL T_STRING ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($hash) ] [ ] = . T_STRING ( T_VARIABLE($link) ) . ; } T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($hash) ] [ ] = T_LNUMBER ; T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($hash) ] [ ] = T_VARIABLE($query) ; T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($hash) ] [ ] = T_VARIABLE($time) ; } T_VARIABLE($trace) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($trace_step) ) { T_VARIABLE($trace) [ ] = ( T_ISSET ( T_VARIABLE($trace_step) [ ] ) ? T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($trace_step) [ ] ) : ) . ( T_ISSET ( T_VARIABLE($trace_step) [ ] ) ? . T_VARIABLE($trace_step) [ ] . : ) . ( T_ISSET ( T_VARIABLE($trace_step) [ ] ) ? T_VARIABLE($trace_step) [ ] : ) . ( T_ISSET ( T_VARIABLE($trace_step) [ ] ) ? T_VARIABLE($trace_step) [ ] : ) . ( T_ISSET ( T_VARIABLE($trace_step) [ ] ) ? T_VARIABLE($trace_step) [ ] : ) . . ( T_ISSET ( T_VARIABLE($trace_step) [ ] ) ? T_STRING ( , T_VARIABLE($trace_step) [ ] ) : ) . ; } T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($hash) ] [ ] [ ] = T_VARIABLE($trace) ; } T_FUNCTION(PMA_DBI_try_query) ( T_VARIABLE($query) , T_VARIABLE($link) = T_STRING , T_VARIABLE($options) = T_LNUMBER , T_VARIABLE($cache_affected_rows) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($time) = T_STRING ( T_STRING ) ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($query) , T_VARIABLE($link) , T_VARIABLE($options) ) ; T_IF ( T_VARIABLE($cache_affected_rows) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ( T_VARIABLE($link) , T_STRING ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($time) = T_STRING ( T_STRING ) - T_VARIABLE($time) ; T_STRING ( T_VARIABLE($query) , T_VARIABLE($link) , T_VARIABLE($result) , T_VARIABLE($time) ) ; } T_IF ( T_VARIABLE($result) T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( ) T_IS_EQUAL T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($query) ) ; } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(PMA_DBI_try_multi_query) ( T_VARIABLE($multi_query) = , T_VARIABLE($link) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_STRING ( T_VARIABLE($link) , T_VARIABLE($multi_query) ) ; } T_FUNCTION(PMA_DBI_convert_message) ( T_VARIABLE($message) ) { T_VARIABLE($encodings) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($server_language) = T_STRING ( , T_LNUMBER , T_LNUMBER ) ; T_IF ( T_VARIABLE($server_language) ) { T_VARIABLE($found) = T_ARRAY ( ) ; T_VARIABLE($match) = T_STRING ( , T_VARIABLE($server_language) , T_VARIABLE($found) ) ; T_IF ( T_VARIABLE($match) ) { T_VARIABLE($server_language) = T_VARIABLE($found) [ T_LNUMBER ] ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($server_language) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($encodings) [ T_VARIABLE($server_language) ] ) ) { T_VARIABLE($encoding) = T_VARIABLE($encodings) [ T_VARIABLE($server_language) ] ; } T_ELSE { T_VARIABLE($encoding) = ; } T_IF ( T_STRING ( ) ) { T_IF ( ( @ T_STRING ( T_STRING , ) ) T_BOOLEAN_AND ( @ T_STRING ( T_STRING , ) T_IS_EQUAL T_LNUMBER ) T_BOOLEAN_AND ( @ T_STRING ( T_STRING , ) T_IS_EQUAL T_LNUMBER ) ) { T_INCLUDE_ONCE ; T_VARIABLE($message) = T_STRING ( T_VARIABLE($encoding) , . T_VARIABLE($GLOBALS) [ ] [ ] , T_VARIABLE($message) ) ; } T_ELSE { T_VARIABLE($message) = T_STRING ( T_VARIABLE($encoding) , . T_VARIABLE($GLOBALS) [ ] [ ] , T_VARIABLE($message) ) ; } } T_ELSEIF ( T_STRING ( ) ) { T_VARIABLE($message) = T_STRING ( T_VARIABLE($encoding) . . , T_VARIABLE($message) ) ; } T_ELSEIF ( T_STRING ( ) ) { T_VARIABLE($message) = T_STRING ( T_VARIABLE($encoding) , , T_VARIABLE($message) ) ; } T_ELSEIF ( T_STRING ( ) ) { T_IF ( ! T_STRING ( T_VARIABLE($server_language) , T_ARRAY ( , , ) ) ) { T_VARIABLE($message) = T_STRING ( T_VARIABLE($message) , , T_VARIABLE($encoding) ) ; } } T_RETURN T_VARIABLE($message) ; } T_FUNCTION(PMA_DBI_get_tables) ( T_VARIABLE($database) , T_VARIABLE($link) = T_STRING ) { T_RETURN T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($database) ) . , T_STRING , T_LNUMBER , T_VARIABLE($link) , T_STRING ) ; } T_FUNCTION(PMA_usort_comparison_callback) ( T_VARIABLE($a) , T_VARIABLE($b) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($sorter) = ; } T_ELSE { T_VARIABLE($sorter) = ; } T_IF ( ! T_ISSET ( T_VARIABLE($a) [ T_VARIABLE($GLOBALS) [ ] ] ) T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($b) [ T_VARIABLE($GLOBALS) [ ] ] ) ) { T_RETURN T_LNUMBER ; } T_RETURN ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ? T_LNUMBER : - T_LNUMBER ) * T_VARIABLE($sorter) ( T_VARIABLE($a) [ T_VARIABLE($GLOBALS) [ ] ] , T_VARIABLE($b) [ T_VARIABLE($GLOBALS) [ ] ] ) ; } T_FUNCTION(PMA_DBI_get_tables_full) ( T_VARIABLE($database) , T_VARIABLE($table) = T_STRING , T_VARIABLE($tbl_is_group) = T_STRING , T_VARIABLE($link) = T_STRING , T_VARIABLE($limit_offset) = T_LNUMBER , T_VARIABLE($limit_count) = T_STRING , T_VARIABLE($sort_by) = , T_VARIABLE($sort_order) = ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($limit_count) ) { T_VARIABLE($limit_count) = T_VARIABLE($GLOBALS) [ ] [ ] ; } T_IF ( ! T_STRING ( T_VARIABLE($database) ) ) { T_VARIABLE($databases) = T_ARRAY ( T_VARIABLE($database) ) ; } T_ELSE { T_VARIABLE($databases) = T_VARIABLE($database) ; } T_VARIABLE($tables) = T_ARRAY ( ) ; T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_IF ( T_VARIABLE($table) ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($tbl_is_group) ) { T_VARIABLE($sql_where_table) = . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ) . ; } T_ELSEIF ( T_IS_IDENTICAL T_VARIABLE($tbl_is_group) ) { T_VARIABLE($sql_where_table) = . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ) . ; } T_ELSE { T_VARIABLE($sql_where_table) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; } } T_ELSE { T_VARIABLE($sql_where_table) = ; } T_VARIABLE($this_databases) = T_STRING ( , T_VARIABLE($databases) ) ; T_IF ( T_STRING ) { T_VARIABLE($engine_info) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; T_VARIABLE($stats_join) = ; T_IF ( T_ISSET ( T_VARIABLE($engine_info) [ ] ) T_BOOLEAN_AND T_VARIABLE($engine_info) [ ] [ ] T_IS_EQUAL ) { T_VARIABLE($stats_join) = . . ; } T_VARIABLE($sql) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($stats_join) T_ENCAPSED_AND_WHITESPACE . T_STRING ( , T_VARIABLE($this_databases) ) . . T_VARIABLE($sql_where_table) ; } T_ELSE { T_VARIABLE($sql) = . ( T_STRING ? : ) . . T_STRING ( , T_VARIABLE($this_databases) ) . . T_VARIABLE($sql_where_table) ; } T_VARIABLE($sql) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($sort_by) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($sort_order) ; T_IF ( T_VARIABLE($limit_count) ) { T_VARIABLE($sql) T_CONCAT_EQUAL . T_VARIABLE($limit_count) . . T_VARIABLE($limit_offset) ; } T_VARIABLE($tables) = T_STRING ( T_VARIABLE($sql) , T_ARRAY ( , ) , T_STRING , T_VARIABLE($link) ) ; T_UNSET ( T_VARIABLE($sql_where_table) , T_VARIABLE($sql) ) ; T_IF ( T_STRING ) { T_FOREACH ( T_ARRAY_CAST T_VARIABLE($database) T_AS T_VARIABLE($db) ) { T_VARIABLE($db_upper) = T_STRING ( T_VARIABLE($db) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($tables) [ T_VARIABLE($db) ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($tables) [ T_VARIABLE($db_upper) ] ) ) { T_VARIABLE($tables) [ T_VARIABLE($db) ] = T_VARIABLE($tables) [ T_VARIABLE($db_upper) ] ; T_UNSET ( T_VARIABLE($tables) [ T_VARIABLE($db_upper) ] ) ; } } } T_IF ( T_VARIABLE($sort_by) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] ) { T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($one_database_name) T_DOUBLE_ARROW T_VARIABLE($one_database_tables) ) { T_STRING ( T_VARIABLE($one_database_tables) , ) ; T_IF ( T_VARIABLE($sort_order) T_IS_EQUAL ) { T_VARIABLE($one_database_tables) = T_STRING ( T_VARIABLE($one_database_tables) ) ; } T_VARIABLE($tables) [ T_VARIABLE($one_database_name) ] = T_VARIABLE($one_database_tables) ; } } } T_IF ( T_EMPTY ( T_VARIABLE($tables) ) T_BOOLEAN_AND ! T_STRING ) { T_FOREACH ( T_VARIABLE($databases) T_AS T_VARIABLE($each_database) ) { T_IF ( T_VARIABLE($table) T_BOOLEAN_OR ( T_STRING T_IS_IDENTICAL T_VARIABLE($tbl_is_group) ) ) { T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($each_database) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_STRING ) ) . ; } T_ELSE { T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($each_database) ) ; } T_VARIABLE($useStatusCache) = T_STRING ; T_IF ( T_STRING ( ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_VARIABLE($statusCacheDatabases) = T_ARRAY_CAST T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_IF ( T_STRING ( T_VARIABLE($each_database) , T_VARIABLE($statusCacheDatabases) ) ) { T_VARIABLE($useStatusCache) = T_STRING ; } } T_VARIABLE($each_tables) = T_STRING ; T_IF ( T_VARIABLE($useStatusCache) ) { T_VARIABLE($cacheKey) = . T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] . . T_VARIABLE($sql) ) ; T_VARIABLE($each_tables) = T_STRING ( T_VARIABLE($cacheKey) ) ; } T_IF ( ! T_VARIABLE($each_tables) ) { T_VARIABLE($each_tables) = T_STRING ( T_VARIABLE($sql) , , T_STRING , T_VARIABLE($link) ) ; } T_IF ( T_VARIABLE($useStatusCache) ) { T_STRING ( T_VARIABLE($cacheKey) , T_VARIABLE($each_tables) , T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; } T_IF ( T_VARIABLE($sort_by) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( T_VARIABLE($each_tables) , ) ; T_IF ( T_VARIABLE($sort_order) T_IS_EQUAL ) { T_VARIABLE($each_tables) = T_STRING ( T_VARIABLE($each_tables) ) ; } } T_ELSE { T_IF ( T_VARIABLE($sort_by) T_IS_EQUAL ) { T_FOREACH ( T_VARIABLE($each_tables) T_AS T_VARIABLE($table_name) T_DOUBLE_ARROW T_VARIABLE($table_data) ) { $ { T_VARIABLE($sort_by) } [ T_VARIABLE($table_name) ] = T_STRING ( T_VARIABLE($table_data) [ ] + T_VARIABLE($table_data) [ ] ) ; } } T_ELSE { T_FOREACH ( T_VARIABLE($each_tables) T_AS T_VARIABLE($table_name) T_DOUBLE_ARROW T_VARIABLE($table_data) ) { $ { T_VARIABLE($sort_by) } [ T_VARIABLE($table_name) ] = T_STRING ( T_VARIABLE($table_data) [ T_VARIABLE($sort_by) ] ) ; } } T_IF ( T_VARIABLE($sort_order) T_IS_EQUAL ) { T_STRING ( $ T_VARIABLE($sort_by) , T_STRING , T_VARIABLE($each_tables) ) ; } T_ELSE { T_STRING ( $ T_VARIABLE($sort_by) , T_STRING , T_VARIABLE($each_tables) ) ; } T_UNSET ( $ T_VARIABLE($sort_by) ) ; } T_IF ( T_VARIABLE($limit_count) ) { T_VARIABLE($each_tables) = T_STRING ( T_VARIABLE($each_tables) , T_VARIABLE($limit_offset) , T_VARIABLE($limit_count) ) ; } T_FOREACH ( T_VARIABLE($each_tables) T_AS T_VARIABLE($table_name) T_DOUBLE_ARROW T_VARIABLE($each_table) ) { T_IF ( T_IS_IDENTICAL T_VARIABLE($tbl_is_group) T_BOOLEAN_AND T_LNUMBER T_IS_IDENTICAL T_STRING ( T_VARIABLE($each_table) [ ] , T_VARIABLE($table) ) ) { T_UNSET ( T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] ) ; T_CONTINUE ; } T_IF ( ! T_ISSET ( T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ) ) { T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ) ) { T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; } T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = T_VARIABLE($each_database) ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = & T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ; T_IF ( T_STRING ( T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] ) T_IS_IDENTICAL T_BOOLEAN_AND T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = ; } T_ELSE { T_VARIABLE($each_tables) [ T_VARIABLE($table_name) ] [ ] = ; } } T_VARIABLE($tables) [ T_VARIABLE($each_database) ] = T_VARIABLE($each_tables) ; } } T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($one_database) T_DOUBLE_ARROW T_VARIABLE($its_tables) ) { T_IF ( T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($one_database) ] ) ) { T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($one_database) ] = T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($one_database) ] + T_VARIABLE($tables) [ T_VARIABLE($one_database) ] ; } T_ELSE { T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($one_database) ] = T_VARIABLE($tables) [ T_VARIABLE($one_database) ] ; } } T_UNSET ( T_VARIABLE($one_database) , T_VARIABLE($its_tables) ) ; T_IF ( ! T_STRING ( T_VARIABLE($database) ) ) { T_IF ( T_ISSET ( T_VARIABLE($tables) [ T_VARIABLE($database) ] ) ) { T_RETURN T_VARIABLE($tables) [ T_VARIABLE($database) ] ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($tables) [ T_STRING ( T_VARIABLE($database) ) ] ) ) { T_RETURN T_VARIABLE($tables) [ T_STRING ( T_VARIABLE($database) ) ] ; } T_ELSE { T_IF ( T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($tables) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($keys) = T_STRING ( T_VARIABLE($tables) ) ; T_IF ( T_STRING ( T_STRING ( T_VARIABLE($keys) ) ) T_IS_EQUAL T_STRING ( T_VARIABLE($database) ) ) { T_RETURN T_STRING ( T_VARIABLE($tables) ) ; } } T_RETURN T_VARIABLE($tables) ; } } T_ELSE { T_RETURN T_VARIABLE($tables) ; } } T_FUNCTION(PMA_DBI_getVirtualTables) ( T_VARIABLE($db) ) { T_VARIABLE($tables_full) = T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($views) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tables_full) T_AS T_VARIABLE($table) T_DOUBLE_ARROW T_VARIABLE($tmp) ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ) { T_VARIABLE($views) [ ] = T_VARIABLE($table) ; } } T_RETURN T_VARIABLE($views) ; } T_FUNCTION(PMA_DBI_get_databases_full) ( T_VARIABLE($database) = T_STRING , T_VARIABLE($force_stats) = T_STRING , T_VARIABLE($link) = T_STRING , T_VARIABLE($sort_by) = , T_VARIABLE($sort_order) = , T_VARIABLE($limit_offset) = T_LNUMBER , T_VARIABLE($limit_count) = T_STRING ) { T_VARIABLE($sort_order) = T_STRING ( T_VARIABLE($sort_order) ) ; T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($limit_count) ) { T_VARIABLE($limit_count) = T_VARIABLE($GLOBALS) [ ] [ ] ; } T_VARIABLE($databases) = T_ARRAY ( ) ; T_VARIABLE($apply_limit_and_order_manual) = T_STRING ; T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($limit) = ; T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] ) { T_IF ( T_VARIABLE($limit_count) ) { T_VARIABLE($limit) = . T_VARIABLE($limit_count) . . T_VARIABLE($limit_offset) ; } T_VARIABLE($apply_limit_and_order_manual) = T_STRING ; } T_IF ( T_VARIABLE($database) ) { T_VARIABLE($sql_where_schema) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($database) ) . ; } T_ELSE { T_VARIABLE($sql_where_schema) = ; } T_IF ( T_STRING ) { T_VARIABLE($sql) = ; T_IF ( T_VARIABLE($force_stats) ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_VARIABLE($sql) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($force_stats) ) { T_VARIABLE($engine_info) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; T_VARIABLE($stats_join) = ; T_IF ( T_ISSET ( T_VARIABLE($engine_info) [ ] ) T_BOOLEAN_AND T_VARIABLE($engine_info) [ ] [ ] T_IS_EQUAL ) { T_VARIABLE($stats_join) = . . ; } T_VARIABLE($sql) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($stats_join) ; } T_VARIABLE($sql) T_CONCAT_EQUAL T_VARIABLE($sql_where_schema) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($sort_by) ) . . T_VARIABLE($sort_order) . T_VARIABLE($limit) ; } T_ELSE { T_VARIABLE($sql) = ; T_IF ( T_VARIABLE($force_stats) ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_VARIABLE($sql) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($force_stats) ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_VARIABLE($sql) T_CONCAT_EQUAL T_VARIABLE($sql_where_schema) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($sort_by) ) . . T_VARIABLE($sort_order) . T_VARIABLE($limit) ; } T_VARIABLE($databases) = T_STRING ( T_VARIABLE($sql) , , T_STRING , T_VARIABLE($link) ) ; T_VARIABLE($mysql_error) = T_STRING ( T_VARIABLE($link) ) ; T_IF ( ! T_STRING ( T_VARIABLE($databases) ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($mysql_error) , T_VARIABLE($sql) ) ; } T_VARIABLE($drops) = T_STRING ( T_STRING ( T_VARIABLE($databases) ) , T_ARRAY_CAST T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_STRING ( T_VARIABLE($drops) ) ) { T_FOREACH ( T_VARIABLE($drops) T_AS T_VARIABLE($drop) ) { T_UNSET ( T_VARIABLE($databases) [ T_VARIABLE($drop) ] ) ; } T_UNSET ( T_VARIABLE($drop) ) ; } T_UNSET ( T_VARIABLE($sql_where_schema) , T_VARIABLE($sql) , T_VARIABLE($drops) ) ; } T_ELSE { T_FOREACH ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($database_name) ) { T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] = T_VARIABLE($database_name) ; T_IF ( T_VARIABLE($force_stats) ) { T_INCLUDE_ONCE ; T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] = T_STRING ( T_VARIABLE($database_name) ) ; T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] = T_LNUMBER ; T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] = T_LNUMBER ; T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] = T_LNUMBER ; T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] = T_LNUMBER ; T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] = T_LNUMBER ; T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] = T_LNUMBER ; T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] = T_LNUMBER ; T_VARIABLE($res) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($database_name) ) . ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($res) ) ) { T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] T_INC ; T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] T_PLUS_EQUAL T_VARIABLE($row) [ ] ; T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] T_PLUS_EQUAL T_VARIABLE($row) [ ] ; T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] T_PLUS_EQUAL T_VARIABLE($row) [ ] ; T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] T_PLUS_EQUAL T_VARIABLE($row) [ ] ; T_IF ( T_IS_NOT_EQUAL T_VARIABLE($row) [ ] ) { T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] T_PLUS_EQUAL T_VARIABLE($row) [ ] ; } T_VARIABLE($databases) [ T_VARIABLE($database_name) ] [ ] T_PLUS_EQUAL T_VARIABLE($row) [ ] + T_VARIABLE($row) [ ] ; } T_STRING ( T_VARIABLE($res) ) ; T_UNSET ( T_VARIABLE($res) ) ; } } } T_IF ( T_VARIABLE($apply_limit_and_order_manual) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($sort_order) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($sort_by) ; T_STRING ( T_VARIABLE($databases) , ) ; T_UNSET ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_VARIABLE($limit_count) ) { T_VARIABLE($databases) = T_STRING ( T_VARIABLE($databases) , T_VARIABLE($limit_offset) , T_VARIABLE($limit_count) ) ; } } T_RETURN T_VARIABLE($databases) ; } T_FUNCTION(PMA_DBI_get_columns_full) ( T_VARIABLE($database) = T_STRING , T_VARIABLE($table) = T_STRING , T_VARIABLE($column) = T_STRING , T_VARIABLE($link) = T_STRING ) { T_VARIABLE($columns) = T_ARRAY ( ) ; T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($sql_wheres) = T_ARRAY ( ) ; T_VARIABLE($array_keys) = T_ARRAY ( ) ; T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($database) ) { T_VARIABLE($sql_wheres) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($database) ) . ; } T_ELSE { T_VARIABLE($array_keys) [ ] = ; } T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($table) ) { T_VARIABLE($sql_wheres) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; } T_ELSE { T_VARIABLE($array_keys) [ ] = ; } T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($column) ) { T_VARIABLE($sql_wheres) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) ) . ; } T_ELSE { T_VARIABLE($array_keys) [ ] = ; } T_IF ( T_STRING ) { T_VARIABLE($sql) = ; } T_ELSE { T_VARIABLE($sql) = ; } T_IF ( T_STRING ( T_VARIABLE($sql_wheres) ) ) { T_VARIABLE($sql) T_CONCAT_EQUAL . . T_STRING ( , T_VARIABLE($sql_wheres) ) ; } T_VARIABLE($columns) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($array_keys) , T_STRING , T_VARIABLE($link) ) ; T_UNSET ( T_VARIABLE($sql_wheres) , T_VARIABLE($sql) ) ; } T_ELSE { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($database) ) { T_FOREACH ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($database) ) { T_VARIABLE($columns) [ T_VARIABLE($database) ] = T_STRING ( T_VARIABLE($database) , T_STRING , T_STRING , T_VARIABLE($link) ) ; } T_RETURN T_VARIABLE($columns) ; } T_ELSEIF ( T_STRING T_IS_IDENTICAL T_VARIABLE($table) ) { T_VARIABLE($tables) = T_STRING ( T_VARIABLE($database) ) ; T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($table) ) { T_VARIABLE($columns) [ T_VARIABLE($table) ] = T_STRING ( T_VARIABLE($database) , T_VARIABLE($table) , T_STRING , T_VARIABLE($link) ) ; } T_RETURN T_VARIABLE($columns) ; } T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($database) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($column) ) { T_VARIABLE($sql) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) , T_STRING ) . ; } T_VARIABLE($columns) = T_STRING ( T_VARIABLE($sql) , , T_STRING , T_VARIABLE($link) ) ; } T_VARIABLE($ordinal_position) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($column_name) T_DOUBLE_ARROW T_VARIABLE($each_column) ) { T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = & T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = & T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = & T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = & T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = & T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = & T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = & T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = & T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = & T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = T_STRING ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = T_VARIABLE($database) ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = T_VARIABLE($table) ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = T_VARIABLE($ordinal_position) ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = T_STRING ( T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] , T_LNUMBER , T_STRING ( T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] , ) ) ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = T_STRING ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = T_STRING ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = T_STRING ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = T_STRING ; T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] = T_STRING ( T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] , T_LNUMBER , T_STRING ( T_VARIABLE($columns) [ T_VARIABLE($column_name) ] [ ] , ) ) ; T_VARIABLE($ordinal_position) T_INC ; } T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($column) ) { T_STRING ( T_VARIABLE($columns) ) ; T_VARIABLE($columns) = T_STRING ( T_VARIABLE($columns) ) ; } T_RETURN T_VARIABLE($columns) ; } T_FUNCTION(PMA_DBI_get_columns_sql) ( T_VARIABLE($database) , T_VARIABLE($table) , T_VARIABLE($column) = T_STRING , T_VARIABLE($full) = T_STRING ) { T_IF ( T_STRING ) { T_VARIABLE($sql) = . ( T_VARIABLE($full) ? : ) . . ( T_VARIABLE($full) ? : ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($database) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . ( ( T_VARIABLE($column) T_IS_NOT_EQUAL T_STRING ) ? . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) ) . : ) ; } T_ELSE { T_VARIABLE($sql) = . ( T_VARIABLE($full) ? : ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($database) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ( ( T_VARIABLE($column) T_IS_NOT_EQUAL T_STRING ) ? . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) , T_STRING ) . : ) ; } T_RETURN T_VARIABLE($sql) ; } T_FUNCTION(PMA_DBI_get_columns) ( T_VARIABLE($database) , T_VARIABLE($table) , T_VARIABLE($column) = T_STRING , T_VARIABLE($full) = T_STRING , T_VARIABLE($link) = T_STRING ) { T_VARIABLE($sql) = T_STRING ( T_VARIABLE($database) , T_VARIABLE($table) , T_VARIABLE($column) , T_VARIABLE($full) ) ; T_VARIABLE($fields) = T_STRING ( T_VARIABLE($sql) , , T_STRING , T_VARIABLE($link) ) ; T_IF ( ! T_STRING ( T_VARIABLE($fields) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($fields) ) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ; } T_IF ( T_STRING ) { T_VARIABLE($has_pk) = T_STRING ; T_VARIABLE($has_pk_candidates) = T_STRING ; T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($f) ) { T_IF ( T_VARIABLE($f) [ ] T_IS_EQUAL ) { T_VARIABLE($has_pk) = T_STRING ; T_BREAK ; } T_ELSE T_IF ( T_VARIABLE($f) [ ] T_IS_EQUAL T_BOOLEAN_AND ( T_VARIABLE($f) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($f) [ ] T_IS_EQUAL ) ) { T_VARIABLE($has_pk_candidates) = T_STRING ; } } T_IF ( ! T_VARIABLE($has_pk) T_BOOLEAN_AND T_VARIABLE($has_pk_candidates) ) { T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($database) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($fs) = T_STRING ( T_VARIABLE($sql) , , T_STRING , T_VARIABLE($link) ) ; T_VARIABLE($fs) = T_VARIABLE($fs) ? T_STRING ( T_VARIABLE($fs) ) : T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($fs) T_AS T_VARIABLE($f) ) { T_VARIABLE($fields) [ T_VARIABLE($f) ] [ ] = ; } } } T_RETURN ( T_VARIABLE($column) T_IS_NOT_EQUAL T_STRING ) ? T_STRING ( T_VARIABLE($fields) ) : T_VARIABLE($fields) ; } T_FUNCTION(PMA_DBI_get_column_names) ( T_VARIABLE($database) , T_VARIABLE($table) , T_VARIABLE($link) = T_STRING ) { T_VARIABLE($sql) = T_STRING ( T_VARIABLE($database) , T_VARIABLE($table) ) ; T_VARIABLE($fields) = T_STRING ( T_STRING ( T_VARIABLE($sql) , , T_STRING , T_VARIABLE($link) ) ) ; T_IF ( ! T_STRING ( T_VARIABLE($fields) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($fields) ) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ; } T_RETURN T_VARIABLE($fields) ; } T_FUNCTION(PMA_DBI_get_table_indexes_sql) ( T_VARIABLE($database) , T_VARIABLE($table) , T_VARIABLE($where) = T_STRING ) { T_IF ( T_STRING ) { T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($database) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; } T_ELSE { T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($database) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; } T_IF ( T_VARIABLE($where) ) { T_VARIABLE($sql) T_CONCAT_EQUAL ( T_STRING ? : ) . T_VARIABLE($where) . ; } T_RETURN T_VARIABLE($sql) ; } T_FUNCTION(PMA_DBI_get_table_indexes) ( T_VARIABLE($database) , T_VARIABLE($table) , T_VARIABLE($link) = T_STRING ) { T_VARIABLE($sql) = T_STRING ( T_VARIABLE($database) , T_VARIABLE($table) ) ; T_VARIABLE($indexes) = T_STRING ( T_VARIABLE($sql) , T_STRING , T_STRING , T_VARIABLE($link) ) ; T_IF ( ! T_STRING ( T_VARIABLE($indexes) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($indexes) ) < T_LNUMBER ) { T_RETURN T_ARRAY ( ) ; } T_RETURN T_VARIABLE($indexes) ; } T_FUNCTION(PMA_DBI_get_variable) ( T_VARIABLE($var) , T_VARIABLE($type) = T_STRING , T_VARIABLE($link) = T_STRING ) { T_IF ( T_VARIABLE($link) T_IS_IDENTICAL T_STRING ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_SWITCH ( T_VARIABLE($type) ) { T_CASE T_STRING : T_VARIABLE($modifier) = ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($modifier) = ; T_BREAK ; T_DEFAULT : T_VARIABLE($modifier) = ; } T_RETURN T_STRING ( . T_VARIABLE($modifier) . . T_VARIABLE($var) . , T_LNUMBER , T_LNUMBER , T_VARIABLE($link) ) ; } T_FUNCTION(PMA_DBI_postConnect) ( T_VARIABLE($link) , T_VARIABLE($is_controluser) = T_STRING ) { T_IF ( ! T_STRING ( ) ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ) { T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ) ; T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ) ; T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ) ; T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ) ; } T_ELSE { T_VARIABLE($version) = T_STRING ( , , T_VARIABLE($link) ) ; T_IF ( T_VARIABLE($version) ) { T_VARIABLE($match) = T_STRING ( , T_VARIABLE($version) [ ] ) ; T_STRING ( , T_INT_CAST T_VARIABLE($match) [ T_LNUMBER ] ) ; T_STRING ( , T_INT_CAST T_STRING ( , T_VARIABLE($match) [ T_LNUMBER ] , T_VARIABLE($match) [ T_LNUMBER ] , T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ) ) ; T_STRING ( , T_VARIABLE($version) [ ] ) ; T_STRING ( , T_VARIABLE($version) [ ] ) ; } T_ELSE { T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , ) ; T_STRING ( , ) ; } T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING , T_STRING ) ; T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING , T_STRING ) ; T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING , T_STRING ) ; T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING , T_STRING ) ; } T_STRING ( , T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER ) ; } T_IF ( ! T_STRING ) { T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_STRING ( , T_VARIABLE($link) , T_STRING ) ; T_VARIABLE($set_collation_con_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . ; T_STRING ( T_VARIABLE($set_collation_con_query) , T_VARIABLE($link) , T_STRING ) ; } T_ELSE { T_STRING ( , T_VARIABLE($link) , T_STRING ) ; } } T_IF ( T_STRING T_BOOLEAN_AND ! T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ) { T_VARIABLE($sql) = ; T_VARIABLE($engines) = T_STRING ( T_VARIABLE($sql) , , T_STRING , T_VARIABLE($link) ) ; T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($engines) , T_STRING ) ; } } T_FUNCTION(PMA_DBI_fetch_value) ( T_VARIABLE($result) , T_VARIABLE($row_number) = T_LNUMBER , T_VARIABLE($field) = T_LNUMBER , T_VARIABLE($link) = T_STRING ) { T_VARIABLE($value) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($result) , T_VARIABLE($link) , T_STRING , T_STRING ) ; } T_IF ( T_STRING ( T_VARIABLE($result) ) < ( T_VARIABLE($row_number) + T_LNUMBER ) ) { T_RETURN T_VARIABLE($value) ; } T_IF ( T_STRING ( T_VARIABLE($field) ) ) { T_VARIABLE($fetch_function) = ; } T_ELSE { T_VARIABLE($fetch_function) = ; } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($row_number) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($row) = T_VARIABLE($fetch_function) ( T_VARIABLE($result) ) ; } T_STRING ( T_VARIABLE($result) ) ; T_IF ( T_ISSET ( T_VARIABLE($row) [ T_VARIABLE($field) ] ) ) { T_VARIABLE($value) = T_VARIABLE($row) [ T_VARIABLE($field) ] ; } T_UNSET ( T_VARIABLE($row) ) ; T_RETURN T_VARIABLE($value) ; } T_FUNCTION(PMA_DBI_fetch_single_row) ( T_VARIABLE($result) , T_VARIABLE($type) = , T_VARIABLE($link) = T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($result) , T_VARIABLE($link) , T_STRING , T_STRING ) ; } T_IF ( ! T_STRING ( T_VARIABLE($result) ) ) { T_RETURN T_STRING ; } T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_VARIABLE($fetch_function) = ; T_BREAK ; T_CASE : T_VARIABLE($fetch_function) = ; T_BREAK ; T_CASE : T_DEFAULT : T_VARIABLE($fetch_function) = ; T_BREAK ; } T_VARIABLE($row) = T_VARIABLE($fetch_function) ( T_VARIABLE($result) ) ; T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_VARIABLE($row) ; } T_FUNCTION(PMA_DBI_fetch_result) ( T_VARIABLE($result) , T_VARIABLE($key) = T_STRING , T_VARIABLE($value) = T_STRING , T_VARIABLE($link) = T_STRING , T_VARIABLE($options) = T_LNUMBER ) { T_VARIABLE($resultrows) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($result) , T_VARIABLE($link) , T_VARIABLE($options) , T_STRING ) ; } T_IF ( ! T_VARIABLE($result) ) { T_RETURN T_VARIABLE($resultrows) ; } T_VARIABLE($fetch_function) = ; T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($key) T_BOOLEAN_AND T_LNUMBER T_IS_IDENTICAL T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($value) = T_LNUMBER ; T_VARIABLE($fetch_function) = ; } T_IF ( T_STRING ( T_VARIABLE($key) ) ) { T_VARIABLE($fetch_function) = ; } T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($key) T_BOOLEAN_AND T_STRING T_IS_IDENTICAL T_VARIABLE($value) ) { T_WHILE ( T_VARIABLE($row) = T_VARIABLE($fetch_function) ( T_VARIABLE($result) ) ) { T_VARIABLE($resultrows) [ ] = T_VARIABLE($row) ; } } T_ELSEIF ( T_STRING T_IS_IDENTICAL T_VARIABLE($key) ) { T_WHILE ( T_VARIABLE($row) = T_VARIABLE($fetch_function) ( T_VARIABLE($result) ) ) { T_VARIABLE($resultrows) [ ] = T_VARIABLE($row) [ T_VARIABLE($value) ] ; } } T_ELSEIF ( T_STRING T_IS_IDENTICAL T_VARIABLE($value) ) { T_IF ( T_STRING ( T_VARIABLE($key) ) ) { T_WHILE ( T_VARIABLE($row) = T_VARIABLE($fetch_function) ( T_VARIABLE($result) ) ) { T_VARIABLE($result_target) = & T_VARIABLE($resultrows) ; T_FOREACH ( T_VARIABLE($key) T_AS T_VARIABLE($key_index) ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($key_index) ) { T_VARIABLE($result_target) = & T_VARIABLE($result_target) [ ] ; T_CONTINUE ; } T_IF ( ! T_ISSET ( T_VARIABLE($result_target) [ T_VARIABLE($row) [ T_VARIABLE($key_index) ] ] ) ) { T_VARIABLE($result_target) [ T_VARIABLE($row) [ T_VARIABLE($key_index) ] ] = T_ARRAY ( ) ; } T_VARIABLE($result_target) = & T_VARIABLE($result_target) [ T_VARIABLE($row) [ T_VARIABLE($key_index) ] ] ; } T_VARIABLE($result_target) = T_VARIABLE($row) ; } } T_ELSE { T_WHILE ( T_VARIABLE($row) = T_VARIABLE($fetch_function) ( T_VARIABLE($result) ) ) { T_VARIABLE($resultrows) [ T_VARIABLE($row) [ T_VARIABLE($key) ] ] = T_VARIABLE($row) ; } } } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($key) ) ) { T_WHILE ( T_VARIABLE($row) = T_VARIABLE($fetch_function) ( T_VARIABLE($result) ) ) { T_VARIABLE($result_target) = & T_VARIABLE($resultrows) ; T_FOREACH ( T_VARIABLE($key) T_AS T_VARIABLE($key_index) ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($key_index) ) { T_VARIABLE($result_target) = & T_VARIABLE($result_target) [ ] ; T_CONTINUE ; } T_IF ( ! T_ISSET ( T_VARIABLE($result_target) [ T_VARIABLE($row) [ T_VARIABLE($key_index) ] ] ) ) { T_VARIABLE($result_target) [ T_VARIABLE($row) [ T_VARIABLE($key_index) ] ] = T_ARRAY ( ) ; } T_VARIABLE($result_target) = & T_VARIABLE($result_target) [ T_VARIABLE($row) [ T_VARIABLE($key_index) ] ] ; } T_VARIABLE($result_target) = T_VARIABLE($row) [ T_VARIABLE($value) ] ; } } T_ELSE { T_WHILE ( T_VARIABLE($row) = T_VARIABLE($fetch_function) ( T_VARIABLE($result) ) ) { T_VARIABLE($resultrows) [ T_VARIABLE($row) [ T_VARIABLE($key) ] ] = T_VARIABLE($row) [ T_VARIABLE($value) ] ; } } } T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_VARIABLE($resultrows) ; } T_FUNCTION(PMA_DBI_getCompatibilities) ( ) { T_IF ( T_STRING ) { T_RETURN T_ARRAY ( ) ; } T_VARIABLE($compats) = T_ARRAY ( ) ; T_VARIABLE($compats) [ ] = ; T_VARIABLE($compats) [ ] = ; T_VARIABLE($compats) [ ] = ; T_VARIABLE($compats) [ ] = ; T_VARIABLE($compats) [ ] = ; T_VARIABLE($compats) [ ] = ; T_VARIABLE($compats) [ ] = ; T_VARIABLE($compats) [ ] = ; T_RETURN T_VARIABLE($compats) ; } T_FUNCTION(PMA_DBI_get_warnings) ( T_VARIABLE($link) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_ARRAY ( ) ; } } T_RETURN T_STRING ( , T_STRING , T_STRING , T_VARIABLE($link) ) ; } T_FUNCTION(PMA_isSuperuser) ( ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_IF ( T_STRING ) { T_VARIABLE($result) = T_STRING ; } T_ELSE { T_VARIABLE($result) = T_BOOL_CAST T_STRING ( , T_VARIABLE($GLOBALS) [ ] , T_STRING ) ; } T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($result) , T_STRING ) ; } T_ELSE { T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING , T_STRING ) ; } T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; } T_FUNCTION(PMA_DBI_get_procedures_or_functions) ( T_VARIABLE($db) , T_VARIABLE($which) , T_VARIABLE($link) = T_STRING ) { T_IF ( T_STRING ) { T_RETURN T_ARRAY ( ) ; } T_VARIABLE($shows) = T_STRING ( . T_VARIABLE($which) . , T_STRING , T_STRING , T_VARIABLE($link) ) ; T_VARIABLE($result) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($shows) T_AS T_VARIABLE($one_show) ) { T_IF ( T_VARIABLE($one_show) [ ] T_IS_EQUAL T_VARIABLE($db) T_BOOLEAN_AND T_VARIABLE($one_show) [ ] T_IS_EQUAL T_VARIABLE($which) ) { T_VARIABLE($result) [ ] = T_VARIABLE($one_show) [ ] ; } } T_RETURN ( T_VARIABLE($result) ) ; } T_FUNCTION(PMA_DBI_get_definition) ( T_VARIABLE($db) , T_VARIABLE($which) , T_VARIABLE($name) , T_VARIABLE($link) = T_STRING ) { T_VARIABLE($returned_field) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($query) = . T_VARIABLE($which) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name) ) ; T_RETURN ( T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_VARIABLE($returned_field) [ T_VARIABLE($which) ] ) ) ; } T_FUNCTION(PMA_DBI_get_triggers) ( T_VARIABLE($db) , T_VARIABLE($table) = , T_VARIABLE($delimiter) = ) { T_IF ( T_STRING ) { T_RETURN T_ARRAY ( ) ; } T_VARIABLE($result) = T_ARRAY ( ) ; T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($query) = . . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($table) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; } } T_ELSE { T_VARIABLE($query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($table) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_STRING ) . ; } } T_IF ( T_VARIABLE($triggers) = T_STRING ( T_VARIABLE($query) ) ) { T_FOREACH ( T_VARIABLE($triggers) T_AS T_VARIABLE($trigger) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($trigger) [ ] = T_VARIABLE($trigger) [ ] ; T_VARIABLE($trigger) [ ] = T_VARIABLE($trigger) [ ] ; T_VARIABLE($trigger) [ ] = T_VARIABLE($trigger) [ ] ; T_VARIABLE($trigger) [ ] = T_VARIABLE($trigger) [ ] ; T_VARIABLE($trigger) [ ] = T_VARIABLE($trigger) [ ] ; T_VARIABLE($trigger) [ ] = T_VARIABLE($trigger) [ ] ; } T_VARIABLE($one_result) = T_ARRAY ( ) ; T_VARIABLE($one_result) [ ] = T_VARIABLE($trigger) [ ] ; T_VARIABLE($one_result) [ ] = T_VARIABLE($trigger) [ ] ; T_VARIABLE($one_result) [ ] = T_VARIABLE($trigger) [ ] ; T_VARIABLE($one_result) [ ] = T_VARIABLE($trigger) [ ] ; T_VARIABLE($one_result) [ ] = T_VARIABLE($trigger) [ ] ; T_VARIABLE($one_result) [ ] = T_VARIABLE($trigger) [ ] ; T_VARIABLE($one_result) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($trigger) [ ] ) ; T_VARIABLE($one_result) [ ] = . T_VARIABLE($one_result) [ ] ; T_VARIABLE($one_result) [ ] = . T_VARIABLE($one_result) [ ] . . T_VARIABLE($trigger) [ ] . . T_VARIABLE($trigger) [ ] . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($trigger) [ ] ) . . . T_VARIABLE($trigger) [ ] . . T_VARIABLE($delimiter) . ; T_VARIABLE($result) [ ] = T_VARIABLE($one_result) ; } } T_VARIABLE($name) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($result) T_AS T_VARIABLE($value) ) { T_VARIABLE($name) [ ] = T_VARIABLE($value) [ ] ; } T_STRING ( T_VARIABLE($name) , T_STRING , T_VARIABLE($result) ) ; T_RETURN ( T_VARIABLE($result) ) ; } T_FUNCTION(PMA_DBI_formatError) ( T_VARIABLE($error_number) , T_VARIABLE($error_message) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($error_message) ) ) { T_VARIABLE($error_message) = T_STRING ( T_VARIABLE($error_message) ) ; } T_VARIABLE($error_message) = T_STRING ( T_VARIABLE($error_message) ) ; T_VARIABLE($error) = . ( T_STRING_CAST T_VARIABLE($error_number) ) ; T_IF ( T_VARIABLE($error_number) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($error) T_CONCAT_EQUAL . T_VARIABLE($error_message) ; T_VARIABLE($error) T_CONCAT_EQUAL ; T_VARIABLE($error) T_CONCAT_EQUAL T_STRING ( . ) ; } T_ELSEIF ( T_VARIABLE($error_number) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($error) T_CONCAT_EQUAL . T_VARIABLE($error_message) ; T_VARIABLE($error) T_CONCAT_EQUAL . T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($error_number) T_IS_EQUAL T_LNUMBER ) { T_IF ( T_STRING ( T_VARIABLE($error_message) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($error) T_CONCAT_EQUAL . T_VARIABLE($error_message) ; T_VARIABLE($error) T_CONCAT_EQUAL . T_STRING ( ) ; } T_ELSE { T_VARIABLE($error) T_CONCAT_EQUAL . T_VARIABLE($error_message) . . T_STRING ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) . . T_STRING ( ) . ; } } T_ELSE { T_VARIABLE($error) T_CONCAT_EQUAL . T_VARIABLE($error_message) ; } T_RETURN T_VARIABLE($error) ; } T_FUNCTION(PMA_is_system_schema) ( T_VARIABLE($schema_name) , T_VARIABLE($test_for_mysql_schema) = T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($schema_name) ) T_IS_EQUAL T_BOOLEAN_OR ( ! T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($schema_name) ) T_IS_EQUAL ) T_BOOLEAN_OR ( T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($schema_name) ) T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($test_for_mysql_schema) T_BOOLEAN_AND ! T_STRING T_BOOLEAN_AND T_VARIABLE($schema_name) T_IS_EQUAL ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_VARIABLE($GLOBALS) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( ) ) ; T_VARIABLE($is_show_stats) = T_VARIABLE($cfg) [ ] ; T_VARIABLE($db_is_information_schema) = T_STRING ( T_VARIABLE($db) ) ; T_IF ( T_VARIABLE($db_is_information_schema) ) { T_VARIABLE($is_show_stats) = T_STRING ; } T_VARIABLE($err_url_0) = . T_STRING ( ) ; T_VARIABLE($err_url) = T_VARIABLE($cfg) [ ] . . T_STRING ( T_VARIABLE($db) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($is_db) ) T_BOOLEAN_OR ! T_VARIABLE($is_db) ) { T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($is_db) = T_STRING ( T_VARIABLE($db) ) ; T_IF ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($is_db) = T_STRING ; T_UNSET ( T_VARIABLE($GLOBALS) [ ] ) ; } } T_VARIABLE($uri) = T_VARIABLE($cfg) [ ] . . T_STRING ( , , ) . ( T_ISSET ( T_VARIABLE($message) ) ? . T_STRING ( T_VARIABLE($message) ) : ) . ; T_IF ( ! T_STRING ( T_VARIABLE($db) ) T_BOOLEAN_OR ! T_VARIABLE($is_db) ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ) ; } T_ELSE { T_STRING ( T_VARIABLE($uri) ) ; } T_EXIT ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_LIST ( T_VARIABLE($db_charset) ) = T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_UNSET ( T_VARIABLE($db_charset) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_EXIT ; } } T_VARIABLE($url_query) = T_STRING ( T_VARIABLE($db) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_IF ( ! T_STRING ( ) ) { T_STRING ( , T_INT_CAST T_STRING ( ) ) ; } T_FUNCTION(PMA_DBI_real_connect) ( T_VARIABLE($drizzle) , T_VARIABLE($host) , T_VARIABLE($port) , T_VARIABLE($uds) , T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($db) = T_STRING , T_VARIABLE($options) = T_STRING ) { T_IF ( T_VARIABLE($uds) ) { T_VARIABLE($con) = T_VARIABLE($drizzle) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($uds) , T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($db) , T_VARIABLE($options) ) ; } T_ELSE { T_VARIABLE($con) = T_VARIABLE($drizzle) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($host) , T_VARIABLE($port) , T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($db) , T_VARIABLE($options) ) ; } T_RETURN T_VARIABLE($con) ; } T_FUNCTION(PMA_DBI_connect) ( T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($is_controluser) = T_STRING , T_VARIABLE($server) = T_STRING , T_VARIABLE($auxiliary_connection) = T_STRING ) { T_GLOBAL T_VARIABLE($cfg) ; T_IF ( T_VARIABLE($server) ) { T_VARIABLE($server_port) = ( T_EMPTY ( T_VARIABLE($server) [ ] ) ) ? T_STRING : T_INT_CAST T_VARIABLE($server) [ ] ; T_VARIABLE($server_socket) = ( T_EMPTY ( T_VARIABLE($server) [ ] ) ) ? : T_VARIABLE($server) [ ] ; T_VARIABLE($server) [ ] = ( T_EMPTY ( T_VARIABLE($server) [ ] ) ) ? : T_VARIABLE($server) [ ] ; } T_ELSE { T_VARIABLE($server_port) = ( T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ) ? T_STRING : T_INT_CAST T_VARIABLE($cfg) [ ] [ ] ; T_VARIABLE($server_socket) = ( T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ) ? T_STRING : T_VARIABLE($cfg) [ ] [ ] ; } T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) T_IS_EQUAL ) { T_VARIABLE($GLOBALS) [ ] [ ] [ ] = ; } T_VARIABLE($drizzle) = T_NEW T_STRING ( ) ; T_VARIABLE($client_flags) = T_LNUMBER ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($client_flags) T_OR_EQUAL T_STRING ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($client_flags) T_OR_EQUAL T_STRING ; } T_IF ( ! T_VARIABLE($server) ) { T_VARIABLE($link) = @ T_STRING ( T_VARIABLE($drizzle) , T_VARIABLE($cfg) [ ] [ ] , T_VARIABLE($server_port) , T_VARIABLE($server_socket) , T_VARIABLE($user) , T_VARIABLE($password) , T_STRING , T_VARIABLE($client_flags) ) ; T_IF ( T_VARIABLE($link) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($cfg) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($cfg) [ ] [ ] T_BOOLEAN_AND ! T_VARIABLE($is_controluser) ) { T_VARIABLE($link) = @ T_STRING ( T_VARIABLE($drizzle) , T_VARIABLE($cfg) [ ] [ ] , T_VARIABLE($server_port) , T_VARIABLE($server_socket) , T_VARIABLE($user) , T_STRING , T_STRING , T_VARIABLE($client_flags) ) ; } } T_ELSE { T_VARIABLE($link) = @ T_STRING ( T_VARIABLE($drizzle) , T_VARIABLE($server) [ ] , T_VARIABLE($server_port) , T_VARIABLE($server_socket) , T_VARIABLE($user) , T_VARIABLE($password) ) ; } T_IF ( T_VARIABLE($link) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($is_controluser) ) { T_STRING ( T_STRING ( . ) , T_STRING ) ; T_RETURN T_STRING ; } T_IF ( ! T_VARIABLE($auxiliary_connection) ) { T_STRING ( T_VARIABLE($user) , ) ; T_GLOBAL T_VARIABLE($auth_plugin) ; T_VARIABLE($auth_plugin) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_RETURN T_STRING ; } } T_ELSE { T_STRING ( T_VARIABLE($link) , T_VARIABLE($is_controluser) ) ; } T_RETURN T_VARIABLE($link) ; } T_FUNCTION(PMA_DBI_select_db) ( T_VARIABLE($dbname) , T_VARIABLE($link) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_VARIABLE($link) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dbname) ) ; } T_FUNCTION(PMA_DBI_real_query) ( T_VARIABLE($query) , T_VARIABLE($link) , T_VARIABLE($options) ) { T_VARIABLE($buffer_mode) = T_VARIABLE($options) & T_STRING ? T_STRING T_DOUBLE_COLON T_STRING : T_STRING T_DOUBLE_COLON T_STRING ; T_VARIABLE($res) = T_VARIABLE($link) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($query) , T_VARIABLE($buffer_mode) ) ; T_RETURN T_VARIABLE($res) ; } T_FUNCTION(PMA_DBI_fetch_array) ( T_VARIABLE($result) ) { T_RETURN T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ) ; } T_FUNCTION(PMA_DBI_fetch_assoc) ( T_VARIABLE($result) ) { T_RETURN T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ) ; } T_FUNCTION(PMA_DBI_fetch_row) ( T_VARIABLE($result) ) { T_RETURN T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ) ; } T_FUNCTION(PMA_DBI_data_seek) ( T_VARIABLE($result) , T_VARIABLE($offset) ) { T_RETURN T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($offset) ) ; } T_FUNCTION(PMA_DBI_free_result) ( T_VARIABLE($result) ) { T_IF ( T_VARIABLE($result) T_INSTANCEOF T_STRING ) { T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_FUNCTION(PMA_DBI_more_results) ( ) { T_RETURN T_STRING ; } T_FUNCTION(PMA_DBI_next_result) ( ) { T_RETURN T_STRING ; } T_FUNCTION(PMA_DBI_get_host_info) ( T_VARIABLE($link) = T_STRING ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($link) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_VARIABLE($str) = T_VARIABLE($link) T_OBJECT_OPERATOR T_STRING ( ) ? T_VARIABLE($link) T_OBJECT_OPERATOR T_STRING ( ) . . T_VARIABLE($link) T_OBJECT_OPERATOR T_STRING ( ) . : ; T_RETURN T_VARIABLE($str) ; } T_FUNCTION(PMA_DBI_get_proto_info) ( T_VARIABLE($link) = T_STRING ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($link) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_VARIABLE($link) T_OBJECT_OPERATOR T_STRING ( ) ; } T_FUNCTION(PMA_DBI_get_client_info) ( ) { T_RETURN . T_STRING ( ) . ; } T_FUNCTION(PMA_DBI_getError) ( T_VARIABLE($link) = T_STRING ) { T_VARIABLE($GLOBALS) [ ] = T_LNUMBER ; T_IF ( T_VARIABLE($link) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($link) = T_STRING ; } T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($link) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = & T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($link) ) { T_VARIABLE($error_number) = T_STRING ( T_VARIABLE($link) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($error_message) = T_STRING ( T_VARIABLE($link) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($error_number) = T_STRING ( ) ; T_VARIABLE($error_message) = T_STRING ( ) ; } T_IF ( T_LNUMBER T_IS_EQUAL T_VARIABLE($error_number) ) { T_RETURN T_STRING ; } T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($error_number) ; T_RETURN T_STRING ( T_VARIABLE($error_number) , T_VARIABLE($error_message) ) ; } T_FUNCTION(PMA_DBI_num_rows) ( T_VARIABLE($result) ) { T_IF ( ! T_STRING ( T_VARIABLE($result) ) ) { T_RETURN @ T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_RETURN T_LNUMBER ; } } T_FUNCTION(PMA_DBI_insert_id) ( T_VARIABLE($link) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_STRING ( , T_LNUMBER , T_LNUMBER , T_VARIABLE($link) ) ; } T_FUNCTION(PMA_DBI_affected_rows) ( T_VARIABLE($link) = T_STRING , T_VARIABLE($get_from_cache) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_IF ( T_VARIABLE($get_from_cache) ) { T_RETURN T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_VARIABLE($link) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_FUNCTION(PMA_DBI_get_fields_meta) ( T_VARIABLE($result) ) { T_VARIABLE($typeAr) = T_ARRAY ( ) ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($columns) = T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($std_columns) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($column) ) { T_VARIABLE($c) = T_NEW T_STRING ( ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($typeAr) [ T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ] ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($result) , T_VARIABLE($k) ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING & T_STRING ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING & T_STRING ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING & T_STRING ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING & T_STRING ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING & T_STRING ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING & T_STRING ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING & T_STRING ) ; T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($c) T_OBJECT_OPERATOR T_STRING & T_STRING ) ; T_VARIABLE($std_columns) [ ] = T_VARIABLE($c) ; } T_RETURN T_VARIABLE($std_columns) ; } T_FUNCTION(PMA_DBI_num_fields) ( T_VARIABLE($result) ) { T_RETURN T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ( ) ; } T_FUNCTION(PMA_DBI_field_len) ( T_VARIABLE($result) , T_VARIABLE($i) ) { T_VARIABLE($colums) = T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_VARIABLE($colums) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ( ) ; } T_FUNCTION(PMA_DBI_field_name) ( T_VARIABLE($result) , T_VARIABLE($i) ) { T_VARIABLE($colums) = T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_VARIABLE($colums) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ( ) ; } T_FUNCTION(PMA_DBI_field_flags) ( T_VARIABLE($result) , T_VARIABLE($i) ) { T_VARIABLE($columns) = T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($f) = T_VARIABLE($columns) [ T_VARIABLE($i) ] ; T_VARIABLE($type) = T_VARIABLE($f) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($charsetnr) = T_VARIABLE($f) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($f) = T_VARIABLE($f) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($flags) = ; T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( ( T_VARIABLE($type) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($type) T_IS_EQUAL T_STRING ) T_BOOLEAN_AND T_LNUMBER T_IS_EQUAL T_VARIABLE($charsetnr) ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_RETURN T_STRING ( T_VARIABLE($flags) ) ; } T_FUNCTION(PMA_DBI_store_result) ( ) { T_RETURN T_STRING ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_drizzleShutdownFlush) ( ) { T_STRING ( ) ; } T_STRING ( ) ; T_STRING T_EXTENDS T_STRING { T_CONST T_STRING = T_LNUMBER ; T_CONST T_STRING = T_LNUMBER ; T_CONST T_STRING = T_LNUMBER ; T_CONST T_STRING = T_LNUMBER ; T_CONST T_STRING = T_LNUMBER ; T_PUBLIC T_STRING ( ) { T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_PUBLIC T_STRING ( T_VARIABLE($host) , T_VARIABLE($port) , T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($db) , T_VARIABLE($options) ) { T_VARIABLE($dcon) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($host) , T_VARIABLE($port) , T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($db) , T_VARIABLE($options) ) ; T_RETURN T_VARIABLE($dcon) T_INSTANCEOF T_STRING ? T_NEW T_STRING ( T_VARIABLE($dcon) ) : T_VARIABLE($dcon) ; } T_PUBLIC T_STRING ( T_VARIABLE($uds) , T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($db) , T_VARIABLE($options) ) { T_VARIABLE($dcon) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($uds) , T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($db) , T_VARIABLE($options) ) ; T_RETURN T_VARIABLE($dcon) T_INSTANCEOF T_STRING ? T_NEW T_STRING ( T_VARIABLE($dcon) ) : T_VARIABLE($dcon) ; } } T_STRING { T_PRIVATE T_VARIABLE($_dcon) ; T_PRIVATE T_VARIABLE($_lastResult) ; T_PUBLIC T_STRING ( T_STRING T_VARIABLE($dcon) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dcon) ; } T_PUBLIC T_STRING ( T_VARIABLE($query) , T_VARIABLE($bufferMode) = T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($fetchMode) = T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($result) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($result) T_INSTANCEOF T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_NEW T_STRING ( T_VARIABLE($result) , T_VARIABLE($bufferMode) , T_VARIABLE($fetchMode) ) ; T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_RETURN T_VARIABLE($result) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) : T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($method) , T_VARIABLE($args) ) { T_RETURN T_STRING ( T_ARRAY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($method) ) , T_VARIABLE($args) ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } } T_STRING { T_PRIVATE T_VARIABLE($_dresult) ; T_PRIVATE T_VARIABLE($_fetchMode) ; T_PRIVATE T_VARIABLE($_bufferMode) ; T_PRIVATE T_VARIABLE($_columns) = T_STRING ; T_PRIVATE T_VARIABLE($_columnNames) = T_STRING ; T_PUBLIC T_STRING ( T_STRING T_VARIABLE($dresult) , T_VARIABLE($bufferMode) , T_VARIABLE($fetchMode) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dresult) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($bufferMode) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($fetchMode) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; } } T_PUBLIC T_STRING ( T_VARIABLE($fetchMode) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($fetchMode) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_WHILE ( ( T_VARIABLE($column) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($column) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_ELSE { T_WHILE ( ( T_VARIABLE($column) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($column) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; } } } T_PUBLIC T_STRING ( ) { T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; } T_PRIVATE T_STRING ( & T_VARIABLE($row) , T_VARIABLE($fetchMode) ) { T_IF ( ! T_VARIABLE($row) ) { T_RETURN ; } T_SWITCH ( T_VARIABLE($fetchMode) ) { T_CASE T_STRING T_DOUBLE_COLON T_STRING : T_VARIABLE($row) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($row) ) ; T_BREAK ; T_CASE T_STRING T_DOUBLE_COLON T_STRING : T_VARIABLE($length) = T_STRING ( T_VARIABLE($row) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($length) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($row) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] ] = T_VARIABLE($row) [ T_VARIABLE($i) ] ; } T_BREAK ; T_DEFAULT : T_BREAK ; } } T_PUBLIC T_STRING ( T_VARIABLE($fetchMode) = T_STRING ) { T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_VARIABLE($fetchMode) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($fetchMode) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($row) = T_STRING ; T_SWITCH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_CASE T_STRING T_DOUBLE_COLON T_STRING : T_VARIABLE($row) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_BREAK ; T_CASE T_STRING T_DOUBLE_COLON T_STRING : T_VARIABLE($row) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_BREAK ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($row) , T_VARIABLE($fetchMode) ) ; T_RETURN T_VARIABLE($row) ; } T_PUBLIC T_STRING ( T_VARIABLE($row_index) ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_STRING ( T_STRING ( ) , T_STRING ) ; T_RETURN T_STRING ; } T_IF ( T_VARIABLE($row_index) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($row_index) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($row_index) ) ; T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_STRING ( T_STRING ( ) , T_STRING ) ; T_RETURN T_STRING ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; } T_PUBLIC T_STRING ( ) { T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_VARIABLE($GLOBALS) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( ) ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( ) ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , T_LNUMBER ) , T_ARRAY ( , T_LNUMBER ) , T_ARRAY ( , T_LNUMBER ) , T_ARRAY ( , T_LNUMBER ) , T_ARRAY ( , T_LNUMBER ) , T_ARRAY ( , T_LNUMBER ) , T_ARRAY ( , T_LNUMBER ) , T_ARRAY ( , T_LNUMBER ) , T_ARRAY ( , T_LNUMBER ) , T_ARRAY ( , T_LNUMBER ) , T_ARRAY ( , T_LNUMBER ) , T_ARRAY ( , T_LNUMBER ) , T_ARRAY ( , T_LNUMBER ) , T_ARRAY ( , T_LNUMBER ) , ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( ) , ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , ) , ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , ) , ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , ) , ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( ) , T_ARRAY ( ) , ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( ) , ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , , , , , ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , , , , , ) , T_ARRAY ( , , , , , ) , ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , , , , , ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , , , , , ) , T_ARRAY ( , , , , , ) , ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , , , , , , , ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , , , , , , , ) , T_ARRAY ( , , , , , , , ) , ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , , , ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , , , T_LNUMBER ) , ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , , , , , ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , , T_LNUMBER , , , T_LNUMBER ) , T_ARRAY ( , , T_LNUMBER , , , T_LNUMBER ) , ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( ) ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , , , ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , , ) , ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ) , ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ) , ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( T_LNUMBER ) ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) , ) ; T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($GLOBALS) [ ] = T_LNUMBER ; T_VARIABLE($GLOBALS) [ ] = T_LNUMBER ; T_VARIABLE($GLOBALS) [ ] [ ] [ ] = T_STRING ; T_IF ( ! T_STRING ( ) ) { T_STRING ( , T_LNUMBER ) ; } T_FUNCTION(PMA_DBI_real_multi_query) ( T_VARIABLE($link) , T_VARIABLE($query) ) { T_RETURN T_STRING ; } T_FUNCTION(PMA_DBI_connect) ( T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($is_controluser) = T_STRING , T_VARIABLE($server) = T_STRING , T_VARIABLE($auxiliary_connection) = T_STRING ) { T_RETURN T_STRING ; } T_FUNCTION(PMA_DBI_select_db) ( T_VARIABLE($dbname) , T_VARIABLE($link) = T_STRING ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($dbname) ; T_RETURN T_STRING ; } T_FUNCTION(PMA_DBI_real_query) ( T_VARIABLE($query) , T_VARIABLE($link) = T_STRING , T_VARIABLE($options) = T_LNUMBER ) { T_VARIABLE($query) = T_STRING ( T_STRING ( , , T_STRING ( , , T_VARIABLE($query) ) ) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_VARIABLE($query) ) { T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($i) ] [ ] = T_LNUMBER ; T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($i) ] [ ] ) ) { T_RETURN T_VARIABLE($i) ; } T_ELSE { T_RETURN T_STRING ; } } } T_ECHO T_ENCAPSED_AND_WHITESPACE T_VARIABLE($query) T_ENCAPSED_AND_WHITESPACE ; T_RETURN T_STRING ; } T_FUNCTION(PMA_DBI_fetch_any) ( T_VARIABLE($result) ) { T_VARIABLE($query_data) = T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($result) ] ; T_IF ( T_VARIABLE($query_data) [ ] T_IS_GREATER_OR_EQUAL T_STRING ( T_VARIABLE($query_data) [ ] ) ) { T_RETURN T_STRING ; } T_VARIABLE($ret) = T_VARIABLE($query_data) [ ] [ T_VARIABLE($query_data) [ ] ] ; T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($result) ] [ ] T_PLUS_EQUAL T_LNUMBER ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(PMA_DBI_fetch_array) ( T_VARIABLE($result) ) { T_VARIABLE($data) = T_STRING ( T_VARIABLE($result) ) ; T_IF ( T_STRING ( T_VARIABLE($data) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($result) ] [ ] ) ) { T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($data) [ T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($result) ] [ ] [ T_VARIABLE($key) ] ] = T_VARIABLE($val) ; } T_RETURN T_VARIABLE($data) ; } T_RETURN T_VARIABLE($data) ; } T_FUNCTION(PMA_DBI_fetch_assoc) ( T_VARIABLE($result) ) { T_VARIABLE($data) = T_STRING ( T_VARIABLE($result) ) ; T_IF ( T_STRING ( T_VARIABLE($data) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($result) ] [ ] ) ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($ret) [ T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($result) ] [ ] [ T_VARIABLE($key) ] ] = T_VARIABLE($val) ; } T_RETURN T_VARIABLE($ret) ; } T_RETURN T_VARIABLE($data) ; } T_FUNCTION(PMA_DBI_fetch_row) ( T_VARIABLE($result) ) { T_VARIABLE($data) = T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_VARIABLE($data) ; } T_FUNCTION(PMA_DBI_data_seek) ( T_VARIABLE($result) , T_VARIABLE($offset) ) { T_IF ( T_VARIABLE($offset) > T_STRING ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($i) ] [ ] ) ) { T_RETURN T_STRING ; } T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($i) ] [ ] = T_VARIABLE($offset) ; T_RETURN T_STRING ; } T_FUNCTION(PMA_DBI_free_result) ( T_VARIABLE($result) ) { T_RETURN ; } T_FUNCTION(PMA_DBI_more_results) ( ) { T_RETURN T_STRING ; } T_FUNCTION(PMA_DBI_next_result) ( ) { T_RETURN T_STRING ; } T_FUNCTION(PMA_DBI_num_rows) ( T_VARIABLE($result) ) { T_IF ( ! T_STRING ( T_VARIABLE($result) ) ) { T_RETURN T_STRING ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($result) ] [ ] ) ; } T_ELSE { T_RETURN T_LNUMBER ; } } T_FUNCTION(PMA_DBI_affected_rows) ( T_VARIABLE($link) = T_STRING , T_VARIABLE($get_from_cache) = T_STRING ) { T_RETURN T_LNUMBER ; } T_FUNCTION(PMA_DBI_num_fields) ( T_VARIABLE($result) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($result) ] [ ] ) ) { T_RETURN T_STRING ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($result) ] [ ] ) ; } T_ELSE { T_RETURN T_LNUMBER ; } } T_FUNCTION(PMA_DBI_getError) ( T_VARIABLE($link) = T_STRING ) { T_RETURN T_STRING ; }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_IF ( ! T_STRING ( ) ) { T_VARIABLE($client_api) = T_STRING ( , T_STRING ( ) ) ; T_STRING ( , T_INT_CAST T_STRING ( , T_VARIABLE($client_api) [ T_LNUMBER ] , T_VARIABLE($client_api) [ T_LNUMBER ] , T_STRING ( T_VARIABLE($client_api) [ T_LNUMBER ] ) ) ) ; T_UNSET ( T_VARIABLE($client_api) ) ; } T_FUNCTION(PMA_DBI_real_connect) ( T_VARIABLE($server) , T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($client_flags) , T_VARIABLE($persistent) = T_STRING ) { T_GLOBAL T_VARIABLE($cfg) ; T_IF ( T_EMPTY ( T_VARIABLE($client_flags) ) ) { T_IF ( T_VARIABLE($cfg) [ ] T_BOOLEAN_OR T_VARIABLE($persistent) ) { T_VARIABLE($link) = @ T_STRING ( T_VARIABLE($server) , T_VARIABLE($user) , T_VARIABLE($password) ) ; } T_ELSE { T_VARIABLE($link) = @ T_STRING ( T_VARIABLE($server) , T_VARIABLE($user) , T_VARIABLE($password) ) ; } } T_ELSE { T_IF ( T_VARIABLE($cfg) [ ] T_BOOLEAN_OR T_VARIABLE($persistent) ) { T_VARIABLE($link) = @ T_STRING ( T_VARIABLE($server) , T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($client_flags) ) ; } T_ELSE { T_VARIABLE($link) = @ T_STRING ( T_VARIABLE($server) , T_VARIABLE($user) , T_VARIABLE($password) , T_STRING , T_VARIABLE($client_flags) ) ; } } T_RETURN T_VARIABLE($link) ; } T_FUNCTION(PMA_DBI_real_multi_query) ( T_VARIABLE($link) , T_VARIABLE($query) ) { T_RETURN T_STRING ; } T_FUNCTION(PMA_DBI_connect) ( T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($is_controluser) = T_STRING , T_VARIABLE($server) = T_STRING , T_VARIABLE($auxiliary_connection) = T_STRING ) { T_GLOBAL T_VARIABLE($cfg) ; T_IF ( T_VARIABLE($server) ) { T_VARIABLE($server_port) = ( T_EMPTY ( T_VARIABLE($server) [ ] ) ) ? : . T_INT_CAST T_VARIABLE($server) [ ] ; T_VARIABLE($server_socket) = ( T_EMPTY ( T_VARIABLE($server) [ ] ) ) ? : . T_VARIABLE($server) [ ] ; } T_ELSE { T_VARIABLE($server_port) = ( T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ) ? : . T_INT_CAST T_VARIABLE($cfg) [ ] [ ] ; T_VARIABLE($server_socket) = ( T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ) ? : . T_VARIABLE($cfg) [ ] [ ] ; } T_VARIABLE($client_flags) = T_LNUMBER ; T_VARIABLE($client_flags) T_OR_EQUAL T_LNUMBER ; T_IF ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($cfg) [ ] [ ] ) { T_VARIABLE($client_flags) T_OR_EQUAL T_STRING ; } T_IF ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($cfg) [ ] [ ] ) { T_VARIABLE($client_flags) T_OR_EQUAL T_STRING ; } T_IF ( ! T_VARIABLE($server) ) { T_VARIABLE($link) = T_STRING ( T_VARIABLE($cfg) [ ] [ ] . T_VARIABLE($server_port) . T_VARIABLE($server_socket) , T_VARIABLE($user) , T_VARIABLE($password) , T_EMPTY ( T_VARIABLE($client_flags) ) ? T_STRING : T_VARIABLE($client_flags) ) ; T_IF ( T_EMPTY ( T_VARIABLE($link) ) T_BOOLEAN_AND T_VARIABLE($cfg) [ ] [ ] T_BOOLEAN_AND ! T_VARIABLE($is_controluser) ) { T_VARIABLE($link) = T_STRING ( T_VARIABLE($cfg) [ ] [ ] . T_VARIABLE($server_port) . T_VARIABLE($server_socket) , T_VARIABLE($user) , , T_EMPTY ( T_VARIABLE($client_flags) ) ? T_STRING : T_VARIABLE($client_flags) ) ; } } T_ELSE { T_IF ( ! T_ISSET ( T_VARIABLE($server) [ ] ) ) { T_VARIABLE($link) = T_STRING ( T_VARIABLE($server_socket) , T_VARIABLE($user) , T_VARIABLE($password) , T_STRING ) ; } T_ELSE { T_VARIABLE($link) = T_STRING ( T_VARIABLE($server) [ ] . T_VARIABLE($server_port) . T_VARIABLE($server_socket) , T_VARIABLE($user) , T_VARIABLE($password) , T_STRING ) ; } } T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_VARIABLE($is_controluser) ) { T_STRING ( T_STRING ( . ) , T_STRING ) ; T_RETURN T_STRING ; } T_IF ( ! T_VARIABLE($auxiliary_connection) ) { T_STRING ( T_VARIABLE($user) , ) ; T_GLOBAL T_VARIABLE($auth_plugin) ; T_VARIABLE($auth_plugin) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_RETURN T_STRING ; } } T_IF ( ! T_VARIABLE($server) ) { T_STRING ( T_VARIABLE($link) , T_VARIABLE($is_controluser) ) ; } T_RETURN T_VARIABLE($link) ; } T_FUNCTION(PMA_DBI_select_db) ( T_VARIABLE($dbname) , T_VARIABLE($link) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($link) ) ; } T_FUNCTION(PMA_DBI_real_query) ( T_VARIABLE($query) , T_VARIABLE($link) , T_VARIABLE($options) ) { T_IF ( T_VARIABLE($options) T_IS_EQUAL ( T_VARIABLE($options) | T_STRING ) ) { T_RETURN T_STRING ( T_VARIABLE($query) , T_VARIABLE($link) ) ; } T_ELSEIF ( T_VARIABLE($options) T_IS_EQUAL ( T_VARIABLE($options) | T_STRING ) ) { T_RETURN T_STRING ( T_VARIABLE($query) , T_VARIABLE($link) ) ; } T_ELSE { T_RETURN T_STRING ( T_VARIABLE($query) , T_VARIABLE($link) ) ; } } T_FUNCTION(PMA_DBI_fetch_array) ( T_VARIABLE($result) ) { T_RETURN T_STRING ( T_VARIABLE($result) , T_STRING ) ; } T_FUNCTION(PMA_DBI_fetch_assoc) ( T_VARIABLE($result) ) { T_RETURN T_STRING ( T_VARIABLE($result) , T_STRING ) ; } T_FUNCTION(PMA_DBI_fetch_row) ( T_VARIABLE($result) ) { T_RETURN T_STRING ( T_VARIABLE($result) , T_STRING ) ; } T_FUNCTION(PMA_DBI_data_seek) ( T_VARIABLE($result) , T_VARIABLE($offset) ) { T_RETURN T_STRING ( T_VARIABLE($result) , T_VARIABLE($offset) ) ; } T_FUNCTION(PMA_DBI_free_result) ( T_VARIABLE($result) ) { T_IF ( T_STRING ( T_VARIABLE($result) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($result) ) T_IS_IDENTICAL ) { T_STRING ( T_VARIABLE($result) ) ; } } T_FUNCTION(PMA_DBI_more_results) ( ) { T_RETURN T_STRING ; } T_FUNCTION(PMA_DBI_next_result) ( ) { T_RETURN T_STRING ; } T_FUNCTION(PMA_DBI_get_host_info) ( T_VARIABLE($link) = T_STRING ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($link) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_STRING ( T_VARIABLE($link) ) ; } T_FUNCTION(PMA_DBI_get_proto_info) ( T_VARIABLE($link) = T_STRING ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($link) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_STRING ( T_VARIABLE($link) ) ; } T_FUNCTION(PMA_DBI_get_client_info) ( ) { T_RETURN T_STRING ( ) ; } T_FUNCTION(PMA_DBI_getError) ( T_VARIABLE($link) = T_STRING ) { T_VARIABLE($GLOBALS) [ ] = T_LNUMBER ; T_IF ( T_VARIABLE($link) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($link) = T_STRING ; } T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($link) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = & T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($link) T_BOOLEAN_AND T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($link) ) { T_VARIABLE($error_number) = T_STRING ( T_VARIABLE($link) ) ; T_VARIABLE($error_message) = T_STRING ( T_VARIABLE($link) ) ; } T_ELSE { T_VARIABLE($error_number) = T_STRING ( ) ; T_VARIABLE($error_message) = T_STRING ( ) ; } T_IF ( T_LNUMBER T_IS_EQUAL T_VARIABLE($error_number) ) { T_RETURN T_STRING ; } T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($error_number) ; T_RETURN T_STRING ( T_VARIABLE($error_number) , T_VARIABLE($error_message) ) ; } T_FUNCTION(PMA_DBI_num_rows) ( T_VARIABLE($result) ) { T_IF ( ! T_STRING ( T_VARIABLE($result) ) ) { T_RETURN T_STRING ( T_VARIABLE($result) ) ; } T_ELSE { T_RETURN T_LNUMBER ; } } T_FUNCTION(PMA_DBI_insert_id) ( T_VARIABLE($link) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_STRING ( , T_LNUMBER , T_LNUMBER , T_VARIABLE($link) ) ; } T_FUNCTION(PMA_DBI_affected_rows) ( T_VARIABLE($link) = T_STRING , T_VARIABLE($get_from_cache) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_IF ( T_VARIABLE($get_from_cache) ) { T_RETURN T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ( T_VARIABLE($link) ) ; } } T_FUNCTION(PMA_DBI_get_fields_meta) ( T_VARIABLE($result) ) { T_VARIABLE($fields) = T_ARRAY ( ) ; T_VARIABLE($num_fields) = T_STRING ( T_VARIABLE($result) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($num_fields) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($field) = T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ; T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ; T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ; T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ; T_VARIABLE($fields) [ ] = T_VARIABLE($field) ; } T_RETURN T_VARIABLE($fields) ; } T_FUNCTION(PMA_DBI_num_fields) ( T_VARIABLE($result) ) { T_RETURN T_STRING ( T_VARIABLE($result) ) ; } T_FUNCTION(PMA_DBI_field_len) ( T_VARIABLE($result) , T_VARIABLE($i) ) { T_RETURN T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ; } T_FUNCTION(PMA_DBI_field_name) ( T_VARIABLE($result) , T_VARIABLE($i) ) { T_RETURN T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ; } T_FUNCTION(PMA_DBI_field_flags) ( T_VARIABLE($result) , T_VARIABLE($i) ) { T_RETURN T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ; } T_FUNCTION(PMA_DBI_store_result) ( ) { T_RETURN T_STRING ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_IF ( ! T_STRING ( ) ) { T_VARIABLE($client_api) = T_STRING ( , T_STRING ( ) ) ; T_STRING ( , T_INT_CAST T_STRING ( , T_VARIABLE($client_api) [ T_LNUMBER ] , T_VARIABLE($client_api) [ T_LNUMBER ] , T_STRING ( T_VARIABLE($client_api) [ T_LNUMBER ] ) ) ) ; T_UNSET ( T_VARIABLE($client_api) ) ; } T_STRING ( T_STRING ) ; T_IF ( ! T_STRING ( ) ) { T_STRING ( , T_LNUMBER ) ; } T_IF ( ! T_STRING ( ) ) { T_STRING ( , T_LNUMBER ) ; } T_IF ( ! T_STRING ( ) ) { T_STRING ( , T_LNUMBER ) ; } T_IF ( ! T_STRING ( ) ) { T_STRING ( , T_LNUMBER ) ; } T_FUNCTION(PMA_DBI_real_connect) ( T_VARIABLE($link) , T_VARIABLE($host) , T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($dbname) , T_VARIABLE($server_port) , T_VARIABLE($server_socket) , T_VARIABLE($client_flags) = T_STRING , T_VARIABLE($persistent) = T_STRING ) { T_GLOBAL T_VARIABLE($cfg) ; T_IF ( T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_IF ( T_VARIABLE($cfg) [ ] T_BOOLEAN_OR T_VARIABLE($persistent) ) { T_VARIABLE($host) = . T_VARIABLE($host) ; } } T_IF ( T_VARIABLE($client_flags) T_IS_IDENTICAL T_STRING ) { T_RETURN @ T_STRING ( T_VARIABLE($link) , T_VARIABLE($host) , T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($dbname) , T_VARIABLE($server_port) , T_VARIABLE($server_socket) ) ; } T_ELSE { T_RETURN @ T_STRING ( T_VARIABLE($link) , T_VARIABLE($host) , T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($dbname) , T_VARIABLE($server_port) , T_VARIABLE($server_socket) , T_VARIABLE($client_flags) ) ; } } T_FUNCTION(PMA_DBI_connect) ( T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($is_controluser) = T_STRING , T_VARIABLE($server) = T_STRING , T_VARIABLE($auxiliary_connection) = T_STRING ) { T_GLOBAL T_VARIABLE($cfg) ; T_IF ( T_VARIABLE($server) ) { T_VARIABLE($server_port) = ( T_EMPTY ( T_VARIABLE($server) [ ] ) ) ? T_STRING : T_INT_CAST T_VARIABLE($server) [ ] ; T_VARIABLE($server_socket) = ( T_EMPTY ( T_VARIABLE($server) [ ] ) ) ? : T_VARIABLE($server) [ ] ; T_VARIABLE($server) [ ] = ( T_EMPTY ( T_VARIABLE($server) [ ] ) ) ? : T_VARIABLE($server) [ ] ; } T_ELSE { T_VARIABLE($server_port) = ( T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ) ? T_STRING : T_INT_CAST T_VARIABLE($cfg) [ ] [ ] ; T_VARIABLE($server_socket) = ( T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ) ? T_STRING : T_VARIABLE($cfg) [ ] [ ] ; } T_VARIABLE($link) = T_STRING ( ) ; T_STRING ( T_VARIABLE($link) , T_STRING , T_STRING ) ; T_VARIABLE($client_flags) = T_LNUMBER ; T_IF ( T_VARIABLE($cfg) [ ] [ ] T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($client_flags) T_OR_EQUAL T_STRING ; } T_IF ( T_VARIABLE($cfg) [ ] [ ] T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($client_flags) T_OR_EQUAL T_STRING ; } T_IF ( ! T_VARIABLE($server) ) { T_VARIABLE($return_value) = @ T_STRING ( T_VARIABLE($link) , T_VARIABLE($cfg) [ ] [ ] , T_VARIABLE($user) , T_VARIABLE($password) , T_STRING , T_VARIABLE($server_port) , T_VARIABLE($server_socket) , T_VARIABLE($client_flags) ) ; T_IF ( T_VARIABLE($return_value) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($cfg) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($cfg) [ ] [ ] T_BOOLEAN_AND ! T_VARIABLE($is_controluser) ) { T_VARIABLE($return_value) = @ T_STRING ( T_VARIABLE($link) , T_VARIABLE($cfg) [ ] [ ] , T_VARIABLE($user) , , T_STRING , T_VARIABLE($server_port) , T_VARIABLE($server_socket) , T_VARIABLE($client_flags) ) ; } } T_ELSE { T_VARIABLE($return_value) = @ T_STRING ( T_VARIABLE($link) , T_VARIABLE($server) [ ] , T_VARIABLE($user) , T_VARIABLE($password) , T_STRING , T_VARIABLE($server_port) , T_VARIABLE($server_socket) ) ; } T_IF ( T_VARIABLE($return_value) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($is_controluser) ) { T_STRING ( T_STRING ( ) , T_STRING ) ; T_RETURN T_STRING ; } T_IF ( ! T_VARIABLE($auxiliary_connection) ) { T_STRING ( T_VARIABLE($user) , ) ; T_GLOBAL T_VARIABLE($auth_plugin) ; T_VARIABLE($auth_plugin) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_RETURN T_STRING ; } } T_ELSE { T_STRING ( T_VARIABLE($link) , T_VARIABLE($is_controluser) ) ; } T_RETURN T_VARIABLE($link) ; } T_FUNCTION(PMA_DBI_select_db) ( T_VARIABLE($dbname) , T_VARIABLE($link) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_STRING ( T_VARIABLE($link) , T_VARIABLE($dbname) ) ; } T_FUNCTION(PMA_DBI_real_query) ( T_VARIABLE($query) , T_VARIABLE($link) , T_VARIABLE($options) ) { T_IF ( T_VARIABLE($options) T_IS_EQUAL ( T_VARIABLE($options) | T_STRING ) ) { T_VARIABLE($method) = T_STRING ; } T_ELSEIF ( T_VARIABLE($options) T_IS_EQUAL ( T_VARIABLE($options) | T_STRING ) ) { T_VARIABLE($method) = T_STRING ; } T_ELSE { T_VARIABLE($method) = T_LNUMBER ; } T_RETURN T_STRING ( T_VARIABLE($link) , T_VARIABLE($query) , T_VARIABLE($method) ) ; } T_FUNCTION(PMA_DBI_real_multi_query) ( T_VARIABLE($link) , T_VARIABLE($query) ) { T_RETURN T_STRING ( T_VARIABLE($link) , T_VARIABLE($query) ) ; } T_FUNCTION(PMA_DBI_fetch_array) ( T_VARIABLE($result) ) { T_RETURN T_STRING ( T_VARIABLE($result) , T_STRING ) ; } T_FUNCTION(PMA_DBI_fetch_assoc) ( T_VARIABLE($result) ) { T_RETURN T_STRING ( T_VARIABLE($result) , T_STRING ) ; } T_FUNCTION(PMA_DBI_fetch_row) ( T_VARIABLE($result) ) { T_RETURN T_STRING ( T_VARIABLE($result) , T_STRING ) ; } T_FUNCTION(PMA_DBI_data_seek) ( T_VARIABLE($result) , T_VARIABLE($offset) ) { T_RETURN T_STRING ( T_VARIABLE($result) , T_VARIABLE($offset) ) ; } T_FUNCTION(PMA_DBI_free_result) ( T_VARIABLE($result) ) { T_IF ( T_VARIABLE($result) T_INSTANCEOF T_STRING ) { T_STRING ( T_VARIABLE($result) ) ; } } T_FUNCTION(PMA_DBI_more_results) ( T_VARIABLE($link) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_STRING ( T_VARIABLE($link) ) ; } T_FUNCTION(PMA_DBI_next_result) ( T_VARIABLE($link) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_STRING ( T_VARIABLE($link) ) ; } T_FUNCTION(PMA_DBI_store_result) ( ) { T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_STRING ( T_VARIABLE($link) ) ; } T_FUNCTION(PMA_DBI_get_host_info) ( T_VARIABLE($link) = T_STRING ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($link) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_STRING ( T_VARIABLE($link) ) ; } T_FUNCTION(PMA_DBI_get_proto_info) ( T_VARIABLE($link) = T_STRING ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($link) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_STRING ( T_VARIABLE($link) ) ; } T_FUNCTION(PMA_DBI_get_client_info) ( ) { T_RETURN T_STRING ( ) ; } T_FUNCTION(PMA_DBI_getError) ( T_VARIABLE($link) = T_STRING ) { T_VARIABLE($GLOBALS) [ ] = T_LNUMBER ; T_IF ( T_VARIABLE($link) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($link) = T_STRING ; } T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($link) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = & T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($link) ) { T_VARIABLE($error_number) = T_STRING ( T_VARIABLE($link) ) ; T_VARIABLE($error_message) = T_STRING ( T_VARIABLE($link) ) ; } T_ELSE { T_VARIABLE($error_number) = T_STRING ( ) ; T_VARIABLE($error_message) = T_STRING ( ) ; } T_IF ( T_LNUMBER T_IS_EQUAL T_VARIABLE($error_number) ) { T_RETURN T_STRING ; } T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($error_number) ; T_RETURN T_STRING ( T_VARIABLE($error_number) , T_VARIABLE($error_message) ) ; } T_FUNCTION(PMA_DBI_num_rows) ( T_VARIABLE($result) ) { T_IF ( ! T_STRING ( T_VARIABLE($result) ) ) { T_RETURN @ T_STRING ( T_VARIABLE($result) ) ; } T_ELSE { T_RETURN T_LNUMBER ; } } T_FUNCTION(PMA_DBI_insert_id) ( T_VARIABLE($link) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_STRING ( , T_LNUMBER , T_LNUMBER , T_VARIABLE($link) ) ; } T_FUNCTION(PMA_DBI_affected_rows) ( T_VARIABLE($link) = T_STRING , T_VARIABLE($get_from_cache) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_IF ( T_VARIABLE($get_from_cache) ) { T_RETURN T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_STRING ( T_VARIABLE($link) ) ; } } T_FUNCTION(PMA_DBI_get_fields_meta) ( T_VARIABLE($result) ) { T_VARIABLE($typeAr) = T_ARRAY ( ) ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($typeAr) [ T_STRING ] = ; T_VARIABLE($fields) = T_STRING ( T_VARIABLE($result) ) ; T_IF ( ! T_STRING ( T_VARIABLE($fields) ) ) { T_RETURN T_STRING ; } T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($field) ) { T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($typeAr) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] ; T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($result) , T_VARIABLE($k) ) ; T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING & T_STRING ) ; T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING & T_STRING ) ; T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING & T_STRING ) ; T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING & T_STRING ) ; T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING & T_STRING ) ; T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING & T_STRING ) ; T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING & T_STRING ) ; T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_BOOL_CAST ( T_VARIABLE($fields) [ T_VARIABLE($k) ] T_OBJECT_OPERATOR T_STRING & T_STRING ) ; } T_RETURN T_VARIABLE($fields) ; } T_FUNCTION(PMA_DBI_num_fields) ( T_VARIABLE($result) ) { T_RETURN T_STRING ( T_VARIABLE($result) ) ; } T_FUNCTION(PMA_DBI_field_len) ( T_VARIABLE($result) , T_VARIABLE($i) ) { T_RETURN T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(PMA_DBI_field_name) ( T_VARIABLE($result) , T_VARIABLE($i) ) { T_RETURN T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(PMA_DBI_field_flags) ( T_VARIABLE($result) , T_VARIABLE($i) ) { T_IF ( ! T_STRING ( ) ) { T_STRING ( , T_LNUMBER ) ; } T_VARIABLE($f) = T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ; T_VARIABLE($type) = T_VARIABLE($f) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($charsetnr) = T_VARIABLE($f) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($f) = T_VARIABLE($f) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($flags) = ; T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( ( T_VARIABLE($type) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($type) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($type) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($type) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($type) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($type) T_IS_EQUAL T_STRING ) T_BOOLEAN_AND T_LNUMBER T_IS_EQUAL T_VARIABLE($charsetnr) ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($f) & T_STRING ) { T_VARIABLE($flags) T_CONCAT_EQUAL ; } T_RETURN T_STRING ( T_VARIABLE($flags) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) T_BOOLEAN_OR T_VARIABLE($_SESSION) [ ] [ ] T_IS_NOT_EQUAL T_VARIABLE($db) ) { T_VARIABLE($_SESSION) [ ] [ ] = T_LNUMBER ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($db) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] = T_INT_CAST T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($pos) = T_VARIABLE($_SESSION) [ ] [ ] ; T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( ) ) ; T_VARIABLE($is_show_stats) = T_VARIABLE($cfg) [ ] ; T_VARIABLE($db_is_information_schema) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($is_show_stats) = T_STRING ; T_VARIABLE($db_is_information_schema) = T_STRING ; } T_VARIABLE($tables) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($tbl_group) ) ) { T_VARIABLE($tbl_group_sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tbl_group) ) . ; } T_ELSE { T_VARIABLE($tbl_group_sql) = ; } T_VARIABLE($tooltip_truename) = T_ARRAY ( ) ; T_VARIABLE($tooltip_aliasname) = T_ARRAY ( ) ; T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($cfg) [ ] ) { T_VARIABLE($db_info_result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ) ; T_IF ( T_VARIABLE($db_info_result) T_BOOLEAN_AND T_STRING ( T_VARIABLE($db_info_result) ) > T_LNUMBER ) { T_WHILE ( T_VARIABLE($tmp) = T_STRING ( T_VARIABLE($db_info_result) ) ) { T_IF ( T_STRING ( , T_VARIABLE($tmp) [ T_LNUMBER ] ) ) { T_VARIABLE($sot_cache) [ T_VARIABLE($tmp) [ T_LNUMBER ] ] = T_STRING ; } } T_STRING ( T_VARIABLE($db_info_result) ) ; T_IF ( T_ISSET ( T_VARIABLE($sot_cache) ) ) { T_VARIABLE($db_info_result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . T_VARIABLE($tbl_group_sql) . , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($db_info_result) T_BOOLEAN_AND T_STRING ( T_VARIABLE($db_info_result) ) > T_LNUMBER ) { T_WHILE ( T_VARIABLE($tmp) = T_STRING ( T_VARIABLE($db_info_result) ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($sot_cache) [ T_VARIABLE($tmp) [ T_LNUMBER ] ] ) ) { T_VARIABLE($sts_result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tmp) [ T_LNUMBER ] , T_STRING ) . ) ; T_VARIABLE($sts_tmp) = T_STRING ( T_VARIABLE($sts_result) ) ; T_STRING ( T_VARIABLE($sts_result) ) ; T_UNSET ( T_VARIABLE($sts_result) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($sts_tmp) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($sts_tmp) [ ] ) ) { T_VARIABLE($sts_tmp) [ ] = & T_VARIABLE($sts_tmp) [ ] ; } T_IF ( ! T_EMPTY ( T_VARIABLE($tbl_group) ) T_BOOLEAN_AND ! T_STRING ( . T_STRING ( T_VARIABLE($tbl_group) , ) . , T_VARIABLE($sts_tmp) [ ] ) ) { T_CONTINUE ; } T_IF ( T_VARIABLE($cfg) [ ] ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tooltip_truename) , T_VARIABLE($tooltip_aliasname) , T_VARIABLE($sts_tmp) ) ; } T_VARIABLE($tables) [ T_VARIABLE($sts_tmp) [ ] ] = T_VARIABLE($sts_tmp) ; } T_ELSE { T_VARIABLE($tables) [ T_VARIABLE($tmp) [ T_LNUMBER ] ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($tmp) [ T_LNUMBER ] ) ; } } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( T_VARIABLE($tables) , ) ; } T_VARIABLE($sot_ready) = T_STRING ; } T_ELSEIF ( T_VARIABLE($db_info_result) ) { T_STRING ( T_VARIABLE($db_info_result) ) ; } T_UNSET ( T_VARIABLE($sot_cache) ) ; } T_UNSET ( T_VARIABLE($tmp) ) ; } T_ELSEIF ( T_VARIABLE($db_info_result) ) { T_STRING ( T_VARIABLE($db_info_result) ) ; } } T_IF ( ! T_ISSET ( T_VARIABLE($sot_ready) ) ) { T_VARIABLE($sort) = ; T_VARIABLE($sort_order) = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sortable_name_mappings) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_IF ( T_ISSET ( T_VARIABLE($sortable_name_mappings) [ T_VARIABLE($_REQUEST) [ ] ] ) ) { T_VARIABLE($sort) = T_VARIABLE($sortable_name_mappings) [ T_VARIABLE($_REQUEST) [ ] ] ; T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($sort_order) = ; } } } T_IF ( ! T_EMPTY ( T_VARIABLE($tbl_group) ) ) { T_VARIABLE($tables) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($tbl_group) , T_STRING , T_STRING , T_LNUMBER , T_STRING , T_VARIABLE($sort) , T_VARIABLE($sort_order) ) ; } T_ELSE { T_VARIABLE($tables) = T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($total_num_tables) = T_STRING ( T_VARIABLE($tables) ) ; T_IF ( T_ISSET ( T_VARIABLE($sub_part) ) T_BOOLEAN_AND T_VARIABLE($sub_part) T_IS_EQUAL ) { T_VARIABLE($tables) = T_STRING ( T_VARIABLE($db) , T_STRING , T_STRING , T_STRING , T_LNUMBER , T_STRING , T_VARIABLE($sort) , T_VARIABLE($sort_order) ) ; } T_ELSE { T_VARIABLE($tables) = T_STRING ( T_VARIABLE($db) , T_STRING , T_STRING , T_STRING , T_VARIABLE($pos) , T_STRING , T_VARIABLE($sort) , T_VARIABLE($sort_order) ) ; } } T_IF ( T_VARIABLE($cfg) [ ] ) { T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($each_table) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tooltip_truename) , T_VARIABLE($tooltip_aliasname) , T_VARIABLE($each_table) ) ; } } } T_VARIABLE($num_tables) = T_STRING ( T_VARIABLE($tables) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($total_num_tables) ) ) { T_VARIABLE($total_num_tables) = T_VARIABLE($num_tables) ; } T_UNSET ( T_VARIABLE($each_table) , T_VARIABLE($tbl_group_sql) , T_VARIABLE($db_info_result) ) ; T_IF ( T_EMPTY ( T_VARIABLE($sub_part) ) ) { T_VARIABLE($sub_part) = ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PRIVATE T_VARIABLE($_db) ; T_PRIVATE T_VARIABLE($_criteriaTables) ; T_PRIVATE T_VARIABLE($_columnNames) ; T_PRIVATE T_VARIABLE($_criteria_column_count) ; T_PRIVATE T_VARIABLE($_criteria_row_count) ; T_PRIVATE T_VARIABLE($_criteriaColumnInsert) ; T_PRIVATE T_VARIABLE($_criteriaColumnDelete) ; T_PRIVATE T_VARIABLE($_criteriaRowInsert) ; T_PRIVATE T_VARIABLE($_criteria) ; T_PRIVATE T_VARIABLE($_prev_criteria) ; T_PRIVATE T_VARIABLE($_criteriaAndOrColumn) ; T_PRIVATE T_VARIABLE($_criteriaAndOrRow) ; T_PRIVATE T_VARIABLE($_realwidth) ; T_PRIVATE T_VARIABLE($_form_column_width) ; T_PRIVATE T_VARIABLE($_curField) ; T_PRIVATE T_VARIABLE($_curSort) ; T_PRIVATE T_VARIABLE($_curShow) ; T_PRIVATE T_VARIABLE($_curCriteria) ; T_PRIVATE T_VARIABLE($_curAndOrCol) ; T_PRIVATE T_VARIABLE($_new_column_count) ; T_PRIVATE T_VARIABLE($_new_row_count) ; T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($db) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($criteriaColumnCount) = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_LNUMBER , ) ; T_VARIABLE($criteriaColumnAdd) = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_LNUMBER , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($criteriaColumnCount) + T_VARIABLE($criteriaColumnAdd) , T_LNUMBER ) ; T_VARIABLE($rows) = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_LNUMBER , ) ; T_VARIABLE($criteriaRowAdd) = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_LNUMBER , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($rows) + T_VARIABLE($criteriaRowAdd) , T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_STRING , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_STRING , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : T_STRING ( T_LNUMBER , T_VARIABLE($criteriaColumnCount) , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : T_STRING ( T_LNUMBER , T_VARIABLE($criteriaColumnCount) , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : T_STRING ( T_LNUMBER , T_VARIABLE($criteriaColumnCount) , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : T_STRING ( T_LNUMBER , T_VARIABLE($criteriaColumnCount) , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : T_STRING ( T_LNUMBER , T_VARIABLE($criteriaColumnCount) , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; } T_PRIVATE T_STRING ( ) { T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , ) ) { T_FOREACH ( T_VARIABLE($_REQUEST) [ ] T_AS T_VARIABLE($each_table) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($each_table) ] = ; } } T_VARIABLE($all_tables) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . , T_STRING , T_STRING ) ; T_VARIABLE($all_tables_count) = T_STRING ( T_VARIABLE($all_tables) ) ; T_IF ( T_LNUMBER T_IS_EQUAL T_VARIABLE($all_tables_count) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_EXIT ; } T_WHILE ( T_LIST ( T_VARIABLE($table) ) = T_STRING ( T_VARIABLE($all_tables) ) ) { T_VARIABLE($columns) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) ) ; T_IF ( T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] = ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] = ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] T_IS_EQUAL ) { T_VARIABLE($each_table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($each_table) . ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($each_column) ) { T_VARIABLE($each_column) = T_VARIABLE($each_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($each_column) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($each_column) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_STRING ( T_VARIABLE($each_column) ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } } } T_STRING ( T_VARIABLE($all_tables) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . ; } T_PRIVATE T_STRING ( T_VARIABLE($column_number) , T_VARIABLE($selected) = ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_number) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($column) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($column) ) . . ( ( T_VARIABLE($column) T_IS_IDENTICAL T_VARIABLE($selected) ) ? : ) . . T_STRING ( , , T_STRING ( T_VARIABLE($column) ) ) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( T_VARIABLE($column_number) , T_VARIABLE($asc_selected) = , T_VARIABLE($desc_selected) = ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($column_number) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($asc_selected) . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($desc_selected) . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($new_column_count) = T_LNUMBER ; T_FOR ( T_VARIABLE($column_index) = T_LNUMBER ; T_VARIABLE($column_index) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($column_index) T_INC ) { T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_column_count) ) ; T_VARIABLE($new_column_count) T_INC ; } T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_CONTINUE ; } T_VARIABLE($selected) = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($column_index) ] ) ) { T_VARIABLE($selected) = T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($column_index) ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($new_column_count) ] = T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($column_index) ] ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_column_count) , T_VARIABLE($selected) ) ; T_VARIABLE($new_column_count) T_INC ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($new_column_count) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($new_column_count) = T_LNUMBER ; T_FOR ( T_VARIABLE($column_index) = T_LNUMBER ; T_VARIABLE($column_index) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($column_index) T_INC ) { T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_column_count) ) ; T_VARIABLE($new_column_count) T_INC ; } T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_CONTINUE ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($column_index) ] , - T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($column_index) ] = ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($new_column_count) ] = T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($column_index) ] ; T_VARIABLE($asc_selected) = ; } T_ELSE { T_VARIABLE($asc_selected) = ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($new_column_count) ] = T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($column_index) ] ; T_VARIABLE($desc_selected) = ; } T_ELSE { T_VARIABLE($desc_selected) = ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_column_count) , T_VARIABLE($asc_selected) , T_VARIABLE($desc_selected) ) ; T_VARIABLE($new_column_count) T_INC ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($new_column_count) = T_LNUMBER ; T_FOR ( T_VARIABLE($column_index) = T_LNUMBER ; T_VARIABLE($column_index) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($column_index) T_INC ) { T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($new_column_count) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($new_column_count) T_INC ; } T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_CONTINUE ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($column_index) ] ) ) { T_VARIABLE($checked_options) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($new_column_count) ] = T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($column_index) ] ; } T_ELSE { T_VARIABLE($checked_options) = ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($new_column_count) . . T_VARIABLE($checked_options) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($new_column_count) T_INC ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($new_column_count) = T_LNUMBER ; T_FOR ( T_VARIABLE($column_index) = T_LNUMBER ; T_VARIABLE($column_index) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($column_index) T_INC ) { T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($new_column_count) . . . . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($new_column_count) T_INC ; } T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_CONTINUE ; } T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) ) { T_VARIABLE($tmp_criteria) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ; } T_IF ( ( T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) ) T_BOOLEAN_OR T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($tmp_criteria) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($new_column_count) ] = T_VARIABLE($tmp_criteria) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($new_column_count) ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($new_column_count) . . . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($new_column_count) ] ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($new_column_count) . . . T_STRING ( T_VARIABLE($tmp_criteria) ) . . . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($new_column_count) T_INC ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( T_VARIABLE($type) ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL ( ( T_VARIABLE($type) T_IS_EQUAL ) ? T_STRING ( ) : T_STRING ( ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( ( T_VARIABLE($type) T_IS_EQUAL ) ? : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($options) = ; T_VARIABLE($numTableListOptions) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($options) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($key) ) . . T_VARIABLE($val) . . ( T_STRING ( , , T_STRING ( T_VARIABLE($key) ) ) ) . ; T_VARIABLE($numTableListOptions) T_INC ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ( ( T_VARIABLE($numTableListOptions) > T_LNUMBER ) ? : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($options) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( T_VARIABLE($column_number) , T_VARIABLE($selected) = T_STRING ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($column_number) . . . T_VARIABLE($selected) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($column_number) . . . T_VARIABLE($selected) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($column_number) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($column_number) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($new_column_count) = T_LNUMBER ; T_FOR ( T_VARIABLE($column_index) = T_LNUMBER ; T_VARIABLE($column_index) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($column_index) T_INC ) { T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_column_count) ) ; T_VARIABLE($new_column_count) T_INC ; } T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_CONTINUE ; } T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($new_column_count) ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ; } T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_VARIABLE($checked_options) [ ] = ; T_VARIABLE($checked_options) [ ] = ; } T_ELSE { T_VARIABLE($checked_options) [ ] = ; T_VARIABLE($checked_options) [ ] = ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_column_count) , T_VARIABLE($checked_options) ) ; T_VARIABLE($new_column_count) T_INC ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( T_VARIABLE($row_index) , T_VARIABLE($checked_options) ) { T_VARIABLE($html_output) = . T_VARIABLE($GLOBALS) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($row_index) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($row_index) . . T_VARIABLE($checked_options) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($row_index) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($row_index) . . . T_VARIABLE($checked_options) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( T_VARIABLE($new_row_index) , T_VARIABLE($row_index) ) { T_VARIABLE($html_output) = ; T_VARIABLE($new_column_count) = T_LNUMBER ; T_FOR ( T_VARIABLE($column_index) = T_LNUMBER ; T_VARIABLE($column_index) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($column_index) T_INC ) { T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_VARIABLE($or) = . T_VARIABLE($new_row_index) . . T_VARIABLE($new_column_count) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($or) . . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($new_column_count) T_INC ; } T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_CONTINUE ; } T_VARIABLE($or) = . T_VARIABLE($new_row_index) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_POST) [ T_VARIABLE($or) ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($or) ] [ T_VARIABLE($column_index) ] ) ) { T_VARIABLE($tmp_or) = T_VARIABLE($_POST) [ T_VARIABLE($or) ] [ T_VARIABLE($column_index) ] ; } T_ELSE { T_VARIABLE($tmp_or) = ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($new_row_index) . . T_VARIABLE($new_column_count) . . . . T_STRING ( T_VARIABLE($tmp_or) ) . . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( $ { T_VARIABLE($or) } ) T_BOOLEAN_AND T_ISSET ( $ { T_VARIABLE($or) } [ T_VARIABLE($column_index) ] ) ) { T_VARIABLE($GLOBALS) [ $ { . T_VARIABLE($or) } ] [ T_VARIABLE($new_column_count) ] = $ { T_VARIABLE($or) } [ T_VARIABLE($column_index) ] ; } T_VARIABLE($new_column_count) T_INC ; } T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($html_output) = ; T_VARIABLE($new_row_count) = T_LNUMBER ; T_VARIABLE($odd_row) = T_STRING ; T_FOR ( T_VARIABLE($row_index) = T_LNUMBER ; T_VARIABLE($row_index) T_IS_SMALLER_OR_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($row_index) T_INC ) { T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($row_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($row_index) ] T_IS_EQUAL ) { T_VARIABLE($checked_options) [ ] = ; T_VARIABLE($checked_options) [ ] = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_row_count) , T_VARIABLE($checked_options) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_row_count) , T_VARIABLE($row_index) ) ; T_VARIABLE($new_row_count) T_INC ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($row_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($row_index) ] T_IS_EQUAL ) { T_CONTINUE ; } T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($row_index) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($new_row_count) ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($row_index) ] ; } T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($row_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($row_index) ] T_IS_EQUAL ) { T_VARIABLE($checked_options) [ ] = ; T_VARIABLE($checked_options) [ ] = ; } T_ELSE { T_VARIABLE($checked_options) [ ] = ; T_VARIABLE($checked_options) [ ] = ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_row_count) , T_VARIABLE($checked_options) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_row_count) , T_VARIABLE($row_index) ) ; T_VARIABLE($new_row_count) T_INC ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($new_row_count) ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($select_clause) = ; T_VARIABLE($select_clauses) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($column_index) = T_LNUMBER ; T_VARIABLE($column_index) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($column_index) T_INC ) { T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_EQUAL ) { T_VARIABLE($select_clauses) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ; } } T_IF ( T_VARIABLE($select_clauses) ) { T_VARIABLE($select_clause) = . T_STRING ( T_STRING ( , T_VARIABLE($select_clauses) ) ) . ; } T_RETURN T_VARIABLE($select_clause) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($where_clause) = ; T_VARIABLE($criteria_cnt) = T_LNUMBER ; T_FOR ( T_VARIABLE($column_index) = T_LNUMBER ; T_VARIABLE($column_index) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($column_index) T_INC ) { T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($column_index) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($last_where) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($where_clause) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($last_where) ] ) . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) ) { T_VARIABLE($where_clause) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] . ; T_VARIABLE($last_where) = T_VARIABLE($column_index) ; T_VARIABLE($criteria_cnt) T_INC ; } } T_IF ( T_VARIABLE($criteria_cnt) > T_LNUMBER ) { T_VARIABLE($where_clause) = . T_VARIABLE($where_clause) . ; } T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; } T_FOR ( T_VARIABLE($row_index) = T_LNUMBER ; T_VARIABLE($row_index) T_IS_SMALLER_OR_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($row_index) T_INC ) { T_VARIABLE($criteria_cnt) = T_LNUMBER ; T_VARIABLE($qry_orwhere) = ; T_VARIABLE($last_orwhere) = ; T_FOR ( T_VARIABLE($column_index) = T_LNUMBER ; T_VARIABLE($column_index) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($column_index) T_INC ) { T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND ! T_EMPTY ( $ { . T_VARIABLE($row_index) } [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_VARIABLE($column_index) ) { T_VARIABLE($qry_orwhere) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($last_orwhere) ] ) . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND ! T_EMPTY ( $ { . T_VARIABLE($row_index) } [ T_VARIABLE($column_index) ] ) ) { T_VARIABLE($qry_orwhere) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] . . $ { . T_VARIABLE($row_index) } [ T_VARIABLE($column_index) ] . ; T_VARIABLE($last_orwhere) = T_VARIABLE($column_index) ; T_VARIABLE($criteria_cnt) T_INC ; } } T_IF ( T_VARIABLE($criteria_cnt) > T_LNUMBER ) { T_VARIABLE($qry_orwhere) = . T_VARIABLE($qry_orwhere) . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($qry_orwhere) ) ) { T_VARIABLE($where_clause) T_CONCAT_EQUAL . T_STRING ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($row_index) ] ) ? T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($row_index) ] . : ) . T_VARIABLE($qry_orwhere) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($where_clause) ) T_BOOLEAN_AND T_VARIABLE($where_clause) T_IS_NOT_EQUAL ) { T_VARIABLE($where_clause) = . T_STRING ( T_VARIABLE($where_clause) ) . ; } T_RETURN T_VARIABLE($where_clause) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($orderby_clause) = ; T_VARIABLE($orderby_clauses) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($column_index) = T_LNUMBER ; T_VARIABLE($column_index) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($column_index) T_INC ) { T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) ) { T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] , - T_LNUMBER ) T_IS_EQUAL ) { T_CONTINUE ; } T_VARIABLE($orderby_clauses) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ; } } T_IF ( T_VARIABLE($orderby_clauses) ) { T_VARIABLE($orderby_clause) = . T_STRING ( T_STRING ( , T_VARIABLE($orderby_clauses) ) ) . ; } T_RETURN T_VARIABLE($orderby_clause) ; } T_PRIVATE T_STRING ( T_VARIABLE($all_tables) , T_VARIABLE($all_columns) , T_VARIABLE($where_clause_columns) ) { T_VARIABLE($unique_columns) = T_ARRAY ( ) ; T_VARIABLE($index_columns) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($all_tables) T_AS T_VARIABLE($table) ) { T_VARIABLE($indexes) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) ) ; T_FOREACH ( T_VARIABLE($indexes) T_AS T_VARIABLE($index) ) { T_VARIABLE($column) = T_VARIABLE($table) . . T_VARIABLE($index) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($all_columns) [ T_VARIABLE($column) ] ) ) { T_IF ( T_VARIABLE($index) [ ] T_IS_EQUAL T_LNUMBER ) { T_IF ( T_ISSET ( T_VARIABLE($where_clause_columns) [ T_VARIABLE($column) ] ) ) { T_VARIABLE($unique_columns) [ T_VARIABLE($column) ] = ; } T_ELSE { T_VARIABLE($unique_columns) [ T_VARIABLE($column) ] = ; } } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($where_clause_columns) [ T_VARIABLE($column) ] ) ) { T_VARIABLE($index_columns) [ T_VARIABLE($column) ] = ; } T_ELSE { T_VARIABLE($index_columns) [ T_VARIABLE($column) ] = ; } } } } } T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($unique_columns) , T_DOUBLE_ARROW T_VARIABLE($index_columns) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($all_tables) , T_VARIABLE($all_columns) , T_VARIABLE($where_clause_columns) ) { T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($candidate_columns) = T_ARRAY ( ) ; T_VARIABLE($indexes) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($all_tables) , T_VARIABLE($all_columns) , T_VARIABLE($where_clause_columns) ) ; T_VARIABLE($unique_columns) = T_VARIABLE($indexes) [ ] ; T_VARIABLE($index_columns) = T_VARIABLE($indexes) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($unique_columns) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($unique_columns) ) > T_LNUMBER ) { T_VARIABLE($candidate_columns) = T_VARIABLE($unique_columns) ; T_VARIABLE($needsort) = T_LNUMBER ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($index_columns) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($index_columns) ) > T_LNUMBER ) { T_VARIABLE($candidate_columns) = T_VARIABLE($index_columns) ; T_VARIABLE($needsort) = T_LNUMBER ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($where_clause_columns) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($where_clause_columns) ) > T_LNUMBER ) { T_VARIABLE($candidate_columns) = T_VARIABLE($where_clause_columns) ; T_VARIABLE($needsort) = T_LNUMBER ; } T_ELSE { T_VARIABLE($candidate_columns) = T_VARIABLE($all_tables) ; T_VARIABLE($needsort) = T_LNUMBER ; } T_IF ( T_VARIABLE($needsort) T_IS_EQUAL T_LNUMBER ) { T_FOREACH ( T_VARIABLE($candidate_columns) T_AS T_VARIABLE($column) T_DOUBLE_ARROW T_VARIABLE($is_where) ) { T_VARIABLE($table) = T_STRING ( , T_VARIABLE($column) ) ; T_VARIABLE($table) = T_VARIABLE($table) [ T_LNUMBER ] ; T_IF ( T_VARIABLE($is_where) T_IS_EQUAL ) { T_VARIABLE($vg) [ T_VARIABLE($column) ] = T_VARIABLE($table) ; } T_ELSE { T_VARIABLE($sg) [ T_VARIABLE($column) ] = T_VARIABLE($table) ; } } T_IF ( T_ISSET ( T_VARIABLE($vg) ) ) { T_VARIABLE($candidate_columns) = T_VARIABLE($vg) ; } T_ELSE { T_VARIABLE($candidate_columns) = T_VARIABLE($sg) ; } } T_RETURN T_VARIABLE($candidate_columns) ; } T_PRIVATE T_STRING ( T_VARIABLE($all_tables) , T_VARIABLE($all_columns) , T_VARIABLE($where_clause_columns) , T_VARIABLE($where_clause_tables) ) { T_VARIABLE($master) = ; T_IF ( T_STRING ( T_VARIABLE($where_clause_tables) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($master) = T_STRING ( T_VARIABLE($where_clause_tables) ) ; } T_ELSE { T_VARIABLE($candidate_columns) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($all_tables) , T_VARIABLE($all_columns) , T_VARIABLE($where_clause_columns) ) ; T_IF ( T_STRING ( T_VARIABLE($candidate_columns) ) > T_LNUMBER ) { T_VARIABLE($checked_tables) = T_VARIABLE($candidate_columns) ; T_FOREACH ( T_VARIABLE($candidate_columns) T_AS T_VARIABLE($table) ) { T_IF ( T_VARIABLE($checked_tables) [ T_VARIABLE($table) ] T_IS_NOT_EQUAL T_LNUMBER ) { T_VARIABLE($tsize) [ T_VARIABLE($table) ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) , T_STRING ) ; T_VARIABLE($checked_tables) [ T_VARIABLE($table) ] = T_LNUMBER ; } T_VARIABLE($csize) [ T_VARIABLE($table) ] = T_VARIABLE($tsize) [ T_VARIABLE($table) ] ; } T_STRING ( T_VARIABLE($csize) ) ; T_STRING ( T_VARIABLE($csize) ) ; T_VARIABLE($master) = T_STRING ( T_VARIABLE($csize) ) ; } T_ELSE { T_STRING ( T_VARIABLE($candidate_columns) ) ; T_VARIABLE($master) = T_STRING ( T_VARIABLE($candidate_columns) ) ; } } T_RETURN T_VARIABLE($master) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($where_clause_columns) = T_ARRAY ( ) ; T_VARIABLE($where_clause_tables) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($column_index) = T_LNUMBER ; T_VARIABLE($column_index) < T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($column_index) T_INC ) { T_VARIABLE($current_table) = T_STRING ( , T_VARIABLE($_POST) [ ] [ T_VARIABLE($column_index) ] ) ; T_IF ( T_EMPTY ( T_VARIABLE($current_table) [ T_LNUMBER ] ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($current_table) [ T_LNUMBER ] ) ) { T_CONTINUE ; } T_VARIABLE($table) = T_STRING ( , , T_VARIABLE($current_table) [ T_LNUMBER ] ) ; T_VARIABLE($column) = T_STRING ( , , T_VARIABLE($current_table) [ T_LNUMBER ] ) ; T_VARIABLE($column) = T_VARIABLE($table) . . T_VARIABLE($column) ; T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) ) { T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL T_BOOLEAN_OR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] , ) ) { T_VARIABLE($where_clause_columns) [ T_VARIABLE($column) ] = T_VARIABLE($column) ; T_VARIABLE($where_clause_tables) [ T_VARIABLE($table) ] = T_VARIABLE($table) ; } } } T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($where_clause_tables) , T_DOUBLE_ARROW T_VARIABLE($where_clause_columns) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($cfgRelation) ) { T_VARIABLE($from_clause) = ; T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_POST) [ ] ) > T_LNUMBER ) { T_VARIABLE($all_tables) = T_VARIABLE($all_columns) = T_VARIABLE($known_tables) = T_VARIABLE($remaining_tables) = T_ARRAY ( ) ; T_VARIABLE($left_join) = ; T_FOREACH ( T_VARIABLE($_POST) [ ] T_AS T_VARIABLE($value) ) { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($value) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($parts) [ T_LNUMBER ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($parts) [ T_LNUMBER ] ) ) { T_VARIABLE($table) = T_STRING ( , , T_VARIABLE($parts) [ T_LNUMBER ] ) ; T_VARIABLE($all_tables) [ T_VARIABLE($table) ] = T_VARIABLE($table) ; T_VARIABLE($all_columns) [ ] = T_VARIABLE($table) . . T_STRING ( , , T_VARIABLE($parts) [ T_LNUMBER ] ) ; } } T_IF ( T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_STRING ( T_VARIABLE($all_tables) ) > T_LNUMBER ) { T_VARIABLE($valid_where_clauses) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($where_clause_tables) = T_VARIABLE($valid_where_clauses) [ ] ; T_VARIABLE($where_clause_columns) = T_VARIABLE($valid_where_clauses) [ ] ; T_VARIABLE($master) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($all_tables) , T_VARIABLE($all_columns) , T_VARIABLE($where_clause_columns) , T_VARIABLE($where_clause_tables) ) ; T_VARIABLE($from_clause) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($master) ) . T_STRING ( T_VARIABLE($all_tables) , T_VARIABLE($master) ) ; } } T_IF ( T_EMPTY ( T_VARIABLE($from_clause) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($all_tables) ) ) { T_VARIABLE($from_clause) = T_STRING ( , T_VARIABLE($all_tables) ) ; } T_RETURN T_VARIABLE($from_clause) ; } T_PRIVATE T_STRING ( T_VARIABLE($cfgRelation) ) { T_VARIABLE($sql_query) = ; T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($from_clause) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($cfgRelation) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($from_clause) ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($from_clause) ) . ; } T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_VARIABLE($sql_query) ; } T_PUBLIC T_STRING ( T_VARIABLE($cfgRelation) ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_DEC ; T_VARIABLE($url_params) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($url_params) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($url_params) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($url_params) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($text_dir) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . ( ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) > T_LNUMBER ) ? : ) . . . T_VARIABLE($text_dir) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($cfgRelation) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PRIVATE T_VARIABLE($_db) ; T_PRIVATE T_VARIABLE($_tables_names_only) ; T_PRIVATE T_VARIABLE($_searchTypes) ; T_PRIVATE T_VARIABLE($_criteriaSearchType) ; T_PRIVATE T_VARIABLE($_searchTypeDescription) ; T_PRIVATE T_VARIABLE($_criteriaSearchString) ; T_PRIVATE T_VARIABLE($_criteriaTables) ; T_PRIVATE T_VARIABLE($_criteriaColumnName) ; T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($db) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($_REQUEST) [ ] ] ; } T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_STRING ) ; } } T_PRIVATE T_STRING ( T_VARIABLE($table) ) { T_VARIABLE($sqlstr_select) = ; T_VARIABLE($sqlstr_delete) = ; T_VARIABLE($sqlstr_from) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($where_clause) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($sql) [ ] = T_VARIABLE($sqlstr_select) . . T_VARIABLE($sqlstr_from) . T_VARIABLE($where_clause) ; T_VARIABLE($sql) [ ] = T_VARIABLE($sqlstr_select) . . T_VARIABLE($sqlstr_from) . T_VARIABLE($where_clause) ; T_VARIABLE($sql) [ ] = T_VARIABLE($sqlstr_delete) . T_VARIABLE($sqlstr_from) . T_VARIABLE($where_clause) ; T_RETURN T_VARIABLE($sql) ; } T_PRIVATE T_STRING ( T_VARIABLE($table) ) { T_VARIABLE($where_clause) = ; T_VARIABLE($allColumns) = T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($table) ) ; T_VARIABLE($likeClauses) = T_ARRAY ( ) ; T_VARIABLE($like_or_regex) = ( ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) ? : ) ; T_VARIABLE($automatic_wildcard) = ( ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING < T_LNUMBER ) ? : ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ? T_STRING : T_STRING ) ) ; T_VARIABLE($search_words) = ( ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING > T_LNUMBER ) ? T_ARRAY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) : T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) ; T_FOREACH ( T_VARIABLE($search_words) T_AS T_VARIABLE($search_word) ) { T_IF ( T_STRING ( T_VARIABLE($search_word) ) T_IS_IDENTICAL T_LNUMBER ) { T_CONTINUE ; } T_VARIABLE($likeClausesPerColumn) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($allColumns) T_AS T_VARIABLE($column) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR T_VARIABLE($column) [ ] T_IS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($column) = ( ( T_STRING ) ? T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) [ ] ) : . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) [ ] ) . ) ; T_VARIABLE($likeClausesPerColumn) [ ] = T_VARIABLE($column) . . T_VARIABLE($like_or_regex) . . . T_VARIABLE($automatic_wildcard) . T_VARIABLE($search_word) . T_VARIABLE($automatic_wildcard) . ; } } T_IF ( T_STRING ( T_VARIABLE($likeClausesPerColumn) ) > T_LNUMBER ) { T_VARIABLE($likeClauses) [ ] = T_STRING ( , T_VARIABLE($likeClausesPerColumn) ) ; } } T_VARIABLE($implode_str) = ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ? : ) ; T_IF ( T_EMPTY ( T_VARIABLE($likeClauses) ) ) { T_VARIABLE($where_clause) = ; } T_ELSE { T_VARIABLE($where_clause) = . T_STRING ( . T_VARIABLE($implode_str) . , T_VARIABLE($likeClauses) ) . ; } T_RETURN T_VARIABLE($where_clause) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . ; T_VARIABLE($num_search_result_total) = T_LNUMBER ; T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($each_table) ) { T_VARIABLE($newsearchsqls) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($each_table) ) ; T_VARIABLE($res_cnt) = T_STRING ( T_VARIABLE($newsearchsqls) [ ] ) ; T_VARIABLE($num_search_result_total) T_PLUS_EQUAL T_VARIABLE($res_cnt) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($each_table) , T_VARIABLE($newsearchsqls) , T_VARIABLE($odd_row) , T_VARIABLE($res_cnt) ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) > T_LNUMBER ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_STRING ( , , T_VARIABLE($num_search_result_total) ) , T_VARIABLE($num_search_result_total) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( T_VARIABLE($each_table) , T_VARIABLE($newsearchsqls) , T_VARIABLE($odd_row) , T_VARIABLE($res_cnt) ) { T_VARIABLE($this_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW T_VARIABLE($each_table) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($html_output) = . ( T_VARIABLE($odd_row) ? : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_STRING ( , , T_VARIABLE($res_cnt) ) , T_VARIABLE($res_cnt) , T_STRING ( T_VARIABLE($each_table) ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($res_cnt) > T_LNUMBER ) { T_VARIABLE($this_url_params) [ ] = T_VARIABLE($newsearchsqls) [ ] ; T_VARIABLE($browse_result_path) = . T_STRING ( T_VARIABLE($this_url_params) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($browse_result_path) . . T_VARIABLE($browse_result_path) . . T_VARIABLE($each_table) . . T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($each_table) ) . . . T_STRING ( ) . ; T_VARIABLE($this_url_params) [ ] = T_VARIABLE($newsearchsqls) [ ] ; T_VARIABLE($delete_result_path) = . T_STRING ( T_VARIABLE($this_url_params) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($delete_result_path) . . T_VARIABLE($delete_result_path) . . T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($each_table) ) ) . . T_STRING ( ) . ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PUBLIC T_STRING ( T_VARIABLE($url_params) ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($choices) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( , ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($choices) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($each_table) ) { T_IF ( T_STRING ( T_VARIABLE($each_table) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($is_selected) = ; } T_ELSE { T_VARIABLE($is_selected) = ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($each_table) ) . . T_VARIABLE($is_selected) . . T_STRING ( , , T_STRING ( T_VARIABLE($each_table) ) ) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($alter_select) = . . T_STRING ( ) . ; T_VARIABLE($alter_select) T_CONCAT_EQUAL . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($alter_select) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ? T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($html_output) = . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_IF ( T_EMPTY ( T_VARIABLE($is_db) ) ) { T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($is_db) = @ T_STRING ( T_VARIABLE($db) ) ; } T_ELSE { T_VARIABLE($is_db) = T_STRING ; } T_IF ( ! T_VARIABLE($is_db) ) { T_IF ( ! T_STRING ( ) ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ) ; } T_ELSE { T_VARIABLE($url_params) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) ; T_IF ( T_ISSET ( T_VARIABLE($message) ) ) { T_VARIABLE($url_params) [ ] = T_VARIABLE($message) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($sql_query) ) ) { T_VARIABLE($url_params) [ ] = T_VARIABLE($sql_query) ; } T_IF ( T_ISSET ( T_VARIABLE($show_as_php) ) ) { T_VARIABLE($url_params) [ ] = T_VARIABLE($show_as_php) ; } T_STRING ( T_VARIABLE($cfg) [ ] . . T_STRING ( T_VARIABLE($url_params) , ) ) ; } T_EXIT ; } } } T_IF ( T_EMPTY ( T_VARIABLE($is_table) ) T_BOOLEAN_AND ! T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_IF ( T_STRING ( T_VARIABLE($table) ) ) { T_VARIABLE($is_table) = T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($db) ] [ T_VARIABLE($table) ] ) ; T_IF ( ! T_VARIABLE($is_table) ) { T_VARIABLE($_result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_STRING ) . , T_STRING , T_STRING ) ; T_VARIABLE($is_table) = @ T_STRING ( T_VARIABLE($_result) ) ; T_STRING ( T_VARIABLE($_result) ) ; } } T_ELSE { T_VARIABLE($is_table) = T_STRING ; } T_IF ( ! T_VARIABLE($is_table) ) { T_IF ( ! T_STRING ( ) ) { T_IF ( T_STRING ( T_VARIABLE($table) ) ) { T_VARIABLE($_result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . , T_STRING , T_STRING ) ; T_VARIABLE($is_table) = ( T_VARIABLE($_result) T_BOOLEAN_AND @ T_STRING ( T_VARIABLE($_result) ) ) ; T_STRING ( T_VARIABLE($_result) ) ; } T_IF ( ! T_VARIABLE($is_table) ) { T_INCLUDE ; T_EXIT ; } } T_IF ( ! T_VARIABLE($is_table) ) { T_EXIT ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_getHtmlForChangePassword) ( T_VARIABLE($username) , T_VARIABLE($hostname) ) { T_VARIABLE($chg_evt_handler) = ( T_STRING T_IS_EQUAL T_BOOLEAN_AND T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING < T_LNUMBER ) ? : ; T_VARIABLE($html) = . . T_VARIABLE($GLOBALS) [ ] . . . ; T_VARIABLE($html) T_CONCAT_EQUAL T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($html) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($username) ) . . . . T_STRING ( T_VARIABLE($hostname) ) . ; } T_VARIABLE($html) T_CONCAT_EQUAL . . T_STRING ( ) . . . . . . . . . T_STRING ( ) . . . . . . . . . . T_STRING ( ) . . . . . . T_VARIABLE($chg_evt_handler) . . . T_STRING ( ) . . . . T_VARIABLE($chg_evt_handler) . . . . . . T_STRING ( ) . . . . . . . . . . . . . . . T_STRING ( ) . . . . . . . . T_STRING ( ) . . . ; T_RETURN T_VARIABLE($html) ; }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_IF ( T_VARIABLE($is_create_db_priv) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( , , T_LNUMBER ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($db_to_create) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_INCLUDE_ONCE ; T_ECHO T_STRING ( T_STRING , , T_STRING , T_STRING , T_STRING , T_LNUMBER ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($dbstats) ) ) { T_ECHO ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSE { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO . T_STRING T_DOUBLE_COLON T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ) . . T_STRING ( ) . ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_VARIABLE($is_create_table_priv) = T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($db) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_FUNCTION(PMA_exportCheckboxCheck) ( T_VARIABLE($str) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($str) ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($str) ] ) { T_ECHO ; } } T_VARIABLE($export_list) = T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($export_type) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($single_table) ) ) ) ; T_IF ( T_EMPTY ( T_VARIABLE($export_list) ) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_EXIT ; } T_ECHO ; T_IF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_ECHO T_STRING ( , , T_LNUMBER ) ; } T_ELSEIF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_ECHO T_STRING ( T_VARIABLE($db) , , T_LNUMBER ) ; } T_ELSE { T_ECHO T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_LNUMBER ) ; } T_IF ( T_ISSET ( T_VARIABLE($single_table) ) ) { T_ECHO . ; } T_ECHO . T_VARIABLE($export_type) . ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($cfg) [ ] [ ] = T_VARIABLE($_GET) [ ] ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($cfg) [ ] [ ] ) ) { T_VARIABLE($cfg) [ ] [ ] = ; } T_ECHO . T_STRING ( T_VARIABLE($cfg) [ ] [ ] ) . ; T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_ECHO . T_STRING ( T_VARIABLE($_GET) [ ] ) . . ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($sql_query) ) ) { T_ECHO . T_STRING ( T_VARIABLE($sql_query) ) . . ; } T_ECHO ; T_ECHO ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_IF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_ECHO T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($db) ) ) ; } T_ELSE { T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($table) ) ) ; } T_ECHO ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($export_method) = T_VARIABLE($_GET) [ ] ; } T_ELSE { T_VARIABLE($export_method) = T_VARIABLE($cfg) [ ] [ ] ; } T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO . ; T_IF ( T_VARIABLE($export_method) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($export_method) T_IS_EQUAL ) { T_ECHO ; } T_ECHO ; T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . ; T_IF ( T_VARIABLE($export_method) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($export_method) T_IS_EQUAL ) { T_ECHO ; } T_ECHO ; T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_IF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_ECHO . T_STRING ( ) . ; } T_ELSE T_IF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_ECHO . T_STRING ( ) . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($multi_values) ) ) { T_ECHO T_VARIABLE($multi_values) ; } T_ECHO ; T_IF ( T_STRING ( T_VARIABLE($table) ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($num_tables) ) T_BOOLEAN_AND ! T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ) { T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND T_VARIABLE($_GET) [ ] T_IS_EQUAL T_LNUMBER ) { T_ECHO ; } T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_ECHO T_STRING ( T_VARIABLE($_GET) [ ] ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($unlim_num_rows) ) ) { T_ECHO T_VARIABLE($unlim_num_rows) ; } T_ELSE { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_ECHO T_STRING ( T_VARIABLE($_GET) [ ] ) ; } T_ELSE { T_ECHO ; } T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_IF ( ! T_ISSET ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_OR T_VARIABLE($_GET) [ ] T_IS_EQUAL T_LNUMBER ) { T_ECHO ; } T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($cfg) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($cfg) [ ] ) ) { T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_STRING ( ) ; T_ECHO ; T_ECHO ; T_STRING ( T_STRING ( ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfg) [ ] ) ) ) ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_STRING ( ) ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; } T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_IF ( ! T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_STRING ( ) ; } T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($cfg) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($cfg) [ ] ) ) { T_ECHO ; T_ECHO ; T_ECHO ; T_STRING ( ) ; T_ECHO ; T_ECHO ; T_STRING ( T_STRING ( ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfg) [ ] ) ) ) ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_STRING ( ) ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO ; T_ECHO ; } T_ECHO ; T_ECHO ; T_ECHO T_STRING ( ) ; T_VARIABLE($trans) = T_NEW T_STRING ; T_VARIABLE($trans) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_IF ( T_VARIABLE($export_type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($export_type) T_IS_EQUAL ) { T_VARIABLE($trans) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_IF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_VARIABLE($trans) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; } } T_VARIABLE($msg) = T_NEW T_STRING ( T_STRING ( ) ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( . T_STRING ( T_STRING ( ) ) . . T_STRING ( ) . , T_STRING ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($trans) ) ; T_VARIABLE($doc_url) = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($doc_url) . , T_STRING ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($msg) ) ; T_ECHO ; T_ECHO ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_ECHO T_STRING ( T_VARIABLE($_GET) [ ] ) ; } T_ELSE { T_IF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_ECHO T_STRING ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) ; } T_ELSEIF ( T_VARIABLE($export_type) T_IS_EQUAL ) { T_ECHO T_STRING ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) ; } T_ELSE { T_ECHO T_STRING ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) ; } } T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_STRING ( ) ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO ; T_ECHO ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING ) { T_ECHO . T_STRING ( ) . . ; T_STRING ( T_VARIABLE($cfg) [ ] ) ; T_ECHO ; T_FOREACH ( T_VARIABLE($cfg) [ ] T_AS T_VARIABLE($temp_charset) ) { T_ECHO . T_VARIABLE($temp_charset) . ; T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($_GET) [ ] T_IS_NOT_EQUAL T_VARIABLE($temp_charset) ) ) { T_ECHO ; } T_ELSEIF ( ( T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($temp_charset) T_IS_EQUAL ) T_BOOLEAN_OR T_VARIABLE($temp_charset) T_IS_EQUAL T_VARIABLE($cfg) [ ] [ ] ) { T_ECHO ; } T_ECHO . T_VARIABLE($temp_charset) . ; } T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($selected_compression) = T_VARIABLE($_GET) [ ] ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($cfg) [ ] [ ] ) ) { T_VARIABLE($selected_compression) = T_VARIABLE($cfg) [ ] [ ] ; } T_ELSE { T_VARIABLE($selected_compression) = ; } T_VARIABLE($is_zip) = ( T_VARIABLE($cfg) [ ] T_BOOLEAN_AND @ T_STRING ( ) ) ; T_VARIABLE($is_gzip) = ( T_VARIABLE($cfg) [ ] T_BOOLEAN_AND @ T_STRING ( ) ) ; T_VARIABLE($is_bzip2) = ( T_VARIABLE($cfg) [ ] T_BOOLEAN_AND @ T_STRING ( ) ) ; T_IF ( T_VARIABLE($is_zip) T_BOOLEAN_OR T_VARIABLE($is_gzip) T_BOOLEAN_OR T_VARIABLE($is_bzip2) ) { T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_IF ( T_VARIABLE($is_zip) ) { T_ECHO ; T_IF ( T_VARIABLE($selected_compression) T_IS_EQUAL ) { T_ECHO ; } T_ECHO . T_STRING ( ) . ; } T_IF ( T_VARIABLE($is_gzip) ) { T_ECHO ; T_IF ( T_VARIABLE($selected_compression) T_IS_EQUAL ) { T_ECHO ; } T_ECHO . T_STRING ( ) . ; } T_IF ( T_VARIABLE($is_bzip2) ) { T_ECHO ; T_IF ( T_VARIABLE($selected_compression) T_IS_EQUAL ) { T_ECHO ; } T_ECHO . T_STRING ( ) . ; } T_ECHO ; T_ECHO ; } T_ELSE { T_ECHO . T_STRING ( T_VARIABLE($selected_compression) ) . ; } T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . ; T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] [ ] [ ] T_IS_EQUAL T_STRING ) { T_ECHO ; } T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO T_STRING ( , , T_VARIABLE($export_list) , ) ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO ; T_ECHO T_STRING ( , T_VARIABLE($export_list) ) ; T_ECHO ; T_IF ( T_STRING ( ) ) { T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO T_STRING ( ) ; T_ECHO ; } T_ECHO ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , , , ) ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ;',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_printGitRevision) ( ) { T_IF ( ! T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_RETURN ; } T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($commit_hash) = T_STRING ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($commit_hash) = . T_STRING ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) . . T_VARIABLE($commit_hash) . ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($commit_hash) = . T_STRING ( . T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) . . T_VARIABLE($commit_hash) . ; } T_VARIABLE($branch) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($branch) = . T_STRING ( . T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) . . T_VARIABLE($branch) . ; } T_IF ( T_VARIABLE($branch) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($branch) = T_STRING ( T_STRING ( ) , T_VARIABLE($commit_hash) , T_VARIABLE($branch) ) ; } T_ELSE { T_VARIABLE($branch) = T_VARIABLE($commit_hash) . . T_STRING ( ) . ; } T_VARIABLE($committer) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($author) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( T_STRING ( ) . . T_VARIABLE($branch) . . T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($committer) [ ] ) ) , . T_STRING ( . T_VARIABLE($committer) [ ] ) . . T_STRING ( T_VARIABLE($committer) [ ] ) . ) . ( T_VARIABLE($author) T_IS_NOT_EQUAL T_VARIABLE($committer) ? . T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($author) [ ] ) ) , . T_STRING ( . T_VARIABLE($author) [ ] ) . . T_STRING ( T_VARIABLE($author) [ ] ) . ) : ) , , T_STRING , T_STRING , T_STRING ) ; }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_VARIABLE($SESSION_KEY) = ; T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ ] = ; T_VARIABLE($upload_id) = T_STRING ( ) ; T_VARIABLE($plugins) = T_ARRAY ( , , , ) ; T_FOREACH ( T_VARIABLE($plugins) T_AS T_VARIABLE($plugin) ) { T_VARIABLE($check) = . T_VARIABLE($plugin) . ; T_IF ( T_VARIABLE($check) ( ) ) { T_VARIABLE($upload_class) = . T_STRING ( T_VARIABLE($plugin) ) ; T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ ] = T_VARIABLE($upload_class) ; T_INCLUDE_ONCE . T_VARIABLE($upload_class) . ; T_BREAK ; } } T_FUNCTION(PMA_import_apcCheck) ( ) { T_IF ( ! T_STRING ( ) T_BOOLEAN_OR ! T_STRING ( ) T_BOOLEAN_OR ! T_STRING ( ) ) { T_RETURN T_STRING ; } T_RETURN ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( ) ) ; } T_FUNCTION(PMA_import_progressCheck) ( ) { T_IF ( ! T_STRING ( ) T_BOOLEAN_OR ! T_STRING ( ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_FUNCTION(PMA_import_sessionCheck) ( ) { T_IF ( T_STRING < T_LNUMBER T_BOOLEAN_OR ! T_STRING ( ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_FUNCTION(PMA_import_nopluginCheck) ( ) { T_RETURN T_STRING ; } T_FUNCTION(PMA_importAjaxStatus) ( T_VARIABLE($id) ) { T_STRING ( ) ; T_ECHO T_STRING ( T_STRING ( T_VARIABLE($_SESSION) [ T_VARIABLE($GLOBALS) [ ] ] [ ] . , T_VARIABLE($id) ) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($import_list) = T_STRING ( , , T_VARIABLE($import_type) ) ; T_IF ( T_EMPTY ( T_VARIABLE($import_list) ) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_EXIT ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ ] T_IS_NOT_EQUAL ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($upload_id) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_STRING ( ) , T_STRING ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_STRING ( ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_STRING ( ) , T_STRING ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_STRING ( ) , T_STRING ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_STRING ( ) , T_STRING ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_STRING ( ) , T_STRING ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_STRING ( ) , T_STRING ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSE { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_STRING ( ) , T_STRING ) . T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ ] T_IS_NOT_EQUAL ) { T_ECHO ; } T_ECHO ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ ] . ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($upload_id) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($import_type) T_IS_EQUAL ) { T_ECHO T_STRING ( , , T_LNUMBER ) ; } T_ELSEIF ( T_VARIABLE($import_type) T_IS_EQUAL ) { T_ECHO T_STRING ( T_VARIABLE($db) , , T_LNUMBER ) ; } T_ELSE { T_ECHO T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_LNUMBER ) ; } T_ECHO . T_VARIABLE($import_type) . . ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($import_type) T_IS_EQUAL ) { T_ECHO T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($import_type) T_IS_EQUAL ) { T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($db) ) ) ; } T_ELSE { T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($table) ) ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($compressions) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($cfg) [ ] T_BOOLEAN_AND @ T_STRING ( ) ) { T_VARIABLE($compressions) [ ] = ; } T_IF ( T_VARIABLE($cfg) [ ] T_BOOLEAN_AND @ T_STRING ( ) ) { T_VARIABLE($compressions) [ ] = ; } T_IF ( T_VARIABLE($cfg) [ ] T_BOOLEAN_AND @ T_STRING ( ) ) { T_VARIABLE($compressions) [ ] = ; } T_IF ( T_VARIABLE($compressions) T_IS_NOT_EQUAL T_ARRAY ( ) ) { T_ECHO ; T_STRING ( T_STRING ( ) , T_STRING ( , T_VARIABLE($compressions) ) ) ; T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($cfg) [ ] ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($max_upload_size) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($import_list) , T_VARIABLE($cfg) [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSEIF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($uid) = T_STRING ( ) ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($max_upload_size) ) ; } T_ELSEIF ( ! T_VARIABLE($GLOBALS) [ ] ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] ) ) { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($import_list) , T_VARIABLE($cfg) [ ] ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING ) { T_ECHO . T_STRING ( ) . ; T_STRING ( T_VARIABLE($cfg) [ ] ) ; T_ECHO ; T_FOREACH ( T_VARIABLE($cfg) [ ] T_AS T_VARIABLE($temp_charset) ) { T_ECHO . T_STRING ( T_VARIABLE($temp_charset) ) . ; T_IF ( ( T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($temp_charset) T_IS_EQUAL ) T_BOOLEAN_OR T_VARIABLE($temp_charset) T_IS_EQUAL T_VARIABLE($cfg) [ ] [ ] ) { T_ECHO ; } T_ECHO . T_STRING ( T_VARIABLE($temp_charset) ) . ; } T_ECHO ; } T_ELSE { T_ECHO . T_STRING ( ) . . ; T_ECHO T_STRING ( T_STRING , , , , T_STRING ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($timeout_passed) ) T_BOOLEAN_AND T_VARIABLE($timeout_passed) ) { T_ECHO . ; T_ECHO . T_VARIABLE($offset) . ; T_ECHO T_STRING ( T_STRING ( ) , T_VARIABLE($offset) ) . ; T_ECHO . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! ( T_ISSET ( T_VARIABLE($timeout_passed) ) T_BOOLEAN_AND T_VARIABLE($timeout_passed) ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSE { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( , , T_VARIABLE($import_list) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( , T_VARIABLE($import_list) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_STRING ( ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ECHO ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING {property_array) = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) ; T_PUBLIC T_VARIABLE($syntax_highlighting_column_info) ; T_PUBLIC T_STRING ( T_VARIABLE($property) ) { T_IF ( T_STRING ( T_VARIABLE($property) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($property) ] ; } } T_PUBLIC T_STRING ( T_VARIABLE($property) , T_VARIABLE($value) ) { T_IF ( T_STRING ( T_VARIABLE($property) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($property) ] = T_VARIABLE($value) ; } } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($goto) , T_VARIABLE($sql_query) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( . , , ) ) ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($db) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($table) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($goto) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($sql_query) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($unlim_num_rows) , T_VARIABLE($fields_meta) , T_VARIABLE($is_count) , T_VARIABLE($is_export) , T_VARIABLE($is_func) , T_VARIABLE($is_analyse) , T_VARIABLE($num_rows) , T_VARIABLE($fields_cnt) , T_VARIABLE($querytime) , T_VARIABLE($pmaThemeImage) , T_VARIABLE($text_dir) , T_VARIABLE($is_maint) , T_VARIABLE($is_explain) , T_VARIABLE($is_show) , T_VARIABLE($showtable) , T_VARIABLE($printview) , T_VARIABLE($url_query) , T_VARIABLE($resultSetContainsUniqueKey) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($unlim_num_rows) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($fields_meta) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($is_count) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($is_export) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($is_func) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($is_analyse) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($num_rows) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($fields_cnt) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($querytime) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($pmaThemeImage) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($text_dir) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($is_maint) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($is_explain) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($is_show) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($showtable) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($printview) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($url_query) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($resultSetContainsUniqueKey) ) ; } T_PRIVATE T_STRING ( & T_VARIABLE($the_disp_mode) , & T_VARIABLE($the_total) ) { T_VARIABLE($db) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($table) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($unlim_num_rows) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($fields_meta) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($printview) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($do_display) = T_ARRAY ( ) ; T_VARIABLE($do_display) [ ] = T_VARIABLE($the_disp_mode) [ T_LNUMBER ] . T_VARIABLE($the_disp_mode) [ T_LNUMBER ] ; T_VARIABLE($do_display) [ ] = T_VARIABLE($the_disp_mode) [ T_LNUMBER ] . T_VARIABLE($the_disp_mode) [ T_LNUMBER ] ; T_VARIABLE($do_display) [ ] = T_STRING_CAST T_VARIABLE($the_disp_mode) [ T_LNUMBER ] ; T_VARIABLE($do_display) [ ] = T_STRING_CAST T_VARIABLE($the_disp_mode) [ T_LNUMBER ] ; T_VARIABLE($do_display) [ ] = T_STRING_CAST T_VARIABLE($the_disp_mode) [ T_LNUMBER ] ; T_VARIABLE($do_display) [ ] = T_STRING_CAST T_VARIABLE($the_disp_mode) [ T_LNUMBER ] ; T_VARIABLE($do_display) [ ] = T_STRING_CAST T_VARIABLE($the_disp_mode) [ T_LNUMBER ] ; T_VARIABLE($do_display) [ ] = T_STRING_CAST T_VARIABLE($the_disp_mode) [ T_LNUMBER ] ; T_IF ( T_VARIABLE($the_disp_mode) T_IS_NOT_EQUAL ) { T_IF ( T_ISSET ( T_VARIABLE($printview) ) T_BOOLEAN_AND ( T_VARIABLE($printview) T_IS_EQUAL ) ) { T_VARIABLE($do_display) [ ] = T_STRING T_DOUBLE_COLON T_STRING ; T_VARIABLE($do_display) [ ] = T_STRING T_DOUBLE_COLON T_STRING ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; } T_ELSEIF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($do_display) [ ] = T_STRING T_DOUBLE_COLON T_STRING ; T_VARIABLE($do_display) [ ] = T_STRING T_DOUBLE_COLON T_STRING ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($do_display) [ ] = T_STRING_CAST ; } T_ELSE { T_VARIABLE($do_display) [ ] = T_STRING_CAST ; } T_VARIABLE($do_display) [ ] = T_STRING_CAST ; } T_ELSEIF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($tmp) = T_STRING ( . . , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($which) ) ; T_IF ( T_ISSET ( T_VARIABLE($which) [ T_LNUMBER ] ) T_BOOLEAN_AND ( T_STRING ( . T_STRING ( T_VARIABLE($which) [ T_LNUMBER ] ) , ) > T_LNUMBER ) ) { T_VARIABLE($do_display) [ ] = T_STRING T_DOUBLE_COLON T_STRING ; T_VARIABLE($do_display) [ ] = T_STRING T_DOUBLE_COLON T_STRING ; } T_ELSE { T_VARIABLE($do_display) [ ] = T_STRING T_DOUBLE_COLON T_STRING ; T_VARIABLE($do_display) [ ] = T_STRING T_DOUBLE_COLON T_STRING ; } T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; } T_ELSE { T_VARIABLE($prev_table) = T_VARIABLE($fields_meta) [ T_LNUMBER ] T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($is_link) = ( T_VARIABLE($do_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($do_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($do_display) [ ] T_IS_NOT_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($do_display) [ ] T_IS_NOT_EQUAL ) ; T_IF ( T_VARIABLE($is_link) T_BOOLEAN_AND ( ( T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($prev_table) ) ) ) { T_VARIABLE($do_display) [ ] = T_STRING T_DOUBLE_COLON T_STRING ; T_VARIABLE($do_display) [ ] = T_STRING T_DOUBLE_COLON T_STRING ; T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_IF ( T_VARIABLE($do_display) [ ] T_IS_EQUAL ) { T_BREAK ; } } T_VARIABLE($do_display) [ ] = T_STRING_CAST ; T_VARIABLE($prev_table) = T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ; } } } T_IF ( T_ISSET ( T_VARIABLE($unlim_num_rows) ) T_BOOLEAN_AND T_VARIABLE($unlim_num_rows) T_IS_NOT_EQUAL ) { T_VARIABLE($the_total) = T_VARIABLE($unlim_num_rows) ; } T_ELSEIF ( ( ( T_VARIABLE($do_display) [ ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($do_display) [ ] T_IS_EQUAL ) ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($db) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($table) ) ) ) { T_VARIABLE($the_total) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_IF ( T_VARIABLE($do_display) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($do_display) [ ] T_IS_EQUAL ) { T_IF ( T_ISSET ( T_VARIABLE($unlim_num_rows) ) T_BOOLEAN_AND ( T_VARIABLE($unlim_num_rows) < T_LNUMBER ) T_BOOLEAN_AND ! T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ) { T_VARIABLE($do_display) [ ] = T_STRING_CAST ; } } T_VARIABLE($the_disp_mode) = T_STRING ( , T_VARIABLE($do_display) ) ; T_RETURN T_VARIABLE($do_display) ; } T_PRIVATE T_STRING ( T_VARIABLE($analyzed_sql) ) { T_IF ( ! T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] = T_LNUMBER ; } T_RETURN ! ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_IS_EQUAL T_LNUMBER ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_IS_EQUAL T_LNUMBER ) ; } T_PRIVATE T_STRING ( T_VARIABLE($caption) , T_VARIABLE($title) , T_VARIABLE($pos) , T_VARIABLE($html_sql_query) , T_VARIABLE($onsubmit) = , T_VARIABLE($input_for_real_end) = , T_VARIABLE($onclick) = ) { T_VARIABLE($caption_output) = ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($caption_output) T_CONCAT_EQUAL T_VARIABLE($caption) ; } T_IF ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_IDENTICAL T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_IDENTICAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($caption_output) T_CONCAT_EQUAL . T_VARIABLE($title) ; } T_VARIABLE($title_output) = . T_VARIABLE($title) . ; T_RETURN . . T_VARIABLE($onsubmit) . . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) . . T_VARIABLE($html_sql_query) . . . T_VARIABLE($pos) . . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . . T_VARIABLE($input_for_real_end) . . . . T_VARIABLE($caption_output) . . T_VARIABLE($title_output) . T_VARIABLE($onclick) . . . ; } T_PRIVATE T_STRING ( T_VARIABLE($pos_next) , T_VARIABLE($pos_prev) , T_VARIABLE($id_for_direction_dropdown) , T_VARIABLE($is_innodb) ) { T_VARIABLE($table_navigation_html) = ; T_VARIABLE($showtable) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_sql_query) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($is_innodb) = ( T_ISSET ( T_VARIABLE($showtable) [ ] ) T_BOOLEAN_AND T_VARIABLE($showtable) [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ; T_VARIABLE($table_navigation_html) T_CONCAT_EQUAL . . ; T_IF ( T_VARIABLE($_SESSION) [ ] [ ] T_BOOLEAN_AND ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($table_navigation_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($html_sql_query) , T_VARIABLE($pos_prev) ) ; } T_VARIABLE($nbTotalPage) = T_LNUMBER ; T_IF ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($pageNow) = @ T_STRING ( T_VARIABLE($_SESSION) [ ] [ ] / T_VARIABLE($_SESSION) [ ] [ ] ) + T_LNUMBER ; T_VARIABLE($nbTotalPage) = @ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) / T_VARIABLE($_SESSION) [ ] [ ] ) ; T_IF ( T_VARIABLE($nbTotalPage) > T_LNUMBER ) { T_VARIABLE($table_navigation_html) T_CONCAT_EQUAL ; T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; T_VARIABLE($table_navigation_html) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($_url_params) ) . ; T_VARIABLE($table_navigation_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($_SESSION) [ ] [ ] , T_VARIABLE($pageNow) , T_VARIABLE($nbTotalPage) , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($table_navigation_html) T_CONCAT_EQUAL . ; } } T_IF ( ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) T_BOOLEAN_AND ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] * T_LNUMBER T_IS_GREATER_OR_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) ) { T_VARIABLE($table_navigation_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($html_sql_query) ) ; } T_VARIABLE($endpos) = T_VARIABLE($_SESSION) [ ] [ ] + T_VARIABLE($_SESSION) [ ] [ ] ; T_IF ( ( T_VARIABLE($endpos) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) T_BOOLEAN_AND ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_GREATER_OR_EQUAL T_VARIABLE($_SESSION) [ ] [ ] ) T_BOOLEAN_AND ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($table_navigation_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($html_sql_query) , T_VARIABLE($pos_next) , T_VARIABLE($is_innodb) ) ; } T_IF ( T_VARIABLE($nbTotalPage) > T_LNUMBER ) { T_VARIABLE($table_navigation_html) T_CONCAT_EQUAL ; } T_VARIABLE($table_navigation_html) T_CONCAT_EQUAL . . . T_STRING ( ) . . . . . . . . T_STRING ( ) . . . . ; T_VARIABLE($table_navigation_html) T_CONCAT_EQUAL ; T_VARIABLE($table_navigation_html) T_CONCAT_EQUAL . . . . . . T_STRING ( , , T_STRING ( ) ) . . . . . . . . T_STRING ( , , T_STRING ( ) ) . . . ( ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) > T_LNUMBER ) ? . ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) - T_LNUMBER ) : ) . . . ; T_VARIABLE($table_navigation_html) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($table_navigation_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($html_sql_query) , T_VARIABLE($pos_next) , T_VARIABLE($id_for_direction_dropdown) ) ; T_VARIABLE($table_navigation_html) T_CONCAT_EQUAL . . . . ; T_RETURN T_VARIABLE($table_navigation_html) ; } T_PRIVATE T_STRING ( T_VARIABLE($html_sql_query) , T_VARIABLE($pos_prev) ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( , ) , T_LNUMBER , T_VARIABLE($html_sql_query) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( , ) , T_VARIABLE($pos_prev) , T_VARIABLE($html_sql_query) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($html_sql_query) ) { T_RETURN . . . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) . . T_VARIABLE($html_sql_query) . . . . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . . . T_STRING ( ) . . . ; } T_PRIVATE T_STRING ( T_VARIABLE($html_sql_query) , T_VARIABLE($pos_next) , T_VARIABLE($is_innodb) ) { T_VARIABLE($buttons_html) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( , ) , T_VARIABLE($pos_next) , T_VARIABLE($html_sql_query) ) ; T_IF ( T_VARIABLE($is_innodb) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) > T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($input_for_real_end) = . ; T_VARIABLE($onclick) = ; } T_ELSE { T_VARIABLE($input_for_real_end) = T_VARIABLE($onclick) = ; } T_VARIABLE($onsubmit) = . ( T_VARIABLE($_SESSION) [ ] [ ] + T_VARIABLE($_SESSION) [ ] [ ] < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_GREATER_OR_EQUAL T_VARIABLE($_SESSION) [ ] [ ] ) ? : . ; T_VARIABLE($buttons_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( , ) , @ ( ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) / T_VARIABLE($_SESSION) [ ] [ ] ) - T_LNUMBER ) * T_VARIABLE($_SESSION) [ ] [ ] ) , T_VARIABLE($html_sql_query) , T_VARIABLE($onsubmit) , T_VARIABLE($input_for_real_end) , T_VARIABLE($onclick) ) ; T_RETURN T_VARIABLE($buttons_html) ; } T_PRIVATE T_STRING ( T_VARIABLE($html_sql_query) , T_VARIABLE($pos_next) , T_VARIABLE($id_for_direction_dropdown) ) { T_VARIABLE($additional_fields_html) = ; T_VARIABLE($additional_fields_html) T_CONCAT_EQUAL . . T_VARIABLE($html_sql_query) . . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . . . . . T_STRING ( ) . . T_STRING ( ) . . . . ( ( T_VARIABLE($pos_next) T_IS_GREATER_OR_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ? T_LNUMBER : T_VARIABLE($pos_next) ) . . T_STRING ( ) . . . . ( ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ? T_VARIABLE($_SESSION) [ ] [ ] : T_VARIABLE($GLOBALS) [ ] [ ] ) . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($additional_fields_html) T_CONCAT_EQUAL T_STRING ( ) . . ; T_VARIABLE($choices) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($additional_fields_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($choices) , T_VARIABLE($_SESSION) [ ] [ ] , T_VARIABLE($id_for_direction_dropdown) ) ; T_UNSET ( T_VARIABLE($choices) ) ; } T_VARIABLE($additional_fields_html) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , . T_VARIABLE($_SESSION) [ ] [ ] . ) ; T_RETURN T_VARIABLE($additional_fields_html) ; } T_PRIVATE T_STRING ( & T_VARIABLE($is_display) , T_VARIABLE($analyzed_sql) = , T_VARIABLE($sort_expression) = , T_VARIABLE($sort_expression_nodirection) = , T_VARIABLE($sort_direction) = , T_VARIABLE($is_limited_display) = T_STRING ) { T_VARIABLE($table_headers_html) = ; T_VARIABLE($fields_meta) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($highlight_columns) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($printview) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($vertical_display) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($sql_md5) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($session_max_rows) = T_VARIABLE($is_limited_display) ? T_LNUMBER : T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ; T_VARIABLE($direction) = T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ? T_VARIABLE($_SESSION) [ ] [ ] : ; T_IF ( T_VARIABLE($analyzed_sql) T_IS_EQUAL ) { T_VARIABLE($analyzed_sql) = T_ARRAY ( ) ; } T_VARIABLE($directionCondition) = ( T_VARIABLE($direction) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($direction) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ; T_IF ( T_VARIABLE($is_display) [ ] T_IS_EQUAL ) { T_LIST ( T_VARIABLE($unsorted_sql_query) , T_VARIABLE($drop_down_html) ) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($analyzed_sql) , T_VARIABLE($sort_expression) ) ; T_VARIABLE($table_headers_html) T_CONCAT_EQUAL T_VARIABLE($drop_down_html) ; } T_VARIABLE($table_headers_html) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] [ ] . . . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) . ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($analyzed_sql) ) ) { T_VARIABLE($table_headers_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($vertical_display) [ ] = T_LNUMBER ; T_VARIABLE($vertical_display) [ ] = T_LNUMBER ; T_VARIABLE($vertical_display) [ ] = ; T_VARIABLE($full_or_partial_text_link) = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($vertical_display) ) ; T_IF ( ! ( T_ISSET ( T_VARIABLE($printview) ) T_BOOLEAN_AND ( T_VARIABLE($printview) T_IS_EQUAL ) ) T_BOOLEAN_AND ! T_VARIABLE($is_limited_display) ) { T_VARIABLE($table_headers_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($full_or_partial_text_link) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($table_headers_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($is_display) [ ] ) ; T_LIST ( T_VARIABLE($colspan) , T_VARIABLE($rowspan) , T_VARIABLE($button_html) ) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($directionCondition) , T_VARIABLE($is_display) , T_VARIABLE($full_or_partial_text_link) ) ; T_VARIABLE($table_headers_html) T_CONCAT_EQUAL T_VARIABLE($button_html) ; T_VARIABLE($comments_map) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($direction) , T_VARIABLE($analyzed_sql) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND ! T_VARIABLE($_SESSION) [ ] [ ] ) { T_INCLUDE_ONCE ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($analyzed_sql) ) ; T_LIST ( T_VARIABLE($col_order) , T_VARIABLE($col_visib) ) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($analyzed_sql) ) ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($j) T_INC ) { T_VARIABLE($i) = T_VARIABLE($col_order) ? T_VARIABLE($col_order) [ T_VARIABLE($j) ] : T_VARIABLE($j) ; T_VARIABLE($condition_field) = ( T_ISSET ( T_VARIABLE($highlight_columns) [ T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($highlight_columns) [ T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ) ] ) ) ? T_STRING : T_STRING ; T_VARIABLE($comments) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($comments_map) , T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] ) ; T_VARIABLE($vertical_display) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ( T_VARIABLE($is_display) [ ] T_IS_EQUAL ) T_BOOLEAN_AND ! T_VARIABLE($is_limited_display) ) { T_LIST ( T_VARIABLE($order_link) , T_VARIABLE($sorted_headrer_html) ) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] , T_VARIABLE($sort_expression) , T_VARIABLE($sort_expression_nodirection) , T_VARIABLE($i) , T_VARIABLE($unsorted_sql_query) , T_VARIABLE($session_max_rows) , T_VARIABLE($direction) , T_VARIABLE($comments) , T_VARIABLE($sort_direction) , T_VARIABLE($directionCondition) , T_VARIABLE($col_visib) , T_VARIABLE($col_visib) [ T_VARIABLE($j) ] , T_VARIABLE($condition_field) ) ; T_VARIABLE($table_headers_html) T_CONCAT_EQUAL T_VARIABLE($sorted_headrer_html) ; T_VARIABLE($vertical_display) [ ] [ ] = . . ( T_VARIABLE($condition_field) ? : ) . . T_STRING ( T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ) . . . T_VARIABLE($order_link) . T_VARIABLE($comments) . . ; } T_ELSE { T_IF ( T_VARIABLE($directionCondition) ) { T_VARIABLE($table_headers_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($col_visib) , T_VARIABLE($col_visib) [ T_VARIABLE($j) ] , T_VARIABLE($condition_field) , T_VARIABLE($direction) , T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] , T_VARIABLE($comments) ) ; } T_VARIABLE($vertical_display) [ ] [ ] = . . ( T_VARIABLE($condition_field) ? : ) . . T_STRING ( T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ) . . . . T_STRING ( T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ) . . T_VARIABLE($comments) . ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($vertical_display) ) ; } T_VARIABLE($table_headers_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($is_display) , T_VARIABLE($directionCondition) , T_VARIABLE($full_or_partial_text_link) , T_VARIABLE($colspan) , T_VARIABLE($rowspan) ) ; T_IF ( T_VARIABLE($directionCondition) ) { T_VARIABLE($table_headers_html) T_CONCAT_EQUAL . ; } T_RETURN T_VARIABLE($table_headers_html) ; } T_PRIVATE T_STRING ( T_VARIABLE($analyzed_sql) , T_VARIABLE($sort_expression) ) { T_VARIABLE($drop_down_html) = ; T_VARIABLE($unsorted_sql_query) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($unsorted_sql_query) = T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ; } T_VARIABLE($unsorted_sql_query) = T_STRING ( T_VARIABLE($unsorted_sql_query) ) ; T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_IS_EQUAL T_LNUMBER ) ) { T_VARIABLE($indexes) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_IF ( T_VARIABLE($indexes) ) { T_VARIABLE($drop_down_html) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($indexes) , T_VARIABLE($sort_expression) , T_VARIABLE($unsorted_sql_query) ) ; } } T_RETURN T_ARRAY ( T_VARIABLE($unsorted_sql_query) , T_VARIABLE($drop_down_html) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($indexes) , T_VARIABLE($sort_expression) , T_VARIABLE($unsorted_sql_query) ) { T_VARIABLE($drop_down_html) = ; T_VARIABLE($drop_down_html) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) . T_STRING ( ) . . ; T_VARIABLE($used_index) = T_STRING ; T_VARIABLE($local_order) = ( T_ISSET ( T_VARIABLE($sort_expression) ) ? T_VARIABLE($sort_expression) : ) ; T_FOREACH ( T_VARIABLE($indexes) T_AS T_VARIABLE($index) ) { T_VARIABLE($asc_sort) = . T_STRING ( , T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) ) . ; T_VARIABLE($desc_sort) = . T_STRING ( , T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) ) . ; T_VARIABLE($used_index) = T_VARIABLE($used_index) T_BOOLEAN_OR ( T_VARIABLE($local_order) T_IS_EQUAL T_VARIABLE($asc_sort) ) T_BOOLEAN_OR ( T_VARIABLE($local_order) T_IS_EQUAL T_VARIABLE($desc_sort) ) ; T_IF ( T_STRING ( . , T_VARIABLE($unsorted_sql_query) , T_VARIABLE($my_reg) ) ) { T_VARIABLE($unsorted_sql_query_first_part) = T_VARIABLE($my_reg) [ T_LNUMBER ] ; T_VARIABLE($unsorted_sql_query_second_part) = T_VARIABLE($my_reg) [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($unsorted_sql_query_first_part) = T_VARIABLE($unsorted_sql_query) ; T_VARIABLE($unsorted_sql_query_second_part) = ; } T_VARIABLE($drop_down_html) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($unsorted_sql_query_first_part) . . . T_VARIABLE($asc_sort) . T_VARIABLE($unsorted_sql_query_second_part) ) . . ( T_VARIABLE($local_order) T_IS_EQUAL T_VARIABLE($asc_sort) ? : ) . . T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) . . T_STRING ( ) . ; T_VARIABLE($drop_down_html) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($unsorted_sql_query_first_part) . . . T_VARIABLE($desc_sort) . T_VARIABLE($unsorted_sql_query_second_part) ) . . ( T_VARIABLE($local_order) T_IS_EQUAL T_VARIABLE($desc_sort) ? : ) . . T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) . . T_STRING ( ) . ; } T_VARIABLE($drop_down_html) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($unsorted_sql_query) ) . . ( T_VARIABLE($used_index) ? : ) . . T_STRING ( ) . . . . . ; T_RETURN T_VARIABLE($drop_down_html) ; } T_PRIVATE T_STRING ( T_VARIABLE($directionCondition) , & T_VARIABLE($is_display) , T_VARIABLE($full_or_partial_text_link) ) { T_VARIABLE($button_html) = ; T_VARIABLE($colspan) = T_VARIABLE($rowspan) = T_STRING ; T_VARIABLE($vertical_display) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($directionCondition) ) { T_VARIABLE($button_html) T_CONCAT_EQUAL . ; T_VARIABLE($colspan) = ( ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) ? : ; } T_ELSE { T_VARIABLE($rowspan) = ( ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) ? : ; } T_IF ( ( ( T_VARIABLE($is_display) [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($is_display) [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND ( T_VARIABLE($is_display) [ ] T_IS_EQUAL ) ) { T_VARIABLE($vertical_display) [ ] = ( ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) ? T_LNUMBER : T_LNUMBER ; T_IF ( T_VARIABLE($directionCondition) ) { T_VARIABLE($button_html) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . . . . ; } T_ELSE { T_VARIABLE($span) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) + T_LNUMBER + T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) / T_VARIABLE($_SESSION) [ ] [ ] ) ; T_VARIABLE($button_html) T_CONCAT_EQUAL . T_VARIABLE($span) . ; } } T_ELSEIF ( ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND ( T_VARIABLE($is_display) [ ] T_IS_EQUAL ) ) { T_VARIABLE($vertical_display) [ ] = ( ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) ? T_LNUMBER : T_LNUMBER ; T_IF ( T_VARIABLE($directionCondition) ) { T_VARIABLE($button_html) T_CONCAT_EQUAL . T_VARIABLE($colspan) . . T_VARIABLE($full_or_partial_text_link) . ; } T_ELSE { T_VARIABLE($vertical_display) [ ] = . T_VARIABLE($rowspan) . . . . . . ; } } T_ELSEIF ( ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND ( ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) ) { T_VARIABLE($vertical_display) [ ] = ( ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) ? T_LNUMBER : T_LNUMBER ; T_IF ( T_VARIABLE($directionCondition) ) { T_VARIABLE($button_html) T_CONCAT_EQUAL . T_VARIABLE($colspan) . ; } T_ELSE { T_VARIABLE($vertical_display) [ ] = . T_VARIABLE($rowspan) . . ; } } T_ELSEIF ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($directionCondition) ) ) { T_VARIABLE($button_html) T_CONCAT_EQUAL ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($vertical_display) ) ; T_RETURN T_ARRAY ( T_VARIABLE($colspan) , T_VARIABLE($rowspan) , T_VARIABLE($button_html) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($direction) , T_VARIABLE($analyzed_sql) ) { T_VARIABLE($comments_map) = T_STRING ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND ( T_VARIABLE($direction) T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($comments_map) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_FOREACH ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_AS T_VARIABLE($tbl) ) { T_VARIABLE($tb) = T_VARIABLE($tbl) [ ] ; T_VARIABLE($comments_map) [ T_VARIABLE($tb) ] = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($tb) ) ; T_UNSET ( T_VARIABLE($tb) ) ; } } } T_RETURN T_VARIABLE($comments_map) ; } T_PRIVATE T_STRING ( T_VARIABLE($analyzed_sql) ) { T_VARIABLE($highlight_columns) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($wi) = T_LNUMBER ; T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_FOREACH ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_AS T_VARIABLE($wci_nr) T_DOUBLE_ARROW T_VARIABLE($wci) ) { T_VARIABLE($highlight_columns) [ T_VARIABLE($wci) ] = ; } } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($highlight_columns) ) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($data_html) = ; T_VARIABLE($pmatable) = T_NEW T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($col_order) = T_VARIABLE($pmatable) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ) ; T_IF ( T_VARIABLE($col_order) ) { T_VARIABLE($data_html) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($col_order) ) . ; } T_VARIABLE($col_visib) = T_VARIABLE($pmatable) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ) ; T_IF ( T_VARIABLE($col_visib) ) { T_VARIABLE($data_html) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($col_visib) ) . ; } T_IF ( ! T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_VARIABLE($data_html) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) . ; } T_RETURN T_VARIABLE($data_html) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($options_html) = ; T_VARIABLE($options_html) T_CONCAT_EQUAL . . ; T_VARIABLE($options_html) T_CONCAT_EQUAL ; T_VARIABLE($options_html) T_CONCAT_EQUAL ; T_VARIABLE($url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($options_html) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($url_params) ) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . ; T_VARIABLE($options_html) T_CONCAT_EQUAL ; T_VARIABLE($choices) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($options_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($choices) , T_VARIABLE($_SESSION) [ ] [ ] ) . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($options_html) T_CONCAT_EQUAL ; T_VARIABLE($choices) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($options_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($choices) , T_VARIABLE($_SESSION) [ ] [ ] ) . ; } T_VARIABLE($options_html) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , ! T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] ) , T_STRING ) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , ! T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] ) , T_STRING ) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , ! T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] ) , T_STRING ) . ; T_VARIABLE($options_html) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , ! T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] ) , T_STRING ) . ; T_IF ( ! T_STRING ) { T_VARIABLE($options_html) T_CONCAT_EQUAL ; T_VARIABLE($choices) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($options_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($choices) , T_VARIABLE($_SESSION) [ ] [ ] ) . ; } T_VARIABLE($options_html) T_CONCAT_EQUAL . ; T_VARIABLE($options_html) T_CONCAT_EQUAL . . T_STRING ( ) . . . . ; T_RETURN T_VARIABLE($options_html) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($url_params_full_text) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ; T_IF ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($tmp_image_file) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . ; T_VARIABLE($tmp_txt) = T_STRING ( ) ; T_VARIABLE($url_params_full_text) [ ] = T_STRING T_DOUBLE_COLON T_STRING ; } T_ELSE { T_VARIABLE($tmp_image_file) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . ; T_VARIABLE($tmp_txt) = T_STRING ( ) ; T_VARIABLE($url_params_full_text) [ ] = T_STRING T_DOUBLE_COLON T_STRING ; } T_VARIABLE($tmp_image) = . T_VARIABLE($tmp_image_file) . . T_VARIABLE($tmp_txt) . . T_VARIABLE($tmp_txt) . ; T_VARIABLE($tmp_url) = . T_STRING ( T_VARIABLE($url_params_full_text) ) ; T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tmp_url) , T_VARIABLE($tmp_image) , T_ARRAY ( ) , T_STRING ) ; } T_PRIVATE T_STRING ( T_VARIABLE($del_lnk) ) { T_VARIABLE($form_html) = ; T_IF ( ( T_VARIABLE($del_lnk) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($del_lnk) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($form_html) T_CONCAT_EQUAL . ; T_VARIABLE($form_html) T_CONCAT_EQUAL ; T_VARIABLE($form_html) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_LNUMBER ) . ; } T_VARIABLE($form_html) T_CONCAT_EQUAL ; T_VARIABLE($form_html) T_CONCAT_EQUAL ; T_VARIABLE($form_html) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($form_html) ; } T_PRIVATE T_STRING ( T_VARIABLE($comments_map) , T_VARIABLE($fields_meta) ) { T_VARIABLE($comments) = ; T_IF ( T_ISSET ( T_VARIABLE($comments_map) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($comments_map) [ T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($comments_map) [ T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($comments) = . T_STRING ( T_VARIABLE($comments_map) [ T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ] ) . ; } T_RETURN T_VARIABLE($comments) ; } T_PRIVATE T_STRING ( T_VARIABLE($fields_meta) , T_VARIABLE($sort_expression) , T_VARIABLE($sort_expression_nodirection) , T_VARIABLE($column_index) , T_VARIABLE($unsorted_sql_query) , T_VARIABLE($session_max_rows) , T_VARIABLE($direction) , T_VARIABLE($comments) , T_VARIABLE($sort_direction) , T_VARIABLE($directionCondition) , T_VARIABLE($col_visib) , T_VARIABLE($col_visib_j) , T_VARIABLE($condition_field) ) { T_VARIABLE($sorted_header_html) = ; T_VARIABLE($sort_tbl) = ( T_ISSET ( T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ) ) ? T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ) . : ; T_VARIABLE($name_to_use_in_sort) = T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($is_orgname) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($name_to_use_in_sort) = T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($is_orgname) = T_STRING ; } T_VARIABLE($name_to_use_in_sort) = T_STRING ( , , T_VARIABLE($name_to_use_in_sort) ) ; T_VARIABLE($is_in_sort) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($sort_expression) , T_VARIABLE($sort_expression_nodirection) , T_VARIABLE($sort_tbl) , T_VARIABLE($name_to_use_in_sort) ) ; T_IF ( ( T_STRING ( T_VARIABLE($name_to_use_in_sort) , ) T_IS_NOT_IDENTICAL T_STRING ) T_BOOLEAN_AND ! T_VARIABLE($is_orgname) ) { T_VARIABLE($sort_order) = . . T_VARIABLE($name_to_use_in_sort) . ; } T_ELSE { T_VARIABLE($sort_order) = . . T_VARIABLE($sort_tbl) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name_to_use_in_sort) ) . ; } T_UNSET ( T_VARIABLE($name_to_use_in_sort) ) ; T_UNSET ( T_VARIABLE($is_orgname) ) ; T_LIST ( T_VARIABLE($sort_order) , T_VARIABLE($order_img) ) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($is_in_sort) , T_VARIABLE($sort_direction) , T_VARIABLE($fields_meta) , T_VARIABLE($sort_order) , T_VARIABLE($column_index) ) ; T_IF ( T_STRING ( . , T_VARIABLE($unsorted_sql_query) , T_VARIABLE($regs3) ) ) { T_VARIABLE($sorted_sql_query) = T_VARIABLE($regs3) [ T_LNUMBER ] . T_VARIABLE($sort_order) . T_VARIABLE($regs3) [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($sorted_sql_query) = T_VARIABLE($unsorted_sql_query) . T_VARIABLE($sort_order) ; } T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($sorted_sql_query) , T_DOUBLE_ARROW T_VARIABLE($session_max_rows) ) ; T_VARIABLE($order_url) = . T_STRING ( T_VARIABLE($_url_params) ) ; T_VARIABLE($order_link) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($order_img) , T_VARIABLE($column_index) , T_VARIABLE($direction) , T_VARIABLE($fields_meta) , T_VARIABLE($order_url) ) ; T_IF ( T_VARIABLE($directionCondition) ) { T_VARIABLE($sorted_header_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($col_visib) , T_VARIABLE($col_visib_j) , T_VARIABLE($condition_field) , T_VARIABLE($direction) , T_VARIABLE($fields_meta) , T_VARIABLE($order_link) , T_VARIABLE($comments) ) ; } T_RETURN T_ARRAY ( T_VARIABLE($order_link) , T_VARIABLE($sorted_header_html) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($sort_expression) , T_VARIABLE($sort_expression_nodirection) , T_VARIABLE($sort_tbl) , T_VARIABLE($name_to_use_in_sort) ) { T_IF ( T_EMPTY ( T_VARIABLE($sort_expression) ) ) { T_VARIABLE($is_in_sort) = T_STRING ; } T_ELSE { T_IF ( ! T_EMPTY ( T_VARIABLE($sort_tbl) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($sort_expression_nodirection) , T_VARIABLE($sort_tbl) ) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($sort_expression_nodirection) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($new_sort_expression_nodirection) = T_VARIABLE($sort_tbl) . T_VARIABLE($sort_expression_nodirection) ; } T_ELSE { T_VARIABLE($new_sort_expression_nodirection) = T_VARIABLE($sort_expression_nodirection) ; } T_VARIABLE($is_in_sort) = T_STRING ; T_VARIABLE($sort_name) = T_STRING ( , , T_VARIABLE($sort_tbl) ) . T_VARIABLE($name_to_use_in_sort) ; T_IF ( T_VARIABLE($sort_name) T_IS_EQUAL T_STRING ( , , T_VARIABLE($new_sort_expression_nodirection) ) T_BOOLEAN_OR T_VARIABLE($sort_name) T_IS_EQUAL T_STRING ( , , T_VARIABLE($sort_expression_nodirection) ) ) { T_VARIABLE($is_in_sort) = T_STRING ; } } T_RETURN T_VARIABLE($is_in_sort) ; } T_PRIVATE T_STRING ( T_VARIABLE($is_in_sort) , T_VARIABLE($sort_direction) , T_VARIABLE($fields_meta) , T_VARIABLE($sort_order) , T_VARIABLE($column_index) ) { T_IF ( ! T_VARIABLE($is_in_sort) ) { T_VARIABLE($GLOBALS) [ ] [ ] = T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_IDENTICAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($sort_order) T_CONCAT_EQUAL ( T_STRING ( , T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ) ) ? T_STRING T_DOUBLE_COLON T_STRING : T_STRING T_DOUBLE_COLON T_STRING ; } T_ELSE { T_VARIABLE($sort_order) T_CONCAT_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] ; } T_VARIABLE($order_img) = ; } T_ELSEIF ( T_VARIABLE($sort_direction) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($sort_order) T_CONCAT_EQUAL ; T_VARIABLE($order_img) = . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($column_index) , T_DOUBLE_ARROW ) ) ; T_VARIABLE($order_img) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($column_index) T_ENCAPSED_AND_WHITESPACE , T_DOUBLE_ARROW ) ) ; } T_ELSE { T_VARIABLE($sort_order) T_CONCAT_EQUAL ; T_VARIABLE($order_img) = . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($column_index) , T_DOUBLE_ARROW ) ) ; T_VARIABLE($order_img) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($column_index) T_ENCAPSED_AND_WHITESPACE , T_DOUBLE_ARROW ) ) ; } T_RETURN T_ARRAY ( T_VARIABLE($sort_order) , T_VARIABLE($order_img) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($order_img) , T_VARIABLE($col_index) , T_VARIABLE($direction) , T_VARIABLE($fields_meta) , T_VARIABLE($order_url) ) { T_VARIABLE($order_link_params) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($order_img) ) T_BOOLEAN_AND ( T_VARIABLE($order_img) T_IS_NOT_EQUAL ) ) { T_IF ( T_STRING ( T_VARIABLE($order_img) , ) ) { T_VARIABLE($order_link_params) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($col_index) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($order_link_params) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($col_index) T_ENCAPSED_AND_WHITESPACE ; } T_ELSEIF ( T_STRING ( T_VARIABLE($order_img) , ) ) { T_VARIABLE($order_link_params) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($col_index) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($order_link_params) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($col_index) T_ENCAPSED_AND_WHITESPACE ; } } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($GLOBALS) [ ] [ ] = ( T_STRING T_IS_EQUAL ) ? T_STRING T_DOUBLE_COLON T_STRING : T_STRING T_DOUBLE_COLON T_STRING ; } T_IF ( T_VARIABLE($direction) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($order_link_params) [ ] = ; } T_VARIABLE($order_link_content) = ( ( T_VARIABLE($direction) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) ? T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ) , ) : T_STRING ( T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($order_url) , T_VARIABLE($order_link_content) . T_VARIABLE($order_img) , T_VARIABLE($order_link_params) , T_STRING , T_STRING ) ; } T_PRIVATE T_STRING ( T_VARIABLE($col_visib) , T_VARIABLE($col_visib_j) , T_VARIABLE($condition_field) , T_VARIABLE($direction) , T_VARIABLE($fields_meta) , T_VARIABLE($order_link) , T_VARIABLE($comments) ) { T_VARIABLE($draggable_html) = ; T_VARIABLE($th_class) = T_ARRAY ( ) ; T_VARIABLE($th_class) [ ] = ; T_IF ( T_VARIABLE($col_visib) T_BOOLEAN_AND ! T_VARIABLE($col_visib_j) ) { T_VARIABLE($th_class) [ ] = ; } T_IF ( T_VARIABLE($condition_field) ) { T_VARIABLE($th_class) [ ] = ; } T_VARIABLE($th_class) [ ] = ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($th_class) [ ] = ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($th_class) [ ] = ; } T_VARIABLE($draggable_html) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($th_class) ) ; T_IF ( T_VARIABLE($direction) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($draggable_html) T_CONCAT_EQUAL ; } T_VARIABLE($draggable_html) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ) . . T_VARIABLE($order_link) . T_VARIABLE($comments) . ; T_RETURN T_VARIABLE($draggable_html) ; } T_PRIVATE T_STRING ( T_VARIABLE($col_visib) , T_VARIABLE($col_visib_j) , T_VARIABLE($condition_field) , T_VARIABLE($direction) , T_VARIABLE($fields_meta) , T_VARIABLE($comments) ) { T_VARIABLE($draggable_html) = ; T_VARIABLE($th_class) = T_ARRAY ( ) ; T_VARIABLE($th_class) [ ] = ; T_IF ( T_VARIABLE($col_visib) T_BOOLEAN_AND ! T_VARIABLE($col_visib_j) ) { T_VARIABLE($th_class) [ ] = ; } T_IF ( T_VARIABLE($condition_field) ) { T_VARIABLE($th_class) [ ] = ; } T_VARIABLE($draggable_html) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($th_class) ) ; T_IF ( T_VARIABLE($direction) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($draggable_html) T_CONCAT_EQUAL ; } T_VARIABLE($draggable_html) T_CONCAT_EQUAL ; T_IF ( ( T_VARIABLE($direction) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($draggable_html) T_CONCAT_EQUAL ; } T_VARIABLE($draggable_html) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ) . ; T_IF ( ( T_VARIABLE($direction) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($draggable_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ) , ) ; } T_ELSE { T_VARIABLE($draggable_html) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($fields_meta) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($draggable_html) T_CONCAT_EQUAL . T_VARIABLE($comments) . ; T_RETURN T_VARIABLE($draggable_html) ; } T_PRIVATE T_STRING ( & T_VARIABLE($is_display) , T_VARIABLE($directionCondition) , T_VARIABLE($full_or_partial_text_link) , T_VARIABLE($colspan) , T_VARIABLE($rowspan) ) { T_VARIABLE($right_column_html) = ; T_VARIABLE($vertical_display) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND ( ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND ( T_VARIABLE($is_display) [ ] T_IS_EQUAL ) ) { T_VARIABLE($vertical_display) [ ] = ( ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) ? T_LNUMBER : T_LNUMBER ; T_IF ( T_VARIABLE($directionCondition) ) { T_VARIABLE($right_column_html) T_CONCAT_EQUAL . . T_VARIABLE($colspan) . . T_VARIABLE($full_or_partial_text_link) . ; } T_ELSE { T_VARIABLE($vertical_display) [ ] = . T_VARIABLE($rowspan) . . . . . . ; } } T_ELSEIF ( ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND ( ( T_VARIABLE($is_display) [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($is_display) [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_OR ! T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($vertical_display) [ ] = ( ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) ? T_LNUMBER : T_LNUMBER ; T_IF ( T_VARIABLE($directionCondition) ) { T_VARIABLE($right_column_html) T_CONCAT_EQUAL . . T_VARIABLE($colspan) . ; } T_ELSE { T_VARIABLE($vertical_display) [ ] = . T_VARIABLE($rowspan) . . ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($vertical_display) ) ; T_RETURN T_VARIABLE($right_column_html) ; } T_PRIVATE T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($value) ) { T_RETURN . T_VARIABLE($class) . ( T_VARIABLE($condition_field) ? : ) . . T_VARIABLE($value) . ; } T_PRIVATE T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) , T_VARIABLE($align) = ) { T_RETURN . T_VARIABLE($align) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) , ) . ; } T_PRIVATE T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) , T_VARIABLE($align) = ) { T_RETURN . T_VARIABLE($align) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) , ) . ; } T_PRIVATE T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) , T_VARIABLE($nowrap) , T_VARIABLE($is_field_truncated) = T_STRING , T_VARIABLE($transformation_plugin) = , T_VARIABLE($default_function) = ) { T_VARIABLE($enum_class) = ; T_IF ( T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($enum_class) = ; } T_VARIABLE($set_class) = ; T_IF ( T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($set_class) = ; } T_VARIABLE($bit_class) = ; T_IF ( T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($bit_class) = ; } T_VARIABLE($mime_type_class) = ; T_IF ( T_ISSET ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($mime_type_class) = . T_STRING ( , , T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) ; } T_RETURN T_VARIABLE($class) . ( T_VARIABLE($condition_field) ? : ) . T_VARIABLE($nowrap) . . ( T_VARIABLE($is_field_truncated) ? : ) . ( T_VARIABLE($transformation_plugin) T_IS_NOT_EQUAL T_VARIABLE($default_function) ? : ) . T_VARIABLE($enum_class) . T_VARIABLE($set_class) . T_VARIABLE($bit_class) . T_VARIABLE($mime_type_class) ; } T_PRIVATE T_STRING ( & T_VARIABLE($dt_result) , & T_VARIABLE($is_display) , T_VARIABLE($map) , T_VARIABLE($analyzed_sql) , T_VARIABLE($is_limited_display) = T_STRING ) { T_GLOBAL T_VARIABLE($row) ; T_VARIABLE($table_body_html) = ; T_VARIABLE($url_sql_query) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($analyzed_sql) ) ; T_VARIABLE($vertical_display) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($map) ) ) { T_VARIABLE($map) = T_ARRAY ( ) ; } T_VARIABLE($row_no) = T_LNUMBER ; T_VARIABLE($vertical_display) [ ] = T_ARRAY ( ) ; T_VARIABLE($vertical_display) [ ] = T_ARRAY ( ) ; T_VARIABLE($vertical_display) [ ] = T_ARRAY ( ) ; T_VARIABLE($vertical_display) [ ] = T_ARRAY ( ) ; T_VARIABLE($vertical_display) [ ] = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($vertical_display) ) ; T_IF ( T_VARIABLE($is_limited_display) T_BOOLEAN_OR ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($grid_edit_class) = ; } T_ELSE { T_SWITCH ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_CASE : T_VARIABLE($grid_edit_class) = ; T_BREAK ; T_CASE : T_VARIABLE($grid_edit_class) = ; T_BREAK ; T_CASE : T_VARIABLE($grid_edit_class) = ; T_BREAK ; } } T_LIST ( T_VARIABLE($col_order) , T_VARIABLE($col_visib) ) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($analyzed_sql) ) ; T_VARIABLE($odd_row) = T_STRING ; T_VARIABLE($directionCondition) = ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($dt_result) ) ) { T_VARIABLE($table_body_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($vertical_display) , T_VARIABLE($row_no) , T_VARIABLE($directionCondition) ) ; T_VARIABLE($alternating_color_class) = ( T_VARIABLE($odd_row) ? : ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_IF ( T_VARIABLE($directionCondition) ) { T_VARIABLE($table_body_html) T_CONCAT_EQUAL . T_VARIABLE($alternating_color_class) . ; } T_LIST ( T_VARIABLE($where_clause) , T_VARIABLE($clause_is_unique) , T_VARIABLE($condition_array) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dt_result) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($row) ) ; T_VARIABLE($where_clause_html) = T_STRING ( T_VARIABLE($where_clause) ) ; T_VARIABLE($del_url) = T_VARIABLE($del_query) = T_VARIABLE($del_str) = T_VARIABLE($edit_anchor_class) = T_VARIABLE($edit_str) = T_VARIABLE($js_conf) = T_VARIABLE($copy_url) = T_VARIABLE($copy_str) = T_STRING ; T_IF ( ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_IDENTICAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($iconic_spacer) = ; } T_ELSE { T_VARIABLE($iconic_spacer) = ; } T_IF ( T_VARIABLE($is_display) [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_LIST ( T_VARIABLE($edit_url) , T_VARIABLE($copy_url) , T_VARIABLE($edit_str) , T_VARIABLE($copy_str) , T_VARIABLE($edit_anchor_class) ) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($where_clause) , T_VARIABLE($clause_is_unique) , T_VARIABLE($url_sql_query) ) ; } T_IF ( ( T_VARIABLE($is_display) [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($is_display) [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_LIST ( T_VARIABLE($del_query) , T_VARIABLE($del_url) , T_VARIABLE($del_str) , T_VARIABLE($js_conf) ) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($where_clause) , T_VARIABLE($clause_is_unique) , T_VARIABLE($url_sql_query) , T_VARIABLE($is_display) [ ] ) ; } T_IF ( ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND T_VARIABLE($directionCondition) ) { T_VARIABLE($table_body_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($del_url) , T_VARIABLE($is_display) , T_VARIABLE($row_no) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) , T_VARIABLE($condition_array) , T_VARIABLE($del_query) , , T_VARIABLE($edit_url) , T_VARIABLE($copy_url) , T_VARIABLE($edit_anchor_class) , T_VARIABLE($edit_str) , T_VARIABLE($copy_str) , T_VARIABLE($del_str) , T_VARIABLE($js_conf) ) ; } T_ELSEIF ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND T_VARIABLE($directionCondition) ) { T_VARIABLE($table_body_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($del_url) , T_VARIABLE($is_display) , T_VARIABLE($row_no) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) , T_VARIABLE($condition_array) , T_VARIABLE($del_query) , , T_VARIABLE($edit_url) , T_VARIABLE($copy_url) , T_VARIABLE($edit_anchor_class) , T_VARIABLE($edit_str) , T_VARIABLE($copy_str) , T_VARIABLE($del_str) , T_VARIABLE($js_conf) ) ; } } T_VARIABLE($table_body_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dt_result) , T_VARIABLE($row) , T_VARIABLE($row_no) , T_VARIABLE($col_order) , T_VARIABLE($map) , T_VARIABLE($grid_edit_class) , T_VARIABLE($col_visib) , T_VARIABLE($where_clause) , T_VARIABLE($url_sql_query) , T_VARIABLE($analyzed_sql) , T_VARIABLE($directionCondition) ) ; T_IF ( ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND T_VARIABLE($directionCondition) ) { T_VARIABLE($table_body_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($del_url) , T_VARIABLE($is_display) , T_VARIABLE($row_no) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) , T_VARIABLE($condition_array) , T_VARIABLE($del_query) , , T_VARIABLE($edit_url) , T_VARIABLE($copy_url) , T_VARIABLE($edit_anchor_class) , T_VARIABLE($edit_str) , T_VARIABLE($copy_str) , T_VARIABLE($del_str) , T_VARIABLE($js_conf) ) ; } T_IF ( T_VARIABLE($directionCondition) ) { T_VARIABLE($table_body_html) T_CONCAT_EQUAL ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($row_no) , T_VARIABLE($is_display) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) , T_VARIABLE($js_conf) , T_VARIABLE($del_url) , T_VARIABLE($del_query) , T_VARIABLE($del_str) , T_VARIABLE($edit_anchor_class) , T_VARIABLE($edit_str) , T_VARIABLE($copy_url) , T_VARIABLE($copy_str) , T_VARIABLE($alternating_color_class) , T_VARIABLE($condition_array) ) ; T_VARIABLE($table_body_html) T_CONCAT_EQUAL T_VARIABLE($directionCondition) ? : ; T_VARIABLE($row_no) T_INC ; } T_RETURN T_VARIABLE($table_body_html) ; } T_PRIVATE T_STRING ( & T_VARIABLE($dt_result) , T_VARIABLE($row) , T_VARIABLE($row_no) , T_VARIABLE($col_order) , T_VARIABLE($map) , T_VARIABLE($grid_edit_class) , T_VARIABLE($col_visib) , T_VARIABLE($where_clause) , T_VARIABLE($url_sql_query) , T_VARIABLE($analyzed_sql) , T_VARIABLE($directionCondition) ) { T_VARIABLE($row_values_html) = ; T_VARIABLE($sql_query) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($fields_meta) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($highlight_columns) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($mime_map) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($row_info) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($row) , T_VARIABLE($col_order) ) ; T_FOR ( T_VARIABLE($currentColumn) = T_LNUMBER ; T_VARIABLE($currentColumn) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_INC T_VARIABLE($currentColumn) ) { T_VARIABLE($i) = T_VARIABLE($col_order) ? T_VARIABLE($col_order) [ T_VARIABLE($currentColumn) ] : T_VARIABLE($currentColumn) ; T_VARIABLE($meta) = T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] ; T_VARIABLE($not_null_class) = T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ? : ; T_VARIABLE($relation_class) = T_ISSET ( T_VARIABLE($map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] ) ? : ; T_VARIABLE($hide_class) = ( T_VARIABLE($col_visib) T_BOOLEAN_AND ! T_VARIABLE($col_visib) [ T_VARIABLE($currentColumn) ] T_BOOLEAN_AND ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) ? : ; T_VARIABLE($field_type_class) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($is_field_truncated) = T_STRING ; T_VARIABLE($class) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($grid_edit_class) , T_VARIABLE($not_null_class) , T_VARIABLE($relation_class) , T_VARIABLE($hide_class) , T_VARIABLE($field_type_class) , T_VARIABLE($row_no) ) ; T_VARIABLE($condition_field) = ( T_ISSET ( T_VARIABLE($highlight_columns) ) T_BOOLEAN_AND ( T_ISSET ( T_VARIABLE($highlight_columns) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($highlight_columns) [ T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) ] ) ) ) ? T_STRING : T_STRING ; T_VARIABLE($default_function) = ; T_VARIABLE($transformation_plugin) = T_VARIABLE($default_function) ; T_VARIABLE($transform_options) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] ) { T_IF ( T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($mime_map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ ] ) ) { T_VARIABLE($file) = T_VARIABLE($mime_map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ ] ; T_VARIABLE($include_file) = . T_VARIABLE($file) ; T_IF ( T_STRING ( T_VARIABLE($include_file) ) ) { T_INCLUDE_ONCE T_VARIABLE($include_file) ; T_VARIABLE($class_name) = T_STRING ( , , T_VARIABLE($file) ) ; T_VARIABLE($plugin_manager) = T_STRING ; T_VARIABLE($transformation_plugin) = T_NEW T_VARIABLE($class_name) ( T_VARIABLE($plugin_manager) ) ; T_VARIABLE($transform_options) = T_STRING ( T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ ] ) ? T_VARIABLE($mime_map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ ] : ) ; T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING = T_STRING ( , , T_VARIABLE($mime_map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ ] ) ; } } } T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($where_clause) , T_DOUBLE_ARROW T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING , ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($sql_query) ) ) { T_VARIABLE($_url_params) [ ] = T_VARIABLE($url_sql_query) ; } T_VARIABLE($transform_options) [ ] = T_STRING ( T_VARIABLE($_url_params) ) ; T_VARIABLE($vertical_display) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($row) [ T_VARIABLE($i) ] ) T_IS_NOT_EQUAL ) ) { T_VARIABLE($parsed_sql) = T_STRING ( T_VARIABLE($row) [ T_VARIABLE($i) ] ) ; T_VARIABLE($row) [ T_VARIABLE($i) ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($parsed_sql) , T_VARIABLE($row) [ T_VARIABLE($i) ] ) ; T_INCLUDE_ONCE T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ] [ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ] [ T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) ] [ T_LNUMBER ] ; T_VARIABLE($transformation_plugin) = T_NEW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ] [ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ] [ T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) ] [ T_LNUMBER ] ( T_STRING ) ; T_VARIABLE($transform_options) = T_STRING ( T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ ] ) ? T_VARIABLE($mime_map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ ] : ) ; T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING = T_STRING ( , , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ] [ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ] [ T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) ] [ T_LNUMBER ] ) ; } T_INCLUDE_ONCE ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) ) ) ) { T_VARIABLE($linking_url) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($i) ] , T_VARIABLE($row_info) , T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) ) ; T_INCLUDE_ONCE ; T_VARIABLE($transformation_plugin) = T_NEW T_STRING ( T_STRING ) ; T_VARIABLE($transform_options) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_VARIABLE($linking_url) , T_LNUMBER T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING = T_STRING ( , , ) ; } T_IF ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] [ T_VARIABLE($i) ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($i) ] , T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) , T_VARIABLE($map) , T_VARIABLE($is_field_truncated) , T_VARIABLE($analyzed_sql) , T_VARIABLE($transformation_plugin) , T_VARIABLE($default_function) , T_VARIABLE($transform_options) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING , T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($field_flags) = T_STRING ( T_VARIABLE($dt_result) , T_VARIABLE($i) ) ; T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] [ T_VARIABLE($i) ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($i) ] , T_VARIABLE($class) , T_VARIABLE($meta) , T_VARIABLE($_url_params) , T_VARIABLE($field_flags) , T_VARIABLE($transformation_plugin) , T_VARIABLE($default_function) , T_VARIABLE($transform_options) , T_VARIABLE($condition_field) , T_VARIABLE($is_field_truncated) ) ; } T_ELSEIF ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($class) = T_STRING ( , , T_VARIABLE($class) ) ; T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] [ T_VARIABLE($i) ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($i) ] , T_VARIABLE($class) , T_VARIABLE($meta) , T_VARIABLE($map) , T_VARIABLE($_url_params) , T_VARIABLE($condition_field) , T_VARIABLE($transformation_plugin) , T_VARIABLE($default_function) , T_VARIABLE($transform_options) , T_VARIABLE($is_field_truncated) , T_VARIABLE($analyzed_sql) ) ; } T_ELSE { T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] [ T_VARIABLE($i) ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($i) ] , T_VARIABLE($class) , T_VARIABLE($meta) , T_VARIABLE($map) , T_VARIABLE($_url_params) , T_VARIABLE($condition_field) , T_VARIABLE($transformation_plugin) , T_VARIABLE($default_function) , T_VARIABLE($transform_options) , T_VARIABLE($is_field_truncated) , T_VARIABLE($analyzed_sql) , T_VARIABLE($dt_result) , T_VARIABLE($i) ) ; } T_IF ( T_VARIABLE($directionCondition) ) { T_VARIABLE($row_values_html) T_CONCAT_EQUAL T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] [ T_VARIABLE($i) ] ; } T_IF ( T_ISSET ( T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($i) ] [ T_VARIABLE($row_no) ] ) ) { T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($i) ] [ T_VARIABLE($row_no) ] T_CONCAT_EQUAL T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] [ T_VARIABLE($i) ] ; } T_ELSE { T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($i) ] [ T_VARIABLE($row_no) ] = T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] [ T_VARIABLE($i) ] ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($vertical_display) ) ; } T_RETURN T_VARIABLE($row_values_html) ; } T_PRIVATE T_STRING ( T_VARIABLE($row_no) , T_VARIABLE($is_display) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) , T_VARIABLE($js_conf) , T_VARIABLE($del_url) , T_VARIABLE($del_query) , T_VARIABLE($del_str) , T_VARIABLE($edit_anchor_class) , T_VARIABLE($edit_str) , T_VARIABLE($copy_url) , T_VARIABLE($copy_str) , T_VARIABLE($alternating_color_class) , T_VARIABLE($condition_array) ) { T_VARIABLE($vertical_display) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] ) ) { T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] = ; T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] = ; T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] = ; T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] = ; } T_VARIABLE($vertical_class) = . T_VARIABLE($row_no) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($vertical_class) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($vertical_class) T_CONCAT_EQUAL ; } T_IF ( ! T_EMPTY ( T_VARIABLE($del_url) ) T_BOOLEAN_AND ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($del_url) , T_VARIABLE($is_display) , T_VARIABLE($row_no) , T_VARIABLE($where_clause_html) , T_VARIABLE($condition_array) , T_VARIABLE($del_query) , , T_VARIABLE($alternating_color_class) . T_VARIABLE($vertical_class) ) ; } T_ELSE { T_UNSET ( T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($edit_url) ) ) { T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($edit_url) , T_VARIABLE($alternating_color_class) . . T_VARIABLE($edit_anchor_class) . T_VARIABLE($vertical_class) , T_VARIABLE($edit_str) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) ) ; } T_ELSE { T_UNSET ( T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($copy_url) ) ) { T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($copy_url) , T_VARIABLE($copy_str) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) , T_VARIABLE($alternating_color_class) . T_VARIABLE($vertical_class) ) ; } T_ELSE { T_UNSET ( T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($del_url) ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($js_conf) ) ) { T_VARIABLE($js_conf) = ; } T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($del_url) , T_VARIABLE($del_str) , T_VARIABLE($js_conf) , T_VARIABLE($alternating_color_class) . T_VARIABLE($vertical_class) ) ; } T_ELSE { T_UNSET ( T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($row_no) ] ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($vertical_display) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($field) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ] [ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ] [ T_STRING ( T_VARIABLE($field) ) ] ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($field) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ] [ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ] [ T_VARIABLE($field) ] ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($column_value) , T_VARIABLE($row_info) , T_VARIABLE($field_name) ) { T_VARIABLE($linking_url_params) = T_ARRAY ( ) ; T_VARIABLE($link_relations) = T_VARIABLE($GLOBALS) [ ] [ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ] [ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ] [ T_VARIABLE($field_name) ] ; T_IF ( ! T_STRING ( T_VARIABLE($link_relations) [ ] ) ) { T_VARIABLE($linking_url_params) [ T_VARIABLE($link_relations) [ ] ] = T_VARIABLE($column_value) ; } T_ELSE { T_VARIABLE($sql) = . T_VARIABLE($column_value) . . T_VARIABLE($row_info) [ T_VARIABLE($link_relations) [ ] [ T_LNUMBER ] ] . . T_VARIABLE($row_info) [ T_VARIABLE($link_relations) [ ] [ T_LNUMBER ] ] . ; T_VARIABLE($linking_url_params) [ T_VARIABLE($link_relations) [ ] [ T_LNUMBER ] ] = T_VARIABLE($sql) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($link_relations) [ ] ) ) { T_FOREACH ( T_VARIABLE($link_relations) [ ] T_AS T_VARIABLE($new_param) ) { T_IF ( T_STRING ( T_VARIABLE($new_param) [ ] ) ) { T_VARIABLE($linking_url_params) [ T_VARIABLE($new_param) [ ] [ T_LNUMBER ] ] = T_VARIABLE($new_param) [ ] [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($linking_url_params) [ T_VARIABLE($new_param) [ ] ] = T_VARIABLE($row_info) [ T_STRING ( T_VARIABLE($new_param) [ ] ) ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($row_info) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($row_info) [ ] ) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($linking_url_params) [ ] = T_LNUMBER ; } T_ELSE T_IF ( T_STRING ( T_VARIABLE($row_info) [ ] ) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($linking_url_params) [ ] = T_LNUMBER ; } } } } } T_RETURN T_VARIABLE($link_relations) [ ] . T_STRING ( T_VARIABLE($linking_url_params) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($row) , T_VARIABLE($col_order) ) { T_VARIABLE($row_info) = T_ARRAY ( ) ; T_VARIABLE($fields_meta) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOR ( T_VARIABLE($n) = T_LNUMBER ; T_VARIABLE($n) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_INC T_VARIABLE($n) ) { T_VARIABLE($m) = T_VARIABLE($col_order) ? T_VARIABLE($col_order) [ T_VARIABLE($n) ] : T_VARIABLE($n) ; T_VARIABLE($row_info) [ T_STRING ( T_VARIABLE($fields_meta) [ T_VARIABLE($m) ] T_OBJECT_OPERATOR T_STRING ) ] = T_VARIABLE($row) [ T_VARIABLE($m) ] ; } T_RETURN T_VARIABLE($row_info) ; } T_PRIVATE T_STRING ( T_VARIABLE($analyzed_sql) ) { T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) > T_LNUMBER ) ) { T_VARIABLE($url_sql_query) = ; T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) ) { T_VARIABLE($url_sql_query) T_CONCAT_EQUAL ; } T_VARIABLE($url_sql_query) T_CONCAT_EQUAL T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($url_sql_query) T_CONCAT_EQUAL . T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ; } T_RETURN T_VARIABLE($url_sql_query) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PRIVATE T_STRING ( T_VARIABLE($analyzed_sql) ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($analyzed_sql) ) ) { T_VARIABLE($pmatable) = T_NEW T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($col_order) = T_VARIABLE($pmatable) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ) ; T_VARIABLE($col_visib) = T_VARIABLE($pmatable) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ) ; } T_ELSE { T_VARIABLE($col_order) = T_STRING ; T_VARIABLE($col_visib) = T_STRING ; } T_RETURN T_ARRAY ( T_VARIABLE($col_order) , T_VARIABLE($col_visib) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($vertical_display) , T_VARIABLE($row_no) , T_VARIABLE($directionCondition) ) { T_VARIABLE($support_html) = ; T_IF ( ( ( T_VARIABLE($row_no) T_IS_NOT_EQUAL T_LNUMBER ) T_BOOLEAN_AND ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_NOT_EQUAL T_LNUMBER ) ) T_BOOLEAN_AND ! ( T_VARIABLE($row_no) \% T_VARIABLE($_SESSION) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($directionCondition) ) { T_VARIABLE($support_html) T_CONCAT_EQUAL . ; T_IF ( T_VARIABLE($vertical_display) [ ] > T_LNUMBER ) { T_VARIABLE($support_html) T_CONCAT_EQUAL . T_VARIABLE($vertical_display) [ ] . . . . ; } T_ELSE T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($support_html) T_CONCAT_EQUAL . ; } T_FOREACH ( T_VARIABLE($vertical_display) [ ] T_AS T_VARIABLE($val) ) { T_VARIABLE($support_html) T_CONCAT_EQUAL T_VARIABLE($val) ; } T_IF ( T_VARIABLE($vertical_display) [ ] > T_LNUMBER ) { T_VARIABLE($support_html) T_CONCAT_EQUAL . T_VARIABLE($vertical_display) [ ] . . . . ; } T_VARIABLE($support_html) T_CONCAT_EQUAL . ; } T_RETURN T_VARIABLE($support_html) ; } T_PRIVATE T_STRING ( T_VARIABLE($where_clause) , T_VARIABLE($clause_is_unique) , T_VARIABLE($url_sql_query) ) { T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($where_clause) , T_DOUBLE_ARROW T_VARIABLE($clause_is_unique) , T_DOUBLE_ARROW T_VARIABLE($url_sql_query) , T_DOUBLE_ARROW , ) ; T_VARIABLE($edit_url) = . T_STRING ( T_VARIABLE($_url_params) + T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_VARIABLE($copy_url) = . T_STRING ( T_VARIABLE($_url_params) + T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_VARIABLE($edit_str) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($copy_str) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($edit_anchor_class) = ; T_IF ( T_VARIABLE($clause_is_unique) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($edit_anchor_class) T_CONCAT_EQUAL ; } T_RETURN T_ARRAY ( T_VARIABLE($edit_url) , T_VARIABLE($copy_url) , T_VARIABLE($edit_str) , T_VARIABLE($copy_str) , T_VARIABLE($edit_anchor_class) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($where_clause) , T_VARIABLE($clause_is_unique) , T_VARIABLE($url_sql_query) , T_VARIABLE($del_lnk) ) { T_VARIABLE($goto) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($del_lnk) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($url_sql_query) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ( T_EMPTY ( T_VARIABLE($goto) ) ? : T_VARIABLE($goto) ) , ) ; T_VARIABLE($lnk_goto) = . T_STRING ( T_VARIABLE($_url_params) , ) ; T_VARIABLE($del_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) . . T_VARIABLE($where_clause) . ( T_VARIABLE($clause_is_unique) ? : ) ; T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($del_query) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($lnk_goto) , ) ; T_VARIABLE($del_url) = . T_STRING ( T_VARIABLE($_url_params) ) ; T_VARIABLE($js_conf) = . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) . . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) . . T_STRING ( T_VARIABLE($where_clause) , T_STRING ) . ( T_VARIABLE($clause_is_unique) ? : ) ; T_VARIABLE($del_str) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; } T_ELSEIF ( T_VARIABLE($del_lnk) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($url_sql_query) , T_DOUBLE_ARROW , ) ; T_VARIABLE($lnk_goto) = . T_STRING ( T_VARIABLE($_url_params) , ) ; T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW . T_VARIABLE($row) [ T_LNUMBER ] , T_DOUBLE_ARROW T_VARIABLE($lnk_goto) , ) ; T_VARIABLE($del_url) = . T_STRING ( T_VARIABLE($_url_params) ) ; T_VARIABLE($del_query) = . T_VARIABLE($row) [ T_LNUMBER ] ; T_VARIABLE($js_conf) = . T_VARIABLE($row) [ T_LNUMBER ] ; T_VARIABLE($del_str) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; } T_RETURN T_ARRAY ( T_VARIABLE($del_query) , T_VARIABLE($del_url) , T_VARIABLE($del_str) , T_VARIABLE($js_conf) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($dir) , T_VARIABLE($del_url) , T_VARIABLE($is_display) , T_VARIABLE($row_no) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) , T_VARIABLE($condition_array) , T_VARIABLE($del_query) , T_VARIABLE($dir_letter) , T_VARIABLE($edit_url) , T_VARIABLE($copy_url) , T_VARIABLE($edit_anchor_class) , T_VARIABLE($edit_str) , T_VARIABLE($copy_str) , T_VARIABLE($del_str) , T_VARIABLE($js_conf) ) { T_IF ( ! T_ISSET ( T_VARIABLE($js_conf) ) ) { T_VARIABLE($js_conf) = ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dir) , T_VARIABLE($del_url) , T_VARIABLE($is_display) , T_VARIABLE($row_no) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) , T_VARIABLE($condition_array) , T_VARIABLE($del_query) , , T_VARIABLE($edit_url) , T_VARIABLE($copy_url) , T_VARIABLE($edit_anchor_class) , T_VARIABLE($edit_str) , T_VARIABLE($copy_str) , T_VARIABLE($del_str) , T_VARIABLE($js_conf) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($grid_edit_class) , T_VARIABLE($not_null_class) , T_VARIABLE($relation_class) , T_VARIABLE($hide_class) , T_VARIABLE($field_type_class) , T_VARIABLE($row_no) ) { T_VARIABLE($printview) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($class) = . T_VARIABLE($grid_edit_class) . . T_VARIABLE($not_null_class) . . T_VARIABLE($relation_class) . . T_VARIABLE($hide_class) . . T_VARIABLE($field_type_class) ; T_IF ( ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( ! T_ISSET ( T_VARIABLE($printview) ) T_BOOLEAN_OR ( T_VARIABLE($printview) T_IS_NOT_EQUAL ) ) ) { T_VARIABLE($class) T_CONCAT_EQUAL . T_VARIABLE($row_no) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($class) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($class) T_CONCAT_EQUAL ; } } T_RETURN T_VARIABLE($class) ; } T_PRIVATE T_STRING ( T_VARIABLE($type) ) { T_IF ( ( T_STRING ( T_VARIABLE($type) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($type) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($field_type_class) = ; } T_ELSE T_IF ( T_VARIABLE($type) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($field_type_class) = ; } T_ELSE { T_VARIABLE($field_type_class) = ; } T_RETURN T_VARIABLE($field_type_class) ; } T_PRIVATE T_STRING ( T_VARIABLE($column) , T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) , T_VARIABLE($map) , T_VARIABLE($is_field_truncated) , T_VARIABLE($analyzed_sql) , T_VARIABLE($transformation_plugin) , T_VARIABLE($default_function) , T_VARIABLE($transform_options) ) { T_IF ( ! T_ISSET ( T_VARIABLE($column) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($column) ) ) { T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) , ) ; } T_ELSEIF ( T_VARIABLE($column) T_IS_NOT_EQUAL ) { T_VARIABLE($nowrap) = ; T_VARIABLE($where_comparison) = . T_VARIABLE($column) ; T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($analyzed_sql) , T_VARIABLE($meta) , T_VARIABLE($map) , T_VARIABLE($column) , T_VARIABLE($transformation_plugin) , T_VARIABLE($default_function) , T_VARIABLE($nowrap) , T_VARIABLE($where_comparison) , T_VARIABLE($transform_options) , T_VARIABLE($is_field_truncated) ) ; } T_ELSE { T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) , ) ; } T_RETURN T_VARIABLE($cell) ; } T_PRIVATE T_STRING ( T_VARIABLE($column) , T_VARIABLE($class) , T_VARIABLE($meta) , T_VARIABLE($_url_params) , T_VARIABLE($field_flags) , T_VARIABLE($transformation_plugin) , T_VARIABLE($default_function) , T_VARIABLE($transform_options) , T_VARIABLE($condition_field) , T_VARIABLE($is_field_truncated) ) { T_IF ( T_STRING ( T_VARIABLE($field_flags) , T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($class) = T_STRING ( , , T_VARIABLE($class) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($column) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($column) ) ) { T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) ) ; } T_ELSE { T_VARIABLE($blobtext) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING , ( T_ISSET ( T_VARIABLE($column) ) ? T_VARIABLE($column) : ) , T_VARIABLE($transformation_plugin) , T_VARIABLE($transform_options) , T_VARIABLE($default_function) , T_VARIABLE($meta) , T_VARIABLE($_url_params) ) ; T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($blobtext) ) ; T_UNSET ( T_VARIABLE($blobtext) ) ; } } T_ELSE { T_IF ( ! T_ISSET ( T_VARIABLE($column) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($column) ) ) { T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) ) ; } T_ELSEIF ( T_VARIABLE($column) T_IS_NOT_EQUAL ) { T_IF ( ( T_STRING ( T_VARIABLE($column) ) > T_VARIABLE($GLOBALS) [ ] [ ] ) T_BOOLEAN_AND ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) ) ) { T_VARIABLE($column) = T_STRING ( T_VARIABLE($column) , T_LNUMBER , T_VARIABLE($GLOBALS) [ ] [ ] ) . ; T_VARIABLE($is_field_truncated) = T_STRING ; } T_VARIABLE($column) = ( T_VARIABLE($default_function) T_IS_NOT_EQUAL T_VARIABLE($transformation_plugin) ) ? T_VARIABLE($transformation_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column) , T_VARIABLE($transform_options) , T_VARIABLE($meta) ) : T_VARIABLE($this) T_OBJECT_OPERATOR T_VARIABLE($default_function) ( T_VARIABLE($column) , T_ARRAY ( ) , T_VARIABLE($meta) ) ; T_IF ( T_VARIABLE($is_field_truncated) ) { T_VARIABLE($class) T_CONCAT_EQUAL ; } T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($column) ) ; } T_ELSE { T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) ) ; } } T_RETURN T_VARIABLE($cell) ; } T_PRIVATE T_STRING ( T_VARIABLE($column) , T_VARIABLE($class) , T_VARIABLE($meta) , T_VARIABLE($map) , T_VARIABLE($_url_params) , T_VARIABLE($condition_field) , T_VARIABLE($transformation_plugin) , T_VARIABLE($default_function) , T_VARIABLE($transform_options) , T_VARIABLE($is_field_truncated) , T_VARIABLE($analyzed_sql) ) { T_IF ( ! T_ISSET ( T_VARIABLE($column) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($column) ) ) { T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) ) ; } T_ELSEIF ( T_VARIABLE($column) T_IS_NOT_EQUAL ) { T_IF ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($geometry_text) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ) , ( T_ISSET ( T_VARIABLE($column) ) ? T_VARIABLE($column) : ) , T_VARIABLE($transformation_plugin) , T_VARIABLE($transform_options) , T_VARIABLE($default_function) , T_VARIABLE($meta) ) ; T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($geometry_text) ) ; } T_ELSEIF ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($where_comparison) = . T_VARIABLE($column) ; T_VARIABLE($wktval) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) ) ; T_IF ( ( T_STRING ( T_VARIABLE($wktval) ) > T_VARIABLE($GLOBALS) [ ] [ ] ) T_BOOLEAN_AND ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($wktval) = T_STRING ( T_VARIABLE($wktval) , T_LNUMBER , T_VARIABLE($GLOBALS) [ ] [ ] ) . ; T_VARIABLE($is_field_truncated) = T_STRING ; } T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($analyzed_sql) , T_VARIABLE($meta) , T_VARIABLE($map) , T_VARIABLE($wktval) , T_VARIABLE($transformation_plugin) , T_VARIABLE($default_function) , , T_VARIABLE($where_comparison) , T_VARIABLE($transform_options) , T_VARIABLE($is_field_truncated) ) ; } T_ELSE { T_IF ( T_VARIABLE($_SESSION) [ ] [ ] ) { T_VARIABLE($where_comparison) = . T_VARIABLE($column) ; T_VARIABLE($wkbval) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column) , , T_LNUMBER ) ; T_IF ( ( T_STRING ( T_VARIABLE($wkbval) ) > T_VARIABLE($GLOBALS) [ ] [ ] ) T_BOOLEAN_AND ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($wkbval) = T_STRING ( T_VARIABLE($wkbval) , T_LNUMBER , T_VARIABLE($GLOBALS) [ ] [ ] ) . ; T_VARIABLE($is_field_truncated) = T_STRING ; } T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($analyzed_sql) , T_VARIABLE($meta) , T_VARIABLE($map) , T_VARIABLE($wkbval) , T_VARIABLE($transformation_plugin) , T_VARIABLE($default_function) , , T_VARIABLE($where_comparison) , T_VARIABLE($transform_options) , T_VARIABLE($is_field_truncated) ) ; } T_ELSE { T_VARIABLE($wkbval) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($column) , T_VARIABLE($transformation_plugin) , T_VARIABLE($transform_options) , T_VARIABLE($default_function) , T_VARIABLE($meta) , T_VARIABLE($_url_params) ) ; T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($wkbval) ) ; } } } T_ELSE { T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) ) ; } T_RETURN T_VARIABLE($cell) ; } T_PRIVATE T_STRING ( T_VARIABLE($column) , T_VARIABLE($class) , T_VARIABLE($meta) , T_VARIABLE($map) , T_VARIABLE($_url_params) , T_VARIABLE($condition_field) , T_VARIABLE($transformation_plugin) , T_VARIABLE($default_function) , T_VARIABLE($transform_options) , T_VARIABLE($is_field_truncated) , T_VARIABLE($analyzed_sql) , & T_VARIABLE($dt_result) , T_VARIABLE($col_index) ) { T_VARIABLE($is_analyse) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($field_flags) = T_STRING ( T_VARIABLE($dt_result) , T_VARIABLE($col_index) ) ; T_IF ( T_STRING ( T_VARIABLE($field_flags) , T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL ) ) { T_VARIABLE($class) = T_STRING ( , , T_VARIABLE($class) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($column) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($column) ) ) { T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) ) ; } T_ELSEIF ( T_VARIABLE($column) T_IS_NOT_EQUAL ) { T_IF ( T_STRING ( T_VARIABLE($column) ) > T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($transformation_plugin) ) T_IS_EQUAL T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($transformation_plugin) T_OBJECT_OPERATOR T_STRING ( ) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($column) = T_STRING ( T_VARIABLE($column) , T_LNUMBER , T_VARIABLE($GLOBALS) [ ] [ ] ) . ; T_VARIABLE($is_field_truncated) = T_STRING ; } T_VARIABLE($formatted) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_IDENTICAL T_STRING ) { T_VARIABLE($column) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) , T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($field_flags) , T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ! ( T_ISSET ( T_VARIABLE($is_analyse) ) T_BOOLEAN_AND T_VARIABLE($is_analyse) ) ) { T_IF ( T_VARIABLE($_SESSION) [ ] [ ] ) { T_VARIABLE($column) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column) , ) ; } T_ELSE { T_VARIABLE($column) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($column) , T_VARIABLE($transformation_plugin) , T_VARIABLE($transform_options) , T_VARIABLE($default_function) , T_VARIABLE($meta) , T_VARIABLE($_url_params) ) ; T_VARIABLE($formatted) = T_STRING ; } } T_IF ( T_VARIABLE($formatted) ) { T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($column) ) ; } T_ELSE { T_VARIABLE($function_nowrap) = ; T_VARIABLE($bool_nowrap) = ( ( T_VARIABLE($default_function) T_IS_NOT_EQUAL T_VARIABLE($transformation_plugin) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($transformation_plugin) T_OBJECT_OPERATOR T_VARIABLE($function_nowrap) ( ) ) ) ? T_VARIABLE($transformation_plugin) T_OBJECT_OPERATOR T_VARIABLE($function_nowrap) ( T_VARIABLE($transform_options) ) : T_STRING ; T_VARIABLE($nowrap) = ( T_STRING ( , T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR T_VARIABLE($bool_nowrap) ) ? : ; T_VARIABLE($where_comparison) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) ) . ; T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($analyzed_sql) , T_VARIABLE($meta) , T_VARIABLE($map) , T_VARIABLE($column) , T_VARIABLE($transformation_plugin) , T_VARIABLE($default_function) , T_VARIABLE($nowrap) , T_VARIABLE($where_comparison) , T_VARIABLE($transform_options) , T_VARIABLE($is_field_truncated) ) ; } } T_ELSE { T_VARIABLE($cell) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) ) ; } T_RETURN T_VARIABLE($cell) ; } T_PRIVATE T_STRING ( T_VARIABLE($analyzed_sql) , T_VARIABLE($is_display) ) { T_VARIABLE($vertical_table_html) = ; T_VARIABLE($vertical_display) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($vertical_display) [ ] ) T_BOOLEAN_AND ( ( T_STRING ( T_VARIABLE($vertical_display) [ ] ) > T_LNUMBER ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($vertical_display) [ ] ) ) ) { T_VARIABLE($vertical_table_html) T_CONCAT_EQUAL . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($vertical_table_html) T_CONCAT_EQUAL . ; } T_VARIABLE($vertical_table_html) T_CONCAT_EQUAL T_VARIABLE($vertical_display) [ ] . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($is_display) ) . . ; } T_IF ( ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($vertical_display) [ ] ) T_BOOLEAN_AND ( ( T_STRING ( T_VARIABLE($vertical_display) [ ] ) > T_LNUMBER ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($vertical_display) [ ] ) ) ) { T_VARIABLE($vertical_table_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($vertical_display) [ ] ) T_BOOLEAN_AND ( ( T_STRING ( T_VARIABLE($vertical_display) [ ] ) > T_LNUMBER ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($vertical_display) [ ] ) ) ) { T_VARIABLE($vertical_table_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($vertical_display) [ ] ) T_BOOLEAN_AND ( ( T_STRING ( T_VARIABLE($vertical_display) [ ] ) > T_LNUMBER ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($vertical_display) [ ] ) ) ) { T_VARIABLE($vertical_table_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_LIST ( T_VARIABLE($col_order) , T_VARIABLE($col_visib) ) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($analyzed_sql) ) ; T_FOREACH ( T_VARIABLE($vertical_display) [ ] T_AS T_VARIABLE($j) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($key) = T_VARIABLE($col_order) ? T_VARIABLE($col_order) [ T_VARIABLE($j) ] : T_VARIABLE($j) ; T_VARIABLE($vertical_table_html) T_CONCAT_EQUAL . ( ( T_VARIABLE($col_visib) T_BOOLEAN_AND ! T_VARIABLE($col_visib) [ T_VARIABLE($j) ] ) ? : ) . . . T_VARIABLE($val) ; T_VARIABLE($cell_displayed) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($vertical_display) [ ] [ T_VARIABLE($key) ] T_AS T_VARIABLE($subval) ) { T_IF ( ( T_VARIABLE($cell_displayed) T_IS_NOT_EQUAL T_LNUMBER ) T_BOOLEAN_AND ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_NOT_EQUAL T_LNUMBER ) T_BOOLEAN_AND ! ( T_VARIABLE($cell_displayed) \% T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_VARIABLE($vertical_table_html) T_CONCAT_EQUAL T_VARIABLE($val) ; } T_VARIABLE($vertical_table_html) T_CONCAT_EQUAL T_VARIABLE($subval) ; T_VARIABLE($cell_displayed) T_INC ; } T_VARIABLE($vertical_table_html) T_CONCAT_EQUAL . ; } T_IF ( ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($vertical_display) [ ] ) T_BOOLEAN_AND ( ( T_STRING ( T_VARIABLE($vertical_display) [ ] ) > T_LNUMBER ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($vertical_display) [ ] ) ) ) { T_VARIABLE($vertical_table_html) T_CONCAT_EQUAL . . T_VARIABLE($vertical_display) [ ] . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($is_display) ) . . ; } T_IF ( ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($vertical_display) [ ] ) T_BOOLEAN_AND ( ( T_STRING ( T_VARIABLE($vertical_display) [ ] ) > T_LNUMBER ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($vertical_display) [ ] ) ) ) { T_VARIABLE($vertical_table_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($vertical_display) [ ] ) T_BOOLEAN_AND ( ( T_STRING ( T_VARIABLE($vertical_display) [ ] ) > T_LNUMBER ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($vertical_display) [ ] ) ) ) { T_VARIABLE($vertical_table_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($vertical_display) [ ] ) T_BOOLEAN_AND ( ( T_STRING ( T_VARIABLE($vertical_display) [ ] ) > T_LNUMBER ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($vertical_display) [ ] ) ) ) { T_VARIABLE($vertical_table_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_RETURN T_VARIABLE($vertical_table_html) ; } T_PRIVATE T_STRING ( T_VARIABLE($operation) ) { T_VARIABLE($link_html) = . ; T_VARIABLE($vertical_display) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($vertical_display) [ ] ) ) { T_IF ( ( T_VARIABLE($operation) T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($operation) T_IS_EQUAL ) ) { T_VARIABLE($link_html) T_CONCAT_EQUAL T_VARIABLE($vertical_display) [ ] ; } T_ELSEIF ( T_VARIABLE($operation) T_IS_EQUAL ) { T_IF ( ! T_STRING ( T_VARIABLE($vertical_display) [ ] ) ) { T_VARIABLE($link_html) T_CONCAT_EQUAL T_VARIABLE($vertical_display) [ ] ; } } } T_FOREACH ( T_VARIABLE($vertical_display) [ T_VARIABLE($operation) ] T_AS T_VARIABLE($val) ) { T_VARIABLE($link_html) T_CONCAT_EQUAL T_VARIABLE($val) ; } T_VARIABLE($link_html) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($link_html) ; } T_PRIVATE T_STRING ( T_VARIABLE($dir) , T_VARIABLE($is_display) ) { T_VARIABLE($checkBoxes_html) = ; T_VARIABLE($cell_displayed) = T_LNUMBER ; T_VARIABLE($vertical_display) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($vertical_display) [ ] T_AS T_VARIABLE($val) ) { T_IF ( ( T_VARIABLE($cell_displayed) T_IS_NOT_EQUAL T_LNUMBER ) T_BOOLEAN_AND ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_NOT_EQUAL T_LNUMBER ) T_BOOLEAN_AND ! ( T_VARIABLE($cell_displayed) \% T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_VARIABLE($checkBoxes_html) T_CONCAT_EQUAL . ( ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) ? : . . ; } T_VARIABLE($checkBoxes_html) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($dir) , T_VARIABLE($val) ) ; T_VARIABLE($cell_displayed) T_INC ; } T_RETURN T_VARIABLE($checkBoxes_html) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($sql_md5) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($valid_disp_dir) = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_ARRAY ( T_STRING T_DOUBLE_COLON T_STRING , T_STRING T_DOUBLE_COLON T_STRING , T_STRING T_DOUBLE_COLON T_STRING ) ) ; T_IF ( T_VARIABLE($valid_disp_dir) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_VARIABLE($_REQUEST) [ ] ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSEIF ( T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_VARIABLE($GLOBALS) [ ] [ ] ; } T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_VARIABLE($_REQUEST) [ ] ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSEIF ( T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_VARIABLE($GLOBALS) [ ] [ ] ; } T_IF ( ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , ) T_BOOLEAN_AND ( T_INT_CAST T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_VARIABLE($_REQUEST) [ ] ) ) T_BOOLEAN_OR ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_VARIABLE($_REQUEST) [ ] ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSEIF ( T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_VARIABLE($GLOBALS) [ ] [ ] ; } T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_VARIABLE($_REQUEST) [ ] ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSEIF ( T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_LNUMBER ; } T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_ARRAY ( T_STRING T_DOUBLE_COLON T_STRING , T_STRING T_DOUBLE_COLON T_STRING ) ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_VARIABLE($_REQUEST) [ ] ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSEIF ( T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_STRING T_DOUBLE_COLON T_STRING ; } T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_ARRAY ( T_STRING T_DOUBLE_COLON T_STRING , T_STRING T_DOUBLE_COLON T_STRING ) ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_VARIABLE($_REQUEST) [ ] ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSEIF ( T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_STRING T_DOUBLE_COLON T_STRING ; } T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_ARRAY ( T_STRING T_DOUBLE_COLON T_STRING , T_STRING T_DOUBLE_COLON T_STRING , T_STRING T_DOUBLE_COLON T_STRING ) ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_VARIABLE($_REQUEST) [ ] ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSEIF ( T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_STRING T_DOUBLE_COLON T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_STRING ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_UNSET ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { } T_ELSE { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_STRING ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_UNSET ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] [ ] ) T_BOOLEAN_AND ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_IDENTICAL T_STRING ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_STRING ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_STRING ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_UNSET ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] = T_STRING ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_UNSET ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ) ; } T_VARIABLE($tmp) = T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] ; T_UNSET ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] ) ; T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] = T_VARIABLE($tmp) ; T_IF ( T_STRING ( T_VARIABLE($_SESSION) [ ] [ ] ) > T_LNUMBER ) { T_STRING ( T_VARIABLE($_SESSION) [ ] [ ] ) ; } T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ; T_VARIABLE($_SESSION) [ ] [ ] = T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ) ? T_STRING : T_STRING ; T_VARIABLE($_SESSION) [ ] [ ] = T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ) ? T_STRING : T_STRING ; T_VARIABLE($_SESSION) [ ] [ ] = T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ) ? T_STRING : T_STRING ; T_VARIABLE($_SESSION) [ ] [ ] = T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ) ? T_STRING : T_STRING ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($sql_md5) ] [ ] ; } T_PUBLIC T_STRING ( & T_VARIABLE($dt_result) , & T_VARIABLE($the_disp_mode) , T_VARIABLE($analyzed_sql) , T_VARIABLE($is_limited_display) = T_STRING ) { T_VARIABLE($table_html) = ; T_VARIABLE($fields_meta) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($showtable) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($printview) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($is_innodb) = ( T_ISSET ( T_VARIABLE($showtable) [ ] ) T_BOOLEAN_AND T_VARIABLE($showtable) [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ; T_IF ( T_VARIABLE($is_innodb) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND ( T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_BOOLEAN_OR ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_IS_EQUAL ) ) ) { T_VARIABLE($pre_count) = ; T_VARIABLE($after_count) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) ) ) ; } T_ELSE { T_VARIABLE($pre_count) = ; T_VARIABLE($after_count) = ; } T_VARIABLE($total) = ; T_VARIABLE($is_display) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($the_disp_mode) , T_VARIABLE($total) ) ; T_IF ( T_VARIABLE($is_display) [ ] T_IS_EQUAL ) { T_LIST ( T_VARIABLE($pos_next) , T_VARIABLE($pos_prev) ) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] = ; } T_LIST ( T_VARIABLE($sort_expression) , T_VARIABLE($sort_expression_nodirection) , T_VARIABLE($sort_direction) ) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ; T_VARIABLE($sorted_column_message) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dt_result) , T_VARIABLE($sort_expression_nodirection) ) ; T_IF ( ( T_VARIABLE($is_display) [ ] T_IS_EQUAL ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($pos_next) ) ) { T_VARIABLE($message) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($sorted_column_message) , T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] , T_VARIABLE($total) , T_VARIABLE($pos_next) , T_VARIABLE($pre_count) , T_VARIABLE($after_count) ) ; T_VARIABLE($table_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($printview) ) T_BOOLEAN_OR ( T_VARIABLE($printview) T_IS_NOT_EQUAL ) ) { T_VARIABLE($table_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; } T_IF ( ! T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($fields_meta) [ T_LNUMBER ] T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } } T_IF ( ( T_VARIABLE($is_display) [ ] T_IS_EQUAL ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($table_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pos_next) , T_VARIABLE($pos_prev) , T_STRING T_DOUBLE_COLON T_STRING , , T_VARIABLE($is_innodb) ) ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($printview) ) T_BOOLEAN_OR ( T_VARIABLE($printview) T_IS_NOT_EQUAL ) ) { T_VARIABLE($table_html) T_CONCAT_EQUAL . . ; } T_VARIABLE($map) = T_ARRAY ( ) ; T_VARIABLE($target) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_FOREACH ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_AS T_VARIABLE($table_ref_position) T_DOUBLE_ARROW T_VARIABLE($table_ref) ) { T_VARIABLE($target) [ ] = T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($table_ref_position) ] [ ] ; } } T_VARIABLE($tabs) = . T_STRING ( , T_VARIABLE($target) ) . ; T_IF ( ! T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_VARIABLE($exist_rel) = T_STRING ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($map) ) ; } T_VARIABLE($table_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($is_display) , T_VARIABLE($analyzed_sql) , T_VARIABLE($sort_expression) , T_VARIABLE($sort_expression_nodirection) , T_VARIABLE($sort_direction) , T_VARIABLE($is_limited_display) ) . . ; T_VARIABLE($url_query) = ; T_VARIABLE($table_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dt_result) , T_VARIABLE($is_display) , T_VARIABLE($map) , T_VARIABLE($analyzed_sql) , T_VARIABLE($is_limited_display) ) ; T_IF ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($table_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($analyzed_sql) , T_VARIABLE($is_display) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_VARIABLE($table_html) T_CONCAT_EQUAL . . ; T_IF ( T_VARIABLE($is_display) [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING T_BOOLEAN_AND T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($table_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dt_result) , T_VARIABLE($analyzed_sql) , T_VARIABLE($is_display) [ ] ) ; } T_IF ( ( T_VARIABLE($is_display) [ ] T_IS_EQUAL ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($table_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pos_next) , T_VARIABLE($pos_prev) , T_STRING T_DOUBLE_COLON T_STRING , . , T_VARIABLE($is_innodb) ) ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($printview) ) T_BOOLEAN_OR ( T_VARIABLE($printview) T_IS_NOT_EQUAL ) ) { T_VARIABLE($table_html) T_CONCAT_EQUAL . . ; } T_IF ( ( ! T_ISSET ( T_VARIABLE($printview) ) T_BOOLEAN_OR ( T_VARIABLE($printview) T_IS_NOT_EQUAL ) ) T_BOOLEAN_AND ! T_VARIABLE($is_limited_display) ) { T_VARIABLE($table_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($the_disp_mode) , T_VARIABLE($analyzed_sql) ) ; } T_RETURN T_VARIABLE($table_html) ; } T_PRIVATE T_STRING ( ) { T_IF ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($pos_next) = T_LNUMBER ; T_VARIABLE($pos_prev) = T_LNUMBER ; } T_ELSE { T_VARIABLE($pos_next) = T_VARIABLE($_SESSION) [ ] [ ] + T_VARIABLE($_SESSION) [ ] [ ] ; T_VARIABLE($pos_prev) = T_VARIABLE($_SESSION) [ ] [ ] - T_VARIABLE($_SESSION) [ ] [ ] ; T_IF ( T_VARIABLE($pos_prev) < T_LNUMBER ) { T_VARIABLE($pos_prev) = T_LNUMBER ; } } T_RETURN T_ARRAY ( T_VARIABLE($pos_next) , T_VARIABLE($pos_prev) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($order_by_clause) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($order_by_clause) ) ) { T_VARIABLE($sort_expression) = T_STRING ( T_STRING ( , , T_VARIABLE($order_by_clause) ) ) ; T_STRING ( , T_VARIABLE($sort_expression) , T_VARIABLE($matches) ) ; T_VARIABLE($sort_expression_nodirection) = T_ISSET ( T_VARIABLE($matches) [ T_LNUMBER ] ) ? T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] ) : T_VARIABLE($sort_expression) ; T_VARIABLE($sort_direction) = T_ISSET ( T_VARIABLE($matches) [ T_LNUMBER ] ) ? T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] ) : ; T_UNSET ( T_VARIABLE($matches) ) ; } T_ELSE { T_VARIABLE($sort_expression) = T_VARIABLE($sort_expression_nodirection) = T_VARIABLE($sort_direction) = ; } T_RETURN T_ARRAY ( T_VARIABLE($sort_expression) , T_VARIABLE($sort_expression_nodirection) , T_VARIABLE($sort_direction) ) ; } T_PRIVATE T_STRING ( & T_VARIABLE($dt_result) , T_VARIABLE($sort_expression_nodirection) ) { T_VARIABLE($fields_meta) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($sort_expression_nodirection) ) ) { T_IF ( T_STRING ( T_VARIABLE($sort_expression_nodirection) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($sort_table) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($sort_column) = T_VARIABLE($sort_expression_nodirection) ; } T_ELSE { T_LIST ( T_VARIABLE($sort_table) , T_VARIABLE($sort_column) ) = T_STRING ( , T_VARIABLE($sort_expression_nodirection) ) ; } T_VARIABLE($sort_table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($sort_table) ) ; T_VARIABLE($sort_column) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($sort_column) ) ; T_VARIABLE($sorted_column_index) = T_STRING ; T_FOREACH ( T_VARIABLE($fields_meta) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($meta) ) { T_IF ( ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($sort_table) ) T_BOOLEAN_AND ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($sort_column) ) ) { T_VARIABLE($sorted_column_index) = T_VARIABLE($key) ; T_BREAK ; } } T_IF ( T_VARIABLE($sorted_column_index) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($row) = T_STRING ( T_VARIABLE($dt_result) ) ; T_VARIABLE($default_function) = ; T_VARIABLE($transformation_plugin) = T_VARIABLE($default_function) ; T_VARIABLE($transform_options) = T_ARRAY ( ) ; T_VARIABLE($meta) = T_VARIABLE($fields_meta) [ T_VARIABLE($sorted_column_index) ] ; T_IF ( T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING , T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($column_for_first_row) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($row) [ T_VARIABLE($sorted_column_index) ] , T_VARIABLE($transformation_plugin) , T_VARIABLE($transform_options) , T_VARIABLE($default_function) , T_VARIABLE($meta) , T_STRING ) ; } T_ELSE { T_VARIABLE($column_for_first_row) = T_VARIABLE($row) [ T_VARIABLE($sorted_column_index) ] ; } T_VARIABLE($column_for_first_row) = T_STRING ( T_STRING ( T_VARIABLE($column_for_first_row) , T_LNUMBER , T_VARIABLE($GLOBALS) [ ] [ ] ) ) ; T_STRING ( T_VARIABLE($dt_result) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) - T_LNUMBER ) ; T_VARIABLE($row) = T_STRING ( T_VARIABLE($dt_result) ) ; T_VARIABLE($meta) = T_VARIABLE($fields_meta) [ T_VARIABLE($sorted_column_index) ] ; T_IF ( T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING , T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($column_for_last_row) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($row) [ T_VARIABLE($sorted_column_index) ] , T_VARIABLE($transformation_plugin) , T_VARIABLE($transform_options) , T_VARIABLE($default_function) , T_VARIABLE($meta) , T_STRING ) ; } T_ELSE { T_VARIABLE($column_for_last_row) = T_VARIABLE($row) [ T_VARIABLE($sorted_column_index) ] ; } T_VARIABLE($column_for_last_row) = T_STRING ( T_STRING ( T_VARIABLE($column_for_last_row) , T_LNUMBER , T_VARIABLE($GLOBALS) [ ] [ ] ) ) ; T_STRING ( T_VARIABLE($dt_result) , T_LNUMBER ) ; T_RETURN . T_STRING ( T_VARIABLE($sort_column) ) . . T_STRING ( T_VARIABLE($column_for_first_row) ) . . T_STRING ( T_VARIABLE($column_for_last_row) ) . ; } } T_RETURN T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($sorted_column_message) , T_VARIABLE($limit_clause) , T_VARIABLE($total) , T_VARIABLE($pos_next) , T_VARIABLE($pre_count) , T_VARIABLE($after_count) ) { T_VARIABLE($unlim_num_rows) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($unlim_num_rows) ) T_BOOLEAN_AND ( T_VARIABLE($unlim_num_rows) T_IS_NOT_EQUAL T_VARIABLE($total) ) ) { T_VARIABLE($selectstring) = . T_VARIABLE($unlim_num_rows) . . T_STRING ( ) ; } T_ELSE { T_VARIABLE($selectstring) = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($limit_clause) ) ) { T_VARIABLE($limit_data) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($limit_clause) ) ; T_VARIABLE($first_shown_rec) = T_VARIABLE($limit_data) [ ] ; T_IF ( T_VARIABLE($limit_data) [ ] < T_VARIABLE($total) ) { T_VARIABLE($last_shown_rec) = T_VARIABLE($limit_data) [ ] + T_VARIABLE($limit_data) [ ] - T_LNUMBER ; } T_ELSE { T_VARIABLE($last_shown_rec) = T_VARIABLE($limit_data) [ ] + T_VARIABLE($total) - T_LNUMBER ; } } T_ELSEIF ( ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($pos_next) > T_VARIABLE($total) ) ) { T_VARIABLE($first_shown_rec) = T_VARIABLE($_SESSION) [ ] [ ] ; T_VARIABLE($last_shown_rec) = T_VARIABLE($total) - T_LNUMBER ; } T_ELSE { T_VARIABLE($first_shown_rec) = T_VARIABLE($_SESSION) [ ] [ ] ; T_VARIABLE($last_shown_rec) = T_VARIABLE($pos_next) - T_LNUMBER ; } T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) T_BOOLEAN_AND ( T_VARIABLE($total) T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($message_view_warning) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) ) ; } T_ELSE { T_VARIABLE($message_view_warning) = T_STRING ; } T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($first_shown_rec) ) ; T_IF ( T_VARIABLE($message_view_warning) ) { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($message_view_warning) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($last_shown_rec) , ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pre_count) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($total) , T_LNUMBER ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($after_count) ) ) { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($after_count) ) ; } T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($selectstring) , ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_VARIABLE($messagge_qt) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) . ) ; T_VARIABLE($messagge_qt) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($messagge_qt) , ) ; T_IF ( ! T_STRING ( T_VARIABLE($sorted_column_message) ) ) { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($sorted_column_message) , ) ; } T_RETURN T_VARIABLE($message) ; } T_PRIVATE T_STRING ( & T_VARIABLE($map) ) { T_VARIABLE($exist_rel) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , , T_STRING T_DOUBLE_COLON T_STRING ) ; T_IF ( T_VARIABLE($exist_rel) ) { T_FOREACH ( T_VARIABLE($exist_rel) T_AS T_VARIABLE($master_field) T_DOUBLE_ARROW T_VARIABLE($rel) ) { T_VARIABLE($display_field) = T_STRING ( T_VARIABLE($rel) [ ] , T_VARIABLE($rel) [ ] ) ; T_VARIABLE($map) [ T_VARIABLE($master_field) ] = T_ARRAY ( T_VARIABLE($rel) [ ] , T_VARIABLE($rel) [ ] , T_VARIABLE($display_field) , T_VARIABLE($rel) [ ] ) ; } } } T_PRIVATE T_STRING ( & T_VARIABLE($dt_result) , T_VARIABLE($analyzed_sql) , T_VARIABLE($del_link) ) { T_VARIABLE($links_html) = ; T_VARIABLE($url_query) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($delete_text) = ( T_VARIABLE($del_link) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ? T_STRING ( ) : T_STRING ( ) ; T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; T_IF ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($links_html) T_CONCAT_EQUAL . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . . . . T_STRING ( ) . ; } T_VARIABLE($links_html) T_CONCAT_EQUAL . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . . ; T_VARIABLE($links_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , , T_STRING ( ) , , ) ; T_VARIABLE($links_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , , T_VARIABLE($delete_text) , , ) ; T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] ) T_BOOLEAN_AND T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($links_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , , T_STRING ( ) , , ) ; } T_VARIABLE($links_html) T_CONCAT_EQUAL ; T_VARIABLE($links_html) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) . . ; T_IF ( ! T_EMPTY ( T_VARIABLE($url_query) ) ) { T_VARIABLE($links_html) T_CONCAT_EQUAL . . T_VARIABLE($url_query) . . ; } T_STRING ( T_VARIABLE($dt_result) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) - T_LNUMBER ) ; T_VARIABLE($row) = T_STRING ( T_VARIABLE($dt_result) ) ; T_LIST ( T_VARIABLE($where_clause) , T_VARIABLE($clause_is_unique) , T_VARIABLE($condition_array) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dt_result) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($row) ) ; T_STRING ( T_VARIABLE($dt_result) , T_LNUMBER ) ; T_VARIABLE($links_html) T_CONCAT_EQUAL . . T_VARIABLE($clause_is_unique) . . ; T_VARIABLE($links_html) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($links_html) ; } T_PRIVATE T_STRING ( T_VARIABLE($pos_next) , T_VARIABLE($pos_prev) , T_VARIABLE($place) , T_VARIABLE($empty_line) , T_VARIABLE($is_innodb) ) { T_VARIABLE($navigation_html) = ; T_IF ( T_VARIABLE($place) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($navigation_html) T_CONCAT_EQUAL . ; } T_VARIABLE($navigation_html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pos_next) , T_VARIABLE($pos_prev) , , T_VARIABLE($is_innodb) ) ; T_IF ( T_VARIABLE($place) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($navigation_html) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($navigation_html) ; } T_PRIVATE T_STRING ( T_VARIABLE($the_disp_mode) , T_VARIABLE($analyzed_sql) ) { T_VARIABLE($results_operations_html) = ; T_VARIABLE($fields_meta) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header_shown) = T_STRING ; T_VARIABLE($header) = . T_STRING ( ) . ; T_IF ( ( T_VARIABLE($the_disp_mode) [ T_LNUMBER ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($the_disp_mode) [ T_LNUMBER ] T_IS_EQUAL ) ) { T_IF ( T_VARIABLE($the_disp_mode) [ T_LNUMBER ] T_IS_EQUAL ) { T_IF ( ! T_VARIABLE($header_shown) ) { T_VARIABLE($results_operations_html) T_CONCAT_EQUAL T_VARIABLE($header) ; T_VARIABLE($header_shown) = T_STRING ; } T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; T_VARIABLE($url_query) = T_STRING ( T_VARIABLE($_url_params) ) ; T_VARIABLE($results_operations_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( . T_VARIABLE($url_query) , T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) , T_ARRAY ( T_DOUBLE_ARROW ) , T_STRING , T_STRING , ) . ; T_IF ( T_VARIABLE($_SESSION) [ ] [ ] ) { T_VARIABLE($_url_params) [ ] = T_STRING T_DOUBLE_COLON T_STRING ; T_VARIABLE($results_operations_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( . T_STRING ( T_VARIABLE($_url_params) ) , T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) , T_ARRAY ( T_DOUBLE_ARROW ) , T_STRING , T_STRING , ) . ; T_UNSET ( T_VARIABLE($_url_params) [ ] ) ; } } } T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] ) T_BOOLEAN_AND ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($printview) ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) ) { T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($_url_params) [ ] = ; } T_IF ( ! T_VARIABLE($header_shown) ) { T_VARIABLE($results_operations_html) T_CONCAT_EQUAL T_VARIABLE($header) ; T_VARIABLE($header_shown) = T_STRING ; } T_VARIABLE($_url_params) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($_url_params) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_url_params) [ ] ) ) { T_VARIABLE($_url_params) [ ] = T_STRING ( ) ; T_IF ( T_VARIABLE($_url_params) [ ] T_IS_IDENTICAL T_STRING ) { T_UNSET ( T_VARIABLE($_url_params) [ ] ) ; } } T_VARIABLE($results_operations_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( . T_STRING ( T_VARIABLE($_url_params) ) , T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) , , T_STRING , T_STRING , ) . ; T_VARIABLE($results_operations_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( . T_STRING ( T_VARIABLE($_url_params) ) , T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) , , T_STRING , T_STRING , ) . ; T_VARIABLE($geometry_found) = T_STRING ; T_FOREACH ( T_VARIABLE($fields_meta) T_AS T_VARIABLE($meta) ) { T_IF ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($geometry_found) = T_STRING ; T_BREAK ; } } T_IF ( T_VARIABLE($geometry_found) ) { T_VARIABLE($results_operations_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( . T_STRING ( T_VARIABLE($_url_params) ) , T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) , , T_STRING , T_STRING , ) . ; } } T_IF ( ! T_VARIABLE($header_shown) ) { T_VARIABLE($results_operations_html) T_CONCAT_EQUAL T_VARIABLE($header) ; T_VARIABLE($header_shown) = T_STRING ; } T_IF ( ! T_STRING T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) ) { T_VARIABLE($ajax_class) = ; T_VARIABLE($results_operations_html) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( . T_VARIABLE($url_query) , T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) , T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($ajax_class) ) , T_STRING , T_STRING , ) . . ; } T_IF ( T_VARIABLE($header_shown) ) { T_VARIABLE($results_operations_html) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($results_operations_html) ; } T_PRIVATE T_STRING ( T_VARIABLE($category) , T_VARIABLE($content) , T_VARIABLE($transformation_plugin) , T_VARIABLE($transform_options) , T_VARIABLE($default_function) , T_VARIABLE($meta) , T_VARIABLE($url_params) = T_ARRAY ( ) ) { T_VARIABLE($result) = . T_VARIABLE($category) ; T_IF ( T_STRING ( T_VARIABLE($content) ) ) { T_VARIABLE($result) T_CONCAT_EQUAL ; T_VARIABLE($size) = T_LNUMBER ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($content) ) ) { T_VARIABLE($size) = T_STRING ( T_VARIABLE($content) ) ; T_VARIABLE($display_size) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($size) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($result) T_CONCAT_EQUAL . T_VARIABLE($display_size) [ T_LNUMBER ] . . T_VARIABLE($display_size) [ T_LNUMBER ] ; } T_VARIABLE($result) T_CONCAT_EQUAL ; T_IF ( T_STRING ( T_VARIABLE($transformation_plugin) ) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($transformation_plugin) T_OBJECT_OPERATOR T_STRING ( ) , ) ) { T_VARIABLE($result) = T_VARIABLE($content) ; } T_IF ( T_VARIABLE($size) > T_LNUMBER ) { T_IF ( T_VARIABLE($default_function) T_IS_NOT_EQUAL T_VARIABLE($transformation_plugin) ) { T_VARIABLE($result) = T_VARIABLE($transformation_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($result) , T_VARIABLE($transform_options) , T_VARIABLE($meta) ) ; } T_ELSE { T_VARIABLE($result) = T_VARIABLE($this) T_OBJECT_OPERATOR T_VARIABLE($default_function) ( T_VARIABLE($result) , T_ARRAY ( ) , T_VARIABLE($meta) ) ; T_IF ( T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING , T_STRING T_DOUBLE_COLON T_STRING ) T_BOOLEAN_AND T_VARIABLE($_SESSION) [ ] [ ] ) { T_VARIABLE($result) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($content) , ) ; } T_IF ( T_STRING ( T_VARIABLE($url_params) ) > T_LNUMBER ) { T_VARIABLE($result) = . T_STRING ( T_VARIABLE($url_params) ) . . T_VARIABLE($result) . ; } } } T_RETURN ( T_VARIABLE($result) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($analyzed_sql) , T_VARIABLE($meta) , T_VARIABLE($map) , T_VARIABLE($data) , T_VARIABLE($transformation_plugin) , T_VARIABLE($default_function) , T_VARIABLE($nowrap) , T_VARIABLE($where_comparison) , T_VARIABLE($transform_options) , T_VARIABLE($is_field_truncated) ) { T_VARIABLE($printview) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($result) = . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) , T_VARIABLE($condition_field) , T_VARIABLE($meta) , T_VARIABLE($nowrap) , T_VARIABLE($is_field_truncated) , T_VARIABLE($transformation_plugin) , T_VARIABLE($default_function) ) . ; T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_FOREACH ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_AS T_VARIABLE($select_expr_position) T_DOUBLE_ARROW T_VARIABLE($select_expr) ) { T_VARIABLE($alias) = T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($select_expr_position) ] [ ] ; T_IF ( T_ISSET ( T_VARIABLE($alias) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($alias) ) ) { T_VARIABLE($true_column) = T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($select_expr_position) ] [ ] ; T_IF ( T_VARIABLE($alias) T_IS_EQUAL T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($true_column) ; } } } } T_IF ( T_ISSET ( T_VARIABLE($map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] ) ) { T_IF ( T_ISSET ( T_VARIABLE($map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ T_LNUMBER ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ T_LNUMBER ] ) ) { T_VARIABLE($dispsql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ T_LNUMBER ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ T_LNUMBER ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ T_LNUMBER ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ T_LNUMBER ] ) . T_VARIABLE($where_comparison) ; T_VARIABLE($dispresult) = T_STRING ( T_VARIABLE($dispsql) , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($dispresult) T_BOOLEAN_AND T_STRING ( T_VARIABLE($dispresult) ) > T_LNUMBER ) { T_LIST ( T_VARIABLE($dispval) ) = T_STRING ( T_VARIABLE($dispresult) , T_LNUMBER ) ; } T_ELSE { T_VARIABLE($dispval) = T_STRING ( ) ; } @ T_STRING ( T_VARIABLE($dispresult) ) ; } T_ELSE { T_VARIABLE($dispval) = ; } T_IF ( T_ISSET ( T_VARIABLE($printview) ) T_BOOLEAN_AND ( T_VARIABLE($printview) T_IS_EQUAL ) ) { T_VARIABLE($result) T_CONCAT_EQUAL ( T_VARIABLE($transformation_plugin) T_IS_NOT_EQUAL T_VARIABLE($default_function) ? T_VARIABLE($transformation_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($data) , T_VARIABLE($transform_options) , T_VARIABLE($meta) ) : T_VARIABLE($this) T_OBJECT_OPERATOR T_VARIABLE($default_function) ( T_VARIABLE($data) ) ) . . T_VARIABLE($dispval) . ; } T_ELSE { T_IF ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($title) = ( ! T_EMPTY ( T_VARIABLE($dispval) ) ) ? . T_STRING ( T_VARIABLE($dispval) ) . : ; } T_ELSE { T_VARIABLE($title) = . T_STRING ( T_VARIABLE($data) ) . ; } T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ T_LNUMBER ] , T_DOUBLE_ARROW T_VARIABLE($map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ T_LNUMBER ] , T_DOUBLE_ARROW , T_DOUBLE_ARROW . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ T_LNUMBER ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ T_LNUMBER ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($map) [ T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ] [ T_LNUMBER ] ) . T_VARIABLE($where_comparison) , ) ; T_VARIABLE($result) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($_url_params) ) . . T_VARIABLE($title) . ; T_IF ( T_VARIABLE($transformation_plugin) T_IS_NOT_EQUAL T_VARIABLE($default_function) ) { T_VARIABLE($result) T_CONCAT_EQUAL T_VARIABLE($transformation_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($data) , T_VARIABLE($transform_options) , T_VARIABLE($meta) ) ; } T_ELSE { T_IF ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($result) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_VARIABLE($default_function) ( T_VARIABLE($dispval) ) ; } T_ELSE { T_VARIABLE($result) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_VARIABLE($default_function) ( T_VARIABLE($data) ) ; } } T_VARIABLE($result) T_CONCAT_EQUAL ; } } T_ELSE { T_VARIABLE($result) T_CONCAT_EQUAL ( T_VARIABLE($transformation_plugin) T_IS_NOT_EQUAL T_VARIABLE($default_function) ? T_VARIABLE($transformation_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($data) , T_VARIABLE($transform_options) , T_VARIABLE($meta) ) : T_VARIABLE($this) T_OBJECT_OPERATOR T_VARIABLE($default_function) ( T_VARIABLE($data) ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($_GET) [ ] T_IS_EQUAL T_LNUMBER ) ) { T_VARIABLE($where_comparison) = . T_VARIABLE($data) . ; T_VARIABLE($_url_params_for_show_data_row) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) . T_VARIABLE($where_comparison) , ) ; T_VARIABLE($result) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($_url_params_for_show_data_row) ) . ; } T_VARIABLE($result) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($result) ; } T_PRIVATE T_STRING ( T_VARIABLE($del_url) , T_VARIABLE($is_display) , T_VARIABLE($row_no) , T_VARIABLE($where_clause_html) , T_VARIABLE($condition_array) , T_VARIABLE($del_query) , T_VARIABLE($id_suffix) , T_VARIABLE($class) ) { T_VARIABLE($ret) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($del_url) ) T_BOOLEAN_AND T_VARIABLE($is_display) [ ] T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($ret) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($class) ) ) { T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($class) . ; } T_VARIABLE($ret) T_CONCAT_EQUAL . . T_VARIABLE($row_no) . T_VARIABLE($id_suffix) . . T_VARIABLE($row_no) . . . . T_VARIABLE($where_clause_html) . . . . T_STRING ( T_STRING ( T_VARIABLE($condition_array) ) ) . . ; } T_RETURN T_VARIABLE($ret) ; } T_PRIVATE T_STRING ( T_VARIABLE($edit_url) , T_VARIABLE($class) , T_VARIABLE($edit_str) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) ) { T_VARIABLE($ret) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($edit_url) ) ) { T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($class) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($edit_url) , T_VARIABLE($edit_str) , T_ARRAY ( ) , T_STRING ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($where_clause) ) ) { T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($where_clause_html) . ; } T_VARIABLE($ret) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($ret) ; } T_PRIVATE T_STRING ( T_VARIABLE($copy_url) , T_VARIABLE($copy_str) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) , T_VARIABLE($class) ) { T_VARIABLE($ret) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($copy_url) ) ) { T_VARIABLE($ret) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($class) ) ) { T_VARIABLE($ret) T_CONCAT_EQUAL T_VARIABLE($class) . ; } T_VARIABLE($ret) T_CONCAT_EQUAL . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($copy_url) , T_VARIABLE($copy_str) , T_ARRAY ( ) , T_STRING ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($where_clause) ) ) { T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($where_clause_html) . ; } T_VARIABLE($ret) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($ret) ; } T_PRIVATE T_STRING ( T_VARIABLE($del_url) , T_VARIABLE($del_str) , T_VARIABLE($js_conf) , T_VARIABLE($class) ) { T_VARIABLE($ret) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($del_url) ) ) { T_VARIABLE($ret) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($class) ) ) { T_VARIABLE($ret) T_CONCAT_EQUAL T_VARIABLE($class) . ; } T_VARIABLE($ajax) = T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ? : ; T_VARIABLE($ret) T_CONCAT_EQUAL . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($del_url) , T_VARIABLE($del_str) , T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($ajax) ) , T_STRING ) . . T_VARIABLE($js_conf) . . ; } T_RETURN T_VARIABLE($ret) ; } T_PRIVATE T_STRING ( T_VARIABLE($position) , T_VARIABLE($del_url) , T_VARIABLE($is_display) , T_VARIABLE($row_no) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) , T_VARIABLE($condition_array) , T_VARIABLE($del_query) , T_VARIABLE($id_suffix) , T_VARIABLE($edit_url) , T_VARIABLE($copy_url) , T_VARIABLE($class) , T_VARIABLE($edit_str) , T_VARIABLE($copy_str) , T_VARIABLE($del_str) , T_VARIABLE($js_conf) ) { T_VARIABLE($ret) = ; T_IF ( T_VARIABLE($position) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($ret) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($del_url) , T_VARIABLE($is_display) , T_VARIABLE($row_no) , T_VARIABLE($where_clause_html) , T_VARIABLE($condition_array) , T_VARIABLE($del_query) , T_VARIABLE($id_suffix) = , , , ) ; T_VARIABLE($ret) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($edit_url) , T_VARIABLE($class) , T_VARIABLE($edit_str) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) , ) ; T_VARIABLE($ret) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($copy_url) , T_VARIABLE($copy_str) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) , ) ; T_VARIABLE($ret) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($del_url) , T_VARIABLE($del_str) , T_VARIABLE($js_conf) , , ) ; } T_ELSEIF ( T_VARIABLE($position) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($ret) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($del_url) , T_VARIABLE($del_str) , T_VARIABLE($js_conf) , , ) ; T_VARIABLE($ret) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($copy_url) , T_VARIABLE($copy_str) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) , ) ; T_VARIABLE($ret) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($edit_url) , T_VARIABLE($class) , T_VARIABLE($edit_str) , T_VARIABLE($where_clause) , T_VARIABLE($where_clause_html) , ) ; T_VARIABLE($ret) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($del_url) , T_VARIABLE($is_display) , T_VARIABLE($row_no) , T_VARIABLE($where_clause_html) , T_VARIABLE($condition_array) , T_VARIABLE($del_query) , T_VARIABLE($id_suffix) = , , , ) ; } T_ELSE { T_VARIABLE($ret) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($del_url) , T_VARIABLE($is_display) , T_VARIABLE($row_no) , T_VARIABLE($where_clause_html) , T_VARIABLE($condition_array) , T_VARIABLE($del_query) , T_VARIABLE($id_suffix) = , , , ) ; } T_RETURN T_VARIABLE($ret) ; } T_PRIVATE T_STRING ( T_VARIABLE($buffer) ) { T_VARIABLE($buffer) = T_STRING ( T_VARIABLE($buffer) ) ; T_VARIABLE($buffer) = T_STRING ( , , T_STRING ( , , T_VARIABLE($buffer) ) ) ; T_VARIABLE($buffer) = T_STRING ( , , T_VARIABLE($buffer) ) ; T_RETURN T_VARIABLE($buffer) ; } T_PRIVATE T_STRING ( T_VARIABLE($content) , T_VARIABLE($binary_or_blob) , T_VARIABLE($hexlength) = T_STRING ) { T_IF ( T_STRING < T_LNUMBER T_BOOLEAN_OR ( T_VARIABLE($binary_or_blob) T_IS_IDENTICAL T_BOOLEAN_AND T_VARIABLE($_SESSION) [ ] [ ] T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($content) ) ) ) { T_VARIABLE($content) = T_STRING ( T_VARIABLE($content) ) ; T_IF ( T_VARIABLE($hexlength) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($content) = T_STRING ( T_VARIABLE($content) , T_VARIABLE($hexlength) ) ; } } T_ELSE { T_VARIABLE($content) = T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($content) ) , T_STRING ) ; } T_RETURN T_VARIABLE($content) ; } } T_CLOSE_TAG',yes
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_languageCmp) ( T_VARIABLE($a) , T_VARIABLE($b) ) { T_RETURN T_STRING ( T_VARIABLE($a) [ T_LNUMBER ] , T_VARIABLE($b) [ T_LNUMBER ] ) ; } T_FUNCTION(PMA_getLanguageSelectorHtml) ( T_VARIABLE($use_fieldset) = T_STRING , T_VARIABLE($show_doc) = T_STRING ) { T_GLOBAL T_VARIABLE($lang) ; T_VARIABLE($retval) = ; T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) > T_LNUMBER ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($_form_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($_form_params) ) ; T_VARIABLE($language_title) = T_STRING ( ) . ( T_STRING ( ) T_IS_NOT_EQUAL ? : ) ; T_IF ( T_VARIABLE($show_doc) ) { T_VARIABLE($language_title) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , ) ; } T_IF ( T_VARIABLE($use_fieldset) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($language_title) . ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($language_title) . ; } T_VARIABLE($retval) T_CONCAT_EQUAL . ; T_STRING ( T_VARIABLE($GLOBALS) [ ] , ) ; T_FOREACH ( T_VARIABLE($GLOBALS) [ ] T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($tmplang) ) { T_VARIABLE($lang_name) = T_STRING ( T_VARIABLE($tmplang) ) ; T_IF ( T_VARIABLE($lang) T_IS_EQUAL T_VARIABLE($id) ) { T_VARIABLE($selected) = ; } T_ELSE { T_VARIABLE($selected) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($id) . . T_VARIABLE($selected) . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($lang_name) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($use_fieldset) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($retval) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_STRING ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; } T_STRING ( ) { T_RETURN ; } T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_STRING ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , ) ; } T_STRING ( ) { T_RETURN ; } T_STRING ( ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING < T_STRING ) { T_RETURN T_ARRAY ( ) ; } T_VARIABLE($pages) = T_ARRAY ( ) ; T_VARIABLE($pages) [ ] = T_STRING ( ) ; T_VARIABLE($pages) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($pages) ; } T_STRING ( ) { T_VARIABLE($sql) = ; T_VARIABLE($status) = T_STRING ( T_VARIABLE($sql) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($output) = . . . . . T_STRING ( ) . . . . . . . . . . . T_STRING ( ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($status) [ ] , T_LNUMBER ) . . T_STRING ( ) . . T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($status) [ ] * T_VARIABLE($status) [ ] ) ) . . . . . . . . . . . . . T_STRING ( ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($status) [ ] , T_LNUMBER ) . . . . . . . . T_STRING ( ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($status) [ ] , T_LNUMBER ) . . . . . . . . T_STRING ( ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($status) [ ] , T_LNUMBER ) . . . . . . . . . T_STRING ( ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($status) [ ] , T_LNUMBER ) . . . . . . . . . T_STRING ( ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($status) [ ] , T_LNUMBER ) . . . . ; T_IF ( T_ISSET ( T_VARIABLE($status) [ ] ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . . T_STRING ( ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($status) [ ] , T_LNUMBER ) . . ; } T_VARIABLE($output) T_CONCAT_EQUAL . . . . . . . . . T_STRING ( ) . . . . . . . . . T_STRING ( ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($status) [ ] , T_LNUMBER ) . . . . . . . . . T_STRING ( ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($status) [ ] , T_LNUMBER ) . . . . . . . . . T_STRING ( ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($status) [ ] , T_LNUMBER ) . . . . . . . . . T_STRING ( ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($status) [ ] , T_LNUMBER ) . . . . . . . . . T_STRING ( ) . . . . ( T_VARIABLE($status) [ ] T_IS_EQUAL T_LNUMBER ? : T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($status) [ ] * T_LNUMBER / T_VARIABLE($status) [ ] , T_LNUMBER , T_LNUMBER ) ) . ) . . . . . . . . . T_STRING ( ) . . . . ( T_VARIABLE($status) [ ] T_IS_EQUAL T_LNUMBER ? : T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($status) [ ] * T_LNUMBER / T_VARIABLE($status) [ ] , T_LNUMBER , T_LNUMBER ) ) . ) . . . . . . . . . ; T_RETURN T_VARIABLE($output) ; } T_STRING ( ) { T_RETURN . . T_STRING ( T_STRING ( , T_LNUMBER , ) ) . . . ; } T_STRING ( T_VARIABLE($id) ) { T_IF ( ! T_STRING ( T_VARIABLE($id) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_RETURN T_STRING ; } T_VARIABLE($id) = . T_VARIABLE($id) ; T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_VARIABLE($id) ( ) ; } T_STRING ( ) { T_RETURN ; } T_STRING ( ) { T_RETURN T_STRING ( ) ; } T_STRING ( ) { T_RETURN T_STRING ( , T_LNUMBER , T_LNUMBER ) ; } T_STRING ( ) { T_VARIABLE($innodb_file_per_table) = T_STRING ( , T_LNUMBER , T_LNUMBER ) ; T_IF ( T_VARIABLE($innodb_file_per_table) T_IS_EQUAL ) { T_RETURN T_STRING ; } T_ELSE { T_RETURN T_STRING ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_STRING ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_STRING ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_STRING ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) ; } T_STRING ( ) { T_RETURN ; } T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_STRING ( ) {} T_STRING ( T_VARIABLE($formatted_size) ) { T_IF ( T_STRING ( , T_VARIABLE($formatted_size) ) ) { T_VARIABLE($value) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($formatted_size) ) ; } T_ELSE { T_VARIABLE($value) = T_VARIABLE($formatted_size) ; } T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) ) ; } T_STRING ( ) { T_VARIABLE($pages) = T_ARRAY ( ) ; T_VARIABLE($pages) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($pages) ; } T_STRING ( T_VARIABLE($id) ) { T_IF ( ! T_STRING ( T_VARIABLE($id) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_RETURN T_STRING ; } T_VARIABLE($id) = . T_VARIABLE($id) ; T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_VARIABLE($id) ( ) ; } T_STRING ( ) { T_VARIABLE($output) = . T_STRING ( T_STRING ( ) , . T_STRING ( ) . , ) . . . . T_STRING ( ) . . . . . . T_STRING ( ) . . T_STRING ( ) . . . . ; T_RETURN T_VARIABLE($output) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_STATIC T_PUBLIC T_VARIABLE($errortype) = T_ARRAY ( T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , ) ; T_STATIC T_PUBLIC T_VARIABLE($errorlevel) = T_ARRAY ( T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , ) ; T_PROTECTED T_VARIABLE($file) = ; T_PROTECTED T_VARIABLE($line) = T_LNUMBER ; T_PROTECTED T_VARIABLE($backtrace) = T_ARRAY ( ) ; T_PROTECTED T_VARIABLE($hash) = T_STRING ; T_PUBLIC T_STRING ( T_VARIABLE($errno) , T_VARIABLE($errstr) , T_VARIABLE($errfile) , T_VARIABLE($errline) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($errno) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($errstr) , T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($errfile) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($errline) ) ; T_VARIABLE($backtrace) = T_STRING ( ) ; T_VARIABLE($backtrace) = T_STRING ( T_VARIABLE($backtrace) , T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($backtrace) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($backtrace) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($backtrace) ; } T_PUBLIC T_STRING ( T_VARIABLE($line) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($line) ; } T_PUBLIC T_STRING ( T_VARIABLE($file) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($file) ) ; } T_PUBLIC T_STRING ( ) { T_TRY { T_VARIABLE($backtrace) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_CATCH ( T_STRING T_VARIABLE($e) ) { T_VARIABLE($backtrace) = ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_IDENTICAL T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($backtrace) ) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($errortype) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ] ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($errorlevel) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ] ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_LNUMBER , T_LNUMBER ) ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($step) ) { T_IF ( T_ISSET ( T_VARIABLE($step) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($step) [ ] ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($step) [ ] ) . . T_VARIABLE($step) [ ] . ; } T_IF ( T_ISSET ( T_VARIABLE($step) [ ] ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($step) [ ] . T_VARIABLE($step) [ ] ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($step) [ ] . ; T_IF ( T_ISSET ( T_VARIABLE($step) [ ] ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($step) [ ] ) > T_LNUMBER ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($step) [ ] T_AS T_VARIABLE($arg) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($arg) , T_VARIABLE($step) [ ] ) ; T_VARIABLE($retval) T_CONCAT_EQUAL . ; } } T_ELSEIF ( T_ISSET ( T_VARIABLE($step) [ ] ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($step) [ ] ) > T_LNUMBER ) ) { T_FOREACH ( T_VARIABLE($step) [ ] T_AS T_VARIABLE($arg) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($arg) , T_VARIABLE($step) [ ] ) ; } } T_VARIABLE($retval) T_CONCAT_EQUAL . ; } T_RETURN T_VARIABLE($retval) ; } T_PROTECTED T_STRING ( T_VARIABLE($arg) , T_VARIABLE($function) ) { T_VARIABLE($retval) = ; T_VARIABLE($include_functions) = T_ARRAY ( , , , , ) ; T_VARIABLE($connect_functions) = T_ARRAY ( , , , , , , ) ; T_IF ( T_STRING ( T_VARIABLE($function) , T_VARIABLE($include_functions) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arg) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($function) , T_VARIABLE($connect_functions) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($arg) ) T_IS_IDENTICAL ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($arg) ) . ; } T_ELSEIF ( T_STRING ( T_VARIABLE($arg) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($arg) ) . . T_STRING ( T_VARIABLE($arg) ) ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($arg) ) ; } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($retval) = . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . ; T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) & ( T_STRING | T_STRING | T_STRING ) ; } T_STATIC T_STRING ( T_VARIABLE($dest) ) { T_VARIABLE($dest) = T_STRING ( T_VARIABLE($dest) ) ; T_IF ( T_STRING ( T_STRING , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($path_separator) = ; } T_ELSE { T_VARIABLE($path_separator) = ; } T_VARIABLE($Ahere) = T_STRING ( T_VARIABLE($path_separator) , T_STRING ( T_STRING ( T_FILE ) . T_VARIABLE($path_separator) . ) ) ; T_VARIABLE($Adest) = T_STRING ( T_VARIABLE($path_separator) , T_VARIABLE($dest) ) ; T_VARIABLE($result) = ; T_WHILE ( T_STRING ( T_VARIABLE($path_separator) , T_VARIABLE($Adest) ) T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($path_separator) , T_VARIABLE($Ahere) ) ) { T_IF ( T_STRING ( T_VARIABLE($Ahere) ) > T_STRING ( T_VARIABLE($Adest) ) ) { T_STRING ( T_VARIABLE($Ahere) ) ; T_VARIABLE($result) T_CONCAT_EQUAL T_VARIABLE($path_separator) . ; } T_ELSE { T_STRING ( T_VARIABLE($Adest) ) ; } } T_VARIABLE($path) = T_VARIABLE($result) . T_STRING ( T_STRING ( T_VARIABLE($path_separator) , T_VARIABLE($Adest) ) , , T_VARIABLE($dest) ) ; T_RETURN T_STRING ( T_VARIABLE($path_separator) . T_VARIABLE($path_separator) , T_VARIABLE($path_separator) , T_VARIABLE($path) ) ; } } T_CLOSE_TAG',yes
'T_OPEN_TAG T_REQUIRE_ONCE ; T_STRING { T_PROTECTED T_VARIABLE($errors) = T_ARRAY ( ) ; T_PUBLIC T_STRING ( ) { T_IF ( ! T_STRING ( ) ) { T_STRING ( T_ARRAY ( T_VARIABLE($this) , ) ) ; } } T_PUBLIC T_STRING ( ) { T_IF ( T_ISSET ( T_VARIABLE($_SESSION) ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = T_ARRAY ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($_SESSION) [ ] = T_STRING ( T_VARIABLE($_SESSION) [ ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($error) ) { T_IF ( T_STRING ( T_VARIABLE($_SESSION) [ ] ) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($error) = T_NEW T_STRING ( T_LNUMBER , T_STRING ( ) , T_FILE , T_LINE ) ; T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ] = T_VARIABLE($error) ; T_BREAK ; } T_ELSE T_IF ( ( T_VARIABLE($error) T_INSTANCEOF T_STRING ) T_BOOLEAN_AND ! T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($key) ] = T_VARIABLE($error) ; } } } } } T_PROTECTED T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($errno) , T_VARIABLE($errstr) , T_VARIABLE($errfile) , T_VARIABLE($errline) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($errstr) , T_VARIABLE($errno) , T_VARIABLE($errfile) , T_VARIABLE($errline) , T_STRING ) ; } T_PUBLIC T_STRING ( T_VARIABLE($errstr) , T_VARIABLE($errno) , T_VARIABLE($errfile) , T_VARIABLE($errline) , T_VARIABLE($escape) = T_STRING ) { T_IF ( T_VARIABLE($escape) ) { T_VARIABLE($errstr) = T_STRING ( T_VARIABLE($errstr) ) ; } T_VARIABLE($error) = T_NEW T_STRING ( T_VARIABLE($errno) , T_VARIABLE($errstr) , T_VARIABLE($errfile) , T_VARIABLE($errline) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ] = T_VARIABLE($error) ; T_SWITCH ( T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ) { T_CASE T_STRING : T_CASE T_STRING : T_CASE T_STRING : T_CASE T_STRING : T_CASE T_STRING : T_CASE T_STRING : T_CASE T_STRING : T_CASE T_STRING : T_CASE T_STRING : T_CASE T_STRING : T_BREAK ; T_CASE T_STRING : T_CASE T_STRING : T_CASE T_STRING : T_CASE T_STRING : T_DEFAULT : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) ) ; T_EXIT ; T_BREAK ; } } T_PROTECTED T_STRING ( T_VARIABLE($error) ) { T_RETURN T_STRING ( T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($errorInfo) , T_VARIABLE($errorNumber) = T_STRING , T_VARIABLE($file) = T_STRING , T_VARIABLE($line) = T_STRING ) { T_STRING ( T_VARIABLE($errorInfo) , T_VARIABLE($errorNumber) ) ; } T_PROTECTED T_STRING ( T_VARIABLE($error) ) { T_IF ( ! T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) ) ; } T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_EXIT ; } T_PUBLIC T_STRING ( ) { T_IF ( ! T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PUBLIC T_STRING ( ) { T_ECHO T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($error) ) { T_IF ( T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_AND ! T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_RETURN T_VARIABLE($retval) ; } T_PROTECTED T_STRING ( T_VARIABLE($error) = T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_ECHO ; T_IF ( T_VARIABLE($error) ) { T_ECHO T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_ECHO ; } T_ECHO ; } T_PROTECTED T_STRING ( ) { T_ECHO ; } T_PUBLIC T_STRING ( ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($error) ) { T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($error) ) { T_IF ( T_VARIABLE($error) T_INSTANCEOF T_STRING ) { T_IF ( ! T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_ELSE { T_STRING ( ) ; T_STRING ( T_VARIABLE($error) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_STRING ( ) ; } } } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_ECHO T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_FOREACH ( T_VARIABLE($_SESSION) [ ] T_AS T_VARIABLE($hash) T_DOUBLE_ARROW T_VARIABLE($error) ) { T_IF ( T_VARIABLE($error) T_INSTANCEOF T_STRING T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($hash) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($hash) ] = T_VARIABLE($error) ; } } T_VARIABLE($_SESSION) [ ] = T_ARRAY ( ) ; T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; } } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($count) = T_LNUMBER ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($error) ) { T_IF ( T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($count) T_INC ; } } } T_RETURN T_VARIABLE($count) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_BOOL_CAST T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_BOOL_CAST T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PUBLIC T_STRING ( ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_PUBLIC T_STRING ( ) { T_RETURN T_BOOL_CAST T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_CLOSE_TAG',yes
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_IF ( ! T_STRING ( ) ) { T_STRING ( ) ; } T_REQUIRE_ONCE ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($lang) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($dir) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($error_header) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($error_message) ) ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_VAR T_VARIABLE($_name) = T_STRING ; T_VAR T_VARIABLE($_content) = T_STRING ; T_VAR T_VARIABLE($_error_message) = ; T_VAR T_VARIABLE($_is_temp) = T_STRING ; T_VAR T_VARIABLE($_compression) = T_STRING ; T_VAR T_VARIABLE($_offset) = T_LNUMBER ; T_VAR T_VARIABLE($_chunk_size) = T_LNUMBER ; T_VAR T_VARIABLE($_handle) = T_STRING ; T_VAR T_VARIABLE($_decompress) = T_STRING ; T_VAR T_VARIABLE($_charset) = T_STRING ; T_PUBLIC T_STRING ( T_VARIABLE($name) = T_STRING ) { T_IF ( T_VARIABLE($name) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($name) ) ; } } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PUBLIC T_STRING ( ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($is_temp) = T_STRING ) { T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($is_temp) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_BOOL_CAST T_VARIABLE($is_temp) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($name) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($name) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($as_binary) = T_STRING , T_VARIABLE($offset) = T_LNUMBER , T_VARIABLE($length) = T_STRING ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_AND ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_RETURN T_STRING ; } T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_RETURN T_STRING ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_ELSEIF ( T_VARIABLE($size) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) , T_VARIABLE($size) ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($as_binary) ) { T_RETURN . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($length) ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($offset) , T_VARIABLE($length) ) ; } T_ELSEIF ( T_VARIABLE($offset) > T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($offset) ) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($name) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($name) ) ; T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($key) , T_VARIABLE($rownumber) ) { T_IF ( ! T_ISSET ( T_VARIABLE($_FILES) [ ] ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($_FILES) [ ] [ ] [ ] [ T_VARIABLE($rownumber) ] [ T_VARIABLE($key) ] ) ) { T_RETURN T_STRING ; } T_VARIABLE($file) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_FILES) [ ] , T_VARIABLE($rownumber) , T_VARIABLE($key) ) ; T_SWITCH ( T_VARIABLE($file) [ ] ) { T_CASE T_LNUMBER : T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($file) [ ] ) ; T_BREAK ; T_CASE T_LNUMBER : T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_BREAK ; T_DEFAULT : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($file) , T_VARIABLE($rownumber) , T_VARIABLE($key) ) { T_VARIABLE($new_file) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($file) [ ] [ ] [ T_VARIABLE($rownumber) ] [ T_VARIABLE($key) ] , T_DOUBLE_ARROW T_VARIABLE($file) [ ] [ ] [ T_VARIABLE($rownumber) ] [ T_VARIABLE($key) ] , T_DOUBLE_ARROW T_VARIABLE($file) [ ] [ ] [ T_VARIABLE($rownumber) ] [ T_VARIABLE($key) ] , T_DOUBLE_ARROW T_VARIABLE($file) [ ] [ ] [ T_VARIABLE($rownumber) ] [ T_VARIABLE($key) ] , T_DOUBLE_ARROW T_VARIABLE($file) [ ] [ ] [ T_VARIABLE($rownumber) ] [ T_VARIABLE($key) ] , ) ; T_RETURN T_VARIABLE($new_file) ; } T_PUBLIC T_STRING ( T_VARIABLE($key) , T_VARIABLE($rownumber) = T_STRING ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] [ T_VARIABLE($key) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] [ T_VARIABLE($key) ] ) ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] [ T_VARIABLE($key) ] ) ; } T_ELSE { T_RETURN T_STRING ; } } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_PUBLIC T_STRING ( T_VARIABLE($key) , T_VARIABLE($rownumber) ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($key) , T_VARIABLE($rownumber) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_RETURN T_STRING ; } T_ELSEIF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($key) , T_VARIABLE($rownumber) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($name) ) { T_IF ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_RETURN T_STRING ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . T_STRING ( T_VARIABLE($name) ) ) ; T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_STRING ( ) ; T_VARIABLE($is_readable) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_STRING ( ) ; T_RETURN T_VARIABLE($is_readable) ; } T_PUBLIC T_STRING ( ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_RETURN T_STRING ; } T_IF ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_RETURN T_STRING ; } T_VARIABLE($new_file_to_upload) = T_STRING ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) , T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) ; T_STRING ( ) ; T_VARIABLE($move_uploaded_file_result) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($new_file_to_upload) ) ; T_STRING ( ) ; T_IF ( ! T_VARIABLE($move_uploaded_file_result) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_RETURN T_STRING ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_file_to_upload) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_PROTECTED T_STRING ( ) { T_STRING ( ) ; T_VARIABLE($file) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; T_STRING ( ) ; T_IF ( ! T_VARIABLE($file) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_RETURN T_STRING ; } T_VARIABLE($test) = T_STRING ( T_VARIABLE($file) , T_LNUMBER ) ; T_VARIABLE($len) = T_STRING ( T_VARIABLE($test) ) ; T_STRING ( T_VARIABLE($file) ) ; T_IF ( T_VARIABLE($len) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($test) [ T_LNUMBER ] T_IS_EQUAL T_STRING ( T_LNUMBER ) T_BOOLEAN_AND T_VARIABLE($test) [ T_LNUMBER ] T_IS_EQUAL T_STRING ( T_LNUMBER ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } T_ELSEIF ( T_VARIABLE($len) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($test) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } T_ELSEIF ( T_VARIABLE($len) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($test) T_IS_EQUAL ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($decompress) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_BOOL_CAST T_VARIABLE($decompress) ; } T_PUBLIC T_STRING ( ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($handle) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($handle) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_PUBLIC T_STRING ( ) { T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = @ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; } T_SWITCH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_CASE T_STRING : T_RETURN T_STRING ; T_CASE : T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND @ T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = @ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_STRING ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND @ T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = @ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_STRING ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND @ T_STRING ( ) ) { T_INCLUDE_ONCE ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($result) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($result) [ ] ) ; T_RETURN T_STRING ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($result) [ ] ; } T_UNSET ( T_VARIABLE($result) ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_STRING ; } T_BREAK ; T_CASE : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = @ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; T_BREAK ; T_DEFAULT : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_STRING ; T_BREAK ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($charset) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($charset) ; } T_PUBLIC T_STRING ( ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($length) ) { T_WHILE ( T_VARIABLE($length) > T_LNUMBER ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($length) ) ; T_VARIABLE($length) T_MINUS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_PUBLIC T_STRING ( T_VARIABLE($max_size) = T_STRING ) { T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($max_size) ) { T_VARIABLE($size) = T_STRING ( T_VARIABLE($max_size) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($size) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($result) = ; T_SWITCH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_CASE : T_VARIABLE($result) = ; T_WHILE ( T_STRING ( T_VARIABLE($result) ) < T_VARIABLE($size) - T_LNUMBER T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_VARIABLE($result) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($size) ) ; } T_BREAK ; T_CASE : T_VARIABLE($result) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($size) ) ; T_BREAK ; T_CASE : T_BREAK ; T_CASE : T_VARIABLE($result) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($size) ) ; T_BREAK ; T_DEFAULT : T_RETURN T_STRING ; } T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , , T_VARIABLE($result) ) ; } T_ELSE { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_IDENTICAL T_LNUMBER ) { T_IF ( T_STRING ( T_VARIABLE($result) , , T_LNUMBER ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($result) , T_LNUMBER ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($result) , , T_LNUMBER ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR T_STRING ( T_VARIABLE($result) , , T_LNUMBER ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($result) , T_LNUMBER ) ; } } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_PLUS_EQUAL T_VARIABLE($size) ; T_IF ( T_LNUMBER T_IS_IDENTICAL T_VARIABLE($result) ) { T_RETURN T_STRING ; } T_RETURN T_VARIABLE($result) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($chunk_size) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_VARIABLE($chunk_size) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_PUBLIC T_STRING ( ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_ELSE { T_RETURN ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_GREATER_OR_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_getDirContent) ( T_VARIABLE($dir) , T_VARIABLE($expression) = ) { T_IF ( T_STRING ( T_VARIABLE($dir) ) T_BOOLEAN_AND T_VARIABLE($handle) = @ T_STRING ( T_VARIABLE($dir) ) ) { T_VARIABLE($result) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($dir) , - T_LNUMBER ) T_IS_NOT_EQUAL ) { T_VARIABLE($dir) T_CONCAT_EQUAL ; } T_WHILE ( T_VARIABLE($file) = @ T_STRING ( T_VARIABLE($handle) ) ) { T_IF ( T_IS_NOT_EQUAL T_VARIABLE($file) T_BOOLEAN_AND T_IS_NOT_EQUAL T_VARIABLE($file) T_BOOLEAN_AND T_STRING ( T_VARIABLE($dir) . T_VARIABLE($file) ) T_BOOLEAN_AND ( T_VARIABLE($expression) T_IS_EQUAL T_BOOLEAN_OR T_STRING ( T_VARIABLE($expression) , T_VARIABLE($file) ) ) ) { T_VARIABLE($result) [ ] = T_VARIABLE($file) ; } } @ T_STRING ( T_VARIABLE($handle) ) ; T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_VARIABLE($result) ; } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(PMA_getFileSelectOptions) ( T_VARIABLE($dir) , T_VARIABLE($extensions) = , T_VARIABLE($active) = ) { T_VARIABLE($list) = T_STRING ( T_VARIABLE($dir) , T_VARIABLE($extensions) ) ; T_IF ( T_VARIABLE($list) T_IS_IDENTICAL T_STRING ) { T_RETURN T_STRING ; } T_VARIABLE($result) = ; T_FOREACH ( T_VARIABLE($list) T_AS T_VARIABLE($val) ) { T_VARIABLE($result) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($val) ) . ; T_IF ( T_VARIABLE($val) T_IS_EQUAL T_VARIABLE($active) ) { T_VARIABLE($result) T_CONCAT_EQUAL ; } T_VARIABLE($result) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($val) ) . . ; } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(PMA_supportedDecompressions) ( ) { T_GLOBAL T_VARIABLE($cfg) ; T_VARIABLE($compressions) = ; T_IF ( T_VARIABLE($cfg) [ ] T_BOOLEAN_AND @ T_STRING ( ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($compressions) ) ) { T_VARIABLE($compressions) T_CONCAT_EQUAL ; } T_VARIABLE($compressions) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($cfg) [ ] T_BOOLEAN_AND @ T_STRING ( ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($compressions) ) ) { T_VARIABLE($compressions) T_CONCAT_EQUAL ; } T_VARIABLE($compressions) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($cfg) [ ] T_BOOLEAN_AND @ T_STRING ( ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($compressions) ) ) { T_VARIABLE($compressions) T_CONCAT_EQUAL ; } T_VARIABLE($compressions) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($compressions) ; }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING { T_PRIVATE T_VARIABLE($_scripts) ; T_PRIVATE T_VARIABLE($_isAjax) ; T_PRIVATE T_VARIABLE($_isMinimal) ; T_PRIVATE T_VARIABLE($_isEnabled) ; T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_NEW T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($retval) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($sum_time) = T_LNUMBER ; T_VARIABLE($sum_exec) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($_SESSION) [ ] [ ] T_AS T_VARIABLE($query) ) { T_VARIABLE($sum_time) T_PLUS_EQUAL T_VARIABLE($query) [ ] * T_VARIABLE($query) [ ] ; T_VARIABLE($sum_exec) T_PLUS_EQUAL T_VARIABLE($query) [ ] ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($_SESSION) [ ] [ ] ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($sum_exec) . . T_VARIABLE($sum_time) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_STRING ( ) ; T_STRING ( T_VARIABLE($_SESSION) [ ] ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($_SESSION) [ ] = T_ARRAY ( ) ; } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( T_VARIABLE($encoding) = T_STRING ) { T_VARIABLE($db) = ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : ; T_VARIABLE($table) = ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : ; T_VARIABLE($target) = ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : ; T_RETURN T_STRING ( T_STRING ( ) ) . T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db) , T_DOUBLE_ARROW T_VARIABLE($table) , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW T_VARIABLE($target) ) , T_VARIABLE($encoding) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($url) ) { T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($url) . . . T_STRING ( ) . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( ) { T_IF ( ! T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_STRING ( T_STRING ( T_VARIABLE($GLOBALS) [ ] , ) , T_STRING ( T_VARIABLE($GLOBALS) [ ] , ) , T_VARIABLE($GLOBALS) [ ] [ ] [ ] , T_VARIABLE($GLOBALS) [ ] ) ; } } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($isAjax) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ( T_VARIABLE($isAjax) T_IS_EQUAL T_STRING ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_STRING ( ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($_POST) ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($url) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) = T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($menuHash) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_STRING ( . . . . , T_STRING ( T_VARIABLE($url) ) , T_STRING ( T_VARIABLE($scripts) ) , T_STRING ( T_VARIABLE($menuHash) ) ) ) ; T_VARIABLE($url) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($url) ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_STRING ) ) { T_STRING ( ) ; T_INCLUDE T_STRING ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_STRING ( ) ; } } T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } } T_RETURN T_VARIABLE($retval) ; } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($type) ) { T_INCLUDE_ONCE ; T_VARIABLE($type_lower) = T_STRING ( T_VARIABLE($type) ) ; T_IF ( ! T_STRING ( . T_VARIABLE($type_lower) . ) ) { T_RETURN T_STRING ; } T_IF ( T_INCLUDE_ONCE . T_VARIABLE($type_lower) . ) { T_SWITCH ( T_STRING ( T_VARIABLE($type) ) ) { T_CASE : T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_CASE : T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_CASE : T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_CASE : T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_CASE : T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_CASE : T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_CASE : T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_DEFAULT : T_RETURN T_STRING ; } } T_ELSE { T_RETURN T_STRING ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PRIVATE T_STATIC T_VARIABLE($_instance) ; T_PRIVATE T_STRING ( ) { } T_PUBLIC T_STATIC T_STRING ( ) { T_IF ( ! T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ) ) { T_VARIABLE($class) = T_CLASS_C ; T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) = T_NEW T_VARIABLE($class) ; } T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) ) { T_VARIABLE($min_max) = T_ARRAY ( ) ; T_VARIABLE($goem_col) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($sub_parts) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($goem_col) ) ; T_FOREACH ( T_VARIABLE($sub_parts) T_AS T_VARIABLE($sub_part) ) { T_VARIABLE($type_pos) = T_STRING ( T_VARIABLE($sub_part) , ) ; T_VARIABLE($type) = T_STRING ( T_VARIABLE($sub_part) , T_LNUMBER , T_VARIABLE($type_pos) ) ; T_VARIABLE($gis_obj) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($type) ) ; T_IF ( ! T_VARIABLE($gis_obj) ) { T_CONTINUE ; } T_VARIABLE($scale_data) = T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($sub_part) ) ; T_VARIABLE($c_maxX) = T_DOUBLE_CAST T_VARIABLE($scale_data) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($min_max) [ ] ) T_BOOLEAN_OR T_VARIABLE($c_maxX) > T_VARIABLE($min_max) [ ] ) { T_VARIABLE($min_max) [ ] = T_VARIABLE($c_maxX) ; } T_VARIABLE($c_minX) = T_DOUBLE_CAST T_VARIABLE($scale_data) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($min_max) [ ] ) T_BOOLEAN_OR T_VARIABLE($c_minX) < T_VARIABLE($min_max) [ ] ) { T_VARIABLE($min_max) [ ] = T_VARIABLE($c_minX) ; } T_VARIABLE($c_maxY) = T_DOUBLE_CAST T_VARIABLE($scale_data) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($min_max) [ ] ) T_BOOLEAN_OR T_VARIABLE($c_maxY) > T_VARIABLE($min_max) [ ] ) { T_VARIABLE($min_max) [ ] = T_VARIABLE($c_maxY) ; } T_VARIABLE($c_minY) = T_DOUBLE_CAST T_VARIABLE($scale_data) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($min_max) [ ] ) T_BOOLEAN_OR T_VARIABLE($c_minY) < T_VARIABLE($min_max) [ ] ) { T_VARIABLE($min_max) [ ] = T_VARIABLE($c_minY) ; } } T_RETURN T_VARIABLE($min_max) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($color) , T_VARIABLE($scale_data) , T_VARIABLE($image) ) { T_VARIABLE($goem_col) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($sub_parts) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($goem_col) ) ; T_FOREACH ( T_VARIABLE($sub_parts) T_AS T_VARIABLE($sub_part) ) { T_VARIABLE($type_pos) = T_STRING ( T_VARIABLE($sub_part) , ) ; T_VARIABLE($type) = T_STRING ( T_VARIABLE($sub_part) , T_LNUMBER , T_VARIABLE($type_pos) ) ; T_VARIABLE($gis_obj) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($type) ) ; T_IF ( ! T_VARIABLE($gis_obj) ) { T_CONTINUE ; } T_VARIABLE($image) = T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($sub_part) , T_VARIABLE($label) , T_VARIABLE($color) , T_VARIABLE($scale_data) , T_VARIABLE($image) ) ; } T_RETURN T_VARIABLE($image) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($color) , T_VARIABLE($scale_data) , T_VARIABLE($pdf) ) { T_VARIABLE($goem_col) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($sub_parts) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($goem_col) ) ; T_FOREACH ( T_VARIABLE($sub_parts) T_AS T_VARIABLE($sub_part) ) { T_VARIABLE($type_pos) = T_STRING ( T_VARIABLE($sub_part) , ) ; T_VARIABLE($type) = T_STRING ( T_VARIABLE($sub_part) , T_LNUMBER , T_VARIABLE($type_pos) ) ; T_VARIABLE($gis_obj) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($type) ) ; T_IF ( ! T_VARIABLE($gis_obj) ) { T_CONTINUE ; } T_VARIABLE($pdf) = T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($sub_part) , T_VARIABLE($label) , T_VARIABLE($color) , T_VARIABLE($scale_data) , T_VARIABLE($pdf) ) ; } T_RETURN T_VARIABLE($pdf) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($color) , T_VARIABLE($scale_data) ) { T_VARIABLE($row) = ; T_VARIABLE($goem_col) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($sub_parts) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($goem_col) ) ; T_FOREACH ( T_VARIABLE($sub_parts) T_AS T_VARIABLE($sub_part) ) { T_VARIABLE($type_pos) = T_STRING ( T_VARIABLE($sub_part) , ) ; T_VARIABLE($type) = T_STRING ( T_VARIABLE($sub_part) , T_LNUMBER , T_VARIABLE($type_pos) ) ; T_VARIABLE($gis_obj) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($type) ) ; T_IF ( ! T_VARIABLE($gis_obj) ) { T_CONTINUE ; } T_VARIABLE($row) T_CONCAT_EQUAL T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($sub_part) , T_VARIABLE($label) , T_VARIABLE($color) , T_VARIABLE($scale_data) ) ; } T_RETURN T_VARIABLE($row) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($srid) , T_VARIABLE($label) , T_VARIABLE($color) , T_VARIABLE($scale_data) ) { T_VARIABLE($row) = ; T_VARIABLE($goem_col) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($sub_parts) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($goem_col) ) ; T_FOREACH ( T_VARIABLE($sub_parts) T_AS T_VARIABLE($sub_part) ) { T_VARIABLE($type_pos) = T_STRING ( T_VARIABLE($sub_part) , ) ; T_VARIABLE($type) = T_STRING ( T_VARIABLE($sub_part) , T_LNUMBER , T_VARIABLE($type_pos) ) ; T_VARIABLE($gis_obj) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($type) ) ; T_IF ( ! T_VARIABLE($gis_obj) ) { T_CONTINUE ; } T_VARIABLE($row) T_CONCAT_EQUAL T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($sub_part) , T_VARIABLE($srid) , T_VARIABLE($label) , T_VARIABLE($color) , T_VARIABLE($scale_data) ) ; } T_RETURN T_VARIABLE($row) ; } T_PRIVATE T_STRING ( T_VARIABLE($goem_col) ) { T_VARIABLE($sub_parts) = T_ARRAY ( ) ; T_VARIABLE($br_count) = T_LNUMBER ; T_VARIABLE($start) = T_LNUMBER ; T_VARIABLE($count) = T_LNUMBER ; T_FOREACH ( T_STRING ( T_VARIABLE($goem_col) ) T_AS T_VARIABLE($char) ) { T_IF ( T_VARIABLE($char) T_IS_EQUAL ) { T_VARIABLE($br_count) T_INC ; } T_ELSEIF ( T_VARIABLE($char) T_IS_EQUAL ) { T_VARIABLE($br_count) T_DEC ; T_IF ( T_VARIABLE($br_count) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($sub_parts) [ ] = T_STRING ( T_VARIABLE($goem_col) , T_VARIABLE($start) , ( T_VARIABLE($count) + T_LNUMBER - T_VARIABLE($start) ) ) ; T_VARIABLE($start) = T_VARIABLE($count) + T_LNUMBER ; } } T_VARIABLE($count) T_INC ; } T_RETURN T_VARIABLE($sub_parts) ; } T_PUBLIC T_STRING ( T_VARIABLE($gis_data) , T_VARIABLE($index) , T_VARIABLE($empty) = ) { T_VARIABLE($geom_count) = ( T_ISSET ( T_VARIABLE($gis_data) [ ] [ ] ) ) ? T_VARIABLE($gis_data) [ ] [ ] : T_LNUMBER ; T_VARIABLE($wkt) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($geom_count) ; T_VARIABLE($i) T_INC ) { T_IF ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($i) ] [ ] ) ) { T_VARIABLE($type) = T_VARIABLE($gis_data) [ T_VARIABLE($i) ] [ ] ; T_VARIABLE($gis_obj) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($type) ) ; T_IF ( ! T_VARIABLE($gis_obj) ) { T_CONTINUE ; } T_VARIABLE($wkt) T_CONCAT_EQUAL T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($gis_data) , T_VARIABLE($i) , T_VARIABLE($empty) ) . ; } } T_IF ( T_ISSET ( T_VARIABLE($gis_data) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; } T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($wkt) ; } T_PUBLIC T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($params) = T_ARRAY ( ) ; T_VARIABLE($data) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) ) ; T_VARIABLE($params) [ ] = T_VARIABLE($data) [ ] ; T_VARIABLE($wkt) = T_VARIABLE($data) [ ] ; T_VARIABLE($goem_col) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , ( T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ) ; T_VARIABLE($sub_parts) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($goem_col) ) ; T_VARIABLE($params) [ ] [ ] = T_STRING ( T_VARIABLE($sub_parts) ) ; T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($sub_parts) T_AS T_VARIABLE($sub_part) ) { T_VARIABLE($type_pos) = T_STRING ( T_VARIABLE($sub_part) , ) ; T_VARIABLE($type) = T_STRING ( T_VARIABLE($sub_part) , T_LNUMBER , T_VARIABLE($type_pos) ) ; T_VARIABLE($gis_obj) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($type) ) ; T_IF ( ! T_VARIABLE($gis_obj) ) { T_CONTINUE ; } T_VARIABLE($params) = T_STRING ( T_VARIABLE($params) , T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($sub_part) , T_VARIABLE($i) ) ) ; T_VARIABLE($i) T_INC ; } T_RETURN T_VARIABLE($params) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_ABSTRACT T_STRING { T_PUBLIC T_ABSTRACT T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($color) , T_VARIABLE($scale_data) ) ; T_PUBLIC T_ABSTRACT T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($color) , T_VARIABLE($scale_data) , T_VARIABLE($image) ) ; T_PUBLIC T_ABSTRACT T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($color) , T_VARIABLE($scale_data) , T_VARIABLE($pdf) ) ; T_PUBLIC T_ABSTRACT T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($srid) , T_VARIABLE($label) , T_VARIABLE($color) , T_VARIABLE($scale_data) ) ; T_PUBLIC T_ABSTRACT T_STRING ( T_VARIABLE($spatial) ) ; T_PUBLIC T_ABSTRACT T_STRING ( T_VARIABLE($gis_data) , T_VARIABLE($index) , T_VARIABLE($empty) = ) ; T_PROTECTED T_STRING ( T_VARIABLE($srid) , T_VARIABLE($scale_data) ) { T_RETURN . . T_VARIABLE($scale_data) [ ] . . T_VARIABLE($scale_data) [ ] . . T_VARIABLE($srid) . . . T_VARIABLE($scale_data) [ ] . . T_VARIABLE($scale_data) [ ] . . T_VARIABLE($srid) . ; } T_PROTECTED T_STRING ( T_VARIABLE($point_set) , T_VARIABLE($min_max) ) { T_VARIABLE($points) = T_STRING ( , T_VARIABLE($point_set) ) ; T_FOREACH ( T_VARIABLE($points) T_AS T_VARIABLE($point) ) { T_VARIABLE($cordinates) = T_STRING ( , T_VARIABLE($point) ) ; T_VARIABLE($x) = T_DOUBLE_CAST T_VARIABLE($cordinates) [ T_LNUMBER ] ; T_IF ( ! T_ISSET ( T_VARIABLE($min_max) [ ] ) T_BOOLEAN_OR T_VARIABLE($x) > T_VARIABLE($min_max) [ ] ) { T_VARIABLE($min_max) [ ] = T_VARIABLE($x) ; } T_IF ( ! T_ISSET ( T_VARIABLE($min_max) [ ] ) T_BOOLEAN_OR T_VARIABLE($x) < T_VARIABLE($min_max) [ ] ) { T_VARIABLE($min_max) [ ] = T_VARIABLE($x) ; } T_VARIABLE($y) = T_DOUBLE_CAST T_VARIABLE($cordinates) [ T_LNUMBER ] ; T_IF ( ! T_ISSET ( T_VARIABLE($min_max) [ ] ) T_BOOLEAN_OR T_VARIABLE($y) > T_VARIABLE($min_max) [ ] ) { T_VARIABLE($min_max) [ ] = T_VARIABLE($y) ; } T_IF ( ! T_ISSET ( T_VARIABLE($min_max) [ ] ) T_BOOLEAN_OR T_VARIABLE($y) < T_VARIABLE($min_max) [ ] ) { T_VARIABLE($min_max) [ ] = T_VARIABLE($y) ; } } T_RETURN T_VARIABLE($min_max) ; } T_PROTECTED T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($geom_types) = . ; T_VARIABLE($srid) = T_LNUMBER ; T_VARIABLE($wkt) = ; T_IF ( T_STRING ( . T_VARIABLE($geom_types) . , T_VARIABLE($value) ) ) { T_VARIABLE($last_comma) = T_STRING ( T_VARIABLE($value) , ) ; T_VARIABLE($srid) = T_STRING ( T_STRING ( T_VARIABLE($value) , T_VARIABLE($last_comma) + T_LNUMBER ) ) ; T_VARIABLE($wkt) = T_STRING ( T_STRING ( T_VARIABLE($value) , T_LNUMBER , T_VARIABLE($last_comma) - T_LNUMBER ) ) ; } T_ELSEIF ( T_STRING ( . T_VARIABLE($geom_types) . , T_VARIABLE($value) ) ) { T_VARIABLE($wkt) = T_VARIABLE($value) ; } T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($srid) , T_DOUBLE_ARROW T_VARIABLE($wkt) ) ; } T_PROTECTED T_STRING ( T_VARIABLE($point_set) , T_VARIABLE($scale_data) , T_VARIABLE($linear) = T_STRING ) { T_VARIABLE($points_arr) = T_ARRAY ( ) ; T_VARIABLE($points) = T_STRING ( , T_VARIABLE($point_set) ) ; T_FOREACH ( T_VARIABLE($points) T_AS T_VARIABLE($point) ) { T_VARIABLE($cordinates) = T_STRING ( , T_VARIABLE($point) ) ; T_IF ( T_ISSET ( T_VARIABLE($cordinates) [ T_LNUMBER ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($cordinates) [ T_LNUMBER ] ) T_IS_NOT_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($cordinates) [ T_LNUMBER ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($cordinates) [ T_LNUMBER ] ) T_IS_NOT_EQUAL ) { T_IF ( T_VARIABLE($scale_data) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($x) = ( T_VARIABLE($cordinates) [ T_LNUMBER ] - T_VARIABLE($scale_data) [ ] ) * T_VARIABLE($scale_data) [ ] ; T_VARIABLE($y) = T_VARIABLE($scale_data) [ ] - ( T_VARIABLE($cordinates) [ T_LNUMBER ] - T_VARIABLE($scale_data) [ ] ) * T_VARIABLE($scale_data) [ ] ; } T_ELSE { T_VARIABLE($x) = T_STRING ( T_VARIABLE($cordinates) [ T_LNUMBER ] ) ; T_VARIABLE($y) = T_STRING ( T_VARIABLE($cordinates) [ T_LNUMBER ] ) ; } } T_ELSE { T_VARIABLE($x) = ; T_VARIABLE($y) = ; } T_IF ( ! T_VARIABLE($linear) ) { T_VARIABLE($points_arr) [ ] = T_ARRAY ( T_VARIABLE($x) , T_VARIABLE($y) ) ; } T_ELSE { T_VARIABLE($points_arr) [ ] = T_VARIABLE($x) ; T_VARIABLE($points_arr) [ ] = T_VARIABLE($y) ; } } T_RETURN T_VARIABLE($points_arr) ; } T_PROTECTED T_STRING ( T_VARIABLE($polygons) , T_VARIABLE($srid) ) { T_VARIABLE($ol_array) = ; T_FOREACH ( T_VARIABLE($polygons) T_AS T_VARIABLE($polygon) ) { T_VARIABLE($rings) = T_STRING ( , T_VARIABLE($polygon) ) ; T_VARIABLE($ol_array) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($rings) , T_VARIABLE($srid) ) . ; } T_VARIABLE($ol_array) = T_STRING ( T_VARIABLE($ol_array) , T_LNUMBER , T_STRING ( T_VARIABLE($ol_array) ) - T_LNUMBER ) ; T_VARIABLE($ol_array) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($ol_array) ; } T_PROTECTED T_STRING ( T_VARIABLE($polygon) , T_VARIABLE($srid) ) { T_RETURN . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($polygon) , T_VARIABLE($srid) , T_STRING ) . ; } T_PROTECTED T_STRING ( T_VARIABLE($lines) , T_VARIABLE($srid) , T_VARIABLE($is_line_string) = T_STRING ) { T_VARIABLE($ol_array) = ; T_FOREACH ( T_VARIABLE($lines) T_AS T_VARIABLE($line) ) { T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($line) , T_STRING ) ; T_VARIABLE($ol_array) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($points_arr) , T_VARIABLE($srid) , T_VARIABLE($is_line_string) ) ; T_VARIABLE($ol_array) T_CONCAT_EQUAL ; } T_VARIABLE($ol_array) = T_STRING ( T_VARIABLE($ol_array) , T_LNUMBER , T_STRING ( T_VARIABLE($ol_array) ) - T_LNUMBER ) ; T_VARIABLE($ol_array) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($ol_array) ; } T_PROTECTED T_STRING ( T_VARIABLE($points_arr) , T_VARIABLE($srid) , T_VARIABLE($is_line_string) = T_STRING ) { T_RETURN . ( T_VARIABLE($is_line_string) ? : ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($points_arr) , T_VARIABLE($srid) ) . ; } T_PROTECTED T_STRING ( T_VARIABLE($points_arr) , T_VARIABLE($srid) ) { T_VARIABLE($ol_array) = ; T_FOREACH ( T_VARIABLE($points_arr) T_AS T_VARIABLE($point) ) { T_VARIABLE($ol_array) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($point) , T_VARIABLE($srid) ) . ; } T_VARIABLE($ol_array) = T_STRING ( T_VARIABLE($ol_array) , T_LNUMBER , T_STRING ( T_VARIABLE($ol_array) ) - T_LNUMBER ) ; T_VARIABLE($ol_array) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($ol_array) ; } T_PROTECTED T_STRING ( T_VARIABLE($point) , T_VARIABLE($srid) ) { T_RETURN . T_VARIABLE($point) [ T_LNUMBER ] . . T_VARIABLE($point) [ T_LNUMBER ] . . . T_VARIABLE($srid) . ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PRIVATE T_STATIC T_VARIABLE($_instance) ; T_PRIVATE T_STRING ( ) { } T_PUBLIC T_STATIC T_STRING ( ) { T_IF ( ! T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ) ) { T_VARIABLE($class) = T_CLASS_C ; T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) = T_NEW T_VARIABLE($class) ; } T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) ) { T_VARIABLE($linesrting) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($linesrting) , T_ARRAY ( ) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($line_color) , T_VARIABLE($scale_data) , T_VARIABLE($image) ) { T_VARIABLE($black) = T_STRING ( T_VARIABLE($image) , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($red) = T_STRING ( T_STRING ( T_VARIABLE($line_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($green) = T_STRING ( T_STRING ( T_VARIABLE($line_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($blue) = T_STRING ( T_STRING ( T_VARIABLE($line_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($color) = T_STRING ( T_VARIABLE($image) , T_VARIABLE($red) , T_VARIABLE($green) , T_VARIABLE($blue) ) ; T_VARIABLE($linesrting) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($linesrting) , T_VARIABLE($scale_data) ) ; T_FOREACH ( T_VARIABLE($points_arr) T_AS T_VARIABLE($point) ) { T_IF ( ! T_ISSET ( T_VARIABLE($temp_point) ) ) { T_VARIABLE($temp_point) = T_VARIABLE($point) ; } T_ELSE { T_STRING ( T_VARIABLE($image) , T_VARIABLE($temp_point) [ T_LNUMBER ] , T_VARIABLE($temp_point) [ T_LNUMBER ] , T_VARIABLE($point) [ T_LNUMBER ] , T_VARIABLE($point) [ T_LNUMBER ] , T_VARIABLE($color) ) ; T_VARIABLE($temp_point) = T_VARIABLE($point) ; } } T_IF ( T_ISSET ( T_VARIABLE($label) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($label) ) T_IS_NOT_EQUAL ) { T_STRING ( T_VARIABLE($image) , T_LNUMBER , T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_STRING ( T_VARIABLE($label) ) , T_VARIABLE($black) ) ; } T_RETURN T_VARIABLE($image) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($line_color) , T_VARIABLE($scale_data) , T_VARIABLE($pdf) ) { T_VARIABLE($red) = T_STRING ( T_STRING ( T_VARIABLE($line_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($green) = T_STRING ( T_STRING ( T_VARIABLE($line_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($blue) = T_STRING ( T_STRING ( T_VARIABLE($line_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($line) = T_ARRAY ( T_DOUBLE_ARROW T_DNUMBER , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($red) , T_VARIABLE($green) , T_VARIABLE($blue) ) ) ; T_VARIABLE($linesrting) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($linesrting) , T_VARIABLE($scale_data) ) ; T_FOREACH ( T_VARIABLE($points_arr) T_AS T_VARIABLE($point) ) { T_IF ( ! T_ISSET ( T_VARIABLE($temp_point) ) ) { T_VARIABLE($temp_point) = T_VARIABLE($point) ; } T_ELSE { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($temp_point) [ T_LNUMBER ] , T_VARIABLE($temp_point) [ T_LNUMBER ] , T_VARIABLE($point) [ T_LNUMBER ] , T_VARIABLE($point) [ T_LNUMBER ] , T_VARIABLE($line) ) ; T_VARIABLE($temp_point) = T_VARIABLE($point) ; } } T_IF ( T_ISSET ( T_VARIABLE($label) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($label) ) T_IS_NOT_EQUAL ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( T_VARIABLE($label) ) ) ; } T_RETURN T_VARIABLE($pdf) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($line_color) , T_VARIABLE($scale_data) ) { T_VARIABLE($line_options) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($label) , T_DOUBLE_ARROW T_VARIABLE($label) . T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($line_color) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($linesrting) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($linesrting) , T_VARIABLE($scale_data) ) ; T_VARIABLE($row) = ; T_FOREACH ( T_VARIABLE($points_arr) T_AS T_VARIABLE($point) ) { T_VARIABLE($row) T_CONCAT_EQUAL T_VARIABLE($point) [ T_LNUMBER ] . . T_VARIABLE($point) [ T_LNUMBER ] . ; } T_VARIABLE($row) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($line_options) T_AS T_VARIABLE($option) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($row) T_CONCAT_EQUAL . T_VARIABLE($option) . . T_STRING ( T_VARIABLE($val) ) . ; } T_VARIABLE($row) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($row) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($srid) , T_VARIABLE($label) , T_VARIABLE($line_color) , T_VARIABLE($scale_data) ) { T_VARIABLE($style_options) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($line_color) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($label) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_IF ( T_VARIABLE($srid) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($srid) = T_LNUMBER ; } T_VARIABLE($result) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($srid) , T_VARIABLE($scale_data) ) ; T_VARIABLE($linesrting) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($linesrting) , T_STRING ) ; T_VARIABLE($result) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($points_arr) , T_VARIABLE($srid) ) . . T_STRING ( T_VARIABLE($style_options) ) . ; T_RETURN T_VARIABLE($result) ; } T_PUBLIC T_STRING ( T_VARIABLE($gis_data) , T_VARIABLE($index) , T_VARIABLE($empty) = ) { T_VARIABLE($no_of_points) = T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ ] ) ? T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($no_of_points) < T_LNUMBER ) { T_VARIABLE($no_of_points) = T_LNUMBER ; } T_VARIABLE($wkt) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($no_of_points) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($wkt) T_CONCAT_EQUAL ( ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] ) T_IS_NOT_EQUAL ) ? T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] : T_VARIABLE($empty) ) . . ( ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] ) T_IS_NOT_EQUAL ) ? T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] : T_VARIABLE($empty) ) . ; } T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($wkt) ; } T_PUBLIC T_STRING ( T_VARIABLE($value) , T_VARIABLE($index) = - T_LNUMBER ) { T_IF ( T_VARIABLE($index) T_IS_EQUAL - T_LNUMBER ) { T_VARIABLE($index) = T_LNUMBER ; T_VARIABLE($params) = T_ARRAY ( ) ; T_VARIABLE($data) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) ) ; T_VARIABLE($params) [ ] = T_VARIABLE($data) [ ] ; T_VARIABLE($wkt) = T_VARIABLE($data) [ ] ; } T_ELSE { T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] = ; T_VARIABLE($wkt) = T_VARIABLE($value) ; } T_VARIABLE($linestring) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , ( T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($linestring) , T_STRING ) ; T_VARIABLE($no_of_points) = T_STRING ( T_VARIABLE($points_arr) ) ; T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ ] = T_VARIABLE($no_of_points) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($no_of_points) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] = T_VARIABLE($points_arr) [ T_VARIABLE($i) ] [ T_LNUMBER ] ; T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] = T_VARIABLE($points_arr) [ T_VARIABLE($i) ] [ T_LNUMBER ] ; } T_RETURN T_VARIABLE($params) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PRIVATE T_STATIC T_VARIABLE($_instance) ; T_PRIVATE T_STRING ( ) { } T_PUBLIC T_STATIC T_STRING ( ) { T_IF ( ! T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ) ) { T_VARIABLE($class) = T_CLASS_C ; T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) = T_NEW T_VARIABLE($class) ; } T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) ) { T_VARIABLE($min_max) = T_ARRAY ( ) ; T_VARIABLE($multilinestirng) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($linestirngs) = T_STRING ( , T_VARIABLE($multilinestirng) ) ; T_FOREACH ( T_VARIABLE($linestirngs) T_AS T_VARIABLE($linestring) ) { T_VARIABLE($min_max) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($linestring) , T_VARIABLE($min_max) ) ; } T_RETURN T_VARIABLE($min_max) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($line_color) , T_VARIABLE($scale_data) , T_VARIABLE($image) ) { T_VARIABLE($black) = T_STRING ( T_VARIABLE($image) , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($red) = T_STRING ( T_STRING ( T_VARIABLE($line_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($green) = T_STRING ( T_STRING ( T_VARIABLE($line_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($blue) = T_STRING ( T_STRING ( T_VARIABLE($line_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($color) = T_STRING ( T_VARIABLE($image) , T_VARIABLE($red) , T_VARIABLE($green) , T_VARIABLE($blue) ) ; T_VARIABLE($multilinestirng) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($linestirngs) = T_STRING ( , T_VARIABLE($multilinestirng) ) ; T_VARIABLE($first_line) = T_STRING ; T_FOREACH ( T_VARIABLE($linestirngs) T_AS T_VARIABLE($linestring) ) { T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($linestring) , T_VARIABLE($scale_data) ) ; T_FOREACH ( T_VARIABLE($points_arr) T_AS T_VARIABLE($point) ) { T_IF ( ! T_ISSET ( T_VARIABLE($temp_point) ) ) { T_VARIABLE($temp_point) = T_VARIABLE($point) ; } T_ELSE { T_STRING ( T_VARIABLE($image) , T_VARIABLE($temp_point) [ T_LNUMBER ] , T_VARIABLE($temp_point) [ T_LNUMBER ] , T_VARIABLE($point) [ T_LNUMBER ] , T_VARIABLE($point) [ T_LNUMBER ] , T_VARIABLE($color) ) ; T_VARIABLE($temp_point) = T_VARIABLE($point) ; } } T_UNSET ( T_VARIABLE($temp_point) ) ; T_IF ( T_ISSET ( T_VARIABLE($label) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($label) ) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($first_line) ) { T_STRING ( T_VARIABLE($image) , T_LNUMBER , T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_STRING ( T_VARIABLE($label) ) , T_VARIABLE($black) ) ; } T_VARIABLE($first_line) = T_STRING ; } T_RETURN T_VARIABLE($image) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($line_color) , T_VARIABLE($scale_data) , T_VARIABLE($pdf) ) { T_VARIABLE($red) = T_STRING ( T_STRING ( T_VARIABLE($line_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($green) = T_STRING ( T_STRING ( T_VARIABLE($line_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($blue) = T_STRING ( T_STRING ( T_VARIABLE($line_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($line) = T_ARRAY ( T_DOUBLE_ARROW T_DNUMBER , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($red) , T_VARIABLE($green) , T_VARIABLE($blue) ) ) ; T_VARIABLE($multilinestirng) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($linestirngs) = T_STRING ( , T_VARIABLE($multilinestirng) ) ; T_VARIABLE($first_line) = T_STRING ; T_FOREACH ( T_VARIABLE($linestirngs) T_AS T_VARIABLE($linestring) ) { T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($linestring) , T_VARIABLE($scale_data) ) ; T_FOREACH ( T_VARIABLE($points_arr) T_AS T_VARIABLE($point) ) { T_IF ( ! T_ISSET ( T_VARIABLE($temp_point) ) ) { T_VARIABLE($temp_point) = T_VARIABLE($point) ; } T_ELSE { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($temp_point) [ T_LNUMBER ] , T_VARIABLE($temp_point) [ T_LNUMBER ] , T_VARIABLE($point) [ T_LNUMBER ] , T_VARIABLE($point) [ T_LNUMBER ] , T_VARIABLE($line) ) ; T_VARIABLE($temp_point) = T_VARIABLE($point) ; } } T_UNSET ( T_VARIABLE($temp_point) ) ; T_IF ( T_ISSET ( T_VARIABLE($label) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($label) ) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($first_line) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( T_VARIABLE($label) ) ) ; } T_VARIABLE($first_line) = T_STRING ; } T_RETURN T_VARIABLE($pdf) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($line_color) , T_VARIABLE($scale_data) ) { T_VARIABLE($line_options) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($label) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($line_color) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($multilinestirng) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($linestirngs) = T_STRING ( , T_VARIABLE($multilinestirng) ) ; T_VARIABLE($row) = ; T_FOREACH ( T_VARIABLE($linestirngs) T_AS T_VARIABLE($linestring) ) { T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($linestring) , T_VARIABLE($scale_data) ) ; T_VARIABLE($row) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($points_arr) T_AS T_VARIABLE($point) ) { T_VARIABLE($row) T_CONCAT_EQUAL T_VARIABLE($point) [ T_LNUMBER ] . . T_VARIABLE($point) [ T_LNUMBER ] . ; } T_VARIABLE($row) T_CONCAT_EQUAL ; T_VARIABLE($line_options) [ ] = T_VARIABLE($label) . T_STRING ( ) ; T_FOREACH ( T_VARIABLE($line_options) T_AS T_VARIABLE($option) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($row) T_CONCAT_EQUAL . T_VARIABLE($option) . . T_STRING ( T_VARIABLE($val) ) . ; } T_VARIABLE($row) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($row) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($srid) , T_VARIABLE($label) , T_VARIABLE($line_color) , T_VARIABLE($scale_data) ) { T_VARIABLE($style_options) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($line_color) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($label) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_IF ( T_VARIABLE($srid) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($srid) = T_LNUMBER ; } T_VARIABLE($row) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($srid) , T_VARIABLE($scale_data) ) ; T_VARIABLE($multilinestirng) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($linestirngs) = T_STRING ( , T_VARIABLE($multilinestirng) ) ; T_VARIABLE($row) T_CONCAT_EQUAL . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($linestirngs) , T_VARIABLE($srid) ) . . T_STRING ( T_VARIABLE($style_options) ) . ; T_RETURN T_VARIABLE($row) ; } T_PUBLIC T_STRING ( T_VARIABLE($gis_data) , T_VARIABLE($index) , T_VARIABLE($empty) = ) { T_VARIABLE($data_row) = T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] ; T_VARIABLE($no_of_lines) = T_ISSET ( T_VARIABLE($data_row) [ ] ) ? T_VARIABLE($data_row) [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($no_of_lines) < T_LNUMBER ) { T_VARIABLE($no_of_lines) = T_LNUMBER ; } T_VARIABLE($wkt) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($no_of_lines) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($no_of_points) = T_ISSET ( T_VARIABLE($data_row) [ T_VARIABLE($i) ] [ ] ) ? T_VARIABLE($data_row) [ T_VARIABLE($i) ] [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($no_of_points) < T_LNUMBER ) { T_VARIABLE($no_of_points) = T_LNUMBER ; } T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($no_of_points) ; T_VARIABLE($j) T_INC ) { T_VARIABLE($wkt) T_CONCAT_EQUAL ( ( T_ISSET ( T_VARIABLE($data_row) [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($data_row) [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) T_IS_NOT_EQUAL ) ? T_VARIABLE($data_row) [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] : T_VARIABLE($empty) ) . . ( ( T_ISSET ( T_VARIABLE($data_row) [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($data_row) [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) T_IS_NOT_EQUAL ) ? T_VARIABLE($data_row) [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] : T_VARIABLE($empty) ) . ; } T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; } T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($wkt) ; } T_PUBLIC T_STRING ( T_VARIABLE($row_data) ) { T_VARIABLE($wkt) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($row_data) [ ] ; T_VARIABLE($i) T_INC ) { T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($row_data) [ ] [ T_VARIABLE($i) ] [ ] T_AS T_VARIABLE($point) ) { T_VARIABLE($wkt) T_CONCAT_EQUAL T_VARIABLE($point) [ ] . . T_VARIABLE($point) [ ] . ; } T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; } T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($wkt) ; } T_PUBLIC T_STRING ( T_VARIABLE($value) , T_VARIABLE($index) = - T_LNUMBER ) { T_IF ( T_VARIABLE($index) T_IS_EQUAL - T_LNUMBER ) { T_VARIABLE($index) = T_LNUMBER ; T_VARIABLE($params) = T_ARRAY ( ) ; T_VARIABLE($data) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) ) ; T_VARIABLE($params) [ ] = T_VARIABLE($data) [ ] ; T_VARIABLE($wkt) = T_VARIABLE($data) [ ] ; } T_ELSE { T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] = ; T_VARIABLE($wkt) = T_VARIABLE($value) ; } T_VARIABLE($multilinestirng) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , ( T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ) ; T_VARIABLE($linestirngs) = T_STRING ( , T_VARIABLE($multilinestirng) ) ; T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ ] = T_STRING ( T_VARIABLE($linestirngs) ) ; T_VARIABLE($j) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($linestirngs) T_AS T_VARIABLE($linestring) ) { T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($linestring) , T_STRING ) ; T_VARIABLE($no_of_points) = T_STRING ( T_VARIABLE($points_arr) ) ; T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($j) ] [ ] = T_VARIABLE($no_of_points) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($no_of_points) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($j) ] [ T_VARIABLE($i) ] [ ] = T_VARIABLE($points_arr) [ T_VARIABLE($i) ] [ T_LNUMBER ] ; T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($j) ] [ T_VARIABLE($i) ] [ ] = T_VARIABLE($points_arr) [ T_VARIABLE($i) ] [ T_LNUMBER ] ; } T_VARIABLE($j) T_INC ; } T_RETURN T_VARIABLE($params) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PRIVATE T_STATIC T_VARIABLE($_instance) ; T_PRIVATE T_STRING ( ) { } T_PUBLIC T_STATIC T_STRING ( ) { T_IF ( ! T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ) ) { T_VARIABLE($class) = T_CLASS_C ; T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) = T_NEW T_VARIABLE($class) ; } T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) ) { T_VARIABLE($multipoint) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($multipoint) , T_ARRAY ( ) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($point_color) , T_VARIABLE($scale_data) , T_VARIABLE($image) ) { T_VARIABLE($black) = T_STRING ( T_VARIABLE($image) , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($red) = T_STRING ( T_STRING ( T_VARIABLE($point_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($green) = T_STRING ( T_STRING ( T_VARIABLE($point_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($blue) = T_STRING ( T_STRING ( T_VARIABLE($point_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($color) = T_STRING ( T_VARIABLE($image) , T_VARIABLE($red) , T_VARIABLE($green) , T_VARIABLE($blue) ) ; T_VARIABLE($multipoint) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($multipoint) , T_VARIABLE($scale_data) ) ; T_FOREACH ( T_VARIABLE($points_arr) T_AS T_VARIABLE($point) ) { T_IF ( T_VARIABLE($point) [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($point) [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_STRING ( T_VARIABLE($image) , T_VARIABLE($point) [ T_LNUMBER ] , T_VARIABLE($point) [ T_LNUMBER ] , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_VARIABLE($color) ) ; } } T_IF ( ( T_ISSET ( T_VARIABLE($label) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($label) ) T_IS_NOT_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] T_IS_NOT_EQUAL ) ) { T_STRING ( T_VARIABLE($image) , T_LNUMBER , T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_STRING ( T_VARIABLE($label) ) , T_VARIABLE($black) ) ; } T_RETURN T_VARIABLE($image) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($point_color) , T_VARIABLE($scale_data) , T_VARIABLE($pdf) ) { T_VARIABLE($red) = T_STRING ( T_STRING ( T_VARIABLE($point_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($green) = T_STRING ( T_STRING ( T_VARIABLE($point_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($blue) = T_STRING ( T_STRING ( T_VARIABLE($point_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($line) = T_ARRAY ( T_DOUBLE_ARROW T_DNUMBER , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($red) , T_VARIABLE($green) , T_VARIABLE($blue) ) ) ; T_VARIABLE($multipoint) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($multipoint) , T_VARIABLE($scale_data) ) ; T_FOREACH ( T_VARIABLE($points_arr) T_AS T_VARIABLE($point) ) { T_IF ( T_VARIABLE($point) [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($point) [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($point) [ T_LNUMBER ] , T_VARIABLE($point) [ T_LNUMBER ] , T_LNUMBER , T_LNUMBER , T_LNUMBER , , T_VARIABLE($line) ) ; } } T_IF ( ( T_ISSET ( T_VARIABLE($label) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($label) ) T_IS_NOT_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] T_IS_NOT_EQUAL ) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( T_VARIABLE($label) ) ) ; } T_RETURN T_VARIABLE($pdf) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($point_color) , T_VARIABLE($scale_data) ) { T_VARIABLE($point_options) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($label) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($point_color) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($multipoint) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($multipoint) , T_VARIABLE($scale_data) ) ; T_VARIABLE($row) = ; T_FOREACH ( T_VARIABLE($points_arr) T_AS T_VARIABLE($point) ) { T_IF ( T_VARIABLE($point) [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($point) [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($row) T_CONCAT_EQUAL . T_VARIABLE($point) [ T_LNUMBER ] . . T_VARIABLE($point) [ T_LNUMBER ] . ; T_VARIABLE($point_options) [ ] = T_VARIABLE($label) . T_STRING ( ) ; T_FOREACH ( T_VARIABLE($point_options) T_AS T_VARIABLE($option) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($row) T_CONCAT_EQUAL . T_VARIABLE($option) . . T_STRING ( T_VARIABLE($val) ) . ; } T_VARIABLE($row) T_CONCAT_EQUAL ; } } T_RETURN T_VARIABLE($row) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($srid) , T_VARIABLE($label) , T_VARIABLE($point_color) , T_VARIABLE($scale_data) ) { T_VARIABLE($style_options) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($point_color) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($label) , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_IF ( T_VARIABLE($srid) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($srid) = T_LNUMBER ; } T_VARIABLE($result) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($srid) , T_VARIABLE($scale_data) ) ; T_VARIABLE($multipoint) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($multipoint) , T_STRING ) ; T_VARIABLE($result) T_CONCAT_EQUAL . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($points_arr) , T_VARIABLE($srid) ) . . T_STRING ( T_VARIABLE($style_options) ) . ; T_RETURN T_VARIABLE($result) ; } T_PUBLIC T_STRING ( T_VARIABLE($gis_data) , T_VARIABLE($index) , T_VARIABLE($empty) = ) { T_VARIABLE($no_of_points) = T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ ] ) ? T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($no_of_points) < T_LNUMBER ) { T_VARIABLE($no_of_points) = T_LNUMBER ; } T_VARIABLE($wkt) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($no_of_points) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($wkt) T_CONCAT_EQUAL ( ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] ) T_IS_NOT_EQUAL ) ? T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] : ) . . ( ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] ) T_IS_NOT_EQUAL ) ? T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] : ) . ; } T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($wkt) ; } T_PUBLIC T_STRING ( T_VARIABLE($row_data) ) { T_VARIABLE($wkt) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($row_data) [ ] ; T_VARIABLE($i) T_INC ) { T_VARIABLE($wkt) T_CONCAT_EQUAL T_VARIABLE($row_data) [ ] [ T_VARIABLE($i) ] [ ] . . T_VARIABLE($row_data) [ ] [ T_VARIABLE($i) ] [ ] . ; } T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($wkt) ; } T_PUBLIC T_STRING ( T_VARIABLE($value) , T_VARIABLE($index) = - T_LNUMBER ) { T_IF ( T_VARIABLE($index) T_IS_EQUAL - T_LNUMBER ) { T_VARIABLE($index) = T_LNUMBER ; T_VARIABLE($params) = T_ARRAY ( ) ; T_VARIABLE($data) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) ) ; T_VARIABLE($params) [ ] = T_VARIABLE($data) [ ] ; T_VARIABLE($wkt) = T_VARIABLE($data) [ ] ; } T_ELSE { T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] = ; T_VARIABLE($wkt) = T_VARIABLE($value) ; } T_VARIABLE($points) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , ( T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($points) , T_STRING ) ; T_VARIABLE($no_of_points) = T_STRING ( T_VARIABLE($points_arr) ) ; T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ ] = T_VARIABLE($no_of_points) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($no_of_points) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] = T_VARIABLE($points_arr) [ T_VARIABLE($i) ] [ T_LNUMBER ] ; T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] = T_VARIABLE($points_arr) [ T_VARIABLE($i) ] [ T_LNUMBER ] ; } T_RETURN T_VARIABLE($params) ; } T_PROTECTED T_STRING ( T_VARIABLE($points_arr) , T_VARIABLE($srid) ) { T_VARIABLE($ol_array) = ; T_FOREACH ( T_VARIABLE($points_arr) T_AS T_VARIABLE($point) ) { T_IF ( T_VARIABLE($point) [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($point) [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($ol_array) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($point) , T_VARIABLE($srid) ) . ; } } T_IF ( T_STRING ( T_VARIABLE($ol_array) , T_STRING ( T_VARIABLE($ol_array) ) - T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($ol_array) = T_STRING ( T_VARIABLE($ol_array) , T_LNUMBER , T_STRING ( T_VARIABLE($ol_array) ) - T_LNUMBER ) ; } T_VARIABLE($ol_array) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($ol_array) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PRIVATE T_STATIC T_VARIABLE($_instance) ; T_PRIVATE T_STRING ( ) { } T_PUBLIC T_STATIC T_STRING ( ) { T_IF ( ! T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ) ) { T_VARIABLE($class) = T_CLASS_C ; T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) = T_NEW T_VARIABLE($class) ; } T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) ) { T_VARIABLE($min_max) = T_ARRAY ( ) ; T_VARIABLE($multipolygon) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($polygons) = T_STRING ( , T_VARIABLE($multipolygon) ) ; T_FOREACH ( T_VARIABLE($polygons) T_AS T_VARIABLE($polygon) ) { T_IF ( T_STRING ( T_VARIABLE($polygon) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($ring) = T_VARIABLE($polygon) ; } T_ELSE { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($polygon) ) ; T_VARIABLE($ring) = T_VARIABLE($parts) [ T_LNUMBER ] ; } T_VARIABLE($min_max) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($ring) , T_VARIABLE($min_max) ) ; } T_RETURN T_VARIABLE($min_max) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($fill_color) , T_VARIABLE($scale_data) , T_VARIABLE($image) ) { T_VARIABLE($black) = T_STRING ( T_VARIABLE($image) , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($red) = T_STRING ( T_STRING ( T_VARIABLE($fill_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($green) = T_STRING ( T_STRING ( T_VARIABLE($fill_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($blue) = T_STRING ( T_STRING ( T_VARIABLE($fill_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($color) = T_STRING ( T_VARIABLE($image) , T_VARIABLE($red) , T_VARIABLE($green) , T_VARIABLE($blue) ) ; T_VARIABLE($multipolygon) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($polygons) = T_STRING ( , T_VARIABLE($multipolygon) ) ; T_VARIABLE($first_poly) = T_STRING ; T_FOREACH ( T_VARIABLE($polygons) T_AS T_VARIABLE($polygon) ) { T_IF ( T_STRING ( T_VARIABLE($polygon) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($polygon) , T_VARIABLE($scale_data) , T_STRING ) ; } T_ELSE { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($polygon) ) ; T_VARIABLE($outer) = T_VARIABLE($parts) [ T_LNUMBER ] ; T_VARIABLE($inner) = T_STRING ( T_VARIABLE($parts) , T_LNUMBER ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($outer) , T_VARIABLE($scale_data) , T_STRING ) ; T_FOREACH ( T_VARIABLE($inner) T_AS T_VARIABLE($inner_poly) ) { T_VARIABLE($points_arr) = T_STRING ( T_VARIABLE($points_arr) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($inner_poly) , T_VARIABLE($scale_data) , T_STRING ) ) ; } } T_STRING ( T_VARIABLE($image) , T_VARIABLE($points_arr) , T_STRING ( T_VARIABLE($points_arr) ) / T_LNUMBER , T_VARIABLE($color) ) ; T_IF ( T_ISSET ( T_VARIABLE($label) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($label) ) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($first_poly) ) { T_VARIABLE($label_point) = T_ARRAY ( T_VARIABLE($points_arr) [ T_LNUMBER ] , T_VARIABLE($points_arr) [ T_LNUMBER ] ) ; } T_VARIABLE($first_poly) = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($label_point) ) ) { T_STRING ( T_VARIABLE($image) , T_LNUMBER , T_VARIABLE($points_arr) [ T_LNUMBER ] , T_VARIABLE($points_arr) [ T_LNUMBER ] , T_STRING ( T_VARIABLE($label) ) , T_VARIABLE($black) ) ; } T_RETURN T_VARIABLE($image) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($fill_color) , T_VARIABLE($scale_data) , T_VARIABLE($pdf) ) { T_VARIABLE($red) = T_STRING ( T_STRING ( T_VARIABLE($fill_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($green) = T_STRING ( T_STRING ( T_VARIABLE($fill_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($blue) = T_STRING ( T_STRING ( T_VARIABLE($fill_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($color) = T_ARRAY ( T_VARIABLE($red) , T_VARIABLE($green) , T_VARIABLE($blue) ) ; T_VARIABLE($multipolygon) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($polygons) = T_STRING ( , T_VARIABLE($multipolygon) ) ; T_VARIABLE($first_poly) = T_STRING ; T_FOREACH ( T_VARIABLE($polygons) T_AS T_VARIABLE($polygon) ) { T_IF ( T_STRING ( T_VARIABLE($polygon) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($polygon) , T_VARIABLE($scale_data) , T_STRING ) ; } T_ELSE { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($polygon) ) ; T_VARIABLE($outer) = T_VARIABLE($parts) [ T_LNUMBER ] ; T_VARIABLE($inner) = T_STRING ( T_VARIABLE($parts) , T_LNUMBER ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($outer) , T_VARIABLE($scale_data) , T_STRING ) ; T_FOREACH ( T_VARIABLE($inner) T_AS T_VARIABLE($inner_poly) ) { T_VARIABLE($points_arr) = T_STRING ( T_VARIABLE($points_arr) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($inner_poly) , T_VARIABLE($scale_data) , T_STRING ) ) ; } } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($points_arr) , , T_ARRAY ( ) , T_VARIABLE($color) , T_STRING ) ; T_IF ( T_ISSET ( T_VARIABLE($label) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($label) ) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($first_poly) ) { T_VARIABLE($label_point) = T_ARRAY ( T_VARIABLE($points_arr) [ T_LNUMBER ] , T_VARIABLE($points_arr) [ T_LNUMBER ] ) ; } T_VARIABLE($first_poly) = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($label_point) ) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($label_point) [ T_LNUMBER ] , T_VARIABLE($label_point) [ T_LNUMBER ] ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( T_VARIABLE($label) ) ) ; } T_RETURN T_VARIABLE($pdf) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($fill_color) , T_VARIABLE($scale_data) ) { T_VARIABLE($polygon_options) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($label) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_DNUMBER , T_DOUBLE_ARROW T_VARIABLE($fill_color) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_DNUMBER , ) ; T_VARIABLE($row) = ; T_VARIABLE($multipolygon) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($polygons) = T_STRING ( , T_VARIABLE($multipolygon) ) ; T_FOREACH ( T_VARIABLE($polygons) T_AS T_VARIABLE($polygon) ) { T_VARIABLE($row) T_CONCAT_EQUAL ; T_IF ( T_STRING ( T_VARIABLE($polygon) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($row) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($polygon) , T_VARIABLE($scale_data) ) ; } T_ELSE { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($polygon) ) ; T_VARIABLE($outer) = T_VARIABLE($parts) [ T_LNUMBER ] ; T_VARIABLE($inner) = T_STRING ( T_VARIABLE($parts) , T_LNUMBER ) ; T_VARIABLE($row) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($outer) , T_VARIABLE($scale_data) ) ; T_FOREACH ( T_VARIABLE($inner) T_AS T_VARIABLE($inner_poly) ) { T_VARIABLE($row) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($inner_poly) , T_VARIABLE($scale_data) ) ; } } T_VARIABLE($polygon_options) [ ] = T_VARIABLE($label) . T_STRING ( ) ; T_VARIABLE($row) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($polygon_options) T_AS T_VARIABLE($option) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($row) T_CONCAT_EQUAL . T_VARIABLE($option) . . T_STRING ( T_VARIABLE($val) ) . ; } T_VARIABLE($row) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($row) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($srid) , T_VARIABLE($label) , T_VARIABLE($fill_color) , T_VARIABLE($scale_data) ) { T_VARIABLE($style_options) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_DNUMBER , T_DOUBLE_ARROW T_VARIABLE($fill_color) , T_DOUBLE_ARROW T_DNUMBER , T_DOUBLE_ARROW T_VARIABLE($label) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_IF ( T_VARIABLE($srid) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($srid) = T_LNUMBER ; } T_VARIABLE($row) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($srid) , T_VARIABLE($scale_data) ) ; T_VARIABLE($multipolygon) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($polygons) = T_STRING ( , T_VARIABLE($multipolygon) ) ; T_VARIABLE($row) T_CONCAT_EQUAL . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($polygons) , T_VARIABLE($srid) ) . . T_STRING ( T_VARIABLE($style_options) ) . ; T_RETURN T_VARIABLE($row) ; } T_PRIVATE T_STRING ( T_VARIABLE($polygon) , T_VARIABLE($scale_data) ) { T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($polygon) , T_VARIABLE($scale_data) ) ; T_VARIABLE($row) = . T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] . . T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] ; T_VARIABLE($other_points) = T_STRING ( T_VARIABLE($points_arr) , T_LNUMBER , T_STRING ( T_VARIABLE($points_arr) ) - T_LNUMBER ) ; T_FOREACH ( T_VARIABLE($other_points) T_AS T_VARIABLE($point) ) { T_VARIABLE($row) T_CONCAT_EQUAL . T_VARIABLE($point) [ T_LNUMBER ] . . T_VARIABLE($point) [ T_LNUMBER ] ; } T_VARIABLE($row) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($row) ; } T_PUBLIC T_STRING ( T_VARIABLE($gis_data) , T_VARIABLE($index) , T_VARIABLE($empty) = ) { T_VARIABLE($data_row) = T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] ; T_VARIABLE($no_of_polygons) = T_ISSET ( T_VARIABLE($data_row) [ ] ) ? T_VARIABLE($data_row) [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($no_of_polygons) < T_LNUMBER ) { T_VARIABLE($no_of_polygons) = T_LNUMBER ; } T_VARIABLE($wkt) = ; T_FOR ( T_VARIABLE($k) = T_LNUMBER ; T_VARIABLE($k) < T_VARIABLE($no_of_polygons) ; T_VARIABLE($k) T_INC ) { T_VARIABLE($no_of_lines) = T_ISSET ( T_VARIABLE($data_row) [ T_VARIABLE($k) ] [ ] ) ? T_VARIABLE($data_row) [ T_VARIABLE($k) ] [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($no_of_lines) < T_LNUMBER ) { T_VARIABLE($no_of_lines) = T_LNUMBER ; } T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($no_of_lines) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($no_of_points) = T_ISSET ( T_VARIABLE($data_row) [ T_VARIABLE($k) ] [ T_VARIABLE($i) ] [ ] ) ? T_VARIABLE($data_row) [ T_VARIABLE($k) ] [ T_VARIABLE($i) ] [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($no_of_points) < T_LNUMBER ) { T_VARIABLE($no_of_points) = T_LNUMBER ; } T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($no_of_points) ; T_VARIABLE($j) T_INC ) { T_VARIABLE($wkt) T_CONCAT_EQUAL ( ( T_ISSET ( T_VARIABLE($data_row) [ T_VARIABLE($k) ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($data_row) [ T_VARIABLE($k) ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) T_IS_NOT_EQUAL ) ? T_VARIABLE($data_row) [ T_VARIABLE($k) ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] : T_VARIABLE($empty) ) . . ( ( T_ISSET ( T_VARIABLE($data_row) [ T_VARIABLE($k) ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($data_row) [ T_VARIABLE($k) ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) T_IS_NOT_EQUAL ) ? T_VARIABLE($data_row) [ T_VARIABLE($k) ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] : T_VARIABLE($empty) ) . ; } T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; } T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; } T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($wkt) ; } T_PUBLIC T_STRING ( T_VARIABLE($row_data) ) { T_INCLUDE_ONCE ; T_FOREACH ( T_VARIABLE($row_data) [ ] T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($ring) ) { T_VARIABLE($row_data) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ring) [ ] ) ; } T_FOREACH ( T_VARIABLE($row_data) [ ] T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($ring) ) { T_IF ( ! T_VARIABLE($ring) [ ] ) { T_VARIABLE($row_data) [ ] [ T_VARIABLE($i) ] [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ring) [ ] ) ; } } T_FOREACH ( T_VARIABLE($row_data) [ ] T_AS T_VARIABLE($j) T_DOUBLE_ARROW T_VARIABLE($ring1) ) { T_IF ( ! T_VARIABLE($ring1) [ ] ) { T_FOREACH ( T_VARIABLE($row_data) [ ] T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($ring2) ) { T_IF ( T_VARIABLE($ring2) [ ] ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ring1) [ ] , T_VARIABLE($ring2) [ ] ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($ring2) [ ] ) ) { T_VARIABLE($row_data) [ ] [ T_VARIABLE($k) ] [ ] = T_ARRAY ( ) ; } T_VARIABLE($row_data) [ ] [ T_VARIABLE($k) ] [ ] [ ] = T_VARIABLE($j) ; } } } } } T_VARIABLE($wkt) = ; T_FOREACH ( T_VARIABLE($row_data) [ ] T_AS T_VARIABLE($ring) ) { T_IF ( T_VARIABLE($ring) [ ] ) { T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($ring) [ ] T_AS T_VARIABLE($point) ) { T_VARIABLE($wkt) T_CONCAT_EQUAL T_VARIABLE($point) [ ] . . T_VARIABLE($point) [ ] . ; } T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($ring) [ ] ) ) { T_FOREACH ( T_VARIABLE($ring) [ ] T_AS T_VARIABLE($j) ) { T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($row_data) [ ] [ T_VARIABLE($j) ] [ ] T_AS T_VARIABLE($innerPoint) ) { T_VARIABLE($wkt) T_CONCAT_EQUAL T_VARIABLE($innerPoint) [ ] . . T_VARIABLE($innerPoint) [ ] . ; } T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; } } T_VARIABLE($wkt) T_CONCAT_EQUAL ; } } T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($wkt) ; } T_PUBLIC T_STRING ( T_VARIABLE($value) , T_VARIABLE($index) = - T_LNUMBER ) { T_IF ( T_VARIABLE($index) T_IS_EQUAL - T_LNUMBER ) { T_VARIABLE($index) = T_LNUMBER ; T_VARIABLE($params) = T_ARRAY ( ) ; T_VARIABLE($data) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) ) ; T_VARIABLE($params) [ ] = T_VARIABLE($data) [ ] ; T_VARIABLE($wkt) = T_VARIABLE($data) [ ] ; } T_ELSE { T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] = ; T_VARIABLE($wkt) = T_VARIABLE($value) ; } T_VARIABLE($multipolygon) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , ( T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ) ; T_VARIABLE($polygons) = T_STRING ( , T_VARIABLE($multipolygon) ) ; T_VARIABLE($param_row) = & T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] ; T_VARIABLE($param_row) [ ] = T_STRING ( T_VARIABLE($polygons) ) ; T_VARIABLE($k) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($polygons) T_AS T_VARIABLE($polygon) ) { T_IF ( T_STRING ( T_VARIABLE($polygon) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($param_row) [ T_VARIABLE($k) ] [ ] = T_LNUMBER ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($polygon) , T_STRING ) ; T_VARIABLE($no_of_points) = T_STRING ( T_VARIABLE($points_arr) ) ; T_VARIABLE($param_row) [ T_VARIABLE($k) ] [ T_LNUMBER ] [ ] = T_VARIABLE($no_of_points) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($no_of_points) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($param_row) [ T_VARIABLE($k) ] [ T_LNUMBER ] [ T_VARIABLE($i) ] [ ] = T_VARIABLE($points_arr) [ T_VARIABLE($i) ] [ T_LNUMBER ] ; T_VARIABLE($param_row) [ T_VARIABLE($k) ] [ T_LNUMBER ] [ T_VARIABLE($i) ] [ ] = T_VARIABLE($points_arr) [ T_VARIABLE($i) ] [ T_LNUMBER ] ; } } T_ELSE { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($polygon) ) ; T_VARIABLE($param_row) [ T_VARIABLE($k) ] [ ] = T_STRING ( T_VARIABLE($parts) ) ; T_VARIABLE($j) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($parts) T_AS T_VARIABLE($ring) ) { T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($ring) , T_STRING ) ; T_VARIABLE($no_of_points) = T_STRING ( T_VARIABLE($points_arr) ) ; T_VARIABLE($param_row) [ T_VARIABLE($k) ] [ T_VARIABLE($j) ] [ ] = T_VARIABLE($no_of_points) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($no_of_points) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($param_row) [ T_VARIABLE($k) ] [ T_VARIABLE($j) ] [ T_VARIABLE($i) ] [ ] = T_VARIABLE($points_arr) [ T_VARIABLE($i) ] [ T_LNUMBER ] ; T_VARIABLE($param_row) [ T_VARIABLE($k) ] [ T_VARIABLE($j) ] [ T_VARIABLE($i) ] [ ] = T_VARIABLE($points_arr) [ T_VARIABLE($i) ] [ T_LNUMBER ] ; } T_VARIABLE($j) T_INC ; } } T_VARIABLE($k) T_INC ; } T_RETURN T_VARIABLE($params) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PRIVATE T_STATIC T_VARIABLE($_instance) ; T_PRIVATE T_STRING ( ) { } T_PUBLIC T_STATIC T_STRING ( ) { T_IF ( ! T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ) ) { T_VARIABLE($class) = T_CLASS_C ; T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) = T_NEW T_VARIABLE($class) ; } T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) ) { T_VARIABLE($point) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($point) , T_ARRAY ( ) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($point_color) , T_VARIABLE($scale_data) , T_VARIABLE($image) ) { T_VARIABLE($black) = T_STRING ( T_VARIABLE($image) , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($red) = T_STRING ( T_STRING ( T_VARIABLE($point_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($green) = T_STRING ( T_STRING ( T_VARIABLE($point_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($blue) = T_STRING ( T_STRING ( T_VARIABLE($point_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($color) = T_STRING ( T_VARIABLE($image) , T_VARIABLE($red) , T_VARIABLE($green) , T_VARIABLE($blue) ) ; T_VARIABLE($point) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($point) , T_VARIABLE($scale_data) ) ; T_IF ( T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_STRING ( T_VARIABLE($image) , T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_VARIABLE($color) ) ; T_IF ( T_ISSET ( T_VARIABLE($label) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($label) ) T_IS_NOT_EQUAL ) { T_STRING ( T_VARIABLE($image) , T_LNUMBER , T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_STRING ( T_VARIABLE($label) ) , T_VARIABLE($black) ) ; } } T_RETURN T_VARIABLE($image) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($point_color) , T_VARIABLE($scale_data) , T_VARIABLE($pdf) ) { T_VARIABLE($red) = T_STRING ( T_STRING ( T_VARIABLE($point_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($green) = T_STRING ( T_STRING ( T_VARIABLE($point_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($blue) = T_STRING ( T_STRING ( T_VARIABLE($point_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($line) = T_ARRAY ( T_DOUBLE_ARROW T_DNUMBER , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($red) , T_VARIABLE($green) , T_VARIABLE($blue) ) ) ; T_VARIABLE($point) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($point) , T_VARIABLE($scale_data) ) ; T_IF ( T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_LNUMBER , T_LNUMBER , T_LNUMBER , , T_VARIABLE($line) ) ; T_IF ( T_ISSET ( T_VARIABLE($label) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($label) ) T_IS_NOT_EQUAL ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] , T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( T_VARIABLE($label) ) ) ; } } T_RETURN T_VARIABLE($pdf) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($point_color) , T_VARIABLE($scale_data) ) { T_VARIABLE($point_options) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($label) , T_DOUBLE_ARROW T_VARIABLE($label) . T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($point_color) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($point) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($point) , T_VARIABLE($scale_data) ) ; T_VARIABLE($row) = ; T_IF ( T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($row) T_CONCAT_EQUAL . T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] . . T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] . ; T_FOREACH ( T_VARIABLE($point_options) T_AS T_VARIABLE($option) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($row) T_CONCAT_EQUAL . T_VARIABLE($option) . . T_STRING ( T_VARIABLE($val) ) . ; } T_VARIABLE($row) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($row) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($srid) , T_VARIABLE($label) , T_VARIABLE($point_color) , T_VARIABLE($scale_data) ) { T_VARIABLE($style_options) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($point_color) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($label) , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_IF ( T_VARIABLE($srid) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($srid) = T_LNUMBER ; } T_VARIABLE($result) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($srid) , T_VARIABLE($scale_data) ) ; T_VARIABLE($point) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($point) , T_STRING ) ; T_IF ( T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($result) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($points_arr) [ T_LNUMBER ] , T_VARIABLE($srid) ) . . T_STRING ( T_VARIABLE($style_options) ) . ; } T_RETURN T_VARIABLE($result) ; } T_PUBLIC T_STRING ( T_VARIABLE($gis_data) , T_VARIABLE($index) , T_VARIABLE($empty) = ) { T_RETURN . ( ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ ] ) T_IS_NOT_EQUAL ) ? T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ ] : ) . . ( ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ ] ) T_IS_NOT_EQUAL ) ? T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ ] : ) . ; } T_PUBLIC T_STRING ( T_VARIABLE($row_data) ) { T_RETURN . ( T_ISSET ( T_VARIABLE($row_data) [ ] ) ? T_VARIABLE($row_data) [ ] : ) . . ( T_ISSET ( T_VARIABLE($row_data) [ ] ) ? T_VARIABLE($row_data) [ ] : ) . ; } T_PUBLIC T_STRING ( T_VARIABLE($value) , T_VARIABLE($index) = - T_LNUMBER ) { T_IF ( T_VARIABLE($index) T_IS_EQUAL - T_LNUMBER ) { T_VARIABLE($index) = T_LNUMBER ; T_VARIABLE($params) = T_ARRAY ( ) ; T_VARIABLE($data) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) ) ; T_VARIABLE($params) [ ] = T_VARIABLE($data) [ ] ; T_VARIABLE($wkt) = T_VARIABLE($data) [ ] ; } T_ELSE { T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] = ; T_VARIABLE($wkt) = T_VARIABLE($value) ; } T_VARIABLE($point) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , ( T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($point) , T_STRING ) ; T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ ] = T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] ; T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ ] = T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] ; T_RETURN T_VARIABLE($params) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PRIVATE T_STATIC T_VARIABLE($_instance) ; T_PRIVATE T_STRING ( ) { } T_PUBLIC T_STATIC T_STRING ( ) { T_IF ( ! T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ) ) { T_VARIABLE($class) = T_CLASS_C ; T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) = T_NEW T_VARIABLE($class) ; } T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) ) { T_VARIABLE($polygon) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_IF ( T_STRING ( T_VARIABLE($polygon) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($ring) = T_VARIABLE($polygon) ; } T_ELSE { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($polygon) ) ; T_VARIABLE($ring) = T_VARIABLE($parts) [ T_LNUMBER ] ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($ring) , T_ARRAY ( ) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($fill_color) , T_VARIABLE($scale_data) , T_VARIABLE($image) ) { T_VARIABLE($black) = T_STRING ( T_VARIABLE($image) , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($red) = T_STRING ( T_STRING ( T_VARIABLE($fill_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($green) = T_STRING ( T_STRING ( T_VARIABLE($fill_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($blue) = T_STRING ( T_STRING ( T_VARIABLE($fill_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($color) = T_STRING ( T_VARIABLE($image) , T_VARIABLE($red) , T_VARIABLE($green) , T_VARIABLE($blue) ) ; T_VARIABLE($polygon) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_IF ( T_STRING ( T_VARIABLE($polygon) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($polygon) , T_VARIABLE($scale_data) , T_STRING ) ; } T_ELSE { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($polygon) ) ; T_VARIABLE($outer) = T_VARIABLE($parts) [ T_LNUMBER ] ; T_VARIABLE($inner) = T_STRING ( T_VARIABLE($parts) , T_LNUMBER ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($outer) , T_VARIABLE($scale_data) , T_STRING ) ; T_FOREACH ( T_VARIABLE($inner) T_AS T_VARIABLE($inner_poly) ) { T_VARIABLE($points_arr) = T_STRING ( T_VARIABLE($points_arr) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($inner_poly) , T_VARIABLE($scale_data) , T_STRING ) ) ; } } T_STRING ( T_VARIABLE($image) , T_VARIABLE($points_arr) , T_STRING ( T_VARIABLE($points_arr) ) / T_LNUMBER , T_VARIABLE($color) ) ; T_IF ( T_ISSET ( T_VARIABLE($label) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($label) ) T_IS_NOT_EQUAL ) { T_STRING ( T_VARIABLE($image) , T_LNUMBER , T_VARIABLE($points_arr) [ T_LNUMBER ] , T_VARIABLE($points_arr) [ T_LNUMBER ] , T_STRING ( T_VARIABLE($label) ) , T_VARIABLE($black) ) ; } T_RETURN T_VARIABLE($image) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($fill_color) , T_VARIABLE($scale_data) , T_VARIABLE($pdf) ) { T_VARIABLE($red) = T_STRING ( T_STRING ( T_VARIABLE($fill_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($green) = T_STRING ( T_STRING ( T_VARIABLE($fill_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($blue) = T_STRING ( T_STRING ( T_VARIABLE($fill_color) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($color) = T_ARRAY ( T_VARIABLE($red) , T_VARIABLE($green) , T_VARIABLE($blue) ) ; T_VARIABLE($polygon) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_IF ( T_STRING ( T_VARIABLE($polygon) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($polygon) , T_VARIABLE($scale_data) , T_STRING ) ; } T_ELSE { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($polygon) ) ; T_VARIABLE($outer) = T_VARIABLE($parts) [ T_LNUMBER ] ; T_VARIABLE($inner) = T_STRING ( T_VARIABLE($parts) , T_LNUMBER ) ; T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($outer) , T_VARIABLE($scale_data) , T_STRING ) ; T_FOREACH ( T_VARIABLE($inner) T_AS T_VARIABLE($inner_poly) ) { T_VARIABLE($points_arr) = T_STRING ( T_VARIABLE($points_arr) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($inner_poly) , T_VARIABLE($scale_data) , T_STRING ) ) ; } } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($points_arr) , , T_ARRAY ( ) , T_VARIABLE($color) , T_STRING ) ; T_IF ( T_ISSET ( T_VARIABLE($label) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($label) ) T_IS_NOT_EQUAL ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($points_arr) [ T_LNUMBER ] , T_VARIABLE($points_arr) [ T_LNUMBER ] ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( T_VARIABLE($label) ) ) ; } T_RETURN T_VARIABLE($pdf) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($label) , T_VARIABLE($fill_color) , T_VARIABLE($scale_data) ) { T_VARIABLE($polygon_options) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($label) , T_DOUBLE_ARROW T_VARIABLE($label) . T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_DNUMBER , T_DOUBLE_ARROW T_VARIABLE($fill_color) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_DNUMBER , ) ; T_VARIABLE($polygon) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($row) = ; T_IF ( T_STRING ( T_VARIABLE($polygon) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($row) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($polygon) , T_VARIABLE($scale_data) ) ; } T_ELSE { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($polygon) ) ; T_VARIABLE($outer) = T_VARIABLE($parts) [ T_LNUMBER ] ; T_VARIABLE($inner) = T_STRING ( T_VARIABLE($parts) , T_LNUMBER ) ; T_VARIABLE($row) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($outer) , T_VARIABLE($scale_data) ) ; T_FOREACH ( T_VARIABLE($inner) T_AS T_VARIABLE($inner_poly) ) { T_VARIABLE($row) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($inner_poly) , T_VARIABLE($scale_data) ) ; } } T_VARIABLE($row) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($polygon_options) T_AS T_VARIABLE($option) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($row) T_CONCAT_EQUAL . T_VARIABLE($option) . . T_STRING ( T_VARIABLE($val) ) . ; } T_VARIABLE($row) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($row) ; } T_PUBLIC T_STRING ( T_VARIABLE($spatial) , T_VARIABLE($srid) , T_VARIABLE($label) , T_VARIABLE($fill_color) , T_VARIABLE($scale_data) ) { T_VARIABLE($style_options) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_DNUMBER , T_DOUBLE_ARROW T_VARIABLE($fill_color) , T_DOUBLE_ARROW T_DNUMBER , T_DOUBLE_ARROW T_VARIABLE($label) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_IF ( T_VARIABLE($srid) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($srid) = T_LNUMBER ; } T_VARIABLE($row) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($srid) , T_VARIABLE($scale_data) ) ; T_VARIABLE($polygon) = T_STRING ( T_VARIABLE($spatial) , T_LNUMBER , ( T_STRING ( T_VARIABLE($spatial) ) - T_LNUMBER ) ) ; T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($polygon) ) ; T_VARIABLE($row) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($parts) , T_VARIABLE($srid) ) . . T_STRING ( T_VARIABLE($style_options) ) . ; T_RETURN T_VARIABLE($row) ; } T_PRIVATE T_STRING ( T_VARIABLE($polygon) , T_VARIABLE($scale_data) ) { T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($polygon) , T_VARIABLE($scale_data) ) ; T_VARIABLE($row) = . T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] . . T_VARIABLE($points_arr) [ T_LNUMBER ] [ T_LNUMBER ] ; T_VARIABLE($other_points) = T_STRING ( T_VARIABLE($points_arr) , T_LNUMBER , T_STRING ( T_VARIABLE($points_arr) ) - T_LNUMBER ) ; T_FOREACH ( T_VARIABLE($other_points) T_AS T_VARIABLE($point) ) { T_VARIABLE($row) T_CONCAT_EQUAL . T_VARIABLE($point) [ T_LNUMBER ] . . T_VARIABLE($point) [ T_LNUMBER ] ; } T_VARIABLE($row) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($row) ; } T_PUBLIC T_STRING ( T_VARIABLE($gis_data) , T_VARIABLE($index) , T_VARIABLE($empty) = ) { T_VARIABLE($no_of_lines) = T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ ] ) ? T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($no_of_lines) < T_LNUMBER ) { T_VARIABLE($no_of_lines) = T_LNUMBER ; } T_VARIABLE($wkt) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($no_of_lines) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($no_of_points) = T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] ) ? T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($no_of_points) < T_LNUMBER ) { T_VARIABLE($no_of_points) = T_LNUMBER ; } T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($no_of_points) ; T_VARIABLE($j) T_INC ) { T_VARIABLE($wkt) T_CONCAT_EQUAL ( ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) T_IS_NOT_EQUAL ) ? T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] : T_VARIABLE($empty) ) . . ( ( T_ISSET ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] ) T_IS_NOT_EQUAL ) ? T_VARIABLE($gis_data) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($i) ] [ T_VARIABLE($j) ] [ ] : T_VARIABLE($empty) ) . ; } T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; } T_VARIABLE($wkt) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ; T_VARIABLE($wkt) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($wkt) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($ring) ) { T_VARIABLE($no_of_points) = T_STRING ( T_VARIABLE($ring) ) ; T_VARIABLE($last) = T_STRING ( T_VARIABLE($ring) ) - T_LNUMBER ; T_IF ( ( T_VARIABLE($ring) [ T_LNUMBER ] [ ] T_IS_EQUAL T_VARIABLE($ring) [ T_VARIABLE($last) ] [ ] ) T_BOOLEAN_AND ( T_VARIABLE($ring) [ T_LNUMBER ] [ ] T_IS_EQUAL T_VARIABLE($ring) [ T_VARIABLE($last) ] [ ] ) ) { T_VARIABLE($no_of_points) T_DEC ; } T_VARIABLE($area) = T_LNUMBER ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($no_of_points) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($j) = ( T_VARIABLE($i) + T_LNUMBER ) \% T_VARIABLE($no_of_points) ; T_VARIABLE($area) T_PLUS_EQUAL T_VARIABLE($ring) [ T_VARIABLE($i) ] [ ] * T_VARIABLE($ring) [ T_VARIABLE($j) ] [ ] ; T_VARIABLE($area) T_MINUS_EQUAL T_VARIABLE($ring) [ T_VARIABLE($i) ] [ ] * T_VARIABLE($ring) [ T_VARIABLE($j) ] [ ] ; } T_VARIABLE($area) T_DIV_EQUAL T_DNUMBER ; T_RETURN T_VARIABLE($area) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($ring) ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ring) ) < T_LNUMBER ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($point) , T_VARIABLE($polygon) ) { T_VARIABLE($last) = T_STRING ( T_VARIABLE($polygon) ) - T_LNUMBER ; T_IF ( ( T_VARIABLE($polygon) [ T_LNUMBER ] [ ] T_IS_EQUAL T_VARIABLE($polygon) [ T_VARIABLE($last) ] [ ] ) T_BOOLEAN_AND ( T_VARIABLE($polygon) [ T_LNUMBER ] [ ] T_IS_EQUAL T_VARIABLE($polygon) [ T_VARIABLE($last) ] [ ] ) ) { T_VARIABLE($polygon) = T_STRING ( T_VARIABLE($polygon) , T_LNUMBER , T_VARIABLE($last) ) ; } T_VARIABLE($no_of_points) = T_STRING ( T_VARIABLE($polygon) ) ; T_VARIABLE($counter) = T_LNUMBER ; T_VARIABLE($p1) = T_VARIABLE($polygon) [ T_LNUMBER ] ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($no_of_points) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($p2) = T_VARIABLE($polygon) [ T_VARIABLE($i) \% T_VARIABLE($no_of_points) ] ; T_IF ( T_VARIABLE($point) [ ] > T_STRING ( T_ARRAY ( T_VARIABLE($p1) [ ] , T_VARIABLE($p2) [ ] ) ) ) { T_IF ( T_VARIABLE($point) [ ] T_IS_SMALLER_OR_EQUAL T_STRING ( T_ARRAY ( T_VARIABLE($p1) [ ] , T_VARIABLE($p2) [ ] ) ) ) { T_IF ( T_VARIABLE($point) [ ] T_IS_SMALLER_OR_EQUAL T_STRING ( T_ARRAY ( T_VARIABLE($p1) [ ] , T_VARIABLE($p2) [ ] ) ) ) { T_IF ( T_VARIABLE($p1) [ ] T_IS_NOT_EQUAL T_VARIABLE($p2) [ ] ) { T_VARIABLE($xinters) = ( T_VARIABLE($point) [ ] - T_VARIABLE($p1) [ ] ) * ( T_VARIABLE($p2) [ ] - T_VARIABLE($p1) [ ] ) / ( T_VARIABLE($p2) [ ] - T_VARIABLE($p1) [ ] ) + T_VARIABLE($p1) [ ] ; T_IF ( T_VARIABLE($p1) [ ] T_IS_EQUAL T_VARIABLE($p2) [ ] T_BOOLEAN_OR T_VARIABLE($point) [ ] T_IS_SMALLER_OR_EQUAL T_VARIABLE($xinters) ) { T_VARIABLE($counter) T_INC ; } } } } } T_VARIABLE($p1) = T_VARIABLE($p2) ; } T_IF ( T_VARIABLE($counter) \% T_LNUMBER T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ; } T_ELSE { T_RETURN T_STRING ; } } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($ring) ) { T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($ring) ) - T_LNUMBER ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($ring) [ T_VARIABLE($i) ] [ ] T_IS_NOT_EQUAL T_VARIABLE($ring) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ) { T_VARIABLE($x0) = T_VARIABLE($ring) [ T_VARIABLE($i) ] [ ] ; T_VARIABLE($x1) = T_VARIABLE($ring) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ; T_VARIABLE($y0) = T_VARIABLE($ring) [ T_VARIABLE($i) ] [ ] ; T_VARIABLE($y1) = T_VARIABLE($ring) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ; T_BREAK ; } } T_IF ( ! T_ISSET ( T_VARIABLE($x0) ) ) { T_RETURN T_STRING ; } T_VARIABLE($x2) = ( T_VARIABLE($x0) + T_VARIABLE($x1) ) / T_LNUMBER ; T_VARIABLE($y2) = ( T_VARIABLE($y0) + T_VARIABLE($y1) ) / T_LNUMBER ; T_VARIABLE($epsilon) = T_DNUMBER ; T_VARIABLE($denominator) = T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( ( T_VARIABLE($y1) - T_VARIABLE($y0) ) , T_LNUMBER ) + T_STRING T_DOUBLE_COLON T_STRING ( ( T_VARIABLE($x0) - T_VARIABLE($x1) ) , T_LNUMBER ) ) ; T_VARIABLE($pointA) = T_ARRAY ( ) ; T_VARIABLE($pointB) = T_ARRAY ( ) ; T_WHILE ( T_STRING ) { T_VARIABLE($pointA) [ ] = T_VARIABLE($x2) + ( T_VARIABLE($epsilon) * ( T_VARIABLE($y1) - T_VARIABLE($y0) ) ) / T_VARIABLE($denominator) ; T_VARIABLE($pointA) [ ] = T_VARIABLE($y2) + ( T_VARIABLE($pointA) [ ] - T_VARIABLE($x2) ) * ( T_VARIABLE($x0) - T_VARIABLE($x1) ) / ( T_VARIABLE($y1) - T_VARIABLE($y0) ) ; T_VARIABLE($pointB) [ ] = T_VARIABLE($x2) + ( T_VARIABLE($epsilon) * ( T_VARIABLE($y1) - T_VARIABLE($y0) ) ) / ( T_LNUMBER - T_VARIABLE($denominator) ) ; T_VARIABLE($pointB) [ ] = T_VARIABLE($y2) + ( T_VARIABLE($pointB) [ ] - T_VARIABLE($x2) ) * ( T_VARIABLE($x0) - T_VARIABLE($x1) ) / ( T_VARIABLE($y1) - T_VARIABLE($y0) ) ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($pointA) , T_VARIABLE($ring) ) ) { T_RETURN T_VARIABLE($pointA) ; } T_ELSEIF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($pointB) , T_VARIABLE($ring) ) ) { T_RETURN T_VARIABLE($pointB) ; } T_ELSE { T_VARIABLE($epsilon) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($epsilon) , T_LNUMBER ) ; T_IF ( T_VARIABLE($epsilon) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ; } } } } T_PUBLIC T_STRING ( T_VARIABLE($value) , T_VARIABLE($index) = - T_LNUMBER ) { T_IF ( T_VARIABLE($index) T_IS_EQUAL - T_LNUMBER ) { T_VARIABLE($index) = T_LNUMBER ; T_VARIABLE($params) = T_ARRAY ( ) ; T_VARIABLE($data) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) ) ; T_VARIABLE($params) [ ] = T_VARIABLE($data) [ ] ; T_VARIABLE($wkt) = T_VARIABLE($data) [ ] ; } T_ELSE { T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] = ; T_VARIABLE($wkt) = T_VARIABLE($value) ; } T_VARIABLE($polygon) = T_STRING ( T_VARIABLE($wkt) , T_LNUMBER , ( T_STRING ( T_VARIABLE($wkt) ) - T_LNUMBER ) ) ; T_VARIABLE($linerings) = T_STRING ( , T_VARIABLE($polygon) ) ; T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ ] = T_STRING ( T_VARIABLE($linerings) ) ; T_VARIABLE($j) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($linerings) T_AS T_VARIABLE($linering) ) { T_VARIABLE($points_arr) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($linering) , T_STRING ) ; T_VARIABLE($no_of_points) = T_STRING ( T_VARIABLE($points_arr) ) ; T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($j) ] [ ] = T_VARIABLE($no_of_points) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($no_of_points) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($j) ] [ T_VARIABLE($i) ] [ ] = T_VARIABLE($points_arr) [ T_VARIABLE($i) ] [ T_LNUMBER ] ; T_VARIABLE($params) [ T_VARIABLE($index) ] [ ] [ T_VARIABLE($j) ] [ T_VARIABLE($i) ] [ ] = T_VARIABLE($points_arr) [ T_VARIABLE($i) ] [ T_LNUMBER ] ; } T_VARIABLE($j) T_INC ; } T_RETURN T_VARIABLE($params) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PRIVATE T_VARIABLE($_data) ; T_PRIVATE T_VARIABLE($_settings) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , , , , , , , , , , , , , , , , ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_PRIVATE T_VARIABLE($_userSpecifiedSettings) = T_STRING ; T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($data) , T_VARIABLE($options) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($options) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($data) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PRIVATE T_STRING ( ) { T_IF ( ! T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } } T_PRIVATE T_STRING ( T_VARIABLE($file_name) , T_VARIABLE($ext) ) { T_VARIABLE($file_name) = T_STRING ( T_VARIABLE($file_name) ) ; T_VARIABLE($extension_start_pos) = T_STRING ( T_VARIABLE($file_name) ) - T_STRING ( T_VARIABLE($ext) ) - T_LNUMBER ; T_VARIABLE($user_extension) = T_STRING ( T_VARIABLE($file_name) , T_VARIABLE($extension_start_pos) , T_STRING ( T_VARIABLE($file_name) ) ) ; T_VARIABLE($required_extension) = . T_VARIABLE($ext) ; T_IF ( T_STRING ( T_VARIABLE($user_extension) ) T_IS_NOT_EQUAL T_VARIABLE($required_extension) ) { T_VARIABLE($file_name) T_CONCAT_EQUAL T_VARIABLE($required_extension) ; } T_RETURN T_VARIABLE($file_name) ; } T_PRIVATE T_STRING ( T_VARIABLE($file_name) , T_VARIABLE($type) , T_VARIABLE($ext) ) { T_VARIABLE($file_name) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($file_name) , T_VARIABLE($ext) ) ; T_STRING ( T_VARIABLE($file_name) , T_VARIABLE($type) ) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($output) = . ; T_VARIABLE($output) T_CONCAT_EQUAL . . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] . . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($scale_data) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($scale_data) , , ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($output) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_VARIABLE($output) ; } T_PUBLIC T_STRING ( T_VARIABLE($file_name) ) { T_VARIABLE($img) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($file_name) , , ) ; T_ECHO ( T_VARIABLE($img) ) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($image) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) ; T_VARIABLE($bg) = T_STRING ( T_VARIABLE($image) , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_STRING ( T_VARIABLE($image) , T_LNUMBER , T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] - T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] - T_LNUMBER , T_VARIABLE($bg) ) ; T_VARIABLE($scale_data) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($image) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($scale_data) , , T_VARIABLE($image) ) ; T_RETURN T_VARIABLE($image) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($img) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( ) ; T_STRING ( T_VARIABLE($img) , T_STRING , T_LNUMBER , T_STRING ) ; T_STRING ( T_VARIABLE($img) ) ; T_VARIABLE($output) = T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($encoded) = T_STRING ( T_VARIABLE($output) ) ; T_RETURN . T_VARIABLE($encoded) . ; } T_PUBLIC T_STRING ( T_VARIABLE($file_name) ) { T_VARIABLE($img) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($file_name) , , ) ; T_STRING ( T_VARIABLE($img) , T_STRING , T_LNUMBER , T_STRING ) ; T_STRING ( T_VARIABLE($img) ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scale_data) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($output) = . . . . . . . . . . . . . . . . . . ; T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($scale_data) , , ) ; T_VARIABLE($output) T_CONCAT_EQUAL . . . . . . ; T_RETURN T_VARIABLE($output) ; } T_PUBLIC T_STRING ( T_VARIABLE($file_name) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_INCLUDE_ONCE ; T_VARIABLE($pdf) = T_NEW T_STRING ( , , T_VARIABLE($GLOBALS) [ ] [ ] , T_STRING , , T_STRING ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scale_data) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($pdf) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($scale_data) , , T_VARIABLE($pdf) ) ; T_VARIABLE($file_name) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($file_name) , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($file_name) , ) ; } T_PRIVATE T_STRING ( T_VARIABLE($data) ) { T_VARIABLE($min_max) = T_ARRAY ( ) ; T_VARIABLE($border) = T_LNUMBER ; T_VARIABLE($plot_width) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] - T_LNUMBER * T_VARIABLE($border) ; T_VARIABLE($plot_height) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] - T_LNUMBER * T_VARIABLE($border) ; T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($row) ) { T_VARIABLE($ref_data) = T_VARIABLE($row) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ] ; T_VARIABLE($type_pos) = T_STRING ( T_VARIABLE($ref_data) , ) ; T_VARIABLE($type) = T_STRING ( T_VARIABLE($ref_data) , T_LNUMBER , T_VARIABLE($type_pos) ) ; T_VARIABLE($gis_obj) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($type) ) ; T_IF ( ! T_VARIABLE($gis_obj) ) { T_CONTINUE ; } T_VARIABLE($scale_data) = T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ] ) ; T_VARIABLE($c_maxX) = T_DOUBLE_CAST T_VARIABLE($scale_data) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($min_max) [ ] ) T_BOOLEAN_OR T_VARIABLE($c_maxX) > T_VARIABLE($min_max) [ ] ) { T_VARIABLE($min_max) [ ] = T_VARIABLE($c_maxX) ; } T_VARIABLE($c_minX) = T_DOUBLE_CAST T_VARIABLE($scale_data) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($min_max) [ ] ) T_BOOLEAN_OR T_VARIABLE($c_minX) < T_VARIABLE($min_max) [ ] ) { T_VARIABLE($min_max) [ ] = T_VARIABLE($c_minX) ; } T_VARIABLE($c_maxY) = T_DOUBLE_CAST T_VARIABLE($scale_data) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($min_max) [ ] ) T_BOOLEAN_OR T_VARIABLE($c_maxY) > T_VARIABLE($min_max) [ ] ) { T_VARIABLE($min_max) [ ] = T_VARIABLE($c_maxY) ; } T_VARIABLE($c_minY) = T_DOUBLE_CAST T_VARIABLE($scale_data) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($min_max) [ ] ) T_BOOLEAN_OR T_VARIABLE($c_minY) < T_VARIABLE($min_max) [ ] ) { T_VARIABLE($min_max) [ ] = T_VARIABLE($c_minY) ; } } T_VARIABLE($x_ratio) = ( T_VARIABLE($min_max) [ ] - T_VARIABLE($min_max) [ ] ) / T_VARIABLE($plot_width) ; T_VARIABLE($y_ratio) = ( T_VARIABLE($min_max) [ ] - T_VARIABLE($min_max) [ ] ) / T_VARIABLE($plot_height) ; T_VARIABLE($ratio) = ( T_VARIABLE($x_ratio) > T_VARIABLE($y_ratio) ) ? T_VARIABLE($x_ratio) : T_VARIABLE($y_ratio) ; T_VARIABLE($scale) = ( T_VARIABLE($ratio) T_IS_NOT_EQUAL T_LNUMBER ) ? ( T_LNUMBER / T_VARIABLE($ratio) ) : T_LNUMBER ; T_IF ( T_VARIABLE($x_ratio) < T_VARIABLE($y_ratio) ) { T_VARIABLE($x) = ( T_VARIABLE($min_max) [ ] + T_VARIABLE($min_max) [ ] - T_VARIABLE($plot_width) / T_VARIABLE($scale) ) / T_LNUMBER ; T_VARIABLE($y) = T_VARIABLE($min_max) [ ] - ( T_VARIABLE($border) / T_VARIABLE($scale) ) ; } T_ELSE { T_VARIABLE($x) = T_VARIABLE($min_max) [ ] - ( T_VARIABLE($border) / T_VARIABLE($scale) ) ; T_VARIABLE($y) = ( T_VARIABLE($min_max) [ ] + T_VARIABLE($min_max) [ ] - T_VARIABLE($plot_height) / T_VARIABLE($scale) ) / T_LNUMBER ; } T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($scale) , T_DOUBLE_ARROW T_VARIABLE($x) , T_DOUBLE_ARROW T_VARIABLE($y) , T_DOUBLE_ARROW T_VARIABLE($min_max) [ ] , T_DOUBLE_ARROW T_VARIABLE($min_max) [ ] , T_DOUBLE_ARROW T_VARIABLE($min_max) [ ] , T_DOUBLE_ARROW T_VARIABLE($min_max) [ ] , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] , ) ; } T_PRIVATE T_STRING ( T_VARIABLE($data) , T_VARIABLE($scale_data) , T_VARIABLE($format) , T_VARIABLE($results) ) { T_VARIABLE($color_number) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($row) ) { T_VARIABLE($index) = T_VARIABLE($color_number) \% T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) ; T_VARIABLE($ref_data) = T_VARIABLE($row) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ] ; T_VARIABLE($type_pos) = T_STRING ( T_VARIABLE($ref_data) , ) ; T_VARIABLE($type) = T_STRING ( T_VARIABLE($ref_data) , T_LNUMBER , T_VARIABLE($type_pos) ) ; T_VARIABLE($gis_obj) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($type) ) ; T_IF ( ! T_VARIABLE($gis_obj) ) { T_CONTINUE ; } T_VARIABLE($label) = ; T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($row) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ] ) ) { T_VARIABLE($label) = T_VARIABLE($row) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ] ; } T_IF ( T_VARIABLE($format) T_IS_EQUAL ) { T_VARIABLE($results) T_CONCAT_EQUAL T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ] , T_VARIABLE($label) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($index) ] , T_VARIABLE($scale_data) ) ; } T_ELSEIF ( T_VARIABLE($format) T_IS_EQUAL ) { T_VARIABLE($results) = T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ] , T_VARIABLE($label) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($index) ] , T_VARIABLE($scale_data) , T_VARIABLE($results) ) ; } T_ELSEIF ( T_VARIABLE($format) T_IS_EQUAL ) { T_VARIABLE($results) = T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ] , T_VARIABLE($label) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($index) ] , T_VARIABLE($scale_data) , T_VARIABLE($results) ) ; } T_ELSEIF ( T_VARIABLE($format) T_IS_EQUAL ) { T_VARIABLE($results) T_CONCAT_EQUAL T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ] , T_VARIABLE($row) [ ] , T_VARIABLE($label) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($index) ] , T_VARIABLE($scale_data) ) ; } T_VARIABLE($color_number) T_INC ; } T_RETURN T_VARIABLE($results) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_FUNCTION(PMA_GIS_modifyQuery) ( T_VARIABLE($sql_query) , T_VARIABLE($visualizationSettings) ) { T_VARIABLE($modified_query) = ; T_VARIABLE($analyzed_query) = T_STRING ( T_STRING ( T_VARIABLE($sql_query) ) ) ; T_IF ( T_STRING ( T_VARIABLE($analyzed_query) [ T_LNUMBER ] [ ] ) T_IS_NOT_EQUAL ) { T_IF ( T_ISSET ( T_VARIABLE($visualizationSettings) [ ] ) T_BOOLEAN_AND T_VARIABLE($visualizationSettings) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($is_label_alias) = T_STRING ; T_FOREACH ( T_VARIABLE($analyzed_query) [ T_LNUMBER ] [ ] T_AS T_VARIABLE($select) ) { T_IF ( T_VARIABLE($select) [ ] T_IS_EQUAL T_VARIABLE($visualizationSettings) [ ] ) { T_VARIABLE($modified_query) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($select) ) . . T_VARIABLE($select) [ ] . ; T_VARIABLE($is_label_alias) = T_STRING ; T_BREAK ; } } T_IF ( ! T_VARIABLE($is_label_alias) ) { T_FOREACH ( T_VARIABLE($analyzed_query) [ T_LNUMBER ] [ ] T_AS T_VARIABLE($select) ) { T_IF ( T_VARIABLE($select) [ ] T_IS_EQUAL T_VARIABLE($visualizationSettings) [ ] ) { T_VARIABLE($modified_query) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($select) ) . ; } } } } T_VARIABLE($is_spatial_alias) = T_STRING ; T_FOREACH ( T_VARIABLE($analyzed_query) [ T_LNUMBER ] [ ] T_AS T_VARIABLE($select) ) { T_IF ( T_VARIABLE($select) [ ] T_IS_EQUAL T_VARIABLE($visualizationSettings) [ ] ) { T_VARIABLE($sanitized) = T_STRING ( T_VARIABLE($select) ) ; T_VARIABLE($modified_query) T_CONCAT_EQUAL . T_VARIABLE($sanitized) . . T_VARIABLE($select) [ ] . ; T_VARIABLE($modified_query) T_CONCAT_EQUAL . T_VARIABLE($sanitized) . ; T_VARIABLE($is_spatial_alias) = T_STRING ; T_BREAK ; } } T_IF ( ! T_VARIABLE($is_spatial_alias) ) { T_FOREACH ( T_VARIABLE($analyzed_query) [ T_LNUMBER ] [ ] T_AS T_VARIABLE($select) ) { T_IF ( T_VARIABLE($select) [ ] T_IS_EQUAL T_VARIABLE($visualizationSettings) [ ] ) { T_VARIABLE($sanitized) = T_STRING ( T_VARIABLE($select) ) ; T_VARIABLE($modified_query) T_CONCAT_EQUAL . T_VARIABLE($sanitized) . . T_VARIABLE($select) [ ] . ; T_VARIABLE($modified_query) T_CONCAT_EQUAL . T_VARIABLE($sanitized) . ; } } } } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($visualizationSettings) [ ] ) T_BOOLEAN_AND T_VARIABLE($visualizationSettings) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($modified_query) T_CONCAT_EQUAL . T_VARIABLE($visualizationSettings) [ ] . ; } T_VARIABLE($modified_query) T_CONCAT_EQUAL . T_VARIABLE($visualizationSettings) [ ] . . T_VARIABLE($visualizationSettings) [ ] . ; T_VARIABLE($modified_query) T_CONCAT_EQUAL . T_VARIABLE($visualizationSettings) [ ] . ; } T_VARIABLE($from_pos) = T_STRING ( T_VARIABLE($sql_query) , ) ; T_VARIABLE($modified_query) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($sql_query) , T_VARIABLE($from_pos) ) ; T_RETURN T_VARIABLE($modified_query) ; } T_FUNCTION(sanitize) ( T_VARIABLE($select) ) { T_VARIABLE($table_col) = T_VARIABLE($select) [ ] . . T_VARIABLE($select) [ ] ; T_VARIABLE($db_table_col) = T_VARIABLE($select) [ ] . . T_VARIABLE($select) [ ] . . T_VARIABLE($select) [ ] ; T_IF ( T_VARIABLE($select) [ ] T_IS_EQUAL T_VARIABLE($select) [ ] ) { T_RETURN . T_VARIABLE($select) [ ] . ; } T_ELSEIF ( T_VARIABLE($select) [ ] T_IS_EQUAL T_VARIABLE($table_col) ) { T_RETURN . T_VARIABLE($select) [ ] . . T_VARIABLE($select) [ ] . ; } T_ELSEIF ( T_VARIABLE($select) [ ] T_IS_EQUAL T_VARIABLE($db_table_col) ) { T_RETURN . T_VARIABLE($select) [ ] . . T_VARIABLE($select) [ ] . . T_VARIABLE($select) [ ] . ; } T_RETURN T_VARIABLE($select) [ ] ; } T_FUNCTION(PMA_GIS_visualizationResults) ( T_VARIABLE($data) , & T_VARIABLE($visualizationSettings) , T_VARIABLE($format) ) { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_IF ( ! T_ISSET ( T_VARIABLE($data) [ T_LNUMBER ] ) ) { T_RETURN T_STRING ( ) ; } T_ELSE { T_VARIABLE($visualization) = T_NEW T_STRING ( T_VARIABLE($data) , T_VARIABLE($visualizationSettings) ) ; T_IF ( T_VARIABLE($visualizationSettings) T_IS_NOT_EQUAL T_STRING ) { T_FOREACH ( T_VARIABLE($visualization) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($setting) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_IF ( ! T_ISSET ( T_VARIABLE($visualizationSettings) [ T_VARIABLE($setting) ] ) ) { T_VARIABLE($visualizationSettings) [ T_VARIABLE($setting) ] = T_VARIABLE($val) ; } } } T_IF ( T_VARIABLE($format) T_IS_EQUAL ) { T_RETURN T_VARIABLE($visualization) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($format) T_IS_EQUAL ) { T_RETURN T_VARIABLE($visualization) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($format) T_IS_EQUAL ) { T_RETURN T_VARIABLE($visualization) T_OBJECT_OPERATOR T_STRING ( ) ; } } } T_FUNCTION(PMA_GIS_saveToFile) ( T_VARIABLE($data) , T_VARIABLE($visualizationSettings) , T_VARIABLE($format) , T_VARIABLE($fileName) ) { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_IF ( T_ISSET ( T_VARIABLE($data) [ T_LNUMBER ] ) ) { T_VARIABLE($visualization) = T_NEW T_STRING ( T_VARIABLE($data) , T_VARIABLE($visualizationSettings) ) ; T_IF ( T_VARIABLE($format) T_IS_EQUAL ) { T_VARIABLE($visualization) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($fileName) ) ; } T_ELSEIF ( T_VARIABLE($format) T_IS_EQUAL ) { T_VARIABLE($visualization) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($fileName) ) ; } T_ELSEIF ( T_VARIABLE($format) T_IS_EQUAL ) { T_VARIABLE($visualization) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($fileName) ) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING { T_PRIVATE T_VARIABLE($_scripts) ; T_PRIVATE T_VARIABLE($_menu) ; T_PRIVATE T_VARIABLE($_userprefsOfferImport) ; T_PRIVATE T_VARIABLE($_title) ; T_PRIVATE T_VARIABLE($_bodyId) ; T_PRIVATE T_VARIABLE($_menuEnabled) ; T_PRIVATE T_VARIABLE($_warningsEnabled) ; T_PRIVATE T_VARIABLE($_isPrintView) ; T_PRIVATE T_VARIABLE($_isAjax) ; T_PRIVATE T_VARIABLE($_isEnabled) ; T_PRIVATE T_VARIABLE($_headerIsSent) ; T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($db) = ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : ; T_VARIABLE($table) = ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_NEW T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_NEW T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) T_IS_EQUAL T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } } T_PRIVATE T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($params) [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( . T_STRING ( T_VARIABLE($params) ) ) ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($theme_id) = T_STRING ( T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($theme_id) = ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($theme_id) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($db) = ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : ; T_VARIABLE($table) = ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , , ) , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] [ ] , T_DOUBLE_ARROW T_STRING T_IS_EQUAL ? T_LNUMBER : T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] [ ] , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] [ ] , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW T_VARIABLE($table) , T_DOUBLE_ARROW T_VARIABLE($db) , T_DOUBLE_ARROW T_VARIABLE($_SESSION) [ ] , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] [ ] , T_DOUBLE_ARROW T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) , T_DOUBLE_ARROW T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] [ ] ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($params) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($params) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($params) [ T_VARIABLE($key) ] = T_VARIABLE($key) . . T_STRING ( T_VARIABLE($value) ) . ; } T_RETURN . T_STRING ( , T_VARIABLE($params) ) . ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($isAjax) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ( T_VARIABLE($isAjax) T_IS_EQUAL T_STRING ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($id) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($id) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($title) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($title) ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = ; T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] > T_LNUMBER ) { T_VARIABLE($nav) = T_NEW T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($nav) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_STRING ( T_STRING ) ) { T_STRING ( ) ; T_INCLUDE T_STRING ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_STRING ( ) ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_INCLUDE_ONCE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; } T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] > T_LNUMBER ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($pagetop_link) = ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($pagetop_link) , T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( ) ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; } } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = ; T_VARIABLE($message) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($message) = T_VARIABLE($GLOBALS) [ ] ; T_UNSET ( T_VARIABLE($GLOBALS) [ ] ) ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($message) = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( ! T_EMPTY ( T_VARIABLE($message) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($buffer_message) = T_VARIABLE($GLOBALS) [ ] ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) ) ; T_IF ( T_ISSET ( T_VARIABLE($buffer_message) ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($buffer_message) ; } } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($https) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($mapTilesUrls) = ; T_VARIABLE($GLOBALS) [ ] = T_STRING ( ) . ; T_IF ( ! T_STRING ( ) ) { T_STRING ( . . . ( T_VARIABLE($https) ? : T_VARIABLE($mapTilesUrls) ) . ) ; T_IF ( T_STRING T_IS_EQUAL T_BOOLEAN_AND T_STRING < ) { T_STRING ( . . . ( T_VARIABLE($https) ? : T_VARIABLE($mapTilesUrls) ) . ) ; } T_ELSE { T_STRING ( . . . . ( T_VARIABLE($https) ? : T_VARIABLE($mapTilesUrls) ) . ) ; } } T_STRING ( ) ; T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_STRING ( ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($lang) = T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ T_LNUMBER ] ; T_VARIABLE($dir) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($lang) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($dir) T_ENCAPSED_AND_WHITESPACE ; T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($retval) = . . . ; T_VARIABLE($basedir) = T_STRING ( ) ? T_STRING : ; T_VARIABLE($common_url) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] ) ) ; T_VARIABLE($theme_id) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($theme_path) = T_VARIABLE($GLOBALS) [ ] ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($basedir) . ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($basedir) . . T_VARIABLE($common_url) . . T_VARIABLE($theme_id) . T_VARIABLE($GLOBALS) [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($theme_path) . ; } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( ) { T_IF ( T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] > T_LNUMBER ) { T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($temp_title) = T_VARIABLE($GLOBALS) [ ] [ ] ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($temp_title) = T_VARIABLE($GLOBALS) [ ] [ ] ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_VARIABLE($temp_title) = T_VARIABLE($GLOBALS) [ ] [ ] ; } T_ELSE { T_VARIABLE($temp_title) = T_VARIABLE($GLOBALS) [ ] [ ] ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($temp_title) ) ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($retval) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($retval) = ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($_COOKIE) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) { T_VARIABLE($retval) = ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($table) ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] > T_LNUMBER ) { T_VARIABLE($tmp_result) = T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($tmp_result) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($params) = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($url) = . T_STRING ( T_VARIABLE($params) ) ; T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($url) . ; } T_ELSE { T_VARIABLE($error) = T_VARIABLE($tmp_result) ; T_VARIABLE($retval) = T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_RETURN T_VARIABLE($retval) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_VARIABLE($gnu_iconv_to_aix_iconv_codepage_map) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_FUNCTION(PMA_aix_iconv_wrapper) ( T_VARIABLE($in_charset) , T_VARIABLE($out_charset) , T_VARIABLE($str) ) { T_GLOBAL T_VARIABLE($gnu_iconv_to_aix_iconv_codepage_map) ; T_VARIABLE($translit_search) = T_STRING ( T_STRING ( T_VARIABLE($out_charset) ) , ) ; T_VARIABLE($using_translit) = ( ! ( T_VARIABLE($translit_search) T_IS_IDENTICAL T_STRING ) ) ; T_VARIABLE($out_charset_plain) = ( T_VARIABLE($using_translit) ? T_STRING ( T_VARIABLE($out_charset) , T_LNUMBER , T_VARIABLE($translit_search) ) : T_VARIABLE($out_charset) ) ; T_VARIABLE($in_charset_exisits) = T_STRING ( T_STRING ( T_VARIABLE($in_charset) ) , T_VARIABLE($gnu_iconv_to_aix_iconv_codepage_map) ) ; T_IF ( T_VARIABLE($in_charset_exisits) ) { T_VARIABLE($in_charset) = T_VARIABLE($gnu_iconv_to_aix_iconv_codepage_map) [ T_STRING ( T_VARIABLE($in_charset) ) ] ; } T_VARIABLE($out_charset_plain_exists) = T_STRING ( T_STRING ( T_VARIABLE($out_charset_plain) ) , T_VARIABLE($gnu_iconv_to_aix_iconv_codepage_map) ) ; T_IF ( T_VARIABLE($out_charset_plain_exists) ) { T_VARIABLE($out_charset_plain) = T_VARIABLE($gnu_iconv_to_aix_iconv_codepage_map) [ T_STRING ( T_VARIABLE($out_charset_plain) ) ] ; } T_VARIABLE($out_charset) = ( T_VARIABLE($using_translit) ? T_VARIABLE($out_charset_plain) . T_STRING ( T_VARIABLE($out_charset) , T_VARIABLE($translit_search) ) : T_VARIABLE($out_charset_plain) ) ; T_VARIABLE($out_charset) = T_VARIABLE($out_charset_plain) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($in_charset) , T_VARIABLE($out_charset) , T_VARIABLE($str) ) ; T_RETURN T_VARIABLE($result) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(PMA_checkTimeout) ( ) { T_GLOBAL T_VARIABLE($timestamp) , T_VARIABLE($maximum_time) , T_VARIABLE($timeout_passed) ; T_IF ( T_VARIABLE($maximum_time) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ; } T_ELSEIF ( T_VARIABLE($timeout_passed) ) { T_RETURN T_STRING ; } T_ELSEIF ( ( T_STRING ( ) - T_VARIABLE($timestamp) ) > ( T_VARIABLE($maximum_time) - T_LNUMBER ) ) { T_VARIABLE($timeout_passed) = T_STRING ; T_RETURN T_STRING ; } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(PMA_detectCompression) ( T_VARIABLE($filepath) ) { T_VARIABLE($file) = @ T_STRING ( T_VARIABLE($filepath) , ) ; T_IF ( ! T_VARIABLE($file) ) { T_RETURN T_STRING ; } T_VARIABLE($test) = T_STRING ( T_VARIABLE($file) , T_LNUMBER ) ; T_VARIABLE($len) = T_STRING ( T_VARIABLE($test) ) ; T_STRING ( T_VARIABLE($file) ) ; T_IF ( T_VARIABLE($len) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($test) [ T_LNUMBER ] T_IS_EQUAL T_STRING ( T_LNUMBER ) T_BOOLEAN_AND T_VARIABLE($test) [ T_LNUMBER ] T_IS_EQUAL T_STRING ( T_LNUMBER ) ) { T_RETURN ; } T_IF ( T_VARIABLE($len) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($test) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_RETURN ; } T_IF ( T_VARIABLE($len) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($test) T_IS_EQUAL ) { T_RETURN ; } T_RETURN ; } T_FUNCTION(PMA_importRunQuery) ( T_VARIABLE($sql) = , T_VARIABLE($full) = , T_VARIABLE($controluser) = T_STRING , & T_VARIABLE($sql_data) = T_ARRAY ( ) ) { T_GLOBAL T_VARIABLE($import_run_buffer) , T_VARIABLE($go_sql) , T_VARIABLE($complete_query) , T_VARIABLE($display_query) , T_VARIABLE($sql_query) , T_VARIABLE($my_die) , T_VARIABLE($error) , T_VARIABLE($reload) , T_VARIABLE($last_query_with_results) , T_VARIABLE($skip_queries) , T_VARIABLE($executed_queries) , T_VARIABLE($max_sql_len) , T_VARIABLE($read_multiply) , T_VARIABLE($cfg) , T_VARIABLE($sql_query_disabled) , T_VARIABLE($db) , T_VARIABLE($run_query) , T_VARIABLE($is_superuser) ; T_VARIABLE($read_multiply) = T_LNUMBER ; T_IF ( T_ISSET ( T_VARIABLE($import_run_buffer) ) ) { T_IF ( T_VARIABLE($skip_queries) > T_LNUMBER ) { T_VARIABLE($skip_queries) T_DEC ; } T_ELSE { T_IF ( ! T_EMPTY ( T_VARIABLE($import_run_buffer) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($import_run_buffer) [ ] ) T_IS_NOT_EQUAL ) { T_VARIABLE($is_use_query) = ( T_STRING ( T_VARIABLE($import_run_buffer) [ ] , ) T_IS_NOT_IDENTICAL T_STRING ) ? T_STRING : T_STRING ; T_VARIABLE($max_sql_len) = T_STRING ( T_VARIABLE($max_sql_len) , T_STRING ( T_VARIABLE($import_run_buffer) [ ] ) ) ; T_IF ( ! T_VARIABLE($sql_query_disabled) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($import_run_buffer) [ ] ; } T_IF ( ! T_VARIABLE($cfg) [ ] T_BOOLEAN_AND ! T_VARIABLE($is_superuser) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($import_run_buffer) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($error) = T_STRING ; } T_ELSE { T_VARIABLE($executed_queries) T_INC ; T_IF ( T_VARIABLE($run_query) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($sql) ) T_BOOLEAN_AND ! T_VARIABLE($error) T_BOOLEAN_AND ( ( ! T_EMPTY ( T_VARIABLE($import_run_buffer) [ ] ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($import_run_buffer) [ ] ) ) T_BOOLEAN_OR ( T_VARIABLE($executed_queries) T_IS_EQUAL T_LNUMBER ) ) ) { T_VARIABLE($go_sql) = T_STRING ; T_IF ( ! T_VARIABLE($sql_query_disabled) ) { T_VARIABLE($complete_query) = T_VARIABLE($sql_query) ; T_VARIABLE($display_query) = T_VARIABLE($sql_query) ; } T_ELSE { T_VARIABLE($complete_query) = ; T_VARIABLE($display_query) = ; } T_VARIABLE($sql_query) = T_VARIABLE($import_run_buffer) [ ] ; T_VARIABLE($sql_data) [ ] [ ] = T_VARIABLE($import_run_buffer) [ ] ; T_VARIABLE($sql_data) [ ] T_INC ; T_LIST ( T_VARIABLE($db) , T_VARIABLE($reload) ) = T_STRING ( T_VARIABLE($import_run_buffer) [ ] , T_VARIABLE($db) , T_VARIABLE($reload) ) ; } T_ELSEIF ( T_VARIABLE($run_query) ) { T_IF ( T_VARIABLE($controluser) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($import_run_buffer) [ ] ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( T_VARIABLE($import_run_buffer) [ ] ) ; } T_VARIABLE($msg) = ; T_IF ( T_VARIABLE($result) T_IS_IDENTICAL T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($my_die) ) ) { T_VARIABLE($my_die) = T_ARRAY ( ) ; } T_VARIABLE($my_die) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($import_run_buffer) [ ] , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($msg) T_CONCAT_EQUAL T_STRING ( ) ; T_IF ( ! T_VARIABLE($cfg) [ ] ) { T_VARIABLE($error) = T_STRING ; T_RETURN ; } } T_ELSE { T_VARIABLE($a_num_rows) = T_INT_CAST @ T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($a_aff_rows) = T_INT_CAST @ T_STRING ( ) ; T_IF ( T_VARIABLE($a_num_rows) > T_LNUMBER ) { T_VARIABLE($msg) T_CONCAT_EQUAL T_STRING ( ) . . T_VARIABLE($a_num_rows) ; T_VARIABLE($last_query_with_results) = T_VARIABLE($import_run_buffer) [ ] ; } T_ELSEIF ( T_VARIABLE($a_aff_rows) > T_LNUMBER ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($a_aff_rows) ) ; T_VARIABLE($msg) T_CONCAT_EQUAL T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_VARIABLE($msg) T_CONCAT_EQUAL T_STRING ( ) ; } T_IF ( ( T_VARIABLE($a_num_rows) > T_LNUMBER ) T_BOOLEAN_OR T_VARIABLE($is_use_query) ) { T_VARIABLE($sql_data) [ ] [ ] = T_VARIABLE($import_run_buffer) [ ] ; T_VARIABLE($sql_data) [ ] T_INC ; } } T_IF ( ! T_VARIABLE($sql_query_disabled) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($msg) . ; } T_IF ( T_VARIABLE($result) T_IS_NOT_EQUAL T_STRING ) { T_LIST ( T_VARIABLE($db) , T_VARIABLE($reload) ) = T_STRING ( T_VARIABLE($import_run_buffer) [ ] , T_VARIABLE($db) , T_VARIABLE($reload) ) ; } T_IF ( T_VARIABLE($result) T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_STRING ( , T_VARIABLE($import_run_buffer) [ ] ) ) { T_VARIABLE($reload) = T_STRING ; } } } } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($import_run_buffer) [ ] ) ) { T_IF ( T_VARIABLE($go_sql) ) { T_VARIABLE($complete_query) T_CONCAT_EQUAL T_VARIABLE($import_run_buffer) [ ] ; T_VARIABLE($display_query) T_CONCAT_EQUAL T_VARIABLE($import_run_buffer) [ ] ; } T_ELSE { T_IF ( ! T_VARIABLE($sql_query_disabled) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($import_run_buffer) [ ] ; } } } T_IF ( ! T_VARIABLE($go_sql) T_BOOLEAN_AND T_VARIABLE($run_query) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($sql_query) ) ) { T_IF ( T_STRING ( T_VARIABLE($sql_query) ) > T_LNUMBER T_BOOLEAN_OR T_VARIABLE($executed_queries) > T_LNUMBER T_BOOLEAN_OR T_VARIABLE($max_sql_len) > T_LNUMBER ) { T_VARIABLE($sql_query) = ; T_VARIABLE($sql_query_disabled) = T_STRING ; } } } } } T_IF ( ! T_EMPTY ( T_VARIABLE($sql) ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($full) ) ) { T_VARIABLE($import_run_buffer) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($sql) , T_DOUBLE_ARROW T_VARIABLE($full) ) ; } T_ELSE { T_UNSET ( T_VARIABLE($GLOBALS) [ ] ) ; } } T_FUNCTION(PMA_lookForUse) ( T_VARIABLE($buffer) , T_VARIABLE($db) , T_VARIABLE($reload) ) { T_IF ( T_STRING ( , T_VARIABLE($buffer) , T_VARIABLE($match) ) ) { T_VARIABLE($db) = T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ; T_VARIABLE($db) = T_STRING ( T_VARIABLE($db) , ) ; T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($reload) = T_STRING ; } T_RETURN ( T_ARRAY ( T_VARIABLE($db) , T_VARIABLE($reload) ) ) ; } T_FUNCTION(PMA_importGetNextChunk) ( T_VARIABLE($size) = T_LNUMBER ) { T_GLOBAL T_VARIABLE($compression) , T_VARIABLE($import_handle) , T_VARIABLE($charset_conversion) , T_VARIABLE($charset_of_file) , T_VARIABLE($read_multiply) ; T_IF ( T_VARIABLE($read_multiply) T_IS_SMALLER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($size) T_MUL_EQUAL T_VARIABLE($read_multiply) ; } T_ELSE { T_VARIABLE($size) T_MUL_EQUAL T_LNUMBER ; } T_VARIABLE($read_multiply) T_INC ; T_IF ( T_VARIABLE($size) > T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($size) = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_STRING ( ) ) { T_RETURN T_STRING ; } T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_RETURN T_STRING ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) { T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) < T_VARIABLE($size) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_RETURN T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_VARIABLE($r) = T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_LNUMBER , T_VARIABLE($size) ) ; T_VARIABLE($GLOBALS) [ ] T_PLUS_EQUAL T_VARIABLE($size) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($size) ) ; T_RETURN T_VARIABLE($r) ; } } T_SWITCH ( T_VARIABLE($compression) ) { T_CASE : T_VARIABLE($result) = T_STRING ( T_VARIABLE($import_handle) , T_VARIABLE($size) ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ( T_VARIABLE($import_handle) ) ; T_BREAK ; T_CASE : T_VARIABLE($result) = T_STRING ( T_VARIABLE($import_handle) , T_VARIABLE($size) ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ( T_VARIABLE($import_handle) ) ; T_BREAK ; T_CASE : T_VARIABLE($result) = T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_LNUMBER , T_VARIABLE($size) ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($size) ) ; T_VARIABLE($GLOBALS) [ ] = T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ; T_BREAK ; T_CASE : T_VARIABLE($result) = T_STRING ( T_VARIABLE($import_handle) , T_VARIABLE($size) ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ( T_VARIABLE($import_handle) ) ; T_BREAK ; } T_VARIABLE($GLOBALS) [ ] T_PLUS_EQUAL T_VARIABLE($size) ; T_IF ( T_VARIABLE($charset_conversion) ) { T_RETURN T_STRING ( T_VARIABLE($charset_of_file) , , T_VARIABLE($result) ) ; } T_ELSE { T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_VARIABLE($size) ) { T_IF ( T_STRING ( T_VARIABLE($result) , , T_LNUMBER ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($result) , T_LNUMBER ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($result) , , T_LNUMBER ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR T_STRING ( T_VARIABLE($result) , , T_LNUMBER ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($result) , T_LNUMBER ) ; } } T_RETURN T_VARIABLE($result) ; } } T_FUNCTION(PMA_getColumnAlphaName) ( T_VARIABLE($num) ) { T_VARIABLE($A) = T_LNUMBER ; T_VARIABLE($col_name) = ; T_IF ( T_VARIABLE($num) > T_LNUMBER ) { T_VARIABLE($div) = T_INT_CAST ( T_VARIABLE($num) / T_LNUMBER ) ; T_VARIABLE($remain) = T_INT_CAST ( T_VARIABLE($num) \% T_LNUMBER ) ; T_IF ( T_VARIABLE($remain) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($div) T_DEC ; } T_VARIABLE($col_name) = T_STRING ( T_VARIABLE($div) ) ; T_VARIABLE($num) = T_VARIABLE($remain) ; } T_IF ( T_VARIABLE($num) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($col_name) T_CONCAT_EQUAL T_STRING ( ( T_VARIABLE($A) + T_LNUMBER ) - T_LNUMBER ) ; } T_ELSE { T_VARIABLE($col_name) T_CONCAT_EQUAL T_STRING ( ( T_VARIABLE($A) + T_VARIABLE($num) ) - T_LNUMBER ) ; } T_RETURN T_VARIABLE($col_name) ; } T_FUNCTION(PMA_getColumnNumberFromName) ( T_VARIABLE($name) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($name) ) ) { T_VARIABLE($name) = T_STRING ( T_VARIABLE($name) ) ; T_VARIABLE($num_chars) = T_STRING ( T_VARIABLE($name) ) ; T_VARIABLE($column_number) = T_LNUMBER ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($num_chars) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($char_pos) = ( T_VARIABLE($num_chars) - T_LNUMBER ) - T_VARIABLE($i) ; T_VARIABLE($number) = ( T_STRING ( T_VARIABLE($name) [ T_VARIABLE($char_pos) ] ) - T_LNUMBER ) ; T_VARIABLE($column_number) T_PLUS_EQUAL T_VARIABLE($number) * T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , T_VARIABLE($i) ) ; } T_RETURN T_VARIABLE($column_number) ; } T_ELSE { T_RETURN T_LNUMBER ; } } T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(PMA_getM) ( T_VARIABLE($last_cumulative_size) ) { T_RETURN T_INT_CAST T_STRING ( T_VARIABLE($last_cumulative_size) , T_LNUMBER , T_STRING ( T_VARIABLE($last_cumulative_size) , ) ) ; } T_FUNCTION(PMA_getD) ( T_VARIABLE($last_cumulative_size) ) { T_RETURN T_INT_CAST T_STRING ( T_VARIABLE($last_cumulative_size) , ( T_STRING ( T_VARIABLE($last_cumulative_size) , ) + T_LNUMBER ) , ( T_STRING ( T_VARIABLE($last_cumulative_size) ) - T_STRING ( T_VARIABLE($last_cumulative_size) , ) ) ) ; } T_FUNCTION(PMA_getDecimalSize) ( & T_VARIABLE($cell) ) { T_VARIABLE($curr_size) = T_STRING ( T_STRING_CAST T_VARIABLE($cell) ) ; T_VARIABLE($decPos) = T_STRING ( T_VARIABLE($cell) , ) ; T_VARIABLE($decPrecision) = ( T_VARIABLE($curr_size) - T_LNUMBER ) - T_VARIABLE($decPos) ; T_VARIABLE($m) = T_VARIABLE($curr_size) - T_LNUMBER ; T_VARIABLE($d) = T_VARIABLE($decPrecision) ; T_RETURN T_ARRAY ( T_VARIABLE($m) , T_VARIABLE($d) , ( T_VARIABLE($m) . . T_VARIABLE($d) ) ) ; } T_FUNCTION(PMA_detectSize) ( T_VARIABLE($last_cumulative_size) , T_VARIABLE($last_cumulative_type) , T_VARIABLE($curr_type) , & T_VARIABLE($cell) ) { T_VARIABLE($curr_size) = T_STRING ( T_STRING_CAST T_VARIABLE($cell) ) ; T_IF ( ! T_STRING ( , T_VARIABLE($cell) ) ) { T_RETURN T_VARIABLE($last_cumulative_size) ; } T_ELSEIF ( T_VARIABLE($curr_type) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($curr_size) T_IS_GREATER_OR_EQUAL T_VARIABLE($last_cumulative_size) ) { T_RETURN T_VARIABLE($curr_size) ; } T_ELSE { T_RETURN T_VARIABLE($last_cumulative_size) ; } } T_ELSEIF ( T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING ) { T_VARIABLE($oldM) = T_STRING ( T_VARIABLE($last_cumulative_size) ) ; T_IF ( T_VARIABLE($curr_size) T_IS_GREATER_OR_EQUAL T_VARIABLE($oldM) ) { T_RETURN T_VARIABLE($curr_size) ; } T_ELSE { T_RETURN T_VARIABLE($oldM) ; } } T_ELSEIF ( T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($curr_size) T_IS_GREATER_OR_EQUAL T_VARIABLE($last_cumulative_size) ) { T_RETURN T_VARIABLE($curr_size) ; } T_ELSE { T_RETURN T_VARIABLE($last_cumulative_size) ; } } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($last_cumulative_type) ) T_BOOLEAN_OR T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING ) { T_RETURN T_VARIABLE($curr_size) ; } T_ELSE { T_RETURN - T_LNUMBER ; } } T_ELSEIF ( T_VARIABLE($curr_type) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING ) { T_VARIABLE($size) = T_STRING ( T_VARIABLE($cell) ) ; T_IF ( T_VARIABLE($size) [ T_STRING ] T_IS_GREATER_OR_EQUAL T_VARIABLE($last_cumulative_size) ) { T_RETURN T_VARIABLE($size) [ T_STRING ] ; } T_ELSE { T_RETURN T_VARIABLE($last_cumulative_size) ; } } T_ELSEIF ( T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING ) { T_VARIABLE($size) = T_STRING ( T_VARIABLE($cell) ) ; T_VARIABLE($oldM) = T_STRING ( T_VARIABLE($last_cumulative_size) ) ; T_VARIABLE($oldD) = T_STRING ( T_VARIABLE($last_cumulative_size) ) ; T_IF ( T_VARIABLE($size) [ T_STRING ] > T_VARIABLE($oldM) T_BOOLEAN_OR T_VARIABLE($size) [ T_STRING ] > T_VARIABLE($oldD) ) { T_RETURN T_STRING_CAST ( ( ( T_VARIABLE($size) [ T_STRING ] > T_VARIABLE($oldM) ) ? T_VARIABLE($size) [ T_STRING ] : T_VARIABLE($oldM) ) . . ( ( T_VARIABLE($size) [ T_STRING ] > T_VARIABLE($oldD) ) ? T_VARIABLE($size) [ T_STRING ] : T_VARIABLE($oldD) ) ) ; } T_ELSE { T_RETURN T_VARIABLE($last_cumulative_size) ; } } T_ELSEIF ( T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING ) { T_VARIABLE($size) = T_STRING ( T_VARIABLE($cell) ) ; T_IF ( T_VARIABLE($size) [ T_STRING ] T_IS_GREATER_OR_EQUAL T_VARIABLE($last_cumulative_size) ) { T_RETURN T_VARIABLE($size) [ T_STRING ] ; } T_ELSE { T_RETURN ( T_VARIABLE($last_cumulative_size) . . T_VARIABLE($size) [ T_STRING ] ) ; } } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($last_cumulative_type) ) T_BOOLEAN_OR T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING ) { T_VARIABLE($size) = T_STRING ( T_VARIABLE($cell) ) ; T_RETURN T_VARIABLE($size) [ T_STRING ] ; } T_ELSE { T_RETURN - T_LNUMBER ; } } T_ELSEIF ( T_VARIABLE($curr_type) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($curr_type) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($curr_size) T_IS_GREATER_OR_EQUAL T_VARIABLE($last_cumulative_size) ) { T_RETURN T_VARIABLE($curr_size) ; } T_ELSE { T_RETURN T_VARIABLE($last_cumulative_size) ; } } T_ELSEIF ( T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING ) { T_VARIABLE($oldM) = T_STRING ( T_VARIABLE($last_cumulative_size) ) ; T_VARIABLE($oldD) = T_STRING ( T_VARIABLE($last_cumulative_size) ) ; T_VARIABLE($oldInt) = T_VARIABLE($oldM) - T_VARIABLE($oldD) ; T_VARIABLE($newInt) = T_STRING ( T_STRING_CAST T_VARIABLE($cell) ) ; T_IF ( T_VARIABLE($oldInt) T_IS_GREATER_OR_EQUAL T_VARIABLE($newInt) ) { T_RETURN T_VARIABLE($last_cumulative_size) ; } T_ELSE { T_RETURN ( ( T_VARIABLE($newInt) + T_VARIABLE($oldD) ) . . T_VARIABLE($oldD) ) ; } } T_ELSEIF ( T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($curr_size) T_IS_GREATER_OR_EQUAL T_VARIABLE($last_cumulative_size) ) { T_RETURN T_VARIABLE($curr_size) ; } T_ELSE { T_RETURN T_VARIABLE($last_cumulative_size) ; } } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($last_cumulative_type) ) T_BOOLEAN_OR T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING ) { T_RETURN T_VARIABLE($curr_size) ; } T_ELSE { T_RETURN - T_LNUMBER ; } } T_ELSE { T_RETURN - T_LNUMBER ; } } T_FUNCTION(PMA_detectType) ( T_VARIABLE($last_cumulative_type) , & T_VARIABLE($cell) ) { T_IF ( ! T_STRING ( , T_VARIABLE($cell) ) ) { T_IF ( T_VARIABLE($last_cumulative_type) T_IS_IDENTICAL T_STRING T_BOOLEAN_OR T_VARIABLE($last_cumulative_type) T_IS_EQUAL T_STRING ) { T_RETURN T_STRING ; } T_ELSE { T_RETURN T_VARIABLE($last_cumulative_type) ; } } T_ELSEIF ( T_STRING ( T_VARIABLE($cell) ) ) { T_IF ( T_VARIABLE($cell) T_IS_EQUAL T_STRING_CAST T_DOUBLE_CAST T_VARIABLE($cell) T_BOOLEAN_AND T_STRING ( T_VARIABLE($cell) , ) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($cell) , ) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($cell) ) > T_LNUMBER ) { T_RETURN T_STRING ; } T_ELSE { T_RETURN T_STRING ; } } } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(PMA_analyzeTable) ( & T_VARIABLE($table) ) { T_VARIABLE($numRows) = T_STRING ( T_VARIABLE($table) [ T_STRING ] ) ; T_VARIABLE($numCols) = T_STRING ( T_VARIABLE($table) [ T_STRING ] ) ; T_VARIABLE($types) = T_ARRAY ( ) ; T_VARIABLE($sizes) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($numCols) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($sizes) [ T_VARIABLE($i) ] = T_LNUMBER ; } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($numCols) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($types) [ T_VARIABLE($i) ] = T_STRING ; } T_VARIABLE($curr_type) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($table) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($table) [ T_STRING ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($table) [ T_STRING ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($table) [ T_STRING ] ) ) { T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($numCols) ; T_INC T_VARIABLE($i) ) { T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($numRows) ; T_INC T_VARIABLE($j) ) { T_VARIABLE($curr_type) = T_STRING ( T_VARIABLE($types) [ T_VARIABLE($i) ] , T_VARIABLE($table) [ T_STRING ] [ T_VARIABLE($j) ] [ T_VARIABLE($i) ] ) ; T_VARIABLE($sizes) [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($sizes) [ T_VARIABLE($i) ] , T_VARIABLE($types) [ T_VARIABLE($i) ] , T_VARIABLE($curr_type) , T_VARIABLE($table) [ T_STRING ] [ T_VARIABLE($j) ] [ T_VARIABLE($i) ] ) ; T_IF ( T_VARIABLE($curr_type) T_IS_NOT_EQUAL T_STRING ) { T_IF ( T_VARIABLE($curr_type) T_IS_EQUAL T_STRING ) { T_VARIABLE($types) [ T_VARIABLE($i) ] = T_STRING ; } T_ELSE T_IF ( T_VARIABLE($curr_type) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($types) [ T_VARIABLE($i) ] T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($types) [ T_VARIABLE($i) ] = T_STRING ; } } T_ELSE T_IF ( T_VARIABLE($curr_type) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($types) [ T_VARIABLE($i) ] T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($types) [ T_VARIABLE($i) ] T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($types) [ T_VARIABLE($i) ] = T_STRING ; } } T_ELSE T_IF ( T_VARIABLE($curr_type) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($types) [ T_VARIABLE($i) ] T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($types) [ T_VARIABLE($i) ] T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($types) [ T_VARIABLE($i) ] T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($types) [ T_VARIABLE($i) ] = T_STRING ; } } } } } T_VARIABLE($len) = T_STRING ( T_VARIABLE($types) ) ; T_FOR ( T_VARIABLE($n) = T_LNUMBER ; T_VARIABLE($n) < T_VARIABLE($len) ; T_INC T_VARIABLE($n) ) { T_IF ( ! T_STRING ( T_STRING , T_VARIABLE($types) [ T_VARIABLE($n) ] ) ) { T_VARIABLE($types) [ T_VARIABLE($n) ] = T_STRING ; T_VARIABLE($sizes) [ T_VARIABLE($n) ] = ; } } T_RETURN T_ARRAY ( T_VARIABLE($types) , T_VARIABLE($sizes) ) ; } T_ELSE { T_RETURN T_STRING ; } } T_VARIABLE($import_notice) = T_STRING ; T_FUNCTION(PMA_buildSQL) ( T_VARIABLE($db_name) , & T_VARIABLE($tables) , & T_VARIABLE($analyses) = T_STRING , & T_VARIABLE($additional_sql) = T_STRING , T_VARIABLE($options) = T_STRING ) { T_IF ( T_ISSET ( T_VARIABLE($options) [ ] ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($options) [ ] ) ) { T_VARIABLE($collation) = T_VARIABLE($options) [ ] ; } T_ELSE { T_VARIABLE($collation) = ; } T_IF ( T_ISSET ( T_VARIABLE($options) [ ] ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($options) [ ] ) ) { T_VARIABLE($charset) = T_VARIABLE($options) [ ] ; } T_ELSE { T_VARIABLE($charset) = ; } T_IF ( T_ISSET ( T_VARIABLE($options) [ ] ) ) { T_VARIABLE($create_db) = T_VARIABLE($options) [ ] ; } T_ELSE { T_VARIABLE($create_db) = T_STRING ; } T_VARIABLE($sql) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($create_db) ) { T_IF ( T_STRING ) { T_VARIABLE($sql) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db_name) ) . . T_VARIABLE($collation) ; } T_ELSE { T_VARIABLE($sql) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db_name) ) . . T_VARIABLE($charset) . . T_VARIABLE($collation) ; } } T_VARIABLE($sql_len) = T_STRING ( T_VARIABLE($sql) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($sql_len) ; T_INC T_VARIABLE($i) ) { T_STRING ( T_VARIABLE($sql) [ T_VARIABLE($i) ] , T_VARIABLE($sql) [ T_VARIABLE($i) ] ) ; } T_UNSET ( T_VARIABLE($sql) ) ; T_IF ( T_VARIABLE($additional_sql) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($additional_sql_len) = T_STRING ( T_VARIABLE($additional_sql) ) ; T_VARIABLE($pattern) = ; T_VARIABLE($replacement) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($additional_sql_len) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($additional_sql) [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($pattern) , T_VARIABLE($replacement) , T_VARIABLE($additional_sql) [ T_VARIABLE($i) ] ) ; T_STRING ( T_VARIABLE($additional_sql) [ T_VARIABLE($i) ] , T_VARIABLE($additional_sql) [ T_VARIABLE($i) ] ) ; } } T_IF ( T_VARIABLE($analyses) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($type_array) = T_ARRAY ( T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW ) ; T_IF ( T_STRING ( T_VARIABLE($tables) ) T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($analyses) ) ) { T_EXIT ( ) ; } T_VARIABLE($tempSQLStr) = ; T_VARIABLE($num_tables) = T_STRING ( T_VARIABLE($tables) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($num_tables) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($num_cols) = T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) ; T_VARIABLE($tempSQLStr) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db_name) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) . ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($num_cols) ; T_INC T_VARIABLE($j) ) { T_VARIABLE($size) = T_VARIABLE($analyses) [ T_VARIABLE($i) ] [ T_STRING ] [ T_VARIABLE($j) ] ; T_IF ( T_INT_CAST T_VARIABLE($size) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($size) = T_LNUMBER ; } T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] [ T_VARIABLE($j) ] ) . . T_VARIABLE($type_array) [ T_VARIABLE($analyses) [ T_VARIABLE($i) ] [ T_STRING ] [ T_VARIABLE($j) ] ] ; T_IF ( T_VARIABLE($analyses) [ T_VARIABLE($i) ] [ T_STRING ] [ T_VARIABLE($j) ] T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL . T_VARIABLE($size) . ; } T_IF ( T_VARIABLE($j) T_IS_NOT_EQUAL ( T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) - T_LNUMBER ) ) { T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL ; } } T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL . ( T_STRING ? : . T_VARIABLE($charset) ) . . T_VARIABLE($collation) . ; T_STRING ( T_VARIABLE($tempSQLStr) , T_VARIABLE($tempSQLStr) ) ; } } T_VARIABLE($tempSQLStr) = ; T_VARIABLE($col_count) = T_LNUMBER ; T_VARIABLE($num_tables) = T_STRING ( T_VARIABLE($tables) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($num_tables) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($num_cols) = T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) ; T_VARIABLE($num_rows) = T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) ; T_VARIABLE($tempSQLStr) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db_name) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) . ; T_FOR ( T_VARIABLE($m) = T_LNUMBER ; T_VARIABLE($m) < T_VARIABLE($num_cols) ; T_INC T_VARIABLE($m) ) { T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] [ T_VARIABLE($m) ] ) ; T_IF ( T_VARIABLE($m) T_IS_NOT_EQUAL ( T_VARIABLE($num_cols) - T_LNUMBER ) ) { T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL ; } } T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($num_rows) ; T_INC T_VARIABLE($j) ) { T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL ; T_FOR ( T_VARIABLE($k) = T_LNUMBER ; T_VARIABLE($k) < T_VARIABLE($num_cols) ; T_INC T_VARIABLE($k) ) { T_IF ( T_VARIABLE($analyses) T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyses) [ T_VARIABLE($i) ] [ T_STRING ] [ T_VARIABLE($col_count) ] ) T_BOOLEAN_AND T_VARIABLE($analyses) [ T_VARIABLE($i) ] [ T_STRING ] [ T_VARIABLE($col_count) ] T_IS_EQUAL T_STRING ) { T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL T_STRING_CAST T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] [ T_VARIABLE($j) ] [ T_VARIABLE($k) ] ; } T_ELSE { T_IF ( T_VARIABLE($analyses) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($is_varchar) = ( T_VARIABLE($analyses) [ T_VARIABLE($i) ] [ T_STRING ] [ T_VARIABLE($col_count) ] T_IS_IDENTICAL T_STRING ) ; } T_ELSE { T_VARIABLE($is_varchar) = ! T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] [ T_VARIABLE($j) ] [ T_VARIABLE($k) ] ) ; } T_IF ( ! T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] [ T_VARIABLE($j) ] [ T_VARIABLE($k) ] , ) ) { T_VARIABLE($is_varchar) = T_STRING ; } T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL ( ( T_VARIABLE($is_varchar) ) ? : ) ; T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING_CAST T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] [ T_VARIABLE($j) ] [ T_VARIABLE($k) ] ) ; T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL ( ( T_VARIABLE($is_varchar) ) ? : ) ; } T_IF ( T_VARIABLE($k) T_IS_NOT_EQUAL ( T_VARIABLE($num_cols) - T_LNUMBER ) ) { T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($col_count) T_IS_EQUAL ( T_VARIABLE($num_cols) - T_LNUMBER ) ) { T_VARIABLE($col_count) = T_LNUMBER ; } T_ELSE { T_VARIABLE($col_count) T_INC ; } T_UNSET ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] [ T_VARIABLE($j) ] [ T_VARIABLE($k) ] ) ; } T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($j) T_IS_NOT_EQUAL ( T_VARIABLE($num_rows) - T_LNUMBER ) ) { T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL ; } T_VARIABLE($col_count) = T_LNUMBER ; T_UNSET ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] [ T_VARIABLE($j) ] ) ; } T_VARIABLE($tempSQLStr) T_CONCAT_EQUAL ; T_STRING ( T_VARIABLE($tempSQLStr) , T_VARIABLE($tempSQLStr) ) ; } T_UNSET ( T_VARIABLE($tempSQLStr) ) ; T_VARIABLE($view_pattern) = ; T_VARIABLE($table_pattern) = ; T_VARIABLE($regs) = T_ARRAY ( ) ; T_VARIABLE($inTables) = T_STRING ; T_VARIABLE($additional_sql_len) = T_STRING ( T_VARIABLE($additional_sql) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($additional_sql_len) ; T_INC T_VARIABLE($i) ) { T_STRING ( T_VARIABLE($view_pattern) , T_VARIABLE($additional_sql) [ T_VARIABLE($i) ] , T_VARIABLE($regs) ) ; T_IF ( T_STRING ( T_VARIABLE($regs) ) T_IS_EQUAL T_LNUMBER ) { T_STRING ( T_VARIABLE($table_pattern) , T_VARIABLE($additional_sql) [ T_VARIABLE($i) ] , T_VARIABLE($regs) ) ; } T_IF ( T_STRING ( T_VARIABLE($regs) ) ) { T_FOR ( T_VARIABLE($n) = T_LNUMBER ; T_VARIABLE($n) < T_VARIABLE($num_tables) ; T_INC T_VARIABLE($n) ) { T_IF ( ! T_STRING ( T_VARIABLE($regs) [ T_LNUMBER ] , T_VARIABLE($tables) [ T_VARIABLE($n) ] [ T_STRING ] ) ) { T_VARIABLE($inTables) = T_STRING ; T_BREAK ; } } T_IF ( ! T_VARIABLE($inTables) ) { T_VARIABLE($tables) [ ] = T_ARRAY ( T_STRING T_DOUBLE_ARROW T_VARIABLE($regs) [ T_LNUMBER ] ) ; } } T_VARIABLE($regs) = T_ARRAY ( ) ; T_VARIABLE($inTables) = T_STRING ; } T_VARIABLE($params) = T_ARRAY ( T_DOUBLE_ARROW T_STRING_CAST T_VARIABLE($db_name) ) ; T_VARIABLE($db_url) = . T_STRING ( T_VARIABLE($params) ) ; T_VARIABLE($db_ops_url) = . T_STRING ( T_VARIABLE($params) ) ; T_VARIABLE($message) = ; T_VARIABLE($message) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($message) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($message) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($message) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($message) T_CONCAT_EQUAL T_STRING ( . T_STRING ( ) . , T_VARIABLE($db_url) , T_STRING ( T_STRING ( ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db_name) ) ) ) , T_STRING ( T_VARIABLE($db_name) ) , T_VARIABLE($db_ops_url) , T_STRING ( T_STRING ( ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db_name) ) ) ) ) ; T_VARIABLE($message) T_CONCAT_EQUAL ; T_UNSET ( T_VARIABLE($params) ) ; T_VARIABLE($num_tables) = T_STRING ( T_VARIABLE($tables) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($num_tables) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($params) = T_ARRAY ( T_DOUBLE_ARROW T_STRING_CAST T_VARIABLE($db_name) , T_DOUBLE_ARROW T_STRING_CAST T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) ; T_VARIABLE($tbl_url) = . T_STRING ( T_VARIABLE($params) ) ; T_VARIABLE($tbl_struct_url) = . T_STRING ( T_VARIABLE($params) ) ; T_VARIABLE($tbl_ops_url) = . T_STRING ( T_VARIABLE($params) ) ; T_UNSET ( T_VARIABLE($params) ) ; T_IF ( ! T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db_name) , T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) ) { T_VARIABLE($message) T_CONCAT_EQUAL T_STRING ( . T_STRING ( ) . . T_STRING ( ) . , T_VARIABLE($tbl_url) , T_STRING ( T_STRING ( ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) ) ) , T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) , T_VARIABLE($tbl_struct_url) , T_STRING ( T_STRING ( ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) ) ) , T_VARIABLE($tbl_ops_url) , T_STRING ( T_STRING ( ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) ) ) ) ; } T_ELSE { T_VARIABLE($message) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($tbl_url) , T_STRING ( T_STRING ( ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) ) ) , T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) ) ; } } T_VARIABLE($message) T_CONCAT_EQUAL ; T_GLOBAL T_VARIABLE($import_notice) ; T_VARIABLE($import_notice) = T_VARIABLE($message) ; T_UNSET ( T_VARIABLE($tables) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PRIVATE T_STATIC T_VARIABLE($_registry) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_schema) = ; T_PRIVATE T_VARIABLE($_table) = ; T_PRIVATE T_VARIABLE($_name) = ; T_PRIVATE T_VARIABLE($_columns) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_type) = ; T_PRIVATE T_VARIABLE($_choice) = ; T_PRIVATE T_VARIABLE($_remarks) = ; T_PRIVATE T_VARIABLE($_comment) = ; T_PRIVATE T_VARIABLE($_non_unique) = T_LNUMBER ; T_PRIVATE T_VARIABLE($_packed) = T_STRING ; T_PUBLIC T_STRING ( T_VARIABLE($params) = T_ARRAY ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($params) ) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($schema) , T_VARIABLE($table) , T_VARIABLE($index_name) = ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($schema) ) ; T_IF ( ! T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($_registry) [ T_VARIABLE($schema) ] [ T_VARIABLE($table) ] [ T_VARIABLE($index_name) ] ) ) { T_VARIABLE($index) = T_NEW T_STRING ; T_IF ( T_STRING ( T_VARIABLE($index_name) ) ) { T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($index_name) ) ; T_STRING T_DOUBLE_COLON T_VARIABLE($_registry) [ T_VARIABLE($schema) ] [ T_VARIABLE($table) ] [ T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ] = T_VARIABLE($index) ; } T_RETURN T_VARIABLE($index) ; } T_ELSE { T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($_registry) [ T_VARIABLE($schema) ] [ T_VARIABLE($table) ] [ T_VARIABLE($index_name) ] ; } } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($table) , T_VARIABLE($schema) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($schema) ) ; T_IF ( T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($_registry) [ T_VARIABLE($schema) ] [ T_VARIABLE($table) ] ) ) { T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($_registry) [ T_VARIABLE($schema) ] [ T_VARIABLE($table) ] ; } T_ELSE { T_RETURN T_ARRAY ( ) ; } } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($table) , T_VARIABLE($schema) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($schema) ) ; T_IF ( T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($_registry) [ T_VARIABLE($schema) ] [ T_VARIABLE($table) ] [ ] ) ) { T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($_registry) [ T_VARIABLE($schema) ] [ T_VARIABLE($table) ] [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_STATIC T_PRIVATE T_STRING ( T_VARIABLE($table) , T_VARIABLE($schema) ) { T_IF ( T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($_registry) [ T_VARIABLE($schema) ] [ T_VARIABLE($table) ] ) ) { T_RETURN T_STRING ; } T_VARIABLE($_raw_indexes) = T_STRING ( T_VARIABLE($schema) , T_VARIABLE($table) ) ; T_FOREACH ( T_VARIABLE($_raw_indexes) T_AS T_VARIABLE($_each_index) ) { T_VARIABLE($_each_index) [ ] = T_VARIABLE($schema) ; T_IF ( ! T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($_registry) [ T_VARIABLE($schema) ] [ T_VARIABLE($table) ] [ T_VARIABLE($_each_index) [ ] ] ) ) { T_VARIABLE($key) = T_NEW T_STRING ( T_VARIABLE($_each_index) ) ; T_STRING T_DOUBLE_COLON T_VARIABLE($_registry) [ T_VARIABLE($schema) ] [ T_VARIABLE($table) ] [ T_VARIABLE($_each_index) [ ] ] = T_VARIABLE($key) ; } T_ELSE { T_VARIABLE($key) = T_STRING T_DOUBLE_COLON T_VARIABLE($_registry) [ T_VARIABLE($schema) ] [ T_VARIABLE($table) ] [ T_VARIABLE($_each_index) [ ] ] ; } T_VARIABLE($key) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_each_index) ) ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($params) ) { T_IF ( T_STRING ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($params) [ ] ] = T_NEW T_STRING ( T_VARIABLE($params) ) ; } } T_PUBLIC T_STRING ( T_VARIABLE($columns) ) { T_VARIABLE($_columns) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($columns) [ ] ) ) { T_FOREACH ( T_VARIABLE($columns) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($name) ) { T_VARIABLE($sub_part) = T_ISSET ( T_VARIABLE($columns) [ ] [ T_VARIABLE($key) ] ) ? T_VARIABLE($columns) [ ] [ T_VARIABLE($key) ] : ; T_VARIABLE($_columns) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($name) , T_DOUBLE_ARROW T_VARIABLE($sub_part) , ) ; } } T_ELSE { T_VARIABLE($_columns) = T_VARIABLE($columns) ; } T_FOREACH ( T_VARIABLE($_columns) T_AS T_VARIABLE($column) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column) ) ; } } T_PUBLIC T_STRING ( T_VARIABLE($column) ) { T_RETURN T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column) ] ) ; } T_PUBLIC T_STRING ( T_VARIABLE($params) ) { T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($params) [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($params) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($params) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($params) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($params) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($params) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($params) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($params) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($params) [ ] ; } T_IF ( T_IS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } T_ELSEIF ( T_IS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } T_ELSEIF ( T_IS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } T_ELSEIF ( T_IS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($comments) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($comments) ) ) { T_VARIABLE($comments) T_CONCAT_EQUAL ; } T_VARIABLE($comments) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_VARIABLE($comments) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_STATIC T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( , , , , , ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($html_options) = ; T_FOREACH ( T_STRING T_DOUBLE_COLON T_STRING ( ) T_AS T_VARIABLE($each_index_choice) ) { T_IF ( T_VARIABLE($each_index_choice) T_IS_IDENTICAL T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_NOT_IDENTICAL T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_CONTINUE ; } T_VARIABLE($html_options) T_CONCAT_EQUAL . T_VARIABLE($each_index_choice) . . ( ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($each_index_choice) ) ? : ) . . T_VARIABLE($each_index_choice) . . ; } T_RETURN T_VARIABLE($html_options) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($as_text) = T_STRING ) { T_IF ( T_VARIABLE($as_text) ) { T_VARIABLE($r) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_ELSE { T_VARIABLE($r) = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; } T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_VARIABLE($r) [ T_LNUMBER ] ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($as_text) = T_STRING ) { T_IF ( T_VARIABLE($as_text) ) { T_VARIABLE($r) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_ELSE { T_VARIABLE($r) = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; } T_RETURN T_VARIABLE($r) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($name) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING_CAST T_VARIABLE($name) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($table) , T_VARIABLE($schema) , T_VARIABLE($print_mode) = T_STRING ) { T_VARIABLE($indexes) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($schema) ) ; T_VARIABLE($no_indexes_class) = T_STRING ( T_VARIABLE($indexes) ) > T_LNUMBER ? : ; T_VARIABLE($no_indexes) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($no_indexes_class) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($no_indexes) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($no_indexes) T_CONCAT_EQUAL ; T_IF ( ! T_VARIABLE($print_mode) ) { T_VARIABLE($r) = ; T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( ) ; T_VARIABLE($r) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($r) T_CONCAT_EQUAL ; T_VARIABLE($r) T_CONCAT_EQUAL T_VARIABLE($no_indexes) ; T_IF ( T_STRING ( T_VARIABLE($indexes) ) < T_LNUMBER ) { T_VARIABLE($r) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($r) ; } T_VARIABLE($r) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($schema) ) ; } T_ELSE { T_VARIABLE($r) = . T_STRING ( ) . ; T_VARIABLE($r) T_CONCAT_EQUAL T_VARIABLE($no_indexes) ; T_IF ( T_STRING ( T_VARIABLE($indexes) ) < T_LNUMBER ) { T_RETURN T_VARIABLE($r) ; } } T_VARIABLE($r) T_CONCAT_EQUAL ; T_VARIABLE($r) T_CONCAT_EQUAL ; T_VARIABLE($r) T_CONCAT_EQUAL ; T_IF ( ! T_VARIABLE($print_mode) ) { T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( ) . ; T_IF ( T_STRING > T_LNUMBER ) { T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_VARIABLE($r) T_CONCAT_EQUAL ; T_VARIABLE($r) T_CONCAT_EQUAL ; T_VARIABLE($r) T_CONCAT_EQUAL ; T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($indexes) T_AS T_VARIABLE($index) ) { T_VARIABLE($row_span) = . T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) . ; T_VARIABLE($r) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . ; T_IF ( ! T_VARIABLE($print_mode) ) { T_VARIABLE($this_params) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($this_params) [ ] = T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($r) T_CONCAT_EQUAL ; T_VARIABLE($r) T_CONCAT_EQUAL ; T_VARIABLE($r) T_CONCAT_EQUAL . T_VARIABLE($row_span) . . ; T_VARIABLE($r) T_CONCAT_EQUAL ; T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this_params) ) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . . . ; T_VARIABLE($this_params) = T_VARIABLE($GLOBALS) [ ] ; T_IF ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) T_IS_EQUAL ) { T_VARIABLE($this_params) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($this_params) [ ] = T_STRING ( ) ; T_VARIABLE($js_msg) = T_STRING ( . T_VARIABLE($table) . ) ; } T_ELSE { T_VARIABLE($this_params) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) . ; T_VARIABLE($this_params) [ ] = T_STRING ( T_STRING ( ) , T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($js_msg) = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) . ) ; } T_VARIABLE($r) T_CONCAT_EQUAL . T_VARIABLE($row_span) . ; T_VARIABLE($r) T_CONCAT_EQUAL . . T_VARIABLE($js_msg) . ; T_VARIABLE($r) T_CONCAT_EQUAL ; T_VARIABLE($r) T_CONCAT_EQUAL ; T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this_params) ) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . . . ; } T_IF ( ! T_VARIABLE($print_mode) ) { T_VARIABLE($r) T_CONCAT_EQUAL . T_VARIABLE($row_span) . . T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) . ; } T_ELSE { T_VARIABLE($r) T_CONCAT_EQUAL . T_VARIABLE($row_span) . . T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) . ; } T_VARIABLE($r) T_CONCAT_EQUAL . T_VARIABLE($row_span) . . T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) . ; T_VARIABLE($r) T_CONCAT_EQUAL . T_VARIABLE($row_span) . . T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( T_STRING ) . ; T_VARIABLE($r) T_CONCAT_EQUAL . T_VARIABLE($row_span) . . T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( T_STRING ) . ; T_FOREACH ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($column) ) { T_IF ( T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) > T_LNUMBER ) { T_VARIABLE($r) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . ; } T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_IF ( T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($r) T_CONCAT_EQUAL . T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) . ; } T_VARIABLE($r) T_CONCAT_EQUAL ; T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ) . ; T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ) . ; T_VARIABLE($r) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ) . ; T_IF ( T_STRING > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($r) T_CONCAT_EQUAL . T_VARIABLE($row_span) . . T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) . ; } T_VARIABLE($r) T_CONCAT_EQUAL ; } T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_VARIABLE($r) T_CONCAT_EQUAL ; T_VARIABLE($r) T_CONCAT_EQUAL ; T_IF ( ! T_VARIABLE($print_mode) ) { T_VARIABLE($r) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($r) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($data) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($column) ) { T_VARIABLE($data) [ ] [ ] = T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; } T_RETURN T_VARIABLE($data) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($table) , T_VARIABLE($schema) ) { T_VARIABLE($indexes) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($schema) ) ; T_VARIABLE($output) = ; T_IF ( T_STRING ( T_VARIABLE($indexes) ) < T_LNUMBER ) { T_RETURN T_VARIABLE($output) ; } T_WHILE ( T_VARIABLE($while_index) = T_STRING ( T_VARIABLE($indexes) ) ) { T_FOREACH ( T_VARIABLE($indexes) T_AS T_VARIABLE($each_index) ) { T_IF ( T_VARIABLE($each_index) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_IDENTICAL T_VARIABLE($while_index) T_OBJECT_OPERATOR T_STRING ( ) ) { T_CONTINUE ; } T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($each_index) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($while_index) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_CONTINUE T_LNUMBER ; } } T_RETURN T_VARIABLE($output) ; } } T_STRING { T_PRIVATE T_VARIABLE($_name) = ; T_PRIVATE T_VARIABLE($_seq_in_index) = T_LNUMBER ; T_PRIVATE T_VARIABLE($_collation) = T_STRING ; T_PRIVATE T_VARIABLE($_sub_part) = T_STRING ; T_PRIVATE T_VARIABLE($_null) = ; T_PRIVATE T_VARIABLE($_cardinality) = T_STRING ; T_PUBLIC T_STRING ( T_VARIABLE($params) = T_ARRAY ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($params) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($params) ) { T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($params) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($params) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($params) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($params) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($params) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($params) [ ] ; } } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($as_text) = T_STRING ) { T_RETURN T_VARIABLE($as_text) ? ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_OR T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ? T_STRING ( ) : T_STRING ( ) ) : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_FUNCTION(PMA_getHtmlForDisplayIndexes) ( ) { T_VARIABLE($html_output) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) . T_STRING ( T_STRING ( ) , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ; T_RETURN T_VARIABLE($html_output) ; }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_VARIABLE($GLOBALS) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_getFormParametersForInsertForm) ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($where_clauses) , T_VARIABLE($where_clause_array) , T_VARIABLE($err_url) ) { T_VARIABLE($_form_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db) , T_DOUBLE_ARROW T_VARIABLE($table) , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW T_VARIABLE($err_url) , T_DOUBLE_ARROW T_VARIABLE($_REQUEST) [ ] , ) ; T_IF ( T_ISSET ( T_VARIABLE($where_clauses) ) ) { T_FOREACH ( T_VARIABLE($where_clause_array) T_AS T_VARIABLE($key_id) T_DOUBLE_ARROW T_VARIABLE($where_clause) ) { T_VARIABLE($_form_params) [ . T_VARIABLE($key_id) . ] = T_STRING ( T_VARIABLE($where_clause) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_form_params) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_RETURN T_VARIABLE($_form_params) ; } T_FUNCTION(PMA_getWhereClauseArray) ( T_VARIABLE($where_clause) ) { T_IF ( T_ISSET ( T_VARIABLE($where_clause) ) ) { T_IF ( T_STRING ( T_VARIABLE($where_clause) ) ) { T_RETURN T_VARIABLE($where_clause) ; } T_ELSE { T_RETURN T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_VARIABLE($where_clause) ) ; } } } T_FUNCTION(PMA_analyzeWhereClauses) ( T_VARIABLE($where_clause_array) , T_VARIABLE($table) , T_VARIABLE($db) ) { T_VARIABLE($rows) = T_ARRAY ( ) ; T_VARIABLE($result) = T_ARRAY ( ) ; T_VARIABLE($where_clauses) = T_ARRAY ( ) ; T_VARIABLE($found_unique_key) = T_STRING ; T_FOREACH ( T_VARIABLE($where_clause_array) T_AS T_VARIABLE($key_id) T_DOUBLE_ARROW T_VARIABLE($where_clause) ) { T_VARIABLE($local_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_VARIABLE($where_clause) . ; T_VARIABLE($result) [ T_VARIABLE($key_id) ] = T_STRING ( T_VARIABLE($local_query) , T_STRING , T_STRING ) ; T_VARIABLE($rows) [ T_VARIABLE($key_id) ] = T_STRING ( T_VARIABLE($result) [ T_VARIABLE($key_id) ] ) ; T_VARIABLE($where_clauses) [ T_VARIABLE($key_id) ] = T_STRING ( , , T_VARIABLE($where_clause) ) ; T_VARIABLE($has_unique_condition) = T_STRING ( T_VARIABLE($rows) , T_VARIABLE($key_id) , T_VARIABLE($where_clause_array) , T_VARIABLE($local_query) , T_VARIABLE($result) ) ; T_IF ( T_VARIABLE($has_unique_condition) ) { T_VARIABLE($found_unique_key) = T_STRING ; } } T_RETURN T_ARRAY ( T_VARIABLE($where_clauses) , T_VARIABLE($result) , T_VARIABLE($rows) , T_VARIABLE($found_unique_key) ) ; } T_FUNCTION(PMA_showEmptyResultMessageOrSetUniqueCondition) ( T_VARIABLE($rows) , T_VARIABLE($key_id) , T_VARIABLE($where_clause_array) , T_VARIABLE($local_query) , T_VARIABLE($result) ) { T_VARIABLE($has_unique_condition) = T_STRING ; T_IF ( ! T_VARIABLE($rows) [ T_VARIABLE($key_id) ] ) { T_UNSET ( T_VARIABLE($rows) [ T_VARIABLE($key_id) ] , T_VARIABLE($where_clause_array) [ T_VARIABLE($key_id) ] ) ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , T_VARIABLE($local_query) ) ) ; } T_ELSE { T_VARIABLE($meta) = T_STRING ( T_VARIABLE($result) [ T_VARIABLE($key_id) ] ) ; T_LIST ( T_VARIABLE($unique_condition) , T_VARIABLE($tmp_clause_is_unique) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($result) [ T_VARIABLE($key_id) ] , T_STRING ( T_VARIABLE($meta) ) , T_VARIABLE($meta) , T_VARIABLE($rows) [ T_VARIABLE($key_id) ] , T_STRING ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($unique_condition) ) ) { T_VARIABLE($has_unique_condition) = T_STRING ; } T_UNSET ( T_VARIABLE($unique_condition) , T_VARIABLE($tmp_clause_is_unique) ) ; } T_RETURN T_VARIABLE($has_unique_condition) ; } T_FUNCTION(PMA_loadFirstRow) ( T_VARIABLE($table) , T_VARIABLE($db) ) { T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . , T_STRING , T_STRING ) ; T_VARIABLE($rows) = T_STRING ( T_LNUMBER , T_VARIABLE($GLOBALS) [ ] [ ] , T_STRING ) ; T_RETURN T_ARRAY ( T_VARIABLE($result) , T_VARIABLE($rows) ) ; } T_FUNCTION(PMA_urlParamsInEditMode) ( T_VARIABLE($url_params) , T_VARIABLE($where_clause_array) , T_VARIABLE($where_clause) ) { T_IF ( T_ISSET ( T_VARIABLE($where_clause) ) ) { T_FOREACH ( T_VARIABLE($where_clause_array) T_AS T_VARIABLE($where_clause) ) { T_VARIABLE($url_params) [ ] = T_STRING ( T_VARIABLE($where_clause) ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($url_params) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_RETURN T_VARIABLE($url_params) ; } T_FUNCTION(PMA_showFunctionFieldsInEditMode) ( T_VARIABLE($url_params) , T_VARIABLE($showFuncFields) ) { T_VARIABLE($params) = T_ARRAY ( ) ; T_IF ( ! T_VARIABLE($showFuncFields) ) { T_VARIABLE($params) [ ] = T_LNUMBER ; } T_ELSE { T_VARIABLE($params) [ ] = T_LNUMBER ; } T_VARIABLE($params) [ ] = T_VARIABLE($GLOBALS) [ ] [ ] ; T_VARIABLE($params) [ ] = ; T_VARIABLE($this_url_params) = T_STRING ( T_VARIABLE($url_params) , T_VARIABLE($params) ) ; T_IF ( ! T_VARIABLE($showFuncFields) ) { T_RETURN . T_STRING ( T_VARIABLE($this_url_params) ) . . T_STRING ( ) . . ; } T_RETURN . T_STRING ( T_VARIABLE($this_url_params) ) . . T_STRING ( ) . . T_STRING ( ) . . ; } T_FUNCTION(PMA_showColumnTypesInDataEditView) ( T_VARIABLE($url_params) , T_VARIABLE($showColumnType) ) { T_VARIABLE($params) = T_ARRAY ( ) ; T_IF ( ! T_VARIABLE($showColumnType) ) { T_VARIABLE($params) [ ] = T_LNUMBER ; } T_ELSE { T_VARIABLE($params) [ ] = T_LNUMBER ; } T_VARIABLE($params) [ ] = T_VARIABLE($GLOBALS) [ ] [ ] ; T_VARIABLE($params) [ ] = ; T_VARIABLE($this_other_url_params) = T_STRING ( T_VARIABLE($url_params) , T_VARIABLE($params) ) ; T_IF ( ! T_VARIABLE($showColumnType) ) { T_RETURN . T_STRING ( T_VARIABLE($this_other_url_params) ) . . T_STRING ( ) . . ; } T_RETURN . T_STRING ( T_VARIABLE($this_other_url_params) ) . . T_STRING ( ) . . T_STRING ( ) . . ; } T_FUNCTION(PMA_getDefaultForDatetime) ( T_VARIABLE($column) ) { T_IF ( T_VARIABLE($column) [ ] T_IS_EQUAL T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($column) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($column) [ ] ) T_BOOLEAN_AND T_VARIABLE($column) [ ] T_IS_EQUAL ) { T_VARIABLE($column) [ ] = T_STRING ; } } T_FUNCTION(PMA_analyzeTableColumnsArray) ( T_VARIABLE($column) , T_VARIABLE($comments_map) , T_VARIABLE($timestamp_seen) ) { T_VARIABLE($column) [ ] = T_STRING ( T_VARIABLE($column) [ ] ) ; T_VARIABLE($column) [ ] = T_STRING ( T_VARIABLE($column) [ ] ) ; T_VARIABLE($column) [ ] = T_STRING ( , , T_VARIABLE($column) [ ] ) ; T_STRING ( T_VARIABLE($column) ) ; T_VARIABLE($column) [ ] = T_STRING ( , T_VARIABLE($column) [ ] ) ? T_LNUMBER : - T_LNUMBER ; T_VARIABLE($column) [ ] = T_STRING ( T_VARIABLE($column) , T_VARIABLE($comments_map) ) ; T_VARIABLE($column) [ ] = T_STRING ( T_VARIABLE($column) ) ; T_VARIABLE($column) [ ] = T_STRING ( T_VARIABLE($column) ) ; T_VARIABLE($column) [ ] = T_STRING ( T_VARIABLE($column) ) ; T_LIST ( T_VARIABLE($column) [ ] , T_VARIABLE($column) [ ] , T_VARIABLE($column) [ ] ) = T_STRING ( T_VARIABLE($column) , T_VARIABLE($timestamp_seen) ) ; T_RETURN T_VARIABLE($column) ; } T_FUNCTION(PMA_getColumnTitle) ( T_VARIABLE($column) , T_VARIABLE($comments_map) ) { T_IF ( T_ISSET ( T_VARIABLE($comments_map) [ T_VARIABLE($column) [ ] ] ) ) { T_RETURN . T_STRING ( T_VARIABLE($comments_map) [ T_VARIABLE($column) [ ] ] ) . . T_VARIABLE($column) [ ] . ; } T_ELSE { T_RETURN T_VARIABLE($column) [ ] ; } } T_FUNCTION(PMA_isColumnBinary) ( T_VARIABLE($column) ) { T_IF ( T_STRING ( T_VARIABLE($column) [ ] , ) T_IS_IDENTICAL T_LNUMBER T_BOOLEAN_OR T_STRING ( T_VARIABLE($column) [ ] , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($column) [ ] , ) ; } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(PMA_isColumnBlob) ( T_VARIABLE($column) ) { T_IF ( T_STRING ( T_VARIABLE($column) [ ] , ) T_IS_IDENTICAL T_LNUMBER T_BOOLEAN_OR T_STRING ( T_VARIABLE($column) [ ] , ) T_IS_IDENTICAL T_LNUMBER T_BOOLEAN_OR T_STRING ( T_VARIABLE($column) [ ] , ) T_IS_IDENTICAL T_LNUMBER T_BOOLEAN_OR T_STRING ( T_VARIABLE($column) [ ] , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($column) [ ] , ) ; } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(PMA_isColumnChar) ( T_VARIABLE($column) ) { T_IF ( T_STRING ( T_VARIABLE($column) [ ] , ) T_IS_IDENTICAL T_LNUMBER T_BOOLEAN_OR T_STRING ( T_VARIABLE($column) [ ] , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($column) [ ] , ) ; } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(PMA_getEnumSetAndTimestampColumns) ( T_VARIABLE($column) , T_VARIABLE($timestamp_seen) ) { T_VARIABLE($column) [ ] = T_STRING ; T_SWITCH ( T_VARIABLE($column) [ ] ) { T_CASE : T_VARIABLE($column) [ ] = ; T_VARIABLE($column) [ ] = ; T_BREAK ; T_CASE : T_VARIABLE($column) [ ] = ; T_VARIABLE($column) [ ] = ; T_BREAK ; T_CASE : T_IF ( ! T_VARIABLE($timestamp_seen) ) { T_VARIABLE($timestamp_seen) = T_STRING ; T_VARIABLE($column) [ ] = T_STRING ; } T_VARIABLE($column) [ ] = T_VARIABLE($column) [ ] ; T_VARIABLE($column) [ ] = ; T_BREAK ; T_DEFAULT : T_VARIABLE($column) [ ] = T_VARIABLE($column) [ ] ; T_VARIABLE($column) [ ] = ; T_BREAK ; } T_RETURN T_ARRAY ( T_VARIABLE($column) [ ] , T_VARIABLE($column) [ ] , T_VARIABLE($column) [ ] ) ; } T_FUNCTION(PMA_getFunctionColumn) ( T_VARIABLE($column) , T_VARIABLE($is_upload) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($no_support_types) , T_VARIABLE($tabindex_for_function) , T_VARIABLE($tabindex) , T_VARIABLE($idindex) , T_VARIABLE($insert_mode) ) { T_VARIABLE($html_output) = ; T_IF ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($column) [ ] T_BOOLEAN_AND ! T_VARIABLE($is_upload) ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_IDENTICAL T_BOOLEAN_AND T_VARIABLE($column) [ ] ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_IDENTICAL T_BOOLEAN_AND ! T_VARIABLE($column) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; } T_ELSEIF ( T_STRING ( T_VARIABLE($column) [ ] , ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($column) [ ] , ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($column) [ ] , T_VARIABLE($no_support_types) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . . . T_VARIABLE($unnullify_trigger) . . ( T_VARIABLE($tabindex) + T_VARIABLE($tabindex_for_function) ) . . . T_VARIABLE($idindex) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) , T_VARIABLE($insert_mode) ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getNullColumn) ( T_VARIABLE($column) , T_VARIABLE($column_name_appendix) , T_VARIABLE($real_null_value) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_null) , T_VARIABLE($idindex) , T_VARIABLE($vkey) , T_VARIABLE($foreigners) , T_VARIABLE($foreignData) ) { T_IF ( T_VARIABLE($column) [ ] T_IS_NOT_EQUAL ) { T_RETURN ; } T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . ; T_IF ( T_VARIABLE($real_null_value) T_BOOLEAN_AND ! T_VARIABLE($column) [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($tabindex) + T_VARIABLE($tabindex_for_null) ) . . . T_VARIABLE($column_name_appendix) . ; T_IF ( T_VARIABLE($real_null_value) T_BOOLEAN_AND ! T_VARIABLE($column) [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($idindex) ) . ; T_VARIABLE($nullify_code) = T_STRING ( T_VARIABLE($column) , T_VARIABLE($foreigners) , T_VARIABLE($foreignData) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . . T_VARIABLE($nullify_code) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . . T_VARIABLE($column) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . . T_STRING ( T_VARIABLE($vkey) ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getNullifyCodeForNullColumn) ( T_VARIABLE($column) , T_VARIABLE($foreigners) , T_VARIABLE($foreignData) ) { T_IF ( T_STRING ( T_VARIABLE($column) [ ] , ) ) { T_IF ( T_STRING ( T_VARIABLE($column) [ ] ) > T_LNUMBER ) { T_VARIABLE($nullify_code) = ; } T_ELSE { T_VARIABLE($nullify_code) = ; } } T_ELSEIF ( T_STRING ( T_VARIABLE($column) [ ] , ) ) { T_VARIABLE($nullify_code) = ; } T_ELSEIF ( T_VARIABLE($foreigners) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($foreigners) [ T_VARIABLE($column) [ ] ] ) T_BOOLEAN_AND T_VARIABLE($foreignData) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($nullify_code) = ; } T_ELSEIF ( T_VARIABLE($foreigners) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($foreigners) [ T_VARIABLE($column) [ ] ] ) T_BOOLEAN_AND T_VARIABLE($foreignData) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($nullify_code) = ; } T_ELSE { T_VARIABLE($nullify_code) = ; } T_RETURN T_VARIABLE($nullify_code) ; } T_FUNCTION(PMA_getValueColumn) ( T_VARIABLE($column) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($data) , T_VARIABLE($special_chars) , T_VARIABLE($foreignData) , T_VARIABLE($odd_row) , T_VARIABLE($paramTableDbArray) , T_VARIABLE($rownumber_param) , T_VARIABLE($titles) , T_VARIABLE($text_dir) , T_VARIABLE($special_chars_encoded) , T_VARIABLE($vkey) , T_VARIABLE($is_upload) , T_VARIABLE($biggest_max_file_size) , T_VARIABLE($default_char_editing) , T_VARIABLE($no_support_types) , T_VARIABLE($gis_data_types) , T_VARIABLE($extracted_columnspec) ) { T_VARIABLE($html_output) = ; T_IF ( T_VARIABLE($foreignData) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($column) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($data) , T_VARIABLE($paramTableDbArray) , T_VARIABLE($rownumber_param) , T_VARIABLE($titles) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($foreignData) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($data) , T_VARIABLE($foreignData) ) ; } T_ELSEIF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_STRING ( T_VARIABLE($column) [ ] , ) ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($column) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($text_dir) , T_VARIABLE($special_chars_encoded) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($column) [ ] , ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($column) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($text_dir) , T_VARIABLE($special_chars_encoded) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_STRING ( T_VARIABLE($special_chars) ) > T_LNUMBER ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) ; } } T_ELSEIF ( T_VARIABLE($column) [ ] T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($column) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($extracted_columnspec) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($data) ) ; } T_ELSEIF ( T_VARIABLE($column) [ ] T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($column) , T_VARIABLE($extracted_columnspec) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($data) ) ; } T_ELSEIF ( T_VARIABLE($column) [ ] T_BOOLEAN_OR T_VARIABLE($column) [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($column) , T_VARIABLE($data) , T_VARIABLE($special_chars) , T_VARIABLE($biggest_max_file_size) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($text_dir) , T_VARIABLE($special_chars_encoded) , T_VARIABLE($vkey) , T_VARIABLE($is_upload) ) ; } T_ELSEIF ( ! T_STRING ( T_VARIABLE($column) [ ] , T_VARIABLE($no_support_types) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($column) , T_VARIABLE($default_char_editing) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($special_chars) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($text_dir) , T_VARIABLE($special_chars_encoded) , T_VARIABLE($data) , T_VARIABLE($extracted_columnspec) ) ; } T_IF ( T_STRING ( T_VARIABLE($column) [ ] , T_VARIABLE($gis_data_types) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getForeignLink) ( T_VARIABLE($column) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($data) , T_VARIABLE($paramTableDbArray) , T_VARIABLE($rownumber_param) , T_VARIABLE($titles) ) { T_LIST ( T_VARIABLE($table) , T_VARIABLE($db) ) = T_VARIABLE($paramTableDbArray) ; T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($backup_field) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . . . T_VARIABLE($unnullify_trigger) . . . ( T_VARIABLE($tabindex) + T_VARIABLE($tabindex_for_value) ) . . . ( T_VARIABLE($idindex) ) . . . T_STRING ( T_VARIABLE($data) ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) . . T_STRING ( T_STRING ( T_VARIABLE($column) [ ] ) . T_VARIABLE($rownumber_param) ) . . T_STRING ( , , T_VARIABLE($titles) [ ] ) . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_dispRowForeignData) ( T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($data) , T_VARIABLE($foreignData) ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($backup_field) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($column_name_appendix) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . . . T_VARIABLE($unnullify_trigger) . . . ( T_VARIABLE($tabindex) + T_VARIABLE($tabindex_for_value) ) . . . T_VARIABLE($idindex) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($foreignData) [ ] , T_VARIABLE($foreignData) [ ] , T_VARIABLE($foreignData) [ ] , T_VARIABLE($data) , T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getTextarea) ( T_VARIABLE($column) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($text_dir) , T_VARIABLE($special_chars_encoded) ) { T_VARIABLE($the_class) = ; T_VARIABLE($textAreaRows) = T_VARIABLE($GLOBALS) [ ] [ ] ; T_VARIABLE($textareaCols) = T_VARIABLE($GLOBALS) [ ] [ ] ; T_IF ( T_VARIABLE($column) [ ] ) { T_VARIABLE($the_class) = ; T_VARIABLE($textAreaRows) = T_VARIABLE($GLOBALS) [ ] [ ] ; T_VARIABLE($textareaCols) = T_VARIABLE($GLOBALS) [ ] [ ] ; } T_ELSEIF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_STRING ( T_VARIABLE($column) [ ] , ) ) { T_VARIABLE($textAreaRows) = T_VARIABLE($GLOBALS) [ ] [ ] * T_LNUMBER ; T_VARIABLE($textareaCols) = T_VARIABLE($GLOBALS) [ ] [ ] * T_LNUMBER ; } T_VARIABLE($html_output) = T_VARIABLE($backup_field) . . . T_VARIABLE($column_name_appendix) . . . T_VARIABLE($the_class) . . . T_VARIABLE($textAreaRows) . . . T_VARIABLE($textareaCols) . . . T_VARIABLE($text_dir) . . . ( T_VARIABLE($idindex) ) . . . T_VARIABLE($unnullify_trigger) . . ( T_VARIABLE($tabindex) + T_VARIABLE($tabindex_for_value) ) . . T_VARIABLE($special_chars_encoded) . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getPmaTypeEnum) ( T_VARIABLE($column) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($extracted_columnspec) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($data) ) { T_VARIABLE($html_output) = ; T_IF ( ! T_ISSET ( T_VARIABLE($column) [ ] ) ) { T_VARIABLE($column) [ ] = T_STRING ( T_VARIABLE($column) , T_VARIABLE($extracted_columnspec) ) ; } T_VARIABLE($column_enum_values) = T_VARIABLE($column) [ ] ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($backup_field) . ; T_IF ( T_STRING ( T_VARIABLE($column) [ ] ) > T_LNUMBER ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($column) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($data) , T_VARIABLE($column_enum_values) ) ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($column) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($data) , T_VARIABLE($column_enum_values) ) ; } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getColumnEnumValues) ( T_VARIABLE($column) , T_VARIABLE($extracted_columnspec) ) { T_VARIABLE($column) [ ] = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($extracted_columnspec) [ ] T_AS T_VARIABLE($val) ) { T_VARIABLE($column) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($val) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($val) ) , ) ; } T_RETURN T_VARIABLE($column) [ ] ; } T_FUNCTION(PMA_getDropDownDependingOnLength) ( T_VARIABLE($column) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($data) , T_VARIABLE($column_enum_values) ) { T_VARIABLE($html_output) = . T_VARIABLE($column_name_appendix) . . . T_VARIABLE($unnullify_trigger) . . . ( T_VARIABLE($tabindex) + T_VARIABLE($tabindex_for_value) ) . . . ( T_VARIABLE($idindex) ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_FOREACH ( T_VARIABLE($column_enum_values) T_AS T_VARIABLE($enum_value) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($enum_value) [ ] . ; T_IF ( T_VARIABLE($data) T_IS_EQUAL T_VARIABLE($enum_value) [ ] T_BOOLEAN_OR ( T_VARIABLE($data) T_IS_EQUAL T_BOOLEAN_AND ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_VARIABLE($column) [ ] T_IS_NOT_EQUAL ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($column) [ ] ) T_BOOLEAN_AND T_VARIABLE($enum_value) [ ] T_IS_EQUAL T_VARIABLE($column) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($enum_value) [ ] . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getRadioButtonDependingOnLength) ( T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($column) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($data) , T_VARIABLE($column_enum_values) ) { T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($html_output) = ; T_FOREACH ( T_VARIABLE($column_enum_values) T_AS T_VARIABLE($enum_value) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($column_name_appendix) . . . . T_VARIABLE($enum_value) [ ] . . . ( T_VARIABLE($idindex) ) . . T_VARIABLE($j) . . . T_VARIABLE($unnullify_trigger) ; T_IF ( T_VARIABLE($data) T_IS_EQUAL T_VARIABLE($enum_value) [ ] T_BOOLEAN_OR ( T_VARIABLE($data) T_IS_EQUAL T_BOOLEAN_AND ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_VARIABLE($column) [ ] T_IS_NOT_EQUAL ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($column) [ ] ) T_BOOLEAN_AND T_VARIABLE($enum_value) [ ] T_IS_EQUAL T_VARIABLE($column) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($tabindex) + T_VARIABLE($tabindex_for_value) ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($idindex) . . T_VARIABLE($j) . . T_VARIABLE($enum_value) [ ] . . ; T_VARIABLE($j) T_INC ; } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getPmaTypeSet) ( T_VARIABLE($column) , T_VARIABLE($extracted_columnspec) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($data) ) { T_LIST ( T_VARIABLE($column_set_values) , T_VARIABLE($select_size) ) = T_STRING ( T_VARIABLE($column) , T_VARIABLE($extracted_columnspec) ) ; T_VARIABLE($vset) = T_STRING ( T_STRING ( , T_VARIABLE($data) ) ) ; T_VARIABLE($html_output) = T_VARIABLE($backup_field) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . . . . . T_VARIABLE($select_size) . . . . T_VARIABLE($unnullify_trigger) . . ( T_VARIABLE($tabindex) + T_VARIABLE($tabindex_for_value) ) . . . ( T_VARIABLE($idindex) ) . ; T_FOREACH ( T_VARIABLE($column_set_values) T_AS T_VARIABLE($column_set_value) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_set_value) [ ] . ; T_IF ( T_ISSET ( T_VARIABLE($vset) [ T_VARIABLE($column_set_value) [ ] ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_set_value) [ ] . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getColumnSetValueAndSelectSize) ( T_VARIABLE($column) , T_VARIABLE($extracted_columnspec) ) { T_IF ( ! T_ISSET ( T_VARIABLE($column) [ ] ) ) { T_VARIABLE($column) [ ] = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($extracted_columnspec) [ ] T_AS T_VARIABLE($val) ) { T_VARIABLE($column) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($val) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($val) ) , ) ; } T_VARIABLE($column) [ ] = T_STRING ( T_LNUMBER , T_STRING ( T_VARIABLE($column) [ ] ) ) ; } T_RETURN T_ARRAY ( T_VARIABLE($column) [ ] , T_VARIABLE($column) [ ] ) ; } T_FUNCTION(PMA_getBinaryAndBlobColumn) ( T_VARIABLE($column) , T_VARIABLE($data) , T_VARIABLE($special_chars) , T_VARIABLE($biggest_max_file_size) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($text_dir) , T_VARIABLE($special_chars_encoded) , T_VARIABLE($vkey) , T_VARIABLE($is_upload) ) { T_VARIABLE($html_output) = ; T_IF ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($column) [ ] ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($column) [ ] ) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($column) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($data) ) ) { T_VARIABLE($data_size) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($data) ) ) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($data_size) [ T_LNUMBER ] . . T_VARIABLE($data_size) [ T_LNUMBER ] . ; T_UNSET ( T_VARIABLE($data_size) ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . . . T_VARIABLE($column_name_appendix) . ; } T_ELSEIF ( T_VARIABLE($column) [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($column) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($text_dir) , T_VARIABLE($special_chars_encoded) ) ; } T_ELSE { T_VARIABLE($fieldsize) = T_STRING ( T_STRING ( T_VARIABLE($column) [ ] , T_LNUMBER ) , T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($backup_field) . . T_STRING ( T_VARIABLE($column) , T_VARIABLE($column_name_appendix) , T_VARIABLE($special_chars) , T_VARIABLE($fieldsize) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) ) ; } T_IF ( T_VARIABLE($is_upload) T_BOOLEAN_AND T_VARIABLE($column) [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_VARIABLE($vkey) . . T_VARIABLE($column) [ ] . . . T_VARIABLE($idindex) . . . T_VARIABLE($unnullify_trigger) . ; T_LIST ( T_VARIABLE($html_out) , T_VARIABLE($biggest_max_file_size) ) = T_STRING ( T_VARIABLE($column) , T_VARIABLE($biggest_max_file_size) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($html_out) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($vkey) , T_VARIABLE($column) ) ; } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHTMLinput) ( T_VARIABLE($column) , T_VARIABLE($column_name_appendix) , T_VARIABLE($special_chars) , T_VARIABLE($fieldsize) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) ) { T_VARIABLE($the_class) = ; T_IF ( T_VARIABLE($column) [ ] T_IS_EQUAL ) { T_VARIABLE($the_class) T_CONCAT_EQUAL ; } T_ELSEIF ( T_VARIABLE($column) [ ] T_IS_EQUAL T_BOOLEAN_OR T_STRING ( T_VARIABLE($column) [ ] , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($the_class) T_CONCAT_EQUAL ; } T_RETURN . T_VARIABLE($column_name_appendix) . . . T_VARIABLE($special_chars) . . T_VARIABLE($fieldsize) . . . T_VARIABLE($the_class) . . T_VARIABLE($unnullify_trigger) . . ( T_VARIABLE($tabindex) + T_VARIABLE($tabindex_for_value) ) . . . ( T_VARIABLE($idindex) ) . ; } T_FUNCTION(PMA_getSelectOptionForUpload) ( T_VARIABLE($vkey) , T_VARIABLE($column) ) { T_VARIABLE($files) = T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) ; T_IF ( T_VARIABLE($files) T_IS_IDENTICAL T_STRING ) { T_RETURN . T_STRING ( ) . . . T_STRING ( ) . ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($files) ) ) { T_RETURN . . T_STRING ( ) . . . T_STRING ( ) . . . . T_VARIABLE($vkey) . . T_VARIABLE($column) [ ] . . . . . T_VARIABLE($files) . . ; } } T_FUNCTION(PMA_getMaxUploadSize) ( T_VARIABLE($column) , T_VARIABLE($biggest_max_file_size) ) { T_GLOBAL T_VARIABLE($max_upload_size) ; T_VARIABLE($max_field_sizes) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($this_field_max_size) = T_VARIABLE($max_upload_size) ; T_IF ( T_VARIABLE($this_field_max_size) > T_VARIABLE($max_field_sizes) [ T_VARIABLE($column) [ ] ] ) { T_VARIABLE($this_field_max_size) = T_VARIABLE($max_field_sizes) [ T_VARIABLE($column) [ ] ] ; } T_VARIABLE($html_output) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this_field_max_size) ) . ; T_IF ( T_VARIABLE($this_field_max_size) > T_VARIABLE($biggest_max_file_size) ) { T_VARIABLE($biggest_max_file_size) = T_VARIABLE($this_field_max_size) ; } T_RETURN T_ARRAY ( T_VARIABLE($html_output) , T_VARIABLE($biggest_max_file_size) ) ; } T_FUNCTION(PMA_getNoSupportTypes) ( T_VARIABLE($column) , T_VARIABLE($default_char_editing) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($special_chars) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($text_dir) , T_VARIABLE($special_chars_encoded) , T_VARIABLE($data) , T_VARIABLE($extracted_columnspec) ) { T_VARIABLE($fieldsize) = T_STRING ( T_VARIABLE($column) , T_VARIABLE($extracted_columnspec) ) ; T_VARIABLE($html_output) = T_VARIABLE($backup_field) . ; T_IF ( T_VARIABLE($column) [ ] T_BOOLEAN_AND ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_BOOLEAN_OR T_STRING ( T_VARIABLE($data) , ) T_IS_NOT_IDENTICAL T_STRING ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($GLOBALS) [ ] [ ] = T_VARIABLE($default_char_editing) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($column) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($text_dir) , T_VARIABLE($special_chars_encoded) ) ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($column) , T_VARIABLE($column_name_appendix) , T_VARIABLE($special_chars) , T_VARIABLE($fieldsize) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) ) ; T_IF ( T_VARIABLE($column) [ ] T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . ; } T_IF ( T_STRING ( T_VARIABLE($column) [ ] , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . ; } T_IF ( T_STRING ( T_VARIABLE($column) [ ] , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . ; } T_IF ( T_VARIABLE($column) [ ] T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_name_appendix) . ; } T_IF ( T_VARIABLE($column) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($column) [ ] T_IS_EQUAL T_BOOLEAN_OR T_STRING ( T_VARIABLE($column) [ ] , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { } } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getColumnSize) ( T_VARIABLE($column) , T_VARIABLE($extracted_columnspec) ) { T_IF ( T_VARIABLE($column) [ ] ) { T_VARIABLE($fieldsize) = T_VARIABLE($extracted_columnspec) [ ] ; T_IF ( T_VARIABLE($fieldsize) > T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($GLOBALS) [ ] [ ] = ; } } T_ELSE { T_VARIABLE($fieldsize) = T_VARIABLE($column) [ ] ; } T_RETURN T_STRING ( T_STRING ( T_VARIABLE($fieldsize) , T_VARIABLE($GLOBALS) [ ] [ ] ) , T_VARIABLE($GLOBALS) [ ] [ ] ) ; } T_FUNCTION(PMA_getHTMLforGisDataTypes) ( ) { T_VARIABLE($edit_str) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_RETURN . T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($edit_str) , T_ARRAY ( ) , T_STRING , T_STRING , ) . ; } T_FUNCTION(PMA_getContinueInsertionForm) ( T_VARIABLE($table) , T_VARIABLE($db) , T_VARIABLE($where_clause_array) , T_VARIABLE($err_url) ) { T_VARIABLE($html_output) = . . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) . . . T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . . . T_STRING ( T_VARIABLE($err_url) ) . . . . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_FOREACH ( T_VARIABLE($where_clause_array) T_AS T_VARIABLE($key_id) T_DOUBLE_ARROW T_VARIABLE($where_clause) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($key_id) . . . T_STRING ( T_STRING ( T_VARIABLE($where_clause) ) ) . . ; } } T_VARIABLE($tmp) = . ; T_VARIABLE($option_values) = T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_FOREACH ( T_VARIABLE($option_values) T_AS T_VARIABLE($value) ) { T_VARIABLE($tmp) T_CONCAT_EQUAL . T_VARIABLE($value) . ; T_IF ( T_VARIABLE($value) T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($tmp) T_CONCAT_EQUAL ; } T_VARIABLE($tmp) T_CONCAT_EQUAL . T_VARIABLE($value) . . ; } T_VARIABLE($tmp) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( ) , T_VARIABLE($tmp) ) ; T_UNSET ( T_VARIABLE($tmp) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getActionsPanel) ( T_VARIABLE($where_clause) , T_VARIABLE($after_insert) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($found_unique_key) ) { T_VARIABLE($html_output) = . . . . T_STRING ( T_VARIABLE($where_clause) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . . . . T_STRING ( T_VARIABLE($where_clause) , T_VARIABLE($after_insert) , T_VARIABLE($found_unique_key) ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) ) . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getSubmitTypeDropDown) ( T_VARIABLE($where_clause) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) ) { T_VARIABLE($html_output) = . ( T_VARIABLE($tabindex) + T_VARIABLE($tabindex_for_value) + T_LNUMBER ) . ; T_IF ( T_ISSET ( T_VARIABLE($where_clause) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getAfterInsertDropDown) ( T_VARIABLE($where_clause) , T_VARIABLE($after_insert) , T_VARIABLE($found_unique_key) ) { T_VARIABLE($html_output) = . . ( T_VARIABLE($after_insert) T_IS_EQUAL ? : ) . . T_STRING ( ) . . . ( T_VARIABLE($after_insert) T_IS_EQUAL ? : ) . . T_STRING ( ) . ; T_IF ( T_ISSET ( T_VARIABLE($where_clause) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($after_insert) T_IS_EQUAL ? : ) . . T_STRING ( ) . ; T_VARIABLE($is_numeric) = T_STRING ; T_IF ( ! T_STRING ( T_VARIABLE($where_clause) ) ) { T_VARIABLE($where_clause) = T_ARRAY ( T_VARIABLE($where_clause) ) ; } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($where_clause) ) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($is_numeric) = T_STRING ( , T_VARIABLE($where_clause) [ T_VARIABLE($i) ] ) ; T_IF ( T_VARIABLE($is_numeric) T_IS_EQUAL T_STRING ) { T_BREAK ; } } T_IF ( T_VARIABLE($found_unique_key) T_BOOLEAN_AND T_VARIABLE($is_numeric) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($after_insert) T_IS_EQUAL ? : ) . . T_STRING ( ) . ; } } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getSumbitAndResetButtonForActionsPanel) ( T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) ) { T_RETURN . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . ) ) . . . . T_STRING ( ) . . . ( T_VARIABLE($tabindex) + T_VARIABLE($tabindex_for_value) + T_LNUMBER ) . . . T_STRING ( ) . . . ( T_VARIABLE($tabindex) + T_VARIABLE($tabindex_for_value) + T_LNUMBER ) . . ; } T_FUNCTION(PMA_getHeadAndFootOfInsertRowTable) ( T_VARIABLE($url_params) ) { T_VARIABLE($html_output) = . . . . T_STRING ( ) . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($url_params) , T_STRING ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($url_params) , T_STRING ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . . T_STRING ( ) . . . . . . . . T_STRING ( ) . . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getSpecialCharsAndBackupFieldForExistingRow) ( T_VARIABLE($current_row) , T_VARIABLE($column) , T_VARIABLE($extracted_columnspec) , T_VARIABLE($real_null_value) , T_VARIABLE($gis_data_types) , T_VARIABLE($column_name_appendix) ) { T_VARIABLE($special_chars_encoded) = ; T_IF ( T_STRING ( T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] ) ) { T_VARIABLE($real_null_value) = T_STRING ; T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] = ; T_VARIABLE($special_chars) = ; T_VARIABLE($data) = T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] ; } T_ELSEIF ( T_VARIABLE($column) [ ] T_IS_EQUAL ) { T_VARIABLE($special_chars) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] , T_VARIABLE($extracted_columnspec) [ ] ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($column) [ ] , T_VARIABLE($gis_data_types) ) ) { T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] , T_STRING ) ; T_VARIABLE($special_chars) = T_STRING ( T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] ) ; } T_ELSE { T_IF ( T_VARIABLE($column) [ ] T_BOOLEAN_OR ( T_VARIABLE($column) [ ] T_BOOLEAN_AND ! T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_IF ( T_VARIABLE($_SESSION) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] = T_STRING ( T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] ) ; T_VARIABLE($column) [ ] = T_STRING ; } T_ELSE { T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] ) ; } } T_VARIABLE($special_chars) = T_STRING ( T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] ) ; T_VARIABLE($special_chars_encoded) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($special_chars) ) ; T_VARIABLE($data) = T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_IDENTICAL ) { T_IF ( T_VARIABLE($column) [ ] T_IS_IDENTICAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($column) [ ] , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($data) = T_VARIABLE($special_chars_encoded) = T_VARIABLE($special_chars) = T_STRING ; } } T_VARIABLE($backup_field) = . T_VARIABLE($column_name_appendix) . . T_STRING ( T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] ) . ; T_RETURN T_ARRAY ( T_VARIABLE($real_null_value) , T_VARIABLE($special_chars_encoded) , T_VARIABLE($special_chars) , T_VARIABLE($data) , T_VARIABLE($backup_field) ) ; } T_FUNCTION(PMA_getSpecialCharsAndBackupFieldForInsertingMode) ( T_VARIABLE($column) , T_VARIABLE($real_null_value) ) { T_IF ( ! T_ISSET ( T_VARIABLE($column) [ ] ) ) { T_VARIABLE($column) [ ] = ; T_VARIABLE($real_null_value) = T_STRING ; T_VARIABLE($data) = ; } T_ELSE { T_VARIABLE($data) = T_VARIABLE($column) [ ] ; } T_IF ( T_VARIABLE($column) [ ] T_IS_EQUAL ) { T_VARIABLE($special_chars) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) [ ] ) ; } T_ELSE { T_VARIABLE($special_chars) = T_STRING ( T_VARIABLE($column) [ ] ) ; } T_VARIABLE($backup_field) = ; T_VARIABLE($special_chars_encoded) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($special_chars) ) ; T_IF ( ( T_VARIABLE($column) [ ] T_BOOLEAN_OR ( T_VARIABLE($column) [ ] T_BOOLEAN_AND ! T_VARIABLE($GLOBALS) [ ] [ ] ) ) T_BOOLEAN_AND ( T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($_SESSION) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($column) [ ] = T_STRING ; } T_RETURN T_ARRAY ( T_VARIABLE($real_null_value) , T_VARIABLE($data) , T_VARIABLE($special_chars) , T_VARIABLE($backup_field) , T_VARIABLE($special_chars_encoded) ) ; } T_FUNCTION(PMA_getParamsForUpdateOrInsert) ( ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($loop_array) = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : T_ARRAY ( T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($using_key) = T_STRING ; T_VARIABLE($is_insert) = T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ; T_VARIABLE($is_insertignore) = T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ; } T_ELSE { T_VARIABLE($loop_array) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($_REQUEST) [ ] [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($dummy) ) { T_VARIABLE($loop_array) [ ] = T_VARIABLE($key) ; } T_VARIABLE($using_key) = T_STRING ; T_VARIABLE($is_insert) = T_STRING ; T_VARIABLE($is_insertignore) = T_STRING ; } T_RETURN T_ARRAY ( T_VARIABLE($loop_array) , T_VARIABLE($using_key) , T_VARIABLE($is_insert) , T_VARIABLE($is_insertignore) ) ; } T_FUNCTION(PMA_isInsertRow) ( ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_NOT_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($GLOBALS) [ ] [ ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_INCLUDE ; T_EXIT ; } } T_FUNCTION(PMA_setSessionForEditNext) ( T_VARIABLE($one_where_clause) ) { T_VARIABLE($local_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_STRING ( , , T_VARIABLE($one_where_clause) ) . ; T_VARIABLE($res) = T_STRING ( T_VARIABLE($local_query) ) ; T_VARIABLE($row) = T_STRING ( T_VARIABLE($res) ) ; T_VARIABLE($meta) = T_STRING ( T_VARIABLE($res) ) ; T_LIST ( T_VARIABLE($unique_condition) , T_VARIABLE($clause_is_unique) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($res) , T_STRING ( T_VARIABLE($meta) ) , T_VARIABLE($meta) , T_VARIABLE($row) , T_STRING ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($unique_condition) ) ) { T_VARIABLE($_SESSION) [ ] = T_VARIABLE($unique_condition) ; } T_UNSET ( T_VARIABLE($unique_condition) , T_VARIABLE($clause_is_unique) ) ; } T_FUNCTION(PMA_getGotoInclude) ( T_VARIABLE($goto_include) ) { T_VARIABLE($valid_options) = T_ARRAY ( , , ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($valid_options) ) ) { T_VARIABLE($goto_include) = ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_IF ( ! T_STRING ( , T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($goto_include) = T_STRING ; } T_ELSE { T_VARIABLE($goto_include) = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = ; } } T_IF ( ! T_VARIABLE($goto_include) ) { T_IF ( ! T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($goto_include) = ; } T_ELSE { T_VARIABLE($goto_include) = ; } } T_RETURN T_VARIABLE($goto_include) ; } T_FUNCTION(PMA_getErrorUrl) ( T_VARIABLE($url_params) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_RETURN T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_RETURN . T_STRING ( T_VARIABLE($url_params) ) ; } } T_FUNCTION(PMA_buildSqlQuery) ( T_VARIABLE($is_insertignore) , T_VARIABLE($query_fields) , T_VARIABLE($value_sets) ) { T_IF ( T_VARIABLE($is_insertignore) ) { T_VARIABLE($insert_command) = ; } T_ELSE { T_VARIABLE($insert_command) = ; } T_VARIABLE($query) [ ] = T_VARIABLE($insert_command) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_STRING ( , T_VARIABLE($query_fields) ) . . T_STRING ( , T_VARIABLE($value_sets) ) . ; T_UNSET ( T_VARIABLE($insert_command) , T_VARIABLE($query_fields) ) ; T_RETURN T_VARIABLE($query) ; } T_FUNCTION(PMA_executeSqlQuery) ( T_VARIABLE($url_params) , T_VARIABLE($query) ) { T_VARIABLE($return_to_sql_query) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($url_params) [ ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($return_to_sql_query) = T_VARIABLE($GLOBALS) [ ] ; } T_VARIABLE($GLOBALS) [ ] = T_STRING ( , T_VARIABLE($query) ) . ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($total_affected_rows) = T_LNUMBER ; T_VARIABLE($last_messages) = T_ARRAY ( ) ; T_VARIABLE($warning_messages) = T_ARRAY ( ) ; T_VARIABLE($error_messages) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($query) T_AS T_VARIABLE($single_query) ) { T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($last_messages) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_CONTINUE ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($single_query) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( T_VARIABLE($single_query) ) ; } T_IF ( ! T_VARIABLE($result) ) { T_VARIABLE($error_messages) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_IF ( T_VARIABLE($tmp) = @ T_STRING ( ) ) { T_VARIABLE($total_affected_rows) T_PLUS_EQUAL T_VARIABLE($tmp) ; } T_UNSET ( T_VARIABLE($tmp) ) ; T_VARIABLE($insert_id) = T_STRING ( ) ; T_IF ( T_VARIABLE($insert_id) T_IS_NOT_EQUAL T_LNUMBER ) { T_IF ( T_VARIABLE($total_affected_rows) > T_LNUMBER ) { T_VARIABLE($insert_id) = T_VARIABLE($insert_id) + T_VARIABLE($total_affected_rows) - T_LNUMBER ; } T_VARIABLE($last_message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($last_message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($insert_id) ) ; T_VARIABLE($last_messages) [ ] = T_VARIABLE($last_message) ; } T_STRING ( T_VARIABLE($result) ) ; } T_VARIABLE($warning_messages) = T_STRING ( ) ; } T_RETURN T_ARRAY ( T_VARIABLE($url_params) , T_VARIABLE($total_affected_rows) , T_VARIABLE($last_messages) , T_VARIABLE($warning_messages) , T_VARIABLE($error_messages) , T_VARIABLE($return_to_sql_query) ) ; } T_FUNCTION(PMA_getWarningMessages) ( ) { T_VARIABLE($warning_essages) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($warning) ) { T_VARIABLE($warning_essages) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($warning) [ ] . . T_VARIABLE($warning) [ ] . . T_VARIABLE($warning) [ ] ) ; } T_RETURN T_VARIABLE($warning_essages) ; } T_FUNCTION(PMA_getDisplayValueForForeignTableColumn) ( T_VARIABLE($where_comparison) , T_VARIABLE($relation_field_value) , T_VARIABLE($map) , T_VARIABLE($relation_field) ) { T_VARIABLE($display_field) = T_STRING ( T_VARIABLE($map) [ T_VARIABLE($relation_field) ] [ ] , T_VARIABLE($map) [ T_VARIABLE($relation_field) ] [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($display_field) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($display_field) ) ) { T_VARIABLE($dispsql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($display_field) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($map) [ T_VARIABLE($relation_field) ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($map) [ T_VARIABLE($relation_field) ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($map) [ T_VARIABLE($relation_field) ] [ ] ) . T_VARIABLE($where_comparison) ; T_VARIABLE($dispresult) = T_STRING ( T_VARIABLE($dispsql) , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($dispresult) T_BOOLEAN_AND T_STRING ( T_VARIABLE($dispresult) ) > T_LNUMBER ) { T_LIST ( T_VARIABLE($dispval) ) = T_STRING ( T_VARIABLE($dispresult) , T_LNUMBER ) ; } @ T_STRING ( T_VARIABLE($dispresult) ) ; T_RETURN T_VARIABLE($dispval) ; } T_RETURN ; } T_FUNCTION(PMA_getLinkForRelationalDisplayField) ( T_VARIABLE($map) , T_VARIABLE($relation_field) , T_VARIABLE($where_comparison) , T_VARIABLE($dispval) , T_VARIABLE($relation_field_value) ) { T_IF ( T_IS_EQUAL T_VARIABLE($_SESSION) [ ] [ ] ) { T_VARIABLE($title) = ( ! T_EMPTY ( T_VARIABLE($dispval) ) ) ? . T_STRING ( T_VARIABLE($dispval) ) . : ; } T_ELSE { T_VARIABLE($title) = . T_STRING ( T_VARIABLE($relation_field_value) ) . ; } T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($map) [ T_VARIABLE($relation_field) ] [ ] , T_DOUBLE_ARROW T_VARIABLE($map) [ T_VARIABLE($relation_field) ] [ ] , T_DOUBLE_ARROW , T_DOUBLE_ARROW . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($map) [ T_VARIABLE($relation_field) ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($map) [ T_VARIABLE($relation_field) ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($map) [ T_VARIABLE($relation_field) ] [ ] ) . T_VARIABLE($where_comparison) ) ; T_VARIABLE($output) = . T_STRING ( T_VARIABLE($_url_params) ) . . T_VARIABLE($title) . ; T_IF ( T_IS_EQUAL T_VARIABLE($_SESSION) [ ] [ ] ) { T_VARIABLE($output) T_CONCAT_EQUAL ( ! T_EMPTY ( T_VARIABLE($dispval) ) ) ? T_STRING ( T_VARIABLE($dispval) ) : ; } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($relation_field_value) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(PMA_transformEditedValues) ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($transformation) , T_VARIABLE($edited_values) , T_VARIABLE($file) , T_VARIABLE($column_name) , T_VARIABLE($extra_data) ) { T_FOREACH ( T_VARIABLE($edited_values) T_AS T_VARIABLE($cell_index) T_DOUBLE_ARROW T_VARIABLE($curr_cell_edited_values) ) { T_IF ( T_ISSET ( T_VARIABLE($curr_cell_edited_values) [ T_VARIABLE($column_name) ] ) ) { T_VARIABLE($column_data) = T_VARIABLE($curr_cell_edited_values) [ T_VARIABLE($column_name) ] ; T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db) , T_DOUBLE_ARROW T_VARIABLE($table) , T_DOUBLE_ARROW T_VARIABLE($_REQUEST) [ ] , T_DOUBLE_ARROW T_VARIABLE($column_name) ) ; T_VARIABLE($include_file) = . T_VARIABLE($file) ; T_IF ( T_STRING ( T_VARIABLE($include_file) ) ) { T_INCLUDE_ONCE T_VARIABLE($include_file) ; T_VARIABLE($transform_options) = T_STRING ( T_ISSET ( T_VARIABLE($transformation) [ ] ) ? T_VARIABLE($transformation) [ ] : ) ; T_VARIABLE($transform_options) [ ] = T_STRING ( T_VARIABLE($_url_params) ) ; T_VARIABLE($class_name) = T_STRING ( , , T_VARIABLE($file) ) ; T_VARIABLE($plugin_manager) = T_STRING ; T_VARIABLE($transformation_plugin) = T_NEW T_VARIABLE($class_name) ( T_VARIABLE($plugin_manager) ) ; } T_VARIABLE($extra_data) [ ] [ T_VARIABLE($cell_index) ] = T_VARIABLE($transformation_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column_data) , T_VARIABLE($transform_options) , ) ; } } T_RETURN T_VARIABLE($extra_data) ; } T_FUNCTION(PMA_getCurrentValueAsAnArrayForMultipleEdit) ( T_VARIABLE($multi_edit_colummns) , T_VARIABLE($multi_edit_columns_name) , T_VARIABLE($multi_edit_funcs) , T_VARIABLE($gis_from_text_functions) , T_VARIABLE($current_value) , T_VARIABLE($gis_from_wkb_functions) , T_VARIABLE($func_optional_param) , T_VARIABLE($func_no_param) , T_VARIABLE($key) ) { T_IF ( T_EMPTY ( T_VARIABLE($multi_edit_funcs) [ T_VARIABLE($key) ] ) ) { T_RETURN T_VARIABLE($current_value) ; } T_ELSEIF ( T_IS_IDENTICAL T_VARIABLE($multi_edit_funcs) [ T_VARIABLE($key) ] ) { T_VARIABLE($uuid) = T_STRING ( ) ; T_RETURN . T_VARIABLE($uuid) . ; } T_ELSEIF ( ( T_STRING ( T_VARIABLE($multi_edit_funcs) [ T_VARIABLE($key) ] , T_VARIABLE($gis_from_text_functions) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($current_value) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($multi_edit_funcs) [ T_VARIABLE($key) ] , T_VARIABLE($gis_from_wkb_functions) ) ) { T_VARIABLE($current_value) = T_STRING ( T_VARIABLE($current_value) , T_LNUMBER , T_STRING ( T_VARIABLE($current_value) ) - T_LNUMBER ) ; T_VARIABLE($current_value) = T_STRING ( , , T_VARIABLE($current_value) ) ; T_RETURN T_VARIABLE($multi_edit_funcs) [ T_VARIABLE($key) ] . . T_VARIABLE($current_value) . ; } T_ELSEIF ( ! T_STRING ( T_VARIABLE($multi_edit_funcs) [ T_VARIABLE($key) ] , T_VARIABLE($func_no_param) ) T_BOOLEAN_OR ( T_VARIABLE($current_value) T_IS_NOT_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($multi_edit_funcs) [ T_VARIABLE($key) ] , T_VARIABLE($func_optional_param) ) ) ) { T_RETURN T_VARIABLE($multi_edit_funcs) [ T_VARIABLE($key) ] . . T_VARIABLE($current_value) . ; } T_ELSE { T_RETURN T_VARIABLE($multi_edit_funcs) [ T_VARIABLE($key) ] . ; } } T_FUNCTION(PMA_getQueryValuesForInsertAndUpdateInMultipleEdit) ( T_VARIABLE($multi_edit_columns_name) , T_VARIABLE($multi_edit_columns_null) , T_VARIABLE($current_value) , T_VARIABLE($multi_edit_columns_prev) , T_VARIABLE($multi_edit_funcs) , T_VARIABLE($is_insert) , T_VARIABLE($query_values) , T_VARIABLE($query_fields) , T_VARIABLE($current_value_as_an_array) , T_VARIABLE($value_sets) , T_VARIABLE($key) , T_VARIABLE($multi_edit_columns_null_prev) ) { T_IF ( T_VARIABLE($is_insert) ) { T_IF ( T_STRING ( T_VARIABLE($current_value_as_an_array) ) ) { T_VARIABLE($query_values) [ ] = T_VARIABLE($current_value_as_an_array) ; T_IF ( T_EMPTY ( T_VARIABLE($value_sets) ) ) { T_VARIABLE($query_fields) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($multi_edit_columns_name) [ T_VARIABLE($key) ] ) ; } } } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($multi_edit_columns_null_prev) [ T_VARIABLE($key) ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($multi_edit_columns_null) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($query_values) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($multi_edit_columns_name) [ T_VARIABLE($key) ] ) . . T_VARIABLE($current_value_as_an_array) ; } T_ELSEIF ( T_EMPTY ( T_VARIABLE($multi_edit_funcs) [ T_VARIABLE($key) ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($multi_edit_columns_prev) [ T_VARIABLE($key) ] ) T_BOOLEAN_AND ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($multi_edit_columns_prev) [ T_VARIABLE($key) ] ) . T_IS_EQUAL T_VARIABLE($current_value) ) ) { } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($current_value) ) ) { T_IF ( T_EMPTY ( T_VARIABLE($multi_edit_columns_null_prev) [ T_VARIABLE($key) ] ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($multi_edit_columns_null) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($query_values) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($multi_edit_columns_name) [ T_VARIABLE($key) ] ) . . T_VARIABLE($current_value_as_an_array) ; } } T_RETURN T_ARRAY ( T_VARIABLE($query_values) , T_VARIABLE($query_fields) ) ; } T_FUNCTION(PMA_getCurrentValueForDifferentTypes) ( T_VARIABLE($possibly_uploaded_val) , T_VARIABLE($key) , T_VARIABLE($multi_edit_columns_type) , T_VARIABLE($current_value) , T_VARIABLE($multi_edit_auto_increment) , T_VARIABLE($rownumber) , T_VARIABLE($multi_edit_columns_name) , T_VARIABLE($multi_edit_columns_null) , T_VARIABLE($multi_edit_columns_null_prev) , T_VARIABLE($is_insert) , T_VARIABLE($using_key) , T_VARIABLE($where_clause) , T_VARIABLE($table) ) { T_IF ( T_VARIABLE($is_insert) T_BOOLEAN_AND T_VARIABLE($using_key) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($multi_edit_columns_type) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($multi_edit_columns_type) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($where_clause) ) ) { T_VARIABLE($protected_row) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_VARIABLE($where_clause) . ) ; } T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($possibly_uploaded_val) ) { T_VARIABLE($current_value) = T_VARIABLE($possibly_uploaded_val) ; } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($multi_edit_columns_type) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($type) = T_VARIABLE($multi_edit_columns_type) [ T_VARIABLE($key) ] ; } T_ELSE { T_VARIABLE($type) = ; } T_IF ( T_VARIABLE($type) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($type) T_IS_NOT_EQUAL T_BOOLEAN_AND T_LNUMBER T_IS_IDENTICAL T_STRING ( T_VARIABLE($current_value) ) ) { T_IF ( T_ISSET ( T_VARIABLE($multi_edit_auto_increment) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($multi_edit_auto_increment) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($current_value) = ; } T_ELSE { T_VARIABLE($current_value) = ; } } T_ELSEIF ( T_VARIABLE($type) T_IS_EQUAL ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] [ T_VARIABLE($key) ] ) ) { T_VARIABLE($current_value) = T_STRING ( , T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($current_value) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_value) ) . ; } T_ELSE { T_VARIABLE($current_value) = ; } } T_ELSEIF ( T_VARIABLE($type) T_IS_EQUAL ) { T_IF ( ! T_EMPTY ( T_VARIABLE($protected_row) [ T_VARIABLE($multi_edit_columns_name) [ T_VARIABLE($key) ] ] ) ) { T_VARIABLE($current_value) = . T_STRING ( T_VARIABLE($protected_row) [ T_VARIABLE($multi_edit_columns_name) [ T_VARIABLE($key) ] ] ) ; } T_ELSE { T_VARIABLE($current_value) = ; } } T_ELSEIF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($current_value) = T_STRING ( , , T_VARIABLE($current_value) ) ; T_VARIABLE($current_value) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_value) ) . ; } T_ELSEIF ( ! ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($type) T_IS_EQUAL ) T_BOOLEAN_OR T_VARIABLE($current_value) T_IS_NOT_EQUAL ) { T_VARIABLE($current_value) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_value) ) . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($multi_edit_columns_null) [ T_VARIABLE($key) ] ) T_BOOLEAN_AND ( T_VARIABLE($current_value) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($current_value) T_IS_EQUAL ) ) { T_VARIABLE($current_value) = ; } T_IF ( T_EMPTY ( T_VARIABLE($current_value) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($multi_edit_columns_null_prev) [ T_VARIABLE($key) ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($multi_edit_columns_null) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($current_value) = ; } } T_RETURN T_VARIABLE($current_value) ; } T_FUNCTION(PMA_verifyWhetherValueCanBeTruncatedAndAppendExtraData) ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($column_name) , & T_VARIABLE($extra_data) ) { T_VARIABLE($extra_data) [ ] = T_STRING ; T_VARIABLE($sql_for_real_value) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column_name) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_VARIABLE($_REQUEST) [ ] [ T_LNUMBER ] ; T_IF ( T_STRING ( T_VARIABLE($sql_for_real_value) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($extra_data) [ ] = T_STRING ( T_VARIABLE($sql_for_real_value) ) ; } T_ELSE { T_VARIABLE($extra_data) [ ] = T_STRING ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_getIp) ( ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_SERVER) [ ] ) ) { T_VARIABLE($direct_ip) = T_VARIABLE($_SERVER) [ ] ; } T_ELSE { T_RETURN T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($direct_ip) ] ) ) { T_VARIABLE($trusted_header_value) = T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($direct_ip) ] ) ; T_VARIABLE($matches) = T_ARRAY ( ) ; T_VARIABLE($is_ip) = T_STRING ( , T_VARIABLE($trusted_header_value) , T_VARIABLE($matches) ) ; T_IF ( T_VARIABLE($is_ip) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($matches) ) T_IS_EQUAL T_LNUMBER ) ) { T_RETURN T_VARIABLE($matches) [ T_LNUMBER ] ; } } T_RETURN T_VARIABLE($direct_ip) ; } T_FUNCTION(PMA_ipMaskTest) ( T_VARIABLE($testRange) , T_VARIABLE($ipToTest) ) { T_VARIABLE($result) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($testRange) , ) > - T_LNUMBER T_BOOLEAN_OR T_STRING ( T_VARIABLE($ipToTest) , ) > - T_LNUMBER ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($testRange) , T_VARIABLE($ipToTest) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( T_VARIABLE($testRange) , T_VARIABLE($ipToTest) ) ; } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(PMA_ipv4MaskTest) ( T_VARIABLE($testRange) , T_VARIABLE($ipToTest) ) { T_VARIABLE($result) = T_STRING ; T_VARIABLE($match) = T_STRING ( , T_VARIABLE($testRange) , T_VARIABLE($regs) ) ; T_IF ( T_VARIABLE($match) ) { T_VARIABLE($ipl) = T_STRING ( T_VARIABLE($ipToTest) ) ; T_VARIABLE($rangel) = T_STRING ( T_VARIABLE($regs) [ T_LNUMBER ] . . T_VARIABLE($regs) [ T_LNUMBER ] . . T_VARIABLE($regs) [ T_LNUMBER ] . . T_VARIABLE($regs) [ T_LNUMBER ] ) ; T_VARIABLE($maskl) = T_LNUMBER ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_LNUMBER ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($i) < T_VARIABLE($regs) [ T_LNUMBER ] - T_LNUMBER ) { T_VARIABLE($maskl) = T_VARIABLE($maskl) + T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , ( T_LNUMBER - T_VARIABLE($i) ) ) ; } } T_IF ( ( T_VARIABLE($maskl) & T_VARIABLE($rangel) ) T_IS_EQUAL ( T_VARIABLE($maskl) & T_VARIABLE($ipl) ) ) { T_RETURN T_STRING ; } T_ELSE { T_RETURN T_STRING ; } } T_ELSE { T_VARIABLE($maskocts) = T_STRING ( , T_VARIABLE($testRange) ) ; T_VARIABLE($ipocts) = T_STRING ( , T_VARIABLE($ipToTest) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_LNUMBER ; T_VARIABLE($i) T_INC ) { T_IF ( T_STRING ( , T_VARIABLE($maskocts) [ T_VARIABLE($i) ] , T_VARIABLE($regs) ) ) { T_IF ( ( T_VARIABLE($ipocts) [ T_VARIABLE($i) ] > T_VARIABLE($regs) [ T_LNUMBER ] ) T_BOOLEAN_OR ( T_VARIABLE($ipocts) [ T_VARIABLE($i) ] < T_VARIABLE($regs) [ T_LNUMBER ] ) ) { T_VARIABLE($result) = T_STRING ; } } T_ELSE { T_IF ( T_VARIABLE($maskocts) [ T_VARIABLE($i) ] T_IS_NOT_EQUAL T_VARIABLE($ipocts) [ T_VARIABLE($i) ] ) { T_VARIABLE($result) = T_STRING ; } } } } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(PMA_ipv6MaskTest) ( T_VARIABLE($test_range) , T_VARIABLE($ip_to_test) ) { T_VARIABLE($result) = T_STRING ; T_VARIABLE($test_range) = T_STRING ( T_VARIABLE($test_range) ) ; T_VARIABLE($ip_to_test) = T_STRING ( T_VARIABLE($ip_to_test) ) ; T_VARIABLE($is_cidr) = T_STRING ( T_VARIABLE($test_range) , ) > - T_LNUMBER ; T_VARIABLE($is_range) = T_STRING ( T_VARIABLE($test_range) , ) > - T_LNUMBER ; T_VARIABLE($is_single) = ! T_VARIABLE($is_cidr) T_BOOLEAN_AND ! T_VARIABLE($is_range) ; T_VARIABLE($ip_hex) = T_STRING ( T_STRING ( T_VARIABLE($ip_to_test) ) ) ; T_IF ( T_VARIABLE($is_single) ) { T_VARIABLE($range_hex) = T_STRING ( T_STRING ( T_VARIABLE($test_range) ) ) ; T_VARIABLE($result) = T_VARIABLE($ip_hex) T_IS_IDENTICAL T_VARIABLE($range_hex) ; } T_ELSEIF ( T_VARIABLE($is_range) ) { T_VARIABLE($range_match) = T_ARRAY ( ) ; T_IF ( T_STRING ( , T_VARIABLE($test_range) , T_VARIABLE($range_match) ) ) { T_VARIABLE($range_start) = T_VARIABLE($range_match) [ T_LNUMBER ] ; T_VARIABLE($range_end) = T_VARIABLE($range_match) [ T_LNUMBER ] ; T_VARIABLE($first_ip) = T_STRING ( T_VARIABLE($range_match) [ T_LNUMBER ] , T_VARIABLE($range_start) , T_VARIABLE($test_range) ) ; T_VARIABLE($first_hex) = T_STRING ( T_STRING ( T_VARIABLE($first_ip) ) ) ; T_VARIABLE($last_ip) = T_STRING ( T_VARIABLE($range_match) [ T_LNUMBER ] , T_VARIABLE($range_end) , T_VARIABLE($test_range) ) ; T_VARIABLE($last_hex) = T_STRING ( T_STRING ( T_VARIABLE($last_ip) ) ) ; T_VARIABLE($result) = ( T_VARIABLE($ip_hex) T_IS_GREATER_OR_EQUAL T_VARIABLE($first_hex) T_BOOLEAN_AND T_VARIABLE($ip_hex) T_IS_SMALLER_OR_EQUAL T_VARIABLE($last_hex) ) ; } } T_ELSEIF ( T_VARIABLE($is_cidr) ) { T_LIST ( T_VARIABLE($first_ip) , T_VARIABLE($subnet) ) = T_STRING ( , T_VARIABLE($test_range) ) ; T_VARIABLE($first_bin) = T_STRING ( T_VARIABLE($first_ip) ) ; T_VARIABLE($first_hex) = T_STRING ( T_VARIABLE($first_bin) ) ; T_VARIABLE($first_ip) = T_STRING ( T_VARIABLE($first_bin) ) ; T_VARIABLE($flexbits) = T_LNUMBER - T_VARIABLE($subnet) ; T_VARIABLE($last_hex) = T_VARIABLE($first_hex) ; T_VARIABLE($pos) = T_LNUMBER ; T_WHILE ( T_VARIABLE($flexbits) > T_LNUMBER ) { T_VARIABLE($orig) = T_STRING ( T_VARIABLE($last_hex) , T_VARIABLE($pos) , T_LNUMBER ) ; T_VARIABLE($origval) = T_STRING ( T_VARIABLE($orig) ) ; T_VARIABLE($newval) = T_VARIABLE($origval) | ( T_STRING ( T_LNUMBER , T_STRING ( T_LNUMBER , T_VARIABLE($flexbits) ) ) - T_LNUMBER ) ; T_VARIABLE($new) = T_STRING ( T_VARIABLE($newval) ) ; T_VARIABLE($last_hex) = T_STRING ( T_VARIABLE($last_hex) , T_VARIABLE($new) , T_VARIABLE($pos) , T_LNUMBER ) ; T_VARIABLE($flexbits) T_MINUS_EQUAL T_LNUMBER ; T_VARIABLE($pos) T_MINUS_EQUAL T_LNUMBER ; } T_VARIABLE($result) = ( T_VARIABLE($ip_hex) T_IS_GREATER_OR_EQUAL T_VARIABLE($first_hex) T_BOOLEAN_AND T_VARIABLE($ip_hex) T_IS_SMALLER_OR_EQUAL T_VARIABLE($last_hex) ) ; } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(PMA_allowDeny) ( T_VARIABLE($type) ) { T_GLOBAL T_VARIABLE($cfg) ; T_VARIABLE($remote_ip) = T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($remote_ip) ) ) { T_RETURN T_STRING ; } T_VARIABLE($username) = T_VARIABLE($cfg) [ ] [ ] ; T_VARIABLE($rules) = T_VARIABLE($cfg) [ ] [ ] [ ] ; T_VARIABLE($shortcuts) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($shortcuts) [ ] = T_STRING ( ) . ; T_VARIABLE($shortcuts) [ ] = T_STRING ( ) . ; T_VARIABLE($shortcuts) [ ] = T_STRING ( ) . ; } T_FOREACH ( T_VARIABLE($rules) T_AS T_VARIABLE($rule) ) { T_VARIABLE($rule_data) = T_STRING ( , T_VARIABLE($rule) ) ; T_IF ( T_VARIABLE($rule_data) [ T_LNUMBER ] T_IS_NOT_EQUAL T_VARIABLE($type) ) { T_CONTINUE ; } T_IF ( ( T_VARIABLE($rule_data) [ T_LNUMBER ] T_IS_NOT_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($rule_data) [ T_LNUMBER ] T_IS_NOT_EQUAL T_VARIABLE($username) ) ) { T_CONTINUE ; } T_IF ( T_VARIABLE($rule_data) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($rule_data) [ T_LNUMBER ] = T_VARIABLE($rule_data) [ T_LNUMBER ] ; } T_IF ( T_ISSET ( T_VARIABLE($shortcuts) [ T_VARIABLE($rule_data) [ T_LNUMBER ] ] ) ) { T_VARIABLE($rule_data) [ T_LNUMBER ] = T_VARIABLE($shortcuts) [ T_VARIABLE($rule_data) [ T_LNUMBER ] ] ; } T_IF ( T_STRING ( T_VARIABLE($rule_data) [ T_LNUMBER ] , T_VARIABLE($remote_ip) ) ) { T_RETURN T_STRING ; } } T_RETURN T_STRING ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_jsFormat) ( T_VARIABLE($a_string) = , T_VARIABLE($add_backquotes) = T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($a_string) ) ) { T_VARIABLE($a_string) = T_STRING ( T_VARIABLE($a_string) ) ; T_VARIABLE($a_string) = T_STRING ( T_VARIABLE($a_string) ) ; T_VARIABLE($a_string) = T_STRING ( , , T_VARIABLE($a_string) ) ; } T_RETURN ( ( T_VARIABLE($add_backquotes) ) ? T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($a_string) ) : T_VARIABLE($a_string) ) ; } T_FUNCTION(PMA_escapeJsString) ( T_VARIABLE($string) ) { T_RETURN T_STRING ( , , T_STRING ( T_VARIABLE($string) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ) ; } T_FUNCTION(PMA_formatJsVal) ( T_VARIABLE($value) ) { T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_IF ( T_VARIABLE($value) ) { T_RETURN ; } T_ELSE { T_RETURN ; } } T_ELSEIF ( T_STRING ( T_VARIABLE($value) ) ) { T_RETURN T_INT_CAST T_VARIABLE($value) ; } T_ELSE { T_RETURN . T_STRING ( T_VARIABLE($value) ) . ; } } T_FUNCTION(PMA_getJsValue) ( T_VARIABLE($key) , T_VARIABLE($value) , T_VARIABLE($escape) = T_STRING ) { T_VARIABLE($result) = T_VARIABLE($key) . ; T_IF ( ! T_VARIABLE($escape) ) { T_VARIABLE($result) T_CONCAT_EQUAL T_VARIABLE($value) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($value) ) ) { T_VARIABLE($result) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($value) T_AS T_VARIABLE($val) ) { T_VARIABLE($result) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($val) ) . ; } T_VARIABLE($result) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($result) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($value) ) . ; } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(PMA_printJsValue) ( T_VARIABLE($key) , T_VARIABLE($value) ) { T_ECHO T_STRING ( T_VARIABLE($key) , T_VARIABLE($value) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_internal_enc_check) ( ) { T_GLOBAL T_VARIABLE($internal_enc) , T_VARIABLE($enc_list) ; T_VARIABLE($internal_enc) = T_STRING ( ) ; T_IF ( T_VARIABLE($internal_enc) T_IS_EQUAL ) { T_VARIABLE($enc_list) = ; } T_ELSE { T_VARIABLE($enc_list) = ; } T_RETURN T_STRING ; } T_FUNCTION(PMA_change_enc_order) ( ) { T_GLOBAL T_VARIABLE($enc_list) ; T_VARIABLE($p) = T_STRING ( , T_VARIABLE($enc_list) ) ; T_IF ( T_VARIABLE($p) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($enc_list) = ; } T_ELSE { T_VARIABLE($enc_list) = ; } T_RETURN T_STRING ; } T_FUNCTION(PMA_kanji_str_conv) ( T_VARIABLE($str) , T_VARIABLE($enc) , T_VARIABLE($kana) ) { T_GLOBAL T_VARIABLE($enc_list) ; T_IF ( T_VARIABLE($enc) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($kana) T_IS_EQUAL ) { T_RETURN T_VARIABLE($str) ; } T_VARIABLE($nw) = T_STRING ( T_VARIABLE($str) , T_VARIABLE($enc_list) ) ; T_IF ( T_VARIABLE($kana) T_IS_EQUAL ) { T_VARIABLE($dist) = T_STRING ( T_VARIABLE($str) , , T_VARIABLE($nw) ) ; T_VARIABLE($str) = T_VARIABLE($dist) ; } T_IF ( T_VARIABLE($nw) T_IS_NOT_EQUAL T_VARIABLE($enc) T_BOOLEAN_AND T_VARIABLE($enc) T_IS_NOT_EQUAL ) { T_VARIABLE($dist) = T_STRING ( T_VARIABLE($str) , T_VARIABLE($enc) , T_VARIABLE($nw) ) ; } T_ELSE { T_VARIABLE($dist) = T_VARIABLE($str) ; } T_RETURN T_VARIABLE($dist) ; } T_FUNCTION(PMA_kanji_file_conv) ( T_VARIABLE($file) , T_VARIABLE($enc) , T_VARIABLE($kana) ) { T_IF ( T_VARIABLE($enc) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($kana) T_IS_EQUAL ) { T_RETURN T_VARIABLE($file) ; } T_VARIABLE($tmpfname) = T_STRING ( , T_VARIABLE($enc) ) ; T_VARIABLE($fpd) = T_STRING ( T_VARIABLE($tmpfname) , ) ; T_VARIABLE($fps) = T_STRING ( T_VARIABLE($file) , ) ; T_STRING ( ) ; T_WHILE ( ! T_STRING ( T_VARIABLE($fps) ) ) { T_VARIABLE($line) = T_STRING ( T_VARIABLE($fps) , T_LNUMBER ) ; T_VARIABLE($dist) = T_STRING ( T_VARIABLE($line) , T_VARIABLE($enc) , T_VARIABLE($kana) ) ; T_STRING ( T_VARIABLE($fpd) , T_VARIABLE($dist) ) ; } T_STRING ( ) ; T_STRING ( T_VARIABLE($fps) ) ; T_STRING ( T_VARIABLE($fpd) ) ; T_STRING ( T_VARIABLE($file) ) ; T_RETURN T_VARIABLE($tmpfname) ; } T_FUNCTION(PMA_set_enc_form) ( T_VARIABLE($spaces) ) { T_RETURN . T_VARIABLE($spaces) . . . . T_VARIABLE($spaces) . . T_STRING ( , ) . . T_VARIABLE($spaces) . . . T_VARIABLE($spaces) . . . T_VARIABLE($spaces) . . . . T_VARIABLE($spaces) . . . T_VARIABLE($spaces) . . T_STRING ( ) . . . T_VARIABLE($spaces) . . . ; } T_STRING ( ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PROTECTED T_VARIABLE($item_empty) = ; T_PUBLIC T_STRING ( T_VARIABLE($array) = T_ARRAY ( ) , T_VARIABLE($flags) = T_LNUMBER , T_VARIABLE($iterator_class) = ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($array) , T_VARIABLE($flags) , T_VARIABLE($iterator_class) ) ; } T_PUBLIC T_STRING ( ) { T_IF ( T_STRING ( T_VARIABLE($this) ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($this) ) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($this_elements) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($result) ) { T_IF ( ! T_STRING ( T_VARIABLE($result) , T_VARIABLE($this_elements) ) ) { T_RETURN T_STRING ; } } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($selected) = , T_VARIABLE($include_information_schema) = T_STRING ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($selected) ) { T_VARIABLE($selected) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($options) = ; T_FOREACH ( T_VARIABLE($this) T_AS T_VARIABLE($each_item) ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($include_information_schema) T_BOOLEAN_AND T_STRING ( T_VARIABLE($each_item) ) ) { T_CONTINUE ; } T_VARIABLE($options) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($each_item) ) . ; T_IF ( T_VARIABLE($selected) T_IS_IDENTICAL T_VARIABLE($each_item) ) { T_VARIABLE($options) T_CONCAT_EQUAL ; } T_VARIABLE($options) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($each_item) ) . . ; } T_RETURN T_VARIABLE($options) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ABSTRACT T_PUBLIC T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PROTECTED T_VARIABLE($db_link) = T_STRING ; T_PROTECTED T_VARIABLE($db_link_user) = T_STRING ; T_PROTECTED T_VARIABLE($db_link_control) = T_STRING ; T_PROTECTED T_VARIABLE($show_databases_disabled) = T_STRING ; T_PROTECTED T_VARIABLE($command) = T_STRING ; T_PUBLIC T_STRING ( T_VARIABLE($db_link_user) = T_STRING , T_VARIABLE($db_link_control) = T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($db_link_user) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($db_link_user) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($db_link_control) ; T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_IF ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_RETURN ; } T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($db) ) { T_IF ( T_STRING ( . T_VARIABLE($GLOBALS) [ ] [ ] [ ] . , T_VARIABLE($db) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($key) ) ; } } } T_PROTECTED T_STRING ( T_VARIABLE($like_db_name) = T_STRING ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_ARRAY ( ) ; } T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($like_db_name) ) { T_VARIABLE($command) = . T_VARIABLE($like_db_name) . ; } T_ELSEIF ( T_STRING T_IS_IDENTICAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($command) = T_STRING ( , T_VARIABLE($GLOBALS) [ ] [ ] [ ] , T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($command) ; } T_ELSE { T_VARIABLE($command) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($database_list) = T_STRING ( T_VARIABLE($command) , T_STRING , T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_IDENTICAL T_LNUMBER ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($database_list) = T_STRING ( T_VARIABLE($command) , T_STRING , T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_IDENTICAL T_LNUMBER ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( T_VARIABLE($database_list) ) ; } T_ELSE { T_STRING ( T_VARIABLE($database_list) ) ; } T_RETURN T_VARIABLE($database_list) ; } T_PUBLIC T_STRING ( ) { T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($items) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($items) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_VARIABLE($GLOBALS) [ ] [ ] [ ] = T_ARRAY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; } T_IF ( ! T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_RETURN T_STRING ; } T_VARIABLE($items) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] T_AS T_VARIABLE($each_only_db) ) { T_IF ( ! T_STRING ( , T_VARIABLE($each_only_db) ) ) { T_VARIABLE($items) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($each_only_db) ) ; T_CONTINUE ; } T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($items) = T_STRING ( T_VARIABLE($items) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($each_only_db) ) ) ; T_CONTINUE ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($items) ) ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_RETURN T_VARIABLE($GLOBALS) [ ] ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PUBLIC T_STRING ( T_VARIABLE($offset) , T_VARIABLE($count) ) { T_VARIABLE($dbgroups) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($db_tooltips) = T_STRING ( ) ; } T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($separators) = T_ARRAY ( ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($separators) = T_VARIABLE($GLOBALS) [ ] [ ] ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($separators) = T_ARRAY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ; } T_ELSE { T_VARIABLE($separators) = T_ARRAY ( ) ; } T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($offset) , T_VARIABLE($count) ) T_AS T_VARIABLE($db) ) { T_VARIABLE($db_tooltip) = ; T_IF ( T_ISSET ( T_VARIABLE($db_tooltips) [ T_VARIABLE($db) ] ) ) { T_VARIABLE($db_tooltip) = T_VARIABLE($db_tooltips) [ T_VARIABLE($db) ] ; } T_VARIABLE($pos) = T_STRING ; T_FOREACH ( T_VARIABLE($separators) T_AS T_VARIABLE($separator) ) { T_VARIABLE($pos) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($separator) , T_LNUMBER ) ; T_IF ( T_VARIABLE($pos) T_IS_NOT_IDENTICAL T_STRING ) { T_BREAK ; } } T_IF ( T_VARIABLE($pos) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($group) = T_STRING ( T_VARIABLE($db) , T_LNUMBER , T_VARIABLE($pos) ) ; T_VARIABLE($disp_name_cut) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($pos) ) ; } T_ELSE { T_VARIABLE($group) = T_VARIABLE($db) ; T_VARIABLE($disp_name_cut) = T_VARIABLE($db) ; } T_VARIABLE($disp_name) = T_VARIABLE($db) ; T_VARIABLE($dbgroups) [ T_VARIABLE($group) ] [ T_VARIABLE($db) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db) , T_DOUBLE_ARROW T_VARIABLE($disp_name_cut) , T_DOUBLE_ARROW T_VARIABLE($disp_name) , T_DOUBLE_ARROW T_VARIABLE($db_tooltip) , ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($dbgroups) [ T_VARIABLE($group) ] [ T_VARIABLE($db) ] [ ] = T_STRING ( T_VARIABLE($db) ) ; } } T_RETURN T_VARIABLE($dbgroups) ; } T_PUBLIC T_STRING ( T_VARIABLE($offset) , T_VARIABLE($count) ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($offset) , T_VARIABLE($count) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($selected) = , T_VARIABLE($offset) = T_LNUMBER , T_VARIABLE($count) = T_LNUMBER ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($selected) ) { T_VARIABLE($selected) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($return) = . ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($offset) , T_VARIABLE($count) ) T_AS T_VARIABLE($group) T_DOUBLE_ARROW T_VARIABLE($dbs) ) { T_IF ( T_STRING ( T_VARIABLE($dbs) ) > T_LNUMBER ) { T_VARIABLE($return) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($group) ) . . ; T_VARIABLE($cut) = T_STRING ; } T_ELSE { T_VARIABLE($cut) = T_STRING ; } T_FOREACH ( T_VARIABLE($dbs) T_AS T_VARIABLE($db) ) { T_VARIABLE($return) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($db) [ ] T_IS_EQUAL T_VARIABLE($selected) ) { T_VARIABLE($return) T_CONCAT_EQUAL ; } T_VARIABLE($return) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($db) [ ] ) ) { T_VARIABLE($return) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($db) [ ] ) . ; } T_VARIABLE($return) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] [ ] . . T_STRING ( T_VARIABLE($db) [ ] ) . ; T_IF ( T_VARIABLE($cut) ) { T_VARIABLE($return) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($db) [ ] ) ; } T_ELSE { T_VARIABLE($return) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($db) [ ] ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($db) [ ] ) ) { T_VARIABLE($return) T_CONCAT_EQUAL . T_VARIABLE($db) [ ] . ; } T_VARIABLE($return) T_CONCAT_EQUAL . ; } T_IF ( T_STRING ( T_VARIABLE($dbs) ) > T_LNUMBER ) { T_VARIABLE($return) T_CONCAT_EQUAL . ; } } T_VARIABLE($return) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($return) ; } T_PUBLIC T_STRING ( T_VARIABLE($selected) = , T_VARIABLE($offset) = T_LNUMBER , T_VARIABLE($count) = T_LNUMBER ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($selected) ) { T_VARIABLE($selected) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($return) = . . . . T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . . T_STRING ( ) . . ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($offset) , T_VARIABLE($count) ) T_AS T_VARIABLE($group) T_DOUBLE_ARROW T_VARIABLE($dbs) ) { T_IF ( T_STRING ( T_VARIABLE($dbs) ) > T_LNUMBER ) { T_VARIABLE($return) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($group) ) . . ; T_VARIABLE($cut) = T_STRING ; } T_ELSE { T_VARIABLE($cut) = T_STRING ; } T_FOREACH ( T_VARIABLE($dbs) T_AS T_VARIABLE($db) ) { T_VARIABLE($return) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($db) [ ] ) . . . T_STRING ( T_VARIABLE($db) [ ] ) . ; T_IF ( T_VARIABLE($db) [ ] T_IS_EQUAL T_VARIABLE($selected) T_BOOLEAN_OR ( T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($db) [ ] ) T_IS_EQUAL T_STRING ( T_VARIABLE($selected) ) ) ) { T_VARIABLE($return) T_CONCAT_EQUAL ; } T_VARIABLE($return) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($cut) ? T_VARIABLE($db) [ ] : T_VARIABLE($db) [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($db) [ ] ) ) { T_VARIABLE($return) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($db) [ ] ) . ; } T_VARIABLE($return) T_CONCAT_EQUAL . ; } T_IF ( T_STRING ( T_VARIABLE($dbs) ) > T_LNUMBER ) { T_VARIABLE($return) T_CONCAT_EQUAL . ; } } T_VARIABLE($return) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($return) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($local_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) . ; T_VARIABLE($tmp_mydbs) = T_STRING ( T_VARIABLE($local_query) , T_STRING , T_STRING , T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_VARIABLE($tmp_mydbs) ) { T_VARIABLE($tmp_alldbs) = T_STRING ( , T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($tmp_mydbs) [ ] ) ) { T_WHILE ( T_VARIABLE($tmp_row) = T_STRING ( T_VARIABLE($tmp_alldbs) ) ) { T_VARIABLE($dblist) [ ] = T_VARIABLE($tmp_row) [ T_LNUMBER ] ; } } T_ELSE { T_WHILE ( T_VARIABLE($tmp_row) = T_STRING ( T_VARIABLE($tmp_alldbs) ) ) { T_VARIABLE($tmp_db) = T_VARIABLE($tmp_row) [ T_LNUMBER ] ; T_IF ( T_ISSET ( T_VARIABLE($tmp_mydbs) [ T_VARIABLE($tmp_db) ] ) T_BOOLEAN_AND T_VARIABLE($tmp_mydbs) [ T_VARIABLE($tmp_db) ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($dblist) [ ] = T_VARIABLE($tmp_db) ; T_VARIABLE($tmp_mydbs) [ T_VARIABLE($tmp_db) ] = T_LNUMBER ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($dblist) [ T_VARIABLE($tmp_db) ] ) ) { T_FOREACH ( T_VARIABLE($tmp_mydbs) T_AS T_VARIABLE($tmp_matchpattern) T_DOUBLE_ARROW T_VARIABLE($tmp_value) ) { T_VARIABLE($re) = ; T_VARIABLE($tmp_regex) = T_STRING ( . T_STRING ( T_VARIABLE($re) , ) . , , T_STRING ( . T_STRING ( T_VARIABLE($re) , ) . , , T_VARIABLE($tmp_matchpattern) ) ) ; T_IF ( T_STRING ( . T_STRING ( T_VARIABLE($tmp_regex) , ) . , T_VARIABLE($tmp_db) ) ) { T_VARIABLE($dblist) [ ] = T_VARIABLE($tmp_db) ; T_BREAK ; } } } } } T_STRING ( T_VARIABLE($tmp_alldbs) ) ; T_UNSET ( T_VARIABLE($tmp_mydbs) ) ; } T_VARIABLE($local_query) = ; T_VARIABLE($local_query) T_CONCAT_EQUAL ; T_VARIABLE($local_query) T_CONCAT_EQUAL ; T_VARIABLE($local_query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) . ; T_VARIABLE($rs) = T_STRING ( T_VARIABLE($local_query) , T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_VARIABLE($rs) T_BOOLEAN_AND @ T_STRING ( T_VARIABLE($rs) ) ) { T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($rs) ) ) { T_IF ( ! T_STRING ( T_VARIABLE($row) [ ] , T_VARIABLE($dblist) ) ) { T_VARIABLE($dblist) [ ] = T_VARIABLE($row) [ ] ; } } T_STRING ( T_VARIABLE($rs) ) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_log_user) ( T_VARIABLE($user) , T_VARIABLE($status) = ) { T_IF ( T_STRING ( ) ) { T_STRING ( , T_VARIABLE($user) ) ; T_STRING ( , T_VARIABLE($status) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PRIVATE T_VARIABLE($_server) ; T_PRIVATE T_VARIABLE($_db) ; T_PRIVATE T_VARIABLE($_table) ; T_PUBLIC T_STRING ( T_VARIABLE($server) , T_VARIABLE($db) , T_VARIABLE($table) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($server) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($db) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($table) ; } T_PUBLIC T_STRING ( ) { T_ECHO T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) , T_LNUMBER , T_LNUMBER ) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($tabs) = T_ARRAY ( ) ; T_VARIABLE($url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($tabs) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($url_params) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_ELSE T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($tabs) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_VARIABLE($tabs) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tabs) , T_VARIABLE($url_params) , , T_STRING ) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($retval) = ; T_VARIABLE($tbl_is_view) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($server_info) = ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ? T_VARIABLE($GLOBALS) [ ] [ ] [ ] : T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_VARIABLE($server_info) T_CONCAT_EQUAL T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ? : . T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_VARIABLE($separator) = ; T_VARIABLE($item) = ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($item) T_CONCAT_EQUAL ; } T_VARIABLE($item) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW ) ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($item) , T_VARIABLE($GLOBALS) [ ] [ ] , T_STRING ( ) , T_STRING ( T_VARIABLE($server_info) ) , T_STRING ( ) ) ; T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($separator) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW ) ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($item) , T_VARIABLE($GLOBALS) [ ] [ ] , T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( ) ) ; T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ! ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) ) { T_INCLUDE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($separator) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($icon) = T_VARIABLE($tbl_is_view) ? : ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($icon) , , T_ARRAY ( T_DOUBLE_ARROW ) ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($item) , T_VARIABLE($GLOBALS) [ ] [ ] , T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( , , T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) , T_VARIABLE($tbl_is_view) ? T_STRING ( ) : T_STRING ( ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($show_comment) ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($show_comment) , ) ) { T_VARIABLE($show_comment) = T_STRING ( , , T_VARIABLE($show_comment) ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($show_comment) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } } T_ELSE { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($comment) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($comment) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($comment) ) . ; } } } } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($db_is_information_schema) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($tbl_is_view) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($table_info_num_rows) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($tabs) = T_ARRAY ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] [ ] = T_LNUMBER ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) , T_ARRAY ( , ) ) ; T_IF ( ! T_VARIABLE($db_is_information_schema) ) { T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; } T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_IF ( ! T_VARIABLE($tbl_is_view) T_BOOLEAN_AND ! T_VARIABLE($db_is_information_schema) ) { T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; } T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( ) ) { T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; } T_IF ( ! T_VARIABLE($db_is_information_schema) T_BOOLEAN_AND ! T_STRING T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ! T_VARIABLE($tbl_is_view) ) { T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; } T_IF ( T_VARIABLE($tbl_is_view) T_BOOLEAN_AND ! T_VARIABLE($db_is_information_schema) ) { T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; } T_RETURN T_VARIABLE($tabs) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($db_is_information_schema) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($num_tables) = T_STRING ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($is_superuser) = T_STRING ( ) ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_VARIABLE($tabs) = T_ARRAY ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] [ ] = T_LNUMBER ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_IF ( T_VARIABLE($num_tables) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; } T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_IF ( T_VARIABLE($num_tables) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; } T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_IF ( T_VARIABLE($num_tables) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; } T_IF ( ! T_VARIABLE($db_is_information_schema) ) { T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_IF ( T_VARIABLE($is_superuser) T_BOOLEAN_AND ! T_STRING ) { T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($tabs) [ ] [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; } T_IF ( ! T_STRING ) { T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; } T_IF ( T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND ! T_STRING T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; } T_IF ( ! T_STRING T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; } } T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( ) ) { T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; } T_IF ( ! T_VARIABLE($db_is_information_schema) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; } T_RETURN T_VARIABLE($tabs) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($is_superuser) = T_STRING ( ) ; T_VARIABLE($binary_logs) = T_STRING ; T_IF ( ! T_STRING ( ) T_BOOLEAN_OR ( T_STRING ( ) T_BOOLEAN_AND ! T_STRING ) ) { T_VARIABLE($binary_logs) = T_STRING ( , , T_STRING , T_STRING , T_STRING ) ; } T_VARIABLE($tabs) = T_ARRAY ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) , T_ARRAY ( , , , , ) ) ; T_IF ( T_VARIABLE($is_superuser) T_BOOLEAN_AND ! T_STRING ) { T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; } T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) , T_ARRAY ( , ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($binary_logs) ) ) { T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; } T_IF ( T_VARIABLE($is_superuser) T_BOOLEAN_AND ! T_STRING ) { T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; } T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_IF ( T_STRING ( ) T_BOOLEAN_AND T_STRING ) { T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; } T_ELSE { T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; } T_RETURN T_VARIABLE($tabs) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_STRING { T_CONST T_STRING = T_LNUMBER ; T_CONST T_STRING = T_LNUMBER ; T_CONST T_STRING = T_LNUMBER ; T_CONST T_STRING = T_LNUMBER ; T_CONST T_STRING = T_LNUMBER ; T_CONST T_STRING = T_LNUMBER ; T_CONST T_STRING = T_LNUMBER ; T_STATIC T_PUBLIC T_VARIABLE($level) = T_ARRAY ( T_STRING T_DOUBLE_COLON T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_COLON T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_COLON T_STRING T_DOUBLE_ARROW , ) ; T_PROTECTED T_VARIABLE($number) = T_STRING T_DOUBLE_COLON T_STRING ; T_PROTECTED T_VARIABLE($string) = ; T_PROTECTED T_VARIABLE($message) = ; T_PROTECTED T_VARIABLE($isDisplayed) = T_STRING ; T_PROTECTED T_VARIABLE($hash) = T_STRING ; T_PROTECTED T_VARIABLE($params) = T_ARRAY ( ) ; T_PROTECTED T_VARIABLE($addedMessages) = T_ARRAY ( ) ; T_PUBLIC T_STRING ( T_VARIABLE($string) = , T_VARIABLE($number) = T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($params) = T_ARRAY ( ) , T_VARIABLE($sanitize) = T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($string) , T_VARIABLE($sanitize) & T_STRING T_DOUBLE_COLON T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($number) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($params) , T_VARIABLE($sanitize) & T_STRING T_DOUBLE_COLON T_STRING ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($string) = ) { T_IF ( T_EMPTY ( T_VARIABLE($string) ) ) { T_VARIABLE($string) = T_STRING ( ) ; } T_RETURN T_NEW T_STRING ( T_VARIABLE($string) , T_STRING T_DOUBLE_COLON T_STRING ) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($string) = ) { T_IF ( T_EMPTY ( T_VARIABLE($string) ) ) { T_VARIABLE($string) = T_STRING ( ) ; } T_RETURN T_NEW T_STRING ( T_VARIABLE($string) , T_STRING T_DOUBLE_COLON T_STRING ) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($string) ) { T_RETURN T_NEW T_STRING ( T_VARIABLE($string) , T_STRING T_DOUBLE_COLON T_STRING ) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($message) , T_VARIABLE($type) = T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($r) = T_NEW T_STRING ( , T_VARIABLE($type) ) ; T_VARIABLE($r) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($message) ) ; T_RETURN T_VARIABLE($r) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($rows) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( , , T_VARIABLE($rows) ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($rows) ) ; T_RETURN T_VARIABLE($message) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($rows) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( , , T_VARIABLE($rows) ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($rows) ) ; T_RETURN T_VARIABLE($message) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($rows) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( , , T_VARIABLE($rows) ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($rows) ) ; T_RETURN T_VARIABLE($message) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($message) ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) , T_STRING T_DOUBLE_COLON T_STRING ) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($message) ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) , T_STRING T_DOUBLE_COLON T_STRING ) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($message) ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) , T_STRING T_DOUBLE_COLON T_STRING ) ; } T_PUBLIC T_STRING ( T_VARIABLE($set) = T_STRING ) { T_IF ( T_VARIABLE($set) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_IDENTICAL T_STRING T_DOUBLE_COLON T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($set) = T_STRING ) { T_IF ( T_VARIABLE($set) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_IDENTICAL T_STRING T_DOUBLE_COLON T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($set) = T_STRING ) { T_IF ( T_VARIABLE($set) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_IDENTICAL T_STRING T_DOUBLE_COLON T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($message) , T_VARIABLE($sanitize) = T_STRING ) { T_IF ( T_VARIABLE($sanitize) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($message) ; } T_PUBLIC T_STRING ( T_VARIABLE($string) , T_VARIABLE($sanitize) = T_STRING ) { T_IF ( T_VARIABLE($sanitize) ) { T_VARIABLE($string) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($string) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($string) ; } T_PUBLIC T_STRING ( T_VARIABLE($number) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($number) ; } T_PUBLIC T_STRING ( T_VARIABLE($param) , T_VARIABLE($raw) = T_STRING ) { T_IF ( T_VARIABLE($param) T_INSTANCEOF T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($param) ; } T_ELSEIF ( T_VARIABLE($raw) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( T_VARIABLE($param) ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($param) ) ; } } T_PUBLIC T_STRING ( T_VARIABLE($string) , T_VARIABLE($separator) = ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($separator) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($string) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($messages) , T_VARIABLE($separator) = ) { T_FOREACH ( T_VARIABLE($messages) T_AS T_VARIABLE($message) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($message) , T_VARIABLE($separator) ) ; } } T_PUBLIC T_STRING ( T_VARIABLE($message) , T_VARIABLE($separator) = ) { T_IF ( T_STRING ( T_VARIABLE($separator) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($separator) ; } T_IF ( T_VARIABLE($message) T_INSTANCEOF T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($message) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) ) ; } } T_PUBLIC T_STRING ( T_VARIABLE($params) , T_VARIABLE($sanitize) = T_STRING ) { T_IF ( T_VARIABLE($sanitize) ) { T_VARIABLE($params) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($params) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($params) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($message) ) { T_IF ( T_STRING ( T_VARIABLE($message) ) ) { T_FOREACH ( T_VARIABLE($message) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($message) [ T_VARIABLE($key) ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($val) ) ; } T_RETURN T_VARIABLE($message) ; } T_RETURN T_STRING ( T_VARIABLE($message) ) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($message) ) { T_RETURN T_STRING ( T_VARIABLE($message) , T_STRING , T_STRING ) ; } T_STATIC T_PUBLIC T_STRING ( ) { T_VARIABLE($params) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($params) [ T_LNUMBER ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($params) [ T_LNUMBER ] ) ) { T_STRING ( T_VARIABLE($params) [ T_LNUMBER ] , T_VARIABLE($params) [ T_LNUMBER ] ) ; T_VARIABLE($params) = T_VARIABLE($params) [ T_LNUMBER ] ; } T_RETURN T_STRING ( , T_VARIABLE($params) ) ; } T_PUBLIC T_STRING ( ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($message) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_LNUMBER T_IS_IDENTICAL T_STRING ( T_VARIABLE($message) ) ) { T_VARIABLE($string) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ T_VARIABLE($string) ] ) ) { T_VARIABLE($message) = T_VARIABLE($GLOBALS) [ T_VARIABLE($string) ] ; } T_ELSEIF ( T_LNUMBER T_IS_IDENTICAL T_STRING ( T_VARIABLE($string) ) ) { T_VARIABLE($message) = ; } T_ELSE { T_VARIABLE($message) = T_VARIABLE($string) ; } } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($message) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($message) ) ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) > T_LNUMBER ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($add_message) ) { T_VARIABLE($message) T_CONCAT_EQUAL T_VARIABLE($add_message) ; } T_RETURN T_VARIABLE($message) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($level) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ] ; } T_PUBLIC T_STRING ( ) { T_ECHO T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_RETURN . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . ; } T_PUBLIC T_STRING ( T_VARIABLE($isDisplayed) = T_STRING ) { T_IF ( T_VARIABLE($isDisplayed) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($message) ) { T_VARIABLE($image) = ; T_IF ( T_IS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($image) = ; } T_ELSEIF ( T_IS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($image) = ; } T_ELSE { T_VARIABLE($image) = ; } T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($image) ) ) . . T_VARIABLE($message) ; T_RETURN T_VARIABLE($message) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_detectMIME) ( & T_VARIABLE($test) ) { T_VARIABLE($len) = T_STRING ( T_VARIABLE($test) ) ; T_IF ( T_VARIABLE($len) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($test) [ T_LNUMBER ] T_IS_EQUAL T_STRING ( T_LNUMBER ) T_BOOLEAN_AND T_VARIABLE($test) [ T_LNUMBER ] T_IS_EQUAL T_STRING ( T_LNUMBER ) ) { T_RETURN ; } T_IF ( T_VARIABLE($len) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($test) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_RETURN ; } T_IF ( T_VARIABLE($len) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($test) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_RETURN ; } T_RETURN ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_VARIABLE($request_params) = T_ARRAY ( , , , , , , , , , , , , , , , ) ; T_FOREACH ( T_VARIABLE($request_params) T_AS T_VARIABLE($one_request_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ T_VARIABLE($one_request_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_request_param) ] = T_VARIABLE($_REQUEST) [ T_VARIABLE($one_request_param) ] ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($submit_mult) ) T_BOOLEAN_AND T_VARIABLE($submit_mult) T_IS_NOT_EQUAL T_STRING ( ) T_BOOLEAN_AND ( ! T_EMPTY ( T_VARIABLE($selected_db) ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($selected_tbl) ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($selected_fld) ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($rows_to_delete) ) ) ) { T_STRING ( , T_LNUMBER ) ; T_IF ( T_ISSET ( T_VARIABLE($selected_db) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($selected_db) ) ) { T_VARIABLE($selected) = T_VARIABLE($selected_db) ; T_VARIABLE($what) = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($selected_tbl) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($selected_tbl) ) ) { T_IF ( T_VARIABLE($submit_mult) T_IS_EQUAL ) { T_INCLUDE ; } T_ELSE { T_VARIABLE($selected) = T_VARIABLE($selected_tbl) ; T_SWITCH ( T_VARIABLE($submit_mult) ) { T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_VARIABLE($what) = T_VARIABLE($submit_mult) ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_CASE : T_VARIABLE($query_type) = T_VARIABLE($submit_mult) ; T_UNSET ( T_VARIABLE($submit_mult) ) ; T_VARIABLE($mult_btn) = T_STRING ( ) ; T_BREAK ; T_CASE : T_UNSET ( T_VARIABLE($submit_mult) ) ; T_INCLUDE ; T_EXIT ; T_BREAK ; } } } T_ELSEIF ( T_ISSET ( T_VARIABLE($selected_fld) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($selected_fld) ) ) { T_VARIABLE($selected) = T_VARIABLE($selected_fld) ; T_SWITCH ( T_VARIABLE($submit_mult) ) { T_CASE : T_VARIABLE($what) = ; T_BREAK ; T_CASE : T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ) ; T_VARIABLE($primary) = ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($primary) T_CONCAT_EQUAL T_VARIABLE($row) [ ] . ; } } T_STRING ( T_VARIABLE($result) ) ; T_IF ( T_EMPTY ( T_VARIABLE($primary) ) ) { T_UNSET ( T_VARIABLE($submit_mult) ) ; T_VARIABLE($query_type) = ; T_VARIABLE($mult_btn) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($what) = ; } T_BREAK ; T_CASE : T_UNSET ( T_VARIABLE($submit_mult) ) ; T_VARIABLE($query_type) = ; T_VARIABLE($mult_btn) = T_STRING ( ) ; T_BREAK ; T_CASE : T_UNSET ( T_VARIABLE($submit_mult) ) ; T_VARIABLE($query_type) = ; T_VARIABLE($mult_btn) = T_STRING ( ) ; T_BREAK ; T_CASE : T_UNSET ( T_VARIABLE($submit_mult) ) ; T_VARIABLE($query_type) = ; T_VARIABLE($mult_btn) = T_STRING ( ) ; T_BREAK ; T_CASE : T_UNSET ( T_VARIABLE($submit_mult) ) ; T_VARIABLE($query_type) = ; T_VARIABLE($mult_btn) = T_STRING ( ) ; T_BREAK ; T_CASE : T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($selected) , T_VARIABLE($action) ) ; T_EXIT ; T_CASE : } } T_ELSE { T_VARIABLE($what) = ; T_VARIABLE($selected) = T_VARIABLE($rows_to_delete) ; } } T_VARIABLE($views) = T_STRING ( T_VARIABLE($db) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($submit_mult) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($what) ) ) { T_UNSET ( T_VARIABLE($message) ) ; T_IF ( T_STRING ( T_VARIABLE($table) ) ) { T_INCLUDE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_INCLUDE ; } T_ELSEIF ( T_STRING ( T_VARIABLE($db) ) ) { T_INCLUDE ; T_INCLUDE ; } T_ELSE { T_INCLUDE_ONCE ; } T_VARIABLE($full_query) = ; T_IF ( T_VARIABLE($what) T_IS_EQUAL ) { T_VARIABLE($full_query_views) = ; } T_VARIABLE($selected_cnt) = T_STRING ( T_VARIABLE($selected) ) ; T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($selected) T_AS T_VARIABLE($idx) T_DOUBLE_ARROW T_VARIABLE($sval) ) { T_SWITCH ( T_VARIABLE($what) ) { T_CASE : T_VARIABLE($full_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_STRING ( T_VARIABLE($sval) ) . . ; T_BREAK ; T_CASE : T_VARIABLE($full_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($sval) ) ) . ; T_VARIABLE($reload) = T_LNUMBER ; T_BREAK ; T_CASE : T_VARIABLE($current) = T_VARIABLE($sval) ; T_IF ( ! T_EMPTY ( T_VARIABLE($views) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($current) , T_VARIABLE($views) ) ) { T_VARIABLE($full_query_views) T_CONCAT_EQUAL ( T_EMPTY ( T_VARIABLE($full_query_views) ) ? : ) . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($current) ) ) ; } T_ELSE { T_VARIABLE($full_query) T_CONCAT_EQUAL ( T_EMPTY ( T_VARIABLE($full_query) ) ? : ) . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($current) ) ) ; } T_BREAK ; T_CASE : T_VARIABLE($full_query) T_CONCAT_EQUAL ; T_VARIABLE($full_query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($sval) ) ) . ; T_BREAK ; T_CASE : T_IF ( T_VARIABLE($full_query) T_IS_EQUAL ) { T_VARIABLE($full_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($table) ) ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($sval) ) ) . ; } T_ELSE { T_VARIABLE($full_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($sval) ) ) . ; } T_IF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($selected_cnt) - T_LNUMBER ) { T_VARIABLE($full_query) = T_STRING ( , , T_VARIABLE($full_query) ) ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($full_query) T_IS_EQUAL ) { T_VARIABLE($full_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($table) ) ) ; } T_VARIABLE($full_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($sval) ) ) . ; T_IF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($selected_cnt) - T_LNUMBER ) { T_VARIABLE($full_query) = T_STRING ( , , T_VARIABLE($full_query) ) ; } T_BREAK ; } T_VARIABLE($i) T_INC ; } T_IF ( T_VARIABLE($what) T_IS_EQUAL ) { T_IF ( ! T_EMPTY ( T_VARIABLE($full_query) ) ) { T_VARIABLE($full_query) T_CONCAT_EQUAL . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($full_query_views) ) ) { T_VARIABLE($full_query) T_CONCAT_EQUAL T_VARIABLE($full_query_views) . . ; } T_UNSET ( T_VARIABLE($full_query_views) ) ; } T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($what) , T_DOUBLE_ARROW ( ! T_EMPTY ( T_VARIABLE($reload) ) ? T_LNUMBER : T_LNUMBER ) , ) ; T_IF ( T_STRING ( . T_VARIABLE($action) , ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($_url_params) [ ] = T_VARIABLE($db) ; } T_ELSEIF ( T_STRING ( . T_VARIABLE($action) , ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR T_VARIABLE($what) T_IS_EQUAL ) { T_VARIABLE($_url_params) [ ] = T_VARIABLE($db) ; T_VARIABLE($_url_params) [ ] = T_VARIABLE($table) ; } T_FOREACH ( T_VARIABLE($selected) T_AS T_VARIABLE($idx) T_DOUBLE_ARROW T_VARIABLE($sval) ) { T_IF ( T_VARIABLE($what) T_IS_EQUAL ) { T_VARIABLE($_url_params) [ ] [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_STRING ( T_VARIABLE($sval) ) . ; } T_ELSE { T_VARIABLE($_url_params) [ ] [ ] = T_VARIABLE($sval) ; } } T_IF ( T_VARIABLE($what) T_IS_EQUAL T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($views) ) ) { T_FOREACH ( T_VARIABLE($views) T_AS T_VARIABLE($current) ) { T_VARIABLE($_url_params) [ ] [ ] = T_VARIABLE($current) ; } } T_IF ( T_VARIABLE($what) T_IS_EQUAL ) { T_VARIABLE($_url_params) [ ] = T_VARIABLE($original_sql_query) ; T_IF ( ! T_EMPTY ( T_VARIABLE($original_url_query) ) ) { T_VARIABLE($_url_params) [ ] = T_VARIABLE($original_url_query) ; } } T_IF ( T_VARIABLE($what) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($what) T_IS_EQUAL ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($action) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($_url_params) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO ( T_VARIABLE($what) T_IS_EQUAL ? T_STRING ( ) : T_STRING ( ) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSEIF ( T_VARIABLE($what) T_IS_EQUAL ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($action) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($_url_params) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSE { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($what) T_IS_EQUAL ) { T_ECHO T_STRING ( ) . ; } T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($full_query) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($action) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($_url_params) ) ; T_IF ( T_VARIABLE($what) T_IS_EQUAL ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($default_fk_check_value) = ( T_STRING ( , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) ? T_LNUMBER : T_LNUMBER ; T_ECHO ( T_VARIABLE($default_fk_check_value) ) ? : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO ( T_VARIABLE($default_fk_check_value) ) ? T_STRING ( ) : T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($action) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($_url_params) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_EXIT ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($mult_btn) ) T_BOOLEAN_AND T_VARIABLE($mult_btn) T_IS_EQUAL T_STRING ( ) ) { T_IF ( T_VARIABLE($query_type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($query_type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($query_type) T_IS_EQUAL ) { T_INCLUDE_ONCE ; } T_VARIABLE($sql_query) = ; T_IF ( T_VARIABLE($query_type) T_IS_EQUAL ) { T_VARIABLE($sql_query_views) = ; } T_VARIABLE($selected_cnt) = T_STRING ( T_VARIABLE($selected) ) ; T_VARIABLE($run_parts) = T_STRING ; T_VARIABLE($use_sql) = T_STRING ; T_IF ( T_VARIABLE($query_type) T_IS_EQUAL ) { T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ) ; T_VARIABLE($primary) = ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($primary) T_CONCAT_EQUAL T_VARIABLE($row) [ ] . ; } } T_STRING ( T_VARIABLE($result) ) ; } T_VARIABLE($rebuild_database_list) = T_STRING ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($selected_cnt) ; T_VARIABLE($i) T_INC ) { T_SWITCH ( T_VARIABLE($query_type) ) { T_CASE : T_VARIABLE($a_query) = T_VARIABLE($selected) [ T_VARIABLE($i) ] ; T_VARIABLE($run_parts) = T_STRING ; T_BREAK ; T_CASE : T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) ; T_VARIABLE($a_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) ; T_VARIABLE($reload) = T_LNUMBER ; T_VARIABLE($run_parts) = T_STRING ; T_VARIABLE($rebuild_database_list) = T_STRING ; T_BREAK ; T_CASE : T_STRING ( T_VARIABLE($db) , T_VARIABLE($selected) [ T_VARIABLE($i) ] ) ; T_VARIABLE($current) = T_VARIABLE($selected) [ T_VARIABLE($i) ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($views) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($current) , T_VARIABLE($views) ) ) { T_VARIABLE($sql_query_views) T_CONCAT_EQUAL ( T_EMPTY ( T_VARIABLE($sql_query_views) ) ? : ) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current) ) ; } T_ELSE { T_VARIABLE($sql_query) T_CONCAT_EQUAL ( T_EMPTY ( T_VARIABLE($sql_query) ) ? : ) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current) ) ; } T_VARIABLE($reload) = T_LNUMBER ; T_BREAK ; T_CASE : T_VARIABLE($sql_query) T_CONCAT_EQUAL ( T_EMPTY ( T_VARIABLE($sql_query) ) ? : ) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) ; T_VARIABLE($use_sql) = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($sql_query) T_CONCAT_EQUAL ( T_EMPTY ( T_VARIABLE($sql_query) ) ? : ) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) ; T_VARIABLE($use_sql) = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($sql_query) T_CONCAT_EQUAL ( T_EMPTY ( T_VARIABLE($sql_query) ) ? : ) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) ; T_VARIABLE($use_sql) = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($sql_query) T_CONCAT_EQUAL ( T_EMPTY ( T_VARIABLE($sql_query) ) ? : ) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) ; T_VARIABLE($use_sql) = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($a_query) = ; T_VARIABLE($a_query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) ; T_VARIABLE($run_parts) = T_STRING ; T_BREAK ; T_CASE : T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($selected) [ T_VARIABLE($i) ] ) ; T_VARIABLE($sql_query) T_CONCAT_EQUAL ( T_EMPTY ( T_VARIABLE($sql_query) ) ? . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) : ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) . ( ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($selected_cnt) - T_LNUMBER ) ? : ) ; T_BREAK ; T_CASE : T_VARIABLE($sql_query) T_CONCAT_EQUAL ( T_EMPTY ( T_VARIABLE($sql_query) ) ? . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ( T_EMPTY ( T_VARIABLE($primary) ) ? : ) . : ) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) . ( ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($selected_cnt) - T_LNUMBER ) ? : ) ; T_BREAK ; T_CASE : T_VARIABLE($sql_query) T_CONCAT_EQUAL ( T_EMPTY ( T_VARIABLE($sql_query) ) ? . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . : ) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) . ( ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($selected_cnt) - T_LNUMBER ) ? : ) ; T_BREAK ; T_CASE : T_VARIABLE($sql_query) T_CONCAT_EQUAL ( T_EMPTY ( T_VARIABLE($sql_query) ) ? . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . : ) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) . ( ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($selected_cnt) - T_LNUMBER ) ? : ) ; T_BREAK ; T_CASE : T_VARIABLE($sql_query) T_CONCAT_EQUAL ( T_EMPTY ( T_VARIABLE($sql_query) ) ? . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . : ) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) . ( ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($selected_cnt) - T_LNUMBER ) ? : ) ; T_BREAK ; T_CASE : T_VARIABLE($sql_query) T_CONCAT_EQUAL ( T_EMPTY ( T_VARIABLE($sql_query) ) ? . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . : ) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) . ( ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($selected_cnt) - T_LNUMBER ) ? : ) ; T_BREAK ; T_CASE : T_VARIABLE($newtablename) = T_VARIABLE($_POST) [ ] . T_VARIABLE($selected) [ T_VARIABLE($i) ] ; T_VARIABLE($a_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($newtablename) ) ; T_VARIABLE($run_parts) = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($current) = T_VARIABLE($selected) [ T_VARIABLE($i) ] ; T_IF ( T_STRING ( T_VARIABLE($current) , T_LNUMBER , T_STRING ( T_VARIABLE($from_prefix) ) ) T_IS_EQUAL T_VARIABLE($from_prefix) ) { T_VARIABLE($newtablename) = T_VARIABLE($to_prefix) . T_STRING ( T_VARIABLE($current) , T_STRING ( T_VARIABLE($from_prefix) ) ) ; } T_ELSE { T_VARIABLE($newtablename) = T_VARIABLE($current) ; } T_VARIABLE($a_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($newtablename) ) ; T_VARIABLE($run_parts) = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($current) = T_VARIABLE($selected) [ T_VARIABLE($i) ] ; T_IF ( T_STRING ( T_VARIABLE($current) , T_LNUMBER , T_STRING ( T_VARIABLE($from_prefix) ) ) T_IS_EQUAL T_VARIABLE($from_prefix) ) { T_VARIABLE($newtablename) = T_VARIABLE($to_prefix) . T_STRING ( T_VARIABLE($current) , T_STRING ( T_VARIABLE($from_prefix) ) ) ; } T_ELSE { T_VARIABLE($newtablename) = T_VARIABLE($current) ; } T_VARIABLE($newtablename) = T_VARIABLE($to_prefix) . T_STRING ( T_VARIABLE($current) , T_STRING ( T_VARIABLE($from_prefix) ) ) ; T_VARIABLE($a_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($newtablename) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) ; T_VARIABLE($run_parts) = T_STRING ; T_BREAK ; } T_IF ( T_VARIABLE($run_parts) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($a_query) . . ; T_IF ( T_VARIABLE($query_type) T_IS_NOT_EQUAL ) { T_STRING ( T_VARIABLE($db) ) ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($a_query) ) ; T_IF ( T_VARIABLE($query_type) T_IS_EQUAL ) { T_STRING ( T_VARIABLE($selected) [ T_VARIABLE($i) ] ) ; } T_ELSEIF ( T_VARIABLE($query_type) T_IS_EQUAL ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($selected) [ T_VARIABLE($i) ] ) ; } T_ELSE T_IF ( T_VARIABLE($query_type) T_IS_EQUAL ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($selected) [ T_VARIABLE($i) ] ) ; } } } T_IF ( T_VARIABLE($query_type) T_IS_EQUAL ) { T_VARIABLE($default_fk_check_value) = ( T_STRING ( , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) ? T_LNUMBER : T_LNUMBER ; T_IF ( ! T_EMPTY ( T_VARIABLE($sql_query) ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($sql_query_views) ) ) { T_VARIABLE($sql_query) = T_VARIABLE($sql_query_views) . ; T_UNSET ( T_VARIABLE($sql_query_views) ) ; } } T_IF ( T_VARIABLE($use_sql) ) { T_INCLUDE ; } T_ELSEIF ( ! T_VARIABLE($run_parts) ) { T_STRING ( T_VARIABLE($db) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($query_type) T_IS_EQUAL ) { T_STRING ( ) ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($query_type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($default_fk_check_value) ) { T_STRING ( ) ; } T_IF ( T_VARIABLE($result) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($sql_query_views) ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($sql_query_views) . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query_views) ) ; T_UNSET ( T_VARIABLE($sql_query_views) ) ; } T_IF ( ! T_VARIABLE($result) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } } T_IF ( T_VARIABLE($rebuild_database_list) ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; } } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_IF ( ! T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ) { T_GLOBAL T_VARIABLE($mysql_charsets) , T_VARIABLE($mysql_charsets_descriptions) , T_VARIABLE($mysql_charsets_available) , T_VARIABLE($mysql_collations) , T_VARIABLE($mysql_collations_available) , T_VARIABLE($mysql_default_collations) , T_VARIABLE($mysql_collations_flat) ; T_VARIABLE($sql) = T_STRING ? : ; T_VARIABLE($res) = T_STRING ( T_VARIABLE($sql) ) ; T_VARIABLE($mysql_charsets) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($res) ) ) { T_VARIABLE($mysql_charsets) [ ] = T_VARIABLE($row) [ ] ; T_VARIABLE($mysql_charsets_descriptions) [ T_VARIABLE($row) [ ] ] = T_VARIABLE($row) [ ] ; } T_STRING ( T_VARIABLE($res) ) ; T_STRING ( T_VARIABLE($mysql_charsets) , T_STRING ) ; T_VARIABLE($mysql_collations) = T_STRING ( T_VARIABLE($mysql_charsets) ) ; T_VARIABLE($mysql_default_collations) = T_VARIABLE($mysql_collations_flat) = T_VARIABLE($mysql_charsets_available) = T_VARIABLE($mysql_collations_available) = T_ARRAY ( ) ; T_VARIABLE($sql) = T_STRING ? : ; T_VARIABLE($res) = T_STRING ( T_VARIABLE($sql) ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($res) ) ) { T_IF ( ! T_STRING ( T_VARIABLE($mysql_collations) [ T_VARIABLE($row) [ ] ] ) ) { T_VARIABLE($mysql_collations) [ T_VARIABLE($row) [ ] ] = T_ARRAY ( T_VARIABLE($row) [ ] ) ; } T_ELSE { T_VARIABLE($mysql_collations) [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) [ ] ; } T_VARIABLE($mysql_collations_flat) [ ] = T_VARIABLE($row) [ ] ; T_IF ( T_VARIABLE($row) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($mysql_default_collations) [ T_VARIABLE($row) [ ] ] = T_VARIABLE($row) [ ] ; } T_VARIABLE($mysql_collations_available) [ T_VARIABLE($row) [ ] ] = T_STRING ; T_VARIABLE($mysql_charsets_available) [ T_VARIABLE($row) [ ] ] = ! T_EMPTY ( T_VARIABLE($mysql_charsets_available) [ T_VARIABLE($row) [ ] ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($mysql_collations_available) [ T_VARIABLE($row) [ ] ] ) ; } T_STRING ( T_VARIABLE($res) ) ; T_UNSET ( T_VARIABLE($res) , T_VARIABLE($row) ) ; T_IF ( T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($mysql_collations) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($mysql_collations) [ ] ) ) { T_VARIABLE($mysql_collations) [ ] = T_VARIABLE($mysql_collations) [ ] ; T_VARIABLE($mysql_default_collations) [ ] = T_VARIABLE($mysql_default_collations) [ ] ; T_VARIABLE($mysql_charsets_available) [ ] = T_VARIABLE($mysql_charsets_available) [ ] ; T_UNSET ( T_VARIABLE($mysql_collations) [ ] , T_VARIABLE($mysql_default_collations) [ ] , T_VARIABLE($mysql_charsets_available) [ ] ) ; } T_STRING ( T_VARIABLE($mysql_collations_flat) , T_STRING ) ; T_FOREACH ( T_VARIABLE($mysql_collations) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_STRING ( T_VARIABLE($mysql_collations) [ T_VARIABLE($key) ] , T_STRING ) ; T_STRING ( T_VARIABLE($mysql_collations) [ T_VARIABLE($key) ] ) ; } T_UNSET ( T_VARIABLE($key) , T_VARIABLE($value} T_ELSE {} T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(PMA_generateCharsetDropdownBox) ( T_VARIABLE($type) = T_STRING , T_VARIABLE($name) = T_STRING , T_VARIABLE($id) = T_STRING , T_VARIABLE($default) = T_STRING , T_VARIABLE($label) = T_STRING , T_VARIABLE($indent) = T_LNUMBER , T_VARIABLE($submitOnChange) = T_STRING , T_VARIABLE($displayUnavailable) = T_STRING ) { T_GLOBAL T_VARIABLE($mysql_charsets) , T_VARIABLE($mysql_charsets_descriptions) , T_VARIABLE($mysql_charsets_available) , T_VARIABLE($mysql_collations) , T_VARIABLE($mysql_collations_available) ; T_IF ( T_EMPTY ( T_VARIABLE($name) ) ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL T_STRING ) { T_VARIABLE($name) = ; } T_ELSE { T_VARIABLE($name) = ; } } T_VARIABLE($return_str) = . T_STRING ( T_VARIABLE($name) ) . . ( T_EMPTY ( T_VARIABLE($id) ) ? : . T_STRING ( T_VARIABLE($id) ) . ) . ( T_VARIABLE($submitOnChange) ? : ) . . ; T_IF ( T_VARIABLE($label) ) { T_VARIABLE($return_str) T_CONCAT_EQUAL . ( T_VARIABLE($type) T_IS_EQUAL T_STRING ? T_STRING ( ) : T_STRING ( ) ) . . ; } T_VARIABLE($return_str) T_CONCAT_EQUAL . ; T_FOREACH ( T_VARIABLE($mysql_charsets) T_AS T_VARIABLE($current_charset) ) { T_IF ( ! T_VARIABLE($mysql_charsets_available) [ T_VARIABLE($current_charset) ] ) { T_CONTINUE ; } T_VARIABLE($current_cs_descr) = T_EMPTY ( T_VARIABLE($mysql_charsets_descriptions) [ T_VARIABLE($current_charset) ] ) ? T_VARIABLE($current_charset) : T_VARIABLE($mysql_charsets_descriptions) [ T_VARIABLE($current_charset) ] ; T_IF ( T_VARIABLE($type) T_IS_EQUAL T_STRING ) { T_VARIABLE($return_str) T_CONCAT_EQUAL . T_VARIABLE($current_charset) . . T_VARIABLE($current_cs_descr) . . ; T_FOREACH ( T_VARIABLE($mysql_collations) [ T_VARIABLE($current_charset) ] T_AS T_VARIABLE($current_collation) ) { T_IF ( ! T_VARIABLE($mysql_collations_available) [ T_VARIABLE($current_collation) ] ) { T_CONTINUE ; } T_VARIABLE($return_str) T_CONCAT_EQUAL . T_VARIABLE($current_collation) . . T_STRING ( T_VARIABLE($current_collation) ) . . ( T_VARIABLE($default) T_IS_EQUAL T_VARIABLE($current_collation) ? : ) . . T_VARIABLE($current_collation) . . ; } T_VARIABLE($return_str) T_CONCAT_EQUAL . ; } T_ELSE { T_VARIABLE($return_str) T_CONCAT_EQUAL . T_VARIABLE($current_charset) . . T_VARIABLE($current_cs_descr) . . ( T_VARIABLE($default) T_IS_EQUAL T_VARIABLE($current_charset) ? : ) . . T_VARIABLE($current_charset) . . ; } } T_VARIABLE($return_str) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($return_str) ; } T_FUNCTION(PMA_generateCharsetQueryPart) ( T_VARIABLE($collation) ) { T_IF ( ! T_STRING ) { T_LIST ( T_VARIABLE($charset) ) = T_STRING ( , T_VARIABLE($collation) ) ; T_RETURN . T_VARIABLE($charset) . ( T_VARIABLE($charset) T_IS_EQUAL T_VARIABLE($collation) ? : . T_VARIABLE($collation) ) ; } T_ELSE { T_RETURN . T_VARIABLE($collation) ; } } T_FUNCTION(PMA_getDbCollation) ( T_VARIABLE($db) ) { T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_RETURN ; } T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($sql) = T_STRING ? . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . : . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_RETURN T_STRING ( T_VARIABLE($sql) ) ; } T_ELSE { T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($return) = T_STRING ( , T_LNUMBER , T_LNUMBER ) ; T_IF ( T_VARIABLE($db) T_IS_NOT_IDENTICAL T_VARIABLE($GLOBALS) [ ] ) { T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; } T_RETURN T_VARIABLE($return) ; } } T_FUNCTION(PMA_getServerCollation) ( ) { T_RETURN T_STRING ( , T_LNUMBER , T_LNUMBER ) ; } T_FUNCTION(PMA_getCollationDescr) ( T_VARIABLE($collation) ) { T_IF ( T_VARIABLE($collation) T_IS_EQUAL ) { T_RETURN T_STRING ( ) ; } T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($collation) ) ; T_IF ( T_STRING ( T_VARIABLE($parts) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($parts) [ T_LNUMBER ] = ; } T_ELSEIF ( T_VARIABLE($parts) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($parts) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($parts) [ T_LNUMBER ] = T_VARIABLE($parts) [ T_LNUMBER ] ; T_VARIABLE($parts) [ T_LNUMBER ] = ; } T_VARIABLE($descr) = ; T_SWITCH ( T_VARIABLE($parts) [ T_LNUMBER ] ) { T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_IF ( T_VARIABLE($parts) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($parts) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($descr) = T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($parts) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($descr) = T_STRING ( ) ; } T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) . . T_STRING ( ) . ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) . . T_STRING ( ) . ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) . . T_STRING ( ) . ; T_BREAK ; T_CASE : T_VARIABLE($is_bin) = T_STRING ; T_CASE : T_SWITCH ( T_VARIABLE($parts) [ T_LNUMBER ] ) { T_CASE : T_CASE : T_VARIABLE($descr) = T_STRING ( ) . . T_STRING ( ) . ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_VARIABLE($descr) = T_STRING ( ) . . T_STRING ( ) . ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_CASE : T_VARIABLE($descr) = T_STRING ( ) . . T_STRING ( ) . ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($descr) = T_STRING ( ) . . T_STRING ( ) . ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) . . T_STRING ( ) . ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; T_DEFAULT : T_VARIABLE($descr) = T_STRING ( ) ; T_BREAK ; } T_IF ( ! T_EMPTY ( T_VARIABLE($is_bin) ) ) { T_VARIABLE($descr) T_CONCAT_EQUAL . T_STRING ( ) ; } T_BREAK ; T_DEFAULT : T_VARIABLE($descr) = T_STRING ( ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($parts) [ T_LNUMBER ] ) ) { T_IF ( T_VARIABLE($parts) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($descr) T_CONCAT_EQUAL . T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($parts) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($descr) T_CONCAT_EQUAL . T_STRING ( ) ; } } T_RETURN T_VARIABLE($descr) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING { T_PUBLIC T_STRING ( ) { T_IF ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_SESSION) [ ] ; } } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = ; T_IF ( ! T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($header) = T_NEW T_STRING ( ) ; T_VARIABLE($retval) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($tree) = T_NEW T_STRING ( ) ; T_IF ( ! T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($treeRender) = T_VARIABLE($tree) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_VARIABLE($treeRender) = T_VARIABLE($tree) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( ! T_VARIABLE($treeRender) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($treeRender) ; } T_IF ( ! T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($retval) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PUBLIC T_STRING ( ) { T_IF ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ( ) ; } T_VARIABLE($link_url) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; T_VARIABLE($class) = ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($class) T_CONCAT_EQUAL ; } T_VARIABLE($class) T_CONCAT_EQUAL ; T_VARIABLE($buffer) = ; T_VARIABLE($buffer) T_CONCAT_EQUAL ; T_VARIABLE($buffer) T_CONCAT_EQUAL ; T_VARIABLE($buffer) T_CONCAT_EQUAL ; T_VARIABLE($buffer) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($link_url) ) ; T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($buffer) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; T_VARIABLE($buffer) T_CONCAT_EQUAL . T_VARIABLE($class) . ; T_RETURN T_VARIABLE($buffer) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($retval) = ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($logo) = ; T_IF ( @ T_STRING ( T_VARIABLE($GLOBALS) [ ] . ) ) { T_VARIABLE($logo) = . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($logo) . ; } T_ELSEIF ( @ T_STRING ( T_VARIABLE($GLOBALS) [ ] . ) ) { T_VARIABLE($logo) = . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($logo) . ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_SWITCH ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_CASE : T_VARIABLE($retval) T_CONCAT_EQUAL ; T_BREAK ; T_CASE : T_IF ( T_STRING ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) , T_LNUMBER , T_LNUMBER ) T_IS_NOT_IDENTICAL ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] . ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL ; } } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($logo) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($logo) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( T_VARIABLE($link) , T_VARIABLE($showText) , T_VARIABLE($text) , T_VARIABLE($showIcon) , T_VARIABLE($icon) , T_VARIABLE($linkId) = , T_VARIABLE($disableAjax) = T_STRING , T_VARIABLE($linkTarget) = ) { T_VARIABLE($retval) = . T_VARIABLE($link) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($linkId) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($linkId) . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($linkTarget) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($linkTarget) . ; } T_IF ( T_VARIABLE($disableAjax) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($text) . ; T_IF ( T_VARIABLE($showIcon) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($icon) , T_VARIABLE($text) ) ; } T_IF ( T_VARIABLE($showText) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($text) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($showText) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($iconicNav) = T_VARIABLE($GLOBALS) [ ] [ ] ; T_VARIABLE($showIcon) = T_VARIABLE($iconicNav) T_IS_IDENTICAL T_STRING T_BOOLEAN_OR T_VARIABLE($iconicNav) T_IS_IDENTICAL ; T_VARIABLE($showText) = T_VARIABLE($iconicNav) T_IS_IDENTICAL T_STRING T_BOOLEAN_OR T_VARIABLE($iconicNav) T_IS_IDENTICAL ; T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_STRING ( ) , T_VARIABLE($showText) , T_STRING ( ) , T_VARIABLE($showIcon) , ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_LNUMBER ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($link) = . T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($link) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($link) , T_VARIABLE($showText) , T_STRING ( ) , T_VARIABLE($showIcon) , , , T_STRING ) ; } T_VARIABLE($link) = ; T_VARIABLE($link) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($link) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($link) , T_VARIABLE($showText) , T_STRING ( ) , T_VARIABLE($showIcon) , , , T_STRING ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( ) , T_VARIABLE($showText) , T_STRING ( ) , T_VARIABLE($showIcon) , , , T_STRING , ) ; T_IF ( T_VARIABLE($showIcon) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , T_STRING ) ; } T_IF ( T_VARIABLE($showText) ) { T_VARIABLE($link) = T_STRING ( , T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( , , T_STRING ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($link) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($showText) , T_STRING ( ) , T_VARIABLE($showIcon) , , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($retval) = ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) > T_LNUMBER ) { T_INCLUDE_ONCE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING , T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($retval) = ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] > T_LNUMBER ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($retval) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PRIVATE T_VARIABLE($_tree) ; T_PRIVATE T_VARIABLE($_aPath) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_vPath) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_pos) ; T_PRIVATE T_VARIABLE($_pos2_name) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_pos2_value) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_pos3_name) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_pos3_value) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_searchClause) = ; T_PRIVATE T_VARIABLE($_searchClause2) = ; T_PUBLIC T_STRING ( ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_INT_CAST T_VARIABLE($_REQUEST) [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_LNUMBER ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_LNUMBER ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_LNUMBER ] = T_VARIABLE($_REQUEST) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_LNUMBER ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_LNUMBER ] = T_VARIABLE($_REQUEST) [ ] ; } } T_ELSE T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($count) = T_LNUMBER ; T_WHILE ( T_ISSET ( T_VARIABLE($_REQUEST) [ . T_VARIABLE($count) . ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($count) ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ . T_VARIABLE($count) . ] ) ; T_VARIABLE($index) = . T_VARIABLE($count) . ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($count) ] = T_VARIABLE($_REQUEST) [ T_VARIABLE($index) . ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($count) ] = T_VARIABLE($_REQUEST) [ T_VARIABLE($index) . ] ; T_VARIABLE($index) = . T_VARIABLE($count) . ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ T_VARIABLE($index) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($count) ] = T_VARIABLE($_REQUEST) [ T_VARIABLE($index) . ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($count) ] = T_VARIABLE($_REQUEST) [ T_VARIABLE($index) . ] ; } T_VARIABLE($count) T_INC ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_LNUMBER ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSE T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($count) = T_LNUMBER ; T_WHILE ( T_ISSET ( T_VARIABLE($_REQUEST) [ . T_VARIABLE($count) . ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($count) ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ . T_VARIABLE($count) . ] ) ; T_VARIABLE($count) T_INC ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($node) = T_STRING T_DOUBLE_COLON T_STRING ( , , T_STRING T_DOUBLE_COLON T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($node) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING = T_VARIABLE($GLOBALS) [ ] [ ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } } T_PRIVATE T_STRING ( ) { T_VARIABLE($retval) = T_LNUMBER ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($retval) = T_STRING ( T_STRING ( T_VARIABLE($query) , T_INT_CAST T_VARIABLE($GLOBALS) [ ] [ ] , T_INT_CAST T_VARIABLE($GLOBALS) [ ] [ ] , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) ) ; } T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( T_VARIABLE($string) ) { T_VARIABLE($path) = T_STRING ( , T_VARIABLE($string) ) ; T_FOREACH ( T_VARIABLE($path) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($path) [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($value) ) ; } T_RETURN T_VARIABLE($path) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($retval) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($data) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($db) ) { T_VARIABLE($node) = T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($db) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) ) ; } T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($path) ) { T_VARIABLE($retval) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] , T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] ) ? T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] : , T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] ) ? T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] : ) ; } T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( T_VARIABLE($path) , T_VARIABLE($type2) , T_VARIABLE($pos2) , T_VARIABLE($type3) , T_VARIABLE($pos3) ) { T_VARIABLE($retval) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($path) ) > T_LNUMBER ) { T_STRING ( T_VARIABLE($path) ) ; T_VARIABLE($db) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) [ T_LNUMBER ] ) ; T_VARIABLE($retval) = T_VARIABLE($db) ; T_IF ( T_VARIABLE($db) T_IS_IDENTICAL T_STRING ) { T_RETURN T_STRING ; } T_VARIABLE($containers) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($type2) , T_VARIABLE($pos2) ) ; T_STRING ( T_VARIABLE($path) ) ; T_IF ( ( T_STRING ( T_VARIABLE($path) ) > T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($path) [ T_LNUMBER ] , T_VARIABLE($containers) ) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($containers) ) T_IS_EQUAL T_LNUMBER ) { T_IF ( T_STRING ( T_VARIABLE($containers) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($container) = T_STRING ( T_VARIABLE($containers) ) ; } T_ELSE { T_VARIABLE($container) = T_VARIABLE($db) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) [ T_LNUMBER ] , T_STRING ) ; T_IF ( T_VARIABLE($container) T_IS_IDENTICAL T_STRING ) { T_RETURN T_STRING ; } } T_VARIABLE($retval) = T_VARIABLE($container) ; T_IF ( T_STRING ( T_VARIABLE($container) T_OBJECT_OPERATOR T_STRING ) T_IS_SMALLER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($dbData) = T_VARIABLE($db) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($container) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($pos2) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_FOREACH ( T_VARIABLE($dbData) T_AS T_VARIABLE($item) ) { T_SWITCH ( T_VARIABLE($container) T_OBJECT_OPERATOR T_STRING ) { T_CASE : T_VARIABLE($node) = T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($item) ) ; T_BREAK ; T_CASE : T_VARIABLE($node) = T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($item) ) ; T_BREAK ; T_CASE : T_VARIABLE($node) = T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($item) ) ; T_BREAK ; T_CASE : T_VARIABLE($node) = T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($item) ) ; T_BREAK ; T_CASE : T_VARIABLE($node) = T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($item) ) ; T_BREAK ; T_DEFAULT : T_BREAK ; } T_IF ( T_ISSET ( T_VARIABLE($node) ) ) { T_IF ( T_VARIABLE($type2) T_IS_EQUAL T_VARIABLE($container) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($pos2) ; } T_VARIABLE($container) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) ) ; } } } T_IF ( T_STRING ( T_VARIABLE($path) ) > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($path) [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($retval) = T_STRING ; } T_ELSE { T_STRING ( T_VARIABLE($path) ) ; T_IF ( T_STRING ( T_VARIABLE($path) ) > T_LNUMBER ) { T_VARIABLE($table) = T_VARIABLE($container) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) [ T_LNUMBER ] , T_STRING ) ; T_IF ( T_VARIABLE($table) T_IS_IDENTICAL T_STRING ) { T_RETURN T_STRING ; } T_VARIABLE($retval) = T_VARIABLE($table) ; T_VARIABLE($containers) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($table) , T_VARIABLE($pos2) , T_VARIABLE($type3) , T_VARIABLE($pos3) ) ; T_STRING ( T_VARIABLE($path) ) ; T_IF ( T_STRING ( T_VARIABLE($path) ) > T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($path) [ T_LNUMBER ] , T_VARIABLE($containers) ) ) { T_VARIABLE($container) = T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) [ T_LNUMBER ] , T_STRING ) ; T_VARIABLE($retval) = T_VARIABLE($container) ; T_VARIABLE($tableData) = T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($container) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($pos3) ) ; T_FOREACH ( T_VARIABLE($tableData) T_AS T_VARIABLE($item) ) { T_SWITCH ( T_VARIABLE($container) T_OBJECT_OPERATOR T_STRING ) { T_CASE : T_VARIABLE($node) = T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($item) ) ; T_BREAK ; T_CASE : T_VARIABLE($node) = T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($item) ) ; T_BREAK ; T_CASE : T_VARIABLE($node) = T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($item) ) ; T_BREAK ; T_DEFAULT : T_BREAK ; } T_IF ( T_ISSET ( T_VARIABLE($node) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($container) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ; T_IF ( T_VARIABLE($type3) T_IS_EQUAL T_VARIABLE($container) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($pos3) ; } T_VARIABLE($container) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) ) ; } } } } } } } T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( T_VARIABLE($table) , T_VARIABLE($pos2) , T_VARIABLE($type3) , T_VARIABLE($pos3) ) { T_VARIABLE($retval) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ( T_STRING ) T_IS_EQUAL T_LNUMBER ) { T_IF ( T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($retval) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_IF ( T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($retval) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_IF ( T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($retval) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_FOREACH ( T_VARIABLE($retval) T_AS T_VARIABLE($node) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($pos2) ; T_IF ( T_VARIABLE($type3) T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($pos3) ; } T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) ) ; } } T_ELSE { T_FOREACH ( T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($node) ) { T_IF ( T_VARIABLE($type3) T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($pos3) ; } T_VARIABLE($retval) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($node) ; } } T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( T_VARIABLE($db) , T_VARIABLE($type) , T_VARIABLE($pos2) ) { T_VARIABLE($retval) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($db) T_OBJECT_OPERATOR T_STRING ( T_STRING ) T_IS_EQUAL T_LNUMBER ) { T_IF ( T_VARIABLE($db) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($retval) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_IF ( T_VARIABLE($db) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($retval) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_IF ( T_VARIABLE($db) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($retval) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_IF ( T_VARIABLE($db) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($retval) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_IF ( T_VARIABLE($db) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($retval) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_FOREACH ( T_VARIABLE($retval) T_AS T_VARIABLE($node) ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($pos2) ; } T_VARIABLE($db) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) ) ; } } T_ELSE { T_FOREACH ( T_VARIABLE($db) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($node) ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($pos2) ; } T_VARIABLE($retval) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($node) ; } } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( T_VARIABLE($node) = T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($node) ) ) { T_VARIABLE($node) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) ) ; T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($child) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($child) ) ; } } T_PUBLIC T_STRING ( T_VARIABLE($node) ) { T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($separators) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($separators) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_ELSE T_IF ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($separators) [ ] = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($prefixes) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING > T_LNUMBER ) { T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($child) ) { T_VARIABLE($prefix_pos) = T_STRING ; T_FOREACH ( T_VARIABLE($separators) T_AS T_VARIABLE($separator) ) { T_VARIABLE($sep_pos) = T_STRING ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($separator) ) ; T_IF ( T_VARIABLE($sep_pos) T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($sep_pos) T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($sep_pos) T_IS_NOT_EQUAL T_LNUMBER T_BOOLEAN_AND ( T_VARIABLE($prefix_pos) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($sep_pos) < T_VARIABLE($prefix_pos) ) ) { T_VARIABLE($prefix_pos) = T_VARIABLE($sep_pos) ; } } T_IF ( T_VARIABLE($prefix_pos) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($prefix) = T_STRING ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_VARIABLE($prefix_pos) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($prefixes) [ T_VARIABLE($prefix) ] ) ) { T_VARIABLE($prefixes) [ T_VARIABLE($prefix) ] = T_LNUMBER ; } T_ELSE { T_VARIABLE($prefixes) [ T_VARIABLE($prefix) ] T_INC ; } } } } T_FOREACH ( T_VARIABLE($prefixes) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_VARIABLE($value) T_IS_EQUAL T_LNUMBER ) { T_UNSET ( T_VARIABLE($prefixes) [ T_VARIABLE($key) ] ) ; } } T_IF ( T_STRING ( T_VARIABLE($prefixes) ) ) { T_VARIABLE($groups) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($prefixes) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($groups) [ T_VARIABLE($key) ] = T_NEW T_STRING ( T_VARIABLE($key) , T_STRING T_DOUBLE_COLON T_STRING , T_STRING ) ; T_VARIABLE($groups) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($groups) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING - T_LNUMBER ; T_VARIABLE($groups) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($groups) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_VARIABLE($groups) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($groups) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($groups) [ T_VARIABLE($key) ] ) ; T_FOREACH ( T_VARIABLE($separators) T_AS T_VARIABLE($separator) ) { T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($child) ) { T_VARIABLE($name_substring) = T_STRING ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_STRING ( T_VARIABLE($key) ) + T_STRING ( T_VARIABLE($separator) ) ) ; T_IF ( T_VARIABLE($name_substring) T_IS_EQUAL T_VARIABLE($key) . T_VARIABLE($separator) T_BOOLEAN_AND T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($class) = T_STRING ( T_VARIABLE($child) ) ; T_VARIABLE($new_child) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($class) , T_STRING ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING , T_STRING ( T_VARIABLE($key) ) + T_STRING ( T_VARIABLE($separator) ) ) ) ; T_VARIABLE($new_child) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($new_child) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($new_child) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($new_child) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($new_child) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($groups) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_child) ) ; T_FOREACH ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($elm) ) { T_VARIABLE($new_child) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($elm) ) ; } T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ) ; } } } } T_FOREACH ( T_VARIABLE($prefixes) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($groups) [ T_VARIABLE($key) ] ) ; T_VARIABLE($groups) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = ; } } } } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($children) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ; T_STRING ( T_VARIABLE($children) , T_ARRAY ( , ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($children) ) ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($i) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($children) [ T_LNUMBER ] , T_STRING , ) ; } T_ELSE T_IF ( T_VARIABLE($i) + T_LNUMBER T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($children) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($children) [ T_VARIABLE($i) ] , T_STRING ) ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($children) [ T_VARIABLE($i) ] , T_STRING , ) ; } } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($node) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($node) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($retval) = T_STRING ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) ) ; T_VARIABLE($children) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_STRING ( T_VARIABLE($children) , T_ARRAY ( , ) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($children) ) ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($i) + T_LNUMBER T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($children) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($children) [ T_VARIABLE($i) ] , T_STRING ) ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($children) [ T_VARIABLE($i) ] , T_STRING , ) ; } } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($results) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($results) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($clientResults) = T_LNUMBER ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($clientResults) = T_INT_CAST T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($otherResults) = T_VARIABLE($results) - T_VARIABLE($clientResults) ; T_IF ( T_VARIABLE($otherResults) < T_LNUMBER ) { T_VARIABLE($otherResults) = ; } T_ELSE { T_VARIABLE($otherResults) = T_STRING ( T_STRING ( , , T_VARIABLE($otherResults) ) , T_VARIABLE($otherResults) ) ; } T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($otherResults) ) ; } T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( T_VARIABLE($node) ) { T_VARIABLE($retval) = ; T_VARIABLE($paths) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($paths) [ ] [ T_LNUMBER ] ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($paths) [ ] [ T_LNUMBER ] ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_IF ( T_ISSET ( T_VARIABLE($paths) [ ] [ T_LNUMBER ] ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($paths) [ ] [ T_LNUMBER ] ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( T_VARIABLE($node) , T_VARIABLE($recursive) = - T_LNUMBER , T_VARIABLE($class) = ) { T_VARIABLE($retval) = ; T_VARIABLE($paths) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( ) T_IS_IDENTICAL T_STRING ) { T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING ) { T_RETURN ; } T_VARIABLE($liClass) = ; T_IF ( T_VARIABLE($class) T_BOOLEAN_OR T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($liClass) = . T_STRING ( T_VARIABLE($class) . . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) . ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($liClass) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($sterile) = T_ARRAY ( , , , , , , ) ; T_VARIABLE($parentName) = ; T_VARIABLE($parents) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( T_STRING , T_STRING ) ; T_IF ( T_STRING ( T_VARIABLE($parents) ) ) { T_VARIABLE($parentName) = T_VARIABLE($parents) [ T_LNUMBER ] T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_OR ( ! T_STRING ( T_VARIABLE($parentName) , T_VARIABLE($sterile) ) T_BOOLEAN_AND ! T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($loaded) = ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($loaded) = ; } T_VARIABLE($container) = ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($container) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($iClass) = ; T_IF ( T_VARIABLE($class) T_IS_EQUAL ) { T_VARIABLE($iClass) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($iClass) T_ENCAPSED_AND_WHITESPACE ; T_IF ( T_STRING ( T_VARIABLE($class) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($icon) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($match) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($path) ) { T_VARIABLE($match) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($paths) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($part) ) { T_IF ( ! T_ISSET ( T_VARIABLE($path) [ T_VARIABLE($key) ] ) T_BOOLEAN_OR T_VARIABLE($part) T_IS_NOT_EQUAL T_VARIABLE($path) [ T_VARIABLE($key) ] ) { T_VARIABLE($match) = T_LNUMBER ; T_BREAK ; } } T_IF ( T_VARIABLE($match) ) { T_VARIABLE($loaded) = ; T_IF ( ! T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($icon) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_BREAK ; } } T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($path) ) { T_VARIABLE($match) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($paths) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($part) ) { T_IF ( ( ! T_ISSET ( T_VARIABLE($path) [ T_VARIABLE($key) ] ) T_BOOLEAN_OR T_VARIABLE($part) T_IS_NOT_EQUAL T_VARIABLE($path) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($match) = T_LNUMBER ; T_BREAK ; } } T_IF ( T_VARIABLE($match) ) { T_VARIABLE($loaded) = ; T_VARIABLE($icon) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_BREAK ; } } T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($loaded) T_VARIABLE($container) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($paths) [ ] ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($paths) [ ] ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($icon) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($iClass) = ; T_IF ( T_VARIABLE($class) T_IS_EQUAL ) { T_VARIABLE($iClass) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($iClass) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($linkClass) = ; T_VARIABLE($haveAjax) = T_ARRAY ( , , , , ) ; T_VARIABLE($parent) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($parent) [ T_LNUMBER ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($parent) [ T_LNUMBER ] T_OBJECT_OPERATOR T_STRING , T_VARIABLE($haveAjax) ) T_BOOLEAN_OR ( T_VARIABLE($parent) [ T_LNUMBER ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ) ) ) { T_VARIABLE($linkClass) = ; } T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($args) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( T_STRING ) T_AS T_VARIABLE($parent) ) { T_VARIABLE($args) [ ] = T_STRING ( T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($link) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] , T_VARIABLE($args) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($linkClass) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($link) T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING } T_ENCAPSED_AND_WHITESPACE ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING } T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($args) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( T_STRING ) T_AS T_VARIABLE($parent) ) { T_VARIABLE($args) [ ] = T_STRING ( T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($link) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] , T_VARIABLE($args) ) ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($link) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($title) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($title) ) { T_VARIABLE($title) = . T_STRING ( T_VARIABLE($title) , T_STRING ) . ; } } T_ELSE { T_VARIABLE($title) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($linkClass) T_VARIABLE($title) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($link) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_CURLY_OPEN T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING } ; } T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($wrap) = T_STRING ; } T_ELSE { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($wrap) = T_STRING ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) ) ; } T_IF ( T_VARIABLE($recursive) ) { T_VARIABLE($hide) = ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ) { T_VARIABLE($hide) = ; } T_VARIABLE($children) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_STRING ( T_VARIABLE($children) , T_ARRAY ( , ) ) ; T_VARIABLE($buffer) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($children) ) ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($i) + T_LNUMBER T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($children) ) ) { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($children) [ T_VARIABLE($i) ] , T_STRING , T_VARIABLE($children) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($children) [ T_VARIABLE($i) ] , T_STRING , T_VARIABLE($children) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING . ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($buffer) ) ) { T_IF ( T_VARIABLE($wrap) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($hide) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($buffer) ; T_IF ( T_VARIABLE($wrap) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } } } T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_FUNCTION(_setVisibility) ( ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($path) ) { T_VARIABLE($node) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_FOREACH ( T_VARIABLE($path) T_AS T_VARIABLE($value) ) { T_VARIABLE($child) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($value) ) ; T_IF ( T_VARIABLE($child) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($node) = T_VARIABLE($child) ; } } } } T_PRIVATE T_FUNCTION(_fastFilterHtml) ( T_VARIABLE($node) ) { T_VARIABLE($retval) = ; T_IF ( T_VARIABLE($node) T_IS_IDENTICAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) T_IS_GREATER_OR_EQUAL T_INT_CAST T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($url_params) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($url_params) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE T_IF ( ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING T_BOOLEAN_AND ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) ) T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_IS_GREATER_OR_EQUAL T_INT_CAST T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($paths) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($paths) [ ] , T_DOUBLE_ARROW T_VARIABLE($paths) [ ] , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($url_params) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_FUNCTION(_getPageSelector) ( T_VARIABLE($node) ) { T_VARIABLE($retval) = ; T_IF ( T_VARIABLE($node) T_IS_IDENTICAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] ) , , , T_VARIABLE($GLOBALS) [ ] [ ] , , T_ARRAY ( ) ) ; } T_ELSE T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING T_BOOLEAN_AND ! T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($paths) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($level) = T_ISSET ( T_VARIABLE($paths) [ ] [ T_LNUMBER ] ) ? T_LNUMBER : T_LNUMBER ; T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($paths) [ ] , T_DOUBLE_ARROW T_VARIABLE($paths) [ ] , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW T_VARIABLE($paths) [ ] [ T_LNUMBER ] ) ; T_IF ( T_VARIABLE($level) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($pos) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($_url_params) [ ] = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($_url_params) [ ] = T_VARIABLE($paths) [ ] [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($pos) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($num) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($num) , T_VARIABLE($pos) , T_VARIABLE($_url_params) , , , T_VARIABLE($GLOBALS) [ ] [ ] , . T_VARIABLE($level) . ) ; } T_RETURN T_VARIABLE($retval) ; } T_STATIC T_PUBLIC T_FUNCTION(sortNode) ( T_VARIABLE($a) , T_VARIABLE($b) ) { T_IF ( T_VARIABLE($a) T_OBJECT_OPERATOR T_STRING ) { T_RETURN - T_LNUMBER ; } T_ELSE T_IF ( T_VARIABLE($b) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_LNUMBER ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_RETURN T_STRING ( T_VARIABLE($a) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($b) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_RETURN T_STRING ( T_VARIABLE($a) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($b) T_OBJECT_OPERATOR T_STRING ) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING { T_PRIVATE T_STATIC T_VARIABLE($_path) = ; T_PRIVATE T_STATIC T_STRING ( T_VARIABLE($class) ) { T_IF ( T_VARIABLE($class) T_IS_NOT_IDENTICAL T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($class) ) ) { T_VARIABLE($class) = ; T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($class) ) , T_STRING ) ; } T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($class) ) ; } T_PRIVATE T_STATIC T_STRING ( T_VARIABLE($class) ) { T_VARIABLE($path) = T_STRING ( T_STRING T_DOUBLE_COLON T_VARIABLE($_path) , T_VARIABLE($class) ) ; T_IF ( ! T_STRING ( T_VARIABLE($path) ) ) { T_VARIABLE($class) = ; T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($class) , . T_VARIABLE($class) . ) , T_STRING ) ; } T_RETURN T_VARIABLE($class) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($class) = , T_VARIABLE($name) = , T_VARIABLE($type) = T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($is_group) = T_STRING ) { T_VARIABLE($class) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($class) ) ; T_INCLUDE_ONCE T_STRING ( T_STRING T_DOUBLE_COLON T_VARIABLE($_path) , T_VARIABLE($class) ) ; T_RETURN T_NEW T_VARIABLE($class) ( T_VARIABLE($name) , T_VARIABLE($type) , T_VARIABLE($is_group) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_CONST T_STRING = T_LNUMBER ; T_CONST T_STRING = T_LNUMBER ; T_PUBLIC T_VARIABLE($name) = ; T_PUBLIC T_VARIABLE($real_name) = ; T_PUBLIC T_VARIABLE($type) = T_STRING T_DOUBLE_COLON T_STRING ; T_PUBLIC T_VARIABLE($is_group) ; T_PUBLIC T_VARIABLE($visible) = T_STRING ; T_PUBLIC T_VARIABLE($parent) ; T_PUBLIC T_VARIABLE($children) = T_ARRAY ( ) ; T_PUBLIC T_VARIABLE($separator) = ; T_PUBLIC T_VARIABLE($separator_depth) = T_LNUMBER ; T_PUBLIC T_VARIABLE($icon) ; T_PUBLIC T_VARIABLE($links) ; T_PUBLIC T_VARIABLE($classes) = ; T_PUBLIC T_VARIABLE($isNew) = T_STRING ; T_PUBLIC T_VARIABLE($pos2) = T_LNUMBER ; T_PUBLIC T_VARIABLE($pos3) = T_LNUMBER ; T_PUBLIC T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) = T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($is_group) = T_STRING ) { T_IF ( ! T_EMPTY ( T_VARIABLE($name) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($name) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($name) ; } T_IF ( T_VARIABLE($type) T_IS_IDENTICAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_BOOL_CAST T_VARIABLE($is_group) ; } T_PUBLIC T_STRING ( T_VARIABLE($child) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($child) ; T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) ; } T_PUBLIC T_STRING ( T_VARIABLE($name) , T_VARIABLE($real_name) = T_STRING ) { T_IF ( T_VARIABLE($real_name) ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($child) ) { T_IF ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($name) ) { T_RETURN T_VARIABLE($child) ; } } } T_ELSE { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($child) ) { T_IF ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($name) ) { T_RETURN T_VARIABLE($child) ; } } } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($name) ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($child) ) { T_IF ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($name) ) { T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] ) ; T_BREAK ; } } } T_PUBLIC T_STRING ( T_VARIABLE($self) = T_STRING , T_VARIABLE($containers) = T_STRING , T_VARIABLE($groups) = T_STRING ) { T_VARIABLE($parents) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($self) T_BOOLEAN_AND ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING T_BOOLEAN_OR T_VARIABLE($containers) ) T_BOOLEAN_AND ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($groups) ) ) { T_VARIABLE($parents) [ ] = T_VARIABLE($this) ; T_VARIABLE($self) = T_STRING ; } T_VARIABLE($parent) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_WHILE ( T_ISSET ( T_VARIABLE($parent) ) ) { T_IF ( ( T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_STRING T_DOUBLE_COLON T_STRING T_BOOLEAN_OR T_VARIABLE($containers) ) T_BOOLEAN_AND ( T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($groups) ) ) { T_VARIABLE($parents) [ ] = T_VARIABLE($parent) ; } T_VARIABLE($parent) = T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING ; } T_RETURN T_VARIABLE($parents) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($retval) ) > T_LNUMBER ) { T_RETURN T_VARIABLE($retval) [ T_LNUMBER ] ; } T_ELSE { T_RETURN T_STRING ; } } T_PUBLIC T_STRING ( T_VARIABLE($count_empty_containers) = T_STRING ) { T_VARIABLE($retval) = T_STRING ; T_IF ( T_VARIABLE($count_empty_containers) ) { T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($retval) = T_STRING ; } } T_ELSE { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($child) ) { T_IF ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING T_BOOLEAN_OR T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ) { T_VARIABLE($retval) = T_STRING ; T_BREAK ; } } } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = T_STRING ; T_VARIABLE($paths) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($paths) [ ] ) > T_LNUMBER ) { T_VARIABLE($retval) = T_STRING ; } T_ELSE { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($child) ) { T_IF ( T_VARIABLE($child) T_IS_NOT_EQUAL T_VARIABLE($this) T_BOOLEAN_AND ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING T_BOOLEAN_OR T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ) ) { T_VARIABLE($retval) = T_STRING ; T_BREAK ; } } } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($child) ) { T_IF ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_VARIABLE($retval) T_INC ; } T_ELSE { T_VARIABLE($retval) T_PLUS_EQUAL T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($aPath) = T_ARRAY ( ) ; T_VARIABLE($aPath_clean) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING , T_STRING , T_STRING ) T_AS T_VARIABLE($parent) ) { T_VARIABLE($aPath) [ ] = T_STRING ( T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($aPath_clean) [ ] = T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($aPath) = T_STRING ( , T_STRING ( T_VARIABLE($aPath) ) ) ; T_VARIABLE($aPath_clean) = T_STRING ( T_VARIABLE($aPath_clean) ) ; T_VARIABLE($vPath) = T_ARRAY ( ) ; T_VARIABLE($vPath_clean) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING , T_STRING , T_STRING ) T_AS T_VARIABLE($parent) ) { T_VARIABLE($vPath) [ ] = T_STRING ( T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($vPath_clean) [ ] = T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($vPath) = T_STRING ( , T_STRING ( T_VARIABLE($vPath) ) ) ; T_VARIABLE($vPath_clean) = T_STRING ( T_VARIABLE($vPath_clean) ) ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($aPath) , T_DOUBLE_ARROW T_VARIABLE($aPath_clean) , T_DOUBLE_ARROW T_VARIABLE($vPath) , T_DOUBLE_ARROW T_VARIABLE($vPath_clean) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($type) , T_VARIABLE($pos) , T_VARIABLE($searchClause) = ) { T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($searchClause) ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($pos) T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($GLOBALS) [ ] [ ] } ; T_RETURN T_STRING ( T_VARIABLE($query) ) ; } T_PUBLIC T_FUNCTION(getComment) ( ) { T_RETURN ; } T_PUBLIC T_FUNCTION(getPresence) ( T_VARIABLE($type) = , T_VARIABLE($searchClause) = ) { T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($searchClause) ) ; T_VARIABLE($retval) = T_INT_CAST T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($query) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($retval) = T_STRING ( T_STRING ( T_VARIABLE($query) ) ) ; } T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_FUNCTION(_getWhereClause) ( T_VARIABLE($searchClause) = ) { T_VARIABLE($whereClause) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($whereClause) T_CONCAT_EQUAL ; T_VARIABLE($whereClause) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($whereClause) T_CONCAT_EQUAL ; } T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_VARIABLE($whereClause) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] [ ] [ ] . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_VARIABLE($GLOBALS) [ ] [ ] [ ] = T_ARRAY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; } T_VARIABLE($whereClause) T_CONCAT_EQUAL ; T_VARIABLE($subClauses) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] T_AS T_VARIABLE($each_only_db) ) { T_VARIABLE($subClauses) [ ] = . T_VARIABLE($each_only_db) . ; } T_VARIABLE($whereClause) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($subClauses) ) . ; } T_RETURN T_VARIABLE($whereClause) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) = T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($is_group) = T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) , T_VARIABLE($is_group) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . . T_VARIABLE($GLOBALS) [ ] ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($column) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($column) T_ENCAPSED_AND_WHITESPACE ; T_RETURN T_STRING ( T_VARIABLE($query) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($new) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( , ) ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . . T_VARIABLE($GLOBALS) [ ] , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) = T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($is_group) = T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) , T_VARIABLE($is_group) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] ) ; } T_PUBLIC T_STRING ( T_VARIABLE($type) = , T_VARIABLE($searchClause) = ) { T_VARIABLE($retval) = T_LNUMBER ; T_VARIABLE($db) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($retval) = T_INT_CAST T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( . T_VARIABLE($db) ) ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($retval) = T_STRING ( T_STRING ( T_VARIABLE($query) ) ) ; } T_BREAK ; T_CASE : T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($retval) = T_INT_CAST T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( . T_VARIABLE($db) ) ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($retval) = T_STRING ( T_STRING ( T_VARIABLE($query) ) ) ; } T_BREAK ; T_CASE : T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($retval) = T_INT_CAST T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($retval) = T_STRING ( T_STRING ( T_VARIABLE($query) ) ) ; } T_BREAK ; T_CASE : T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($retval) = T_INT_CAST T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($retval) = T_STRING ( T_STRING ( T_VARIABLE($query) ) ) ; } T_BREAK ; T_CASE : T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($retval) = T_INT_CAST T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($retval) = T_STRING ( T_STRING ( T_VARIABLE($query) ) ) ; } T_BREAK ; T_DEFAULT : T_BREAK ; } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( T_VARIABLE($type) , T_VARIABLE($pos) , T_VARIABLE($searchClause) = ) { T_VARIABLE($maxItems) = T_VARIABLE($GLOBALS) [ ] [ ] ; T_VARIABLE($retval) = T_ARRAY ( ) ; T_VARIABLE($db) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($pos) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($maxItems) ; T_VARIABLE($retval) = T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( . T_VARIABLE($db) ) ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($handle) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($handle) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($count) = T_LNUMBER ; T_WHILE ( T_VARIABLE($arr) = T_STRING ( T_VARIABLE($handle) ) ) { T_IF ( T_VARIABLE($pos) T_IS_SMALLER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($count) < T_VARIABLE($maxItems) ) { T_VARIABLE($retval) [ ] = T_VARIABLE($arr) [ T_LNUMBER ] ; T_VARIABLE($count) T_INC ; } T_VARIABLE($pos) T_DEC ; } } } T_BREAK ; T_CASE : T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($pos) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($maxItems) ; T_VARIABLE($retval) = T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( . T_VARIABLE($db) ) ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($handle) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($handle) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($count) = T_LNUMBER ; T_WHILE ( T_VARIABLE($arr) = T_STRING ( T_VARIABLE($handle) ) ) { T_IF ( T_VARIABLE($pos) T_IS_SMALLER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($count) < T_VARIABLE($maxItems) ) { T_VARIABLE($retval) [ ] = T_VARIABLE($arr) [ T_LNUMBER ] ; T_VARIABLE($count) T_INC ; } T_VARIABLE($pos) T_DEC ; } } } T_BREAK ; T_CASE : T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($pos) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($maxItems) ; T_VARIABLE($retval) = T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($handle) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($handle) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($count) = T_LNUMBER ; T_WHILE ( T_VARIABLE($arr) = T_STRING ( T_VARIABLE($handle) ) ) { T_IF ( T_VARIABLE($pos) T_IS_SMALLER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($count) < T_VARIABLE($maxItems) ) { T_VARIABLE($retval) [ ] = T_VARIABLE($arr) [ ] ; T_VARIABLE($count) T_INC ; } T_VARIABLE($pos) T_DEC ; } } } T_BREAK ; T_CASE : T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($pos) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($maxItems) ; T_VARIABLE($retval) = T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($handle) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($handle) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($count) = T_LNUMBER ; T_WHILE ( T_VARIABLE($arr) = T_STRING ( T_VARIABLE($handle) ) ) { T_IF ( T_VARIABLE($pos) T_IS_SMALLER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($count) < T_VARIABLE($maxItems) ) { T_VARIABLE($retval) [ ] = T_VARIABLE($arr) [ ] ; T_VARIABLE($count) T_INC ; } T_VARIABLE($pos) T_DEC ; } } } T_BREAK ; T_CASE : T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($pos) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($maxItems) ; T_VARIABLE($retval) = T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_IF ( ! T_EMPTY ( T_VARIABLE($searchClause) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($searchClause) , T_STRING ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($handle) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($handle) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($count) = T_LNUMBER ; T_WHILE ( T_VARIABLE($arr) = T_STRING ( T_VARIABLE($handle) ) ) { T_IF ( T_VARIABLE($pos) T_IS_SMALLER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($count) < T_VARIABLE($maxItems) ) { T_VARIABLE($retval) [ ] = T_VARIABLE($arr) [ ] ; T_VARIABLE($count) T_INC ; } T_VARIABLE($pos) T_DEC ; } } } T_BREAK ; T_DEFAULT : T_BREAK ; } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) = T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($is_group) = T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) , T_VARIABLE($is_group) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($event) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($event) T_ENCAPSED_AND_WHITESPACE ; T_RETURN T_STRING ( T_VARIABLE($query) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($new) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( , ) ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] . , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] . , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) = T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($is_group) = T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) , T_VARIABLE($is_group) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($routine) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($routine) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_RETURN T_STRING ( T_VARIABLE($query) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($new) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( , ) ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] . , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] . , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) = T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($is_group) = T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) , T_VARIABLE($is_group) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($new) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( , ) ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) = T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($is_group) = T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) , T_VARIABLE($is_group) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($routine) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($routine) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_RETURN T_STRING ( T_VARIABLE($query) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($new) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( , ) ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] . , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] . , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) = T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($is_group) = T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) , T_VARIABLE($is_group) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] [ ] . . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] ) ; } T_PUBLIC T_STRING ( T_VARIABLE($type) = , T_VARIABLE($searchClause) = ) { T_VARIABLE($retval) = T_LNUMBER ; T_VARIABLE($db) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($table) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) = T_INT_CAST T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) ; T_VARIABLE($retval) = T_INT_CAST T_STRING ( T_STRING ( T_VARIABLE($query) ) ) ; } T_BREAK ; T_CASE : T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) ; T_VARIABLE($retval) = T_INT_CAST T_STRING ( T_STRING ( T_VARIABLE($query) ) ) ; T_BREAK ; T_CASE : T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) = T_INT_CAST T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) = T_INT_CAST T_STRING ( T_STRING ( T_VARIABLE($query) ) ) ; } T_BREAK ; T_DEFAULT : T_BREAK ; } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( T_VARIABLE($type) , T_VARIABLE($pos) , T_VARIABLE($searchClause) = ) { T_VARIABLE($maxItems) = T_VARIABLE($GLOBALS) [ ] [ ] ; T_VARIABLE($retval) = T_ARRAY ( ) ; T_VARIABLE($db) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($table) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($pos) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($maxItems) ; T_VARIABLE($retval) = T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) ; T_VARIABLE($handle) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($handle) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($count) = T_LNUMBER ; T_WHILE ( T_VARIABLE($arr) = T_STRING ( T_VARIABLE($handle) ) ) { T_IF ( T_VARIABLE($pos) T_IS_SMALLER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($count) < T_VARIABLE($maxItems) ) { T_VARIABLE($retval) [ ] = T_VARIABLE($arr) [ ] ; T_VARIABLE($count) T_INC ; } T_VARIABLE($pos) T_DEC ; } } } T_BREAK ; T_CASE : T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) ; T_VARIABLE($handle) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($handle) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($count) = T_LNUMBER ; T_WHILE ( T_VARIABLE($arr) = T_STRING ( T_VARIABLE($handle) ) ) { T_IF ( ! T_STRING ( T_VARIABLE($arr) [ ] , T_VARIABLE($retval) ) ) { T_IF ( T_VARIABLE($pos) T_IS_SMALLER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($count) < T_VARIABLE($maxItems) ) { T_VARIABLE($retval) [ ] = T_VARIABLE($arr) [ ] ; T_VARIABLE($count) T_INC ; } T_VARIABLE($pos) T_DEC ; } } } T_BREAK ; T_CASE : T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($pos) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($maxItems) ; T_VARIABLE($retval) = T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($handle) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($handle) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($count) = T_LNUMBER ; T_WHILE ( T_VARIABLE($arr) = T_STRING ( T_VARIABLE($handle) ) ) { T_IF ( T_VARIABLE($pos) T_IS_SMALLER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($count) < T_VARIABLE($maxItems) ) { T_VARIABLE($retval) [ ] = T_VARIABLE($arr) [ ] ; T_VARIABLE($count) T_INC ; } T_VARIABLE($pos) T_DEC ; } } } T_BREAK ; T_DEFAULT : T_BREAK ; } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($db) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) = T_STRING ( T_VARIABLE($query) ) ; } T_ELSE { T_VARIABLE($db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($arr) = T_STRING ( T_STRING ( T_VARIABLE($query) ) ) ; T_VARIABLE($retval) = T_VARIABLE($arr) [ ] ; } T_RETURN T_VARIABLE($retval) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($GLOBALS) [ ] [ ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_INT_CAST ( T_VARIABLE($GLOBALS) [ ] [ ] ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($new) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( , ) ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) = T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($is_group) = T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) , T_VARIABLE($is_group) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($new) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( , ) ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] . , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] . , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) = T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($is_group) = T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) , T_VARIABLE($is_group) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($GLOBALS) [ ] ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($new) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( , ) ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] , ) ; T_VARIABLE($new) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_VARIABLE($GLOBALS) [ ] = . . . . ; T_FUNCTION(PMA_createOpenDocument) ( T_VARIABLE($mime) , T_VARIABLE($data) ) { T_VARIABLE($zipfile) = T_NEW T_STRING ( ) ; T_VARIABLE($zipfile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($mime) , ) ; T_VARIABLE($zipfile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($data) , ) ; T_VARIABLE($zipfile) T_OBJECT_OPERATOR T_STRING ( . . . . . . . . T_STRING . . . T_STRING . . . T_STRING ( ) . . . , ) ; T_VARIABLE($zipfile) T_OBJECT_OPERATOR T_STRING ( . . . T_VARIABLE($GLOBALS) [ ] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . , ) ; T_VARIABLE($zipfile) T_OBJECT_OPERATOR T_STRING ( . . . . . T_VARIABLE($mime) . . . . . . . . , ) ; T_RETURN T_VARIABLE($zipfile) T_OBJECT_OPERATOR T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_getHtmlForDatabaseComment) ( T_VARIABLE($db) ) { T_VARIABLE($html_output) = . . T_STRING ( T_VARIABLE($db) ) . . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( T_STRING ( T_VARIABLE($db) ) ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForRenameDatabase) ( T_VARIABLE($db) ) { T_VARIABLE($html_output) = . . . . ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($_REQUEST) [ ] . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($db) ) . . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . . T_STRING ( ) . . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForDropDatabaseLink) ( T_VARIABLE($db) ) { T_VARIABLE($this_sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($this_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this_sql_query) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ) ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($html_output) = . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($this_url_params) , , T_STRING ( ) , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForCopyDatabase) ( T_VARIABLE($db) ) { T_VARIABLE($drop_clause) = ; T_VARIABLE($choices) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_COOKIE) [ ] ) T_BOOLEAN_AND T_VARIABLE($_COOKIE) [ ] T_IS_EQUAL ) { T_VARIABLE($pma_switch_to_new) = ; } T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($_REQUEST) [ ] . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) . . . . . T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($choices) , , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( ) , T_VARIABLE($drop_clause) ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . ( ( T_ISSET ( T_VARIABLE($pma_switch_to_new) ) T_BOOLEAN_AND T_VARIABLE($pma_switch_to_new) T_IS_EQUAL ) ? : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForChangeDatabaseCharset) ( T_VARIABLE($db) , T_VARIABLE($table) ) { T_VARIABLE($html_output) = . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . . . . T_STRING ( T_STRING , , , T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : , T_STRING , T_LNUMBER ) . . . . . T_STRING ( ) . . . . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForExportRelationalSchemaView) ( T_VARIABLE($url_query) ) { T_VARIABLE($html_output) = . . T_VARIABLE($url_query) . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_runProcedureAndFunctionDefinitions) ( T_VARIABLE($db) ) { T_VARIABLE($procedure_names) = T_STRING ( T_VARIABLE($db) , ) ; T_IF ( T_VARIABLE($procedure_names) ) { T_FOREACH ( T_VARIABLE($procedure_names) T_AS T_VARIABLE($procedure_name) ) { T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($tmp_query) = T_STRING ( T_VARIABLE($db) , , T_VARIABLE($procedure_name) ) ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . T_VARIABLE($tmp_query) ; T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_STRING ( T_VARIABLE($tmp_query) ) ; } } T_VARIABLE($function_names) = T_STRING ( T_VARIABLE($db) , ) ; T_IF ( T_VARIABLE($function_names) ) { T_FOREACH ( T_VARIABLE($function_names) T_AS T_VARIABLE($function_name) ) { T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($tmp_query) = T_STRING ( T_VARIABLE($db) , , T_VARIABLE($function_name) ) ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . T_VARIABLE($tmp_query) ; T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_STRING ( T_VARIABLE($tmp_query) ) ; } } } T_FUNCTION(PMA_getSqlQueryAndCreateDbBeforeCopy) ( ) { T_IF ( ! T_STRING ) { T_VARIABLE($lower_case_table_names) = T_STRING ( , T_LNUMBER , T_LNUMBER ) ; T_IF ( T_VARIABLE($lower_case_table_names) T_IS_IDENTICAL ) { T_VARIABLE($_REQUEST) [ ] = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } } T_VARIABLE($local_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($local_query) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_VARIABLE($local_query) T_CONCAT_EQUAL ; T_VARIABLE($sql_query) = T_VARIABLE($local_query) ; T_VARIABLE($original_db) = T_VARIABLE($GLOBALS) [ ] ; T_STRING ( T_VARIABLE($local_query) ) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($original_db) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_VARIABLE($sql_query) ; } T_FUNCTION(PMA_getSqlConstraintsQueryForFullDb) ( T_VARIABLE($tables_full) , T_VARIABLE($export_sql_plugin) , T_VARIABLE($move) , T_VARIABLE($db) ) { T_VARIABLE($sql_constraints_query_full_db) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tables_full) T_AS T_VARIABLE($each_table) T_DOUBLE_ARROW T_VARIABLE($tmp) ) { T_VARIABLE($sql_constraints) = ; T_VARIABLE($sql_drop_foreign_keys) = ; T_VARIABLE($sql_structure) = T_VARIABLE($export_sql_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($each_table) , , , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($move) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($sql_drop_foreign_keys) ) ) { T_STRING ( T_VARIABLE($sql_drop_foreign_keys) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($sql_constraints) ) ) { T_VARIABLE($sql_constraints_query_full_db) [ ] = T_VARIABLE($sql_constraints) ; } } T_RETURN T_VARIABLE($sql_constraints_query_full_db) ; } T_FUNCTION(PMA_getViewsAndCreateSqlViewStandIn) ( T_VARIABLE($tables_full) , T_VARIABLE($export_sql_plugin) , T_VARIABLE($db) ) { T_VARIABLE($views) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tables_full) T_AS T_VARIABLE($each_table) T_DOUBLE_ARROW T_VARIABLE($tmp) ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($each_table) ) ) { T_VARIABLE($views) [ ] = T_VARIABLE($each_table) ; T_VARIABLE($sql_view_standin) = T_VARIABLE($export_sql_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($each_table) , ) ; T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_STRING ( T_VARIABLE($sql_view_standin) ) ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . T_VARIABLE($sql_view_standin) ; } } T_RETURN T_VARIABLE($views) ; } T_FUNCTION(PMA_getSqlQueryForCopyTable) ( T_VARIABLE($tables_full) , T_VARIABLE($sql_query) , T_VARIABLE($move) , T_VARIABLE($db) ) { T_VARIABLE($error) = T_STRING ; T_FOREACH ( T_VARIABLE($tables_full) T_AS T_VARIABLE($each_table) T_DOUBLE_ARROW T_VARIABLE($tmp) ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($each_table) ) ) { T_CONTINUE ; } T_VARIABLE($back) = T_VARIABLE($sql_query) ; T_VARIABLE($sql_query) = ; T_VARIABLE($this_what) = T_VARIABLE($_REQUEST) [ ] ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($each_table) ) ) { T_IF ( T_VARIABLE($this_what) T_IS_EQUAL ) { T_VARIABLE($this_what) = ; } T_IF ( T_VARIABLE($this_what) T_IS_EQUAL ) { T_VARIABLE($this_what) = ; } } T_IF ( T_VARIABLE($this_what) T_IS_NOT_EQUAL ) { T_VARIABLE($triggers) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($each_table) , ) ; T_IF ( ! T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($each_table) , T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($each_table) , ( T_ISSET ( T_VARIABLE($this_what) ) ? T_VARIABLE($this_what) : ) , T_VARIABLE($move) , ) ) { T_VARIABLE($error) = T_STRING ; T_VARIABLE($sql_query) = T_VARIABLE($back) . T_VARIABLE($sql_query) ; T_BREAK ; } T_IF ( T_VARIABLE($triggers) ) { T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_FOREACH ( T_VARIABLE($triggers) T_AS T_VARIABLE($trigger) ) { T_STRING ( T_VARIABLE($trigger) [ ] ) ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . T_VARIABLE($trigger) [ ] . ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] [ ] = T_VARIABLE($GLOBALS) [ ] ; T_UNSET ( T_VARIABLE($GLOBALS) [ ] ) ; } } T_VARIABLE($sql_query) = T_VARIABLE($back) . T_VARIABLE($sql_query) ; } T_RETURN T_ARRAY ( T_VARIABLE($sql_query) , T_VARIABLE($error) ) ; } T_FUNCTION(PMA_runEventDefinitionsForDb) ( T_VARIABLE($db) ) { T_VARIABLE($event_names) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_STRING ) . ) ; T_IF ( T_VARIABLE($event_names) ) { T_FOREACH ( T_VARIABLE($event_names) T_AS T_VARIABLE($event_name) ) { T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($tmp_query) = T_STRING ( T_VARIABLE($db) , , T_VARIABLE($event_name) ) ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . T_VARIABLE($tmp_query) ; T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_STRING ( T_VARIABLE($tmp_query) ) ; } } } T_FUNCTION(PMA_handleTheViews) ( T_VARIABLE($views) , T_VARIABLE($move) , T_VARIABLE($db) ) { T_VARIABLE($_error) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($temp_drop_if_exists) = T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($_REQUEST) [ ] = ; T_FOREACH ( T_VARIABLE($views) T_AS T_VARIABLE($view) ) { T_VARIABLE($copying_succeeded) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($view) , T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($view) , , T_VARIABLE($move) , ) ; T_IF ( ! T_VARIABLE($copying_succeeded) ) { T_VARIABLE($_error) = T_STRING ; T_BREAK ; } } T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($temp_drop_if_exists) ) ) { T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($temp_drop_if_exists) ; } T_RETURN T_VARIABLE($_error) ; } T_FUNCTION(PMA_createAllAccumulatedConstraints) ( ) { T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_FOREACH ( T_VARIABLE($GLOBALS) [ ] T_AS T_VARIABLE($one_query) ) { T_STRING ( T_VARIABLE($one_query) ) ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . T_VARIABLE($one_query) ; } T_UNSET ( T_VARIABLE($GLOBALS) [ ] ) ; } T_FUNCTION(PMA_duplicateBookmarks) ( T_VARIABLE($_error) , T_VARIABLE($db) ) { T_IF ( ! T_VARIABLE($_error) T_BOOLEAN_AND T_VARIABLE($db) T_IS_NOT_EQUAL T_VARIABLE($_REQUEST) [ ] ) { T_VARIABLE($get_fields) = T_ARRAY ( , , ) ; T_VARIABLE($where_fields) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db) ) ; T_VARIABLE($new_fields) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($_REQUEST) [ ] ) ; T_STRING T_DOUBLE_COLON T_STRING ( , , T_VARIABLE($get_fields) , T_VARIABLE($where_fields) , T_VARIABLE($new_fields) ) ; } } T_FUNCTION(PMA_getHtmlForOrderTheTable) ( T_VARIABLE($columns) ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($fieldname) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($fieldname) [ ] ) . . T_STRING ( T_VARIABLE($fieldname) [ ] ) . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . . . T_STRING ( ) . . . T_STRING ( ) . . . . . . . T_STRING ( ) . . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForMoveTable) ( ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ) > T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_STRING , T_STRING ) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getTableOptionDiv) ( T_VARIABLE($comment) , T_VARIABLE($tbl_collation) , T_VARIABLE($tbl_storage_engine) , T_VARIABLE($is_myisam_or_aria) , T_VARIABLE($is_isam) , T_VARIABLE($pack_keys) , T_VARIABLE($auto_increment) , T_VARIABLE($delay_key_write) , T_VARIABLE($transactional) , T_VARIABLE($page_checksum) , T_VARIABLE($is_innodb) , T_VARIABLE($is_pbxt) , T_VARIABLE($is_aria) , T_VARIABLE($checksum) ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($comment) , T_VARIABLE($tbl_collation) , T_VARIABLE($tbl_storage_engine) , T_VARIABLE($is_myisam_or_aria) , T_VARIABLE($is_isam) , T_VARIABLE($pack_keys) , T_VARIABLE($delay_key_write) , T_VARIABLE($auto_increment) , T_VARIABLE($transactional) , T_VARIABLE($page_checksum) , T_VARIABLE($is_innodb) , T_VARIABLE($is_pbxt) , T_VARIABLE($is_aria) , T_VARIABLE($checksum) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getTableOptionFieldset) ( T_VARIABLE($comment) , T_VARIABLE($tbl_collation) , T_VARIABLE($tbl_storage_engine) , T_VARIABLE($is_myisam_or_aria) , T_VARIABLE($is_isam) , T_VARIABLE($pack_keys) , T_VARIABLE($delay_key_write) , T_VARIABLE($auto_increment) , T_VARIABLE($transactional) , T_VARIABLE($page_checksum) , T_VARIABLE($is_innodb) , T_VARIABLE($is_pbxt) , T_VARIABLE($is_aria) , T_VARIABLE($checksum) ) { T_VARIABLE($html_output) = . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . . . . T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . . . T_STRING ( T_VARIABLE($comment) ) . . . T_STRING ( T_VARIABLE($comment) ) . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . T_STRING T_DOUBLE_COLON T_STRING ( , ) . . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING , T_VARIABLE($tbl_storage_engine) ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . . T_STRING ( T_STRING , , T_STRING , T_VARIABLE($tbl_collation) , T_STRING , T_LNUMBER ) . . ; T_IF ( T_VARIABLE($is_myisam_or_aria) T_BOOLEAN_OR T_VARIABLE($is_isam) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($pack_keys) T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($pack_keys) T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($pack_keys) T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ; } T_IF ( T_VARIABLE($is_myisam_or_aria) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( , , T_VARIABLE($checksum) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( , , T_VARIABLE($delay_key_write) ) ; } T_IF ( T_VARIABLE($is_aria) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( , , T_VARIABLE($transactional) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( , , T_VARIABLE($page_checksum) ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) > T_LNUMBER T_BOOLEAN_AND ( T_VARIABLE($is_myisam_or_aria) T_BOOLEAN_OR T_VARIABLE($is_innodb) T_BOOLEAN_OR T_VARIABLE($is_pbxt) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . . T_VARIABLE($auto_increment) . . ; } T_VARIABLE($possible_row_formats) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($possible_row_formats) [ T_VARIABLE($tbl_storage_engine) ] ) ) { T_VARIABLE($current_row_format) = T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($possible_row_formats) [ T_VARIABLE($tbl_storage_engine) ] , T_VARIABLE($current_row_format) , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForTableRow) ( T_VARIABLE($attribute) , T_VARIABLE($label) , T_VARIABLE($val) ) { T_RETURN . . T_VARIABLE($attribute) . . T_VARIABLE($label) . . . T_VARIABLE($attribute) . . . T_VARIABLE($attribute) . . . ( ( ! T_EMPTY ( T_VARIABLE($val) ) T_BOOLEAN_AND T_VARIABLE($val) T_IS_EQUAL T_LNUMBER ) ? : ) . . ; } T_FUNCTION(PMA_getPossibleRowFormat) ( ) { T_VARIABLE($possible_row_formats) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; T_VARIABLE($innodb_engine_plugin) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($innodb_plugin_version) = T_VARIABLE($innodb_engine_plugin) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($innodb_plugin_version) ) ) { T_VARIABLE($innodb_file_format) = T_VARIABLE($innodb_engine_plugin) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_VARIABLE($innodb_file_format) = ; } T_IF ( T_IS_EQUAL T_VARIABLE($innodb_file_format) T_BOOLEAN_AND T_VARIABLE($innodb_engine_plugin) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($possible_row_formats) [ ] [ ] = ; T_VARIABLE($possible_row_formats) [ ] [ ] = ; } T_RETURN T_VARIABLE($possible_row_formats) ; } T_FUNCTION(PMA_getHtmlForCopytable) ( ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . . T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ) > T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_STRING , T_STRING ) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . ; T_VARIABLE($choices) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($choices) , , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( T_STRING ( ) , ) . . . . . T_STRING ( ) . ; T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] , , ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) [ ] ) T_BOOLEAN_AND T_VARIABLE($_COOKIE) [ ] T_IS_EQUAL ) { T_VARIABLE($pma_switch_to_new) = ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . ( ( T_ISSET ( T_VARIABLE($pma_switch_to_new) ) T_BOOLEAN_AND T_VARIABLE($pma_switch_to_new) T_IS_EQUAL ) ? : . ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForTableMaintenance) ( T_VARIABLE($is_myisam_or_aria) , T_VARIABLE($is_innodb) , T_VARIABLE($is_berkeleydb) , T_VARIABLE($url_params) ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($is_myisam_or_aria) , T_VARIABLE($is_innodb) , T_VARIABLE($url_params) , T_VARIABLE($is_berkeleydb) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getListofMaintainActionLink) ( T_VARIABLE($is_myisam_or_aria) , T_VARIABLE($is_innodb) , T_VARIABLE($url_params) , T_VARIABLE($is_berkeleydb) ) { T_VARIABLE($html_output) = ; T_IF ( T_VARIABLE($is_myisam_or_aria) T_BOOLEAN_OR T_VARIABLE($is_innodb) T_BOOLEAN_OR T_VARIABLE($is_berkeleydb) ) { T_IF ( T_VARIABLE($is_myisam_or_aria) T_BOOLEAN_OR T_VARIABLE($is_innodb) ) { T_VARIABLE($params) = T_ARRAY ( T_DOUBLE_ARROW . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_VARIABLE($params) , T_VARIABLE($url_params) , ) ; } T_IF ( T_VARIABLE($is_innodb) ) { T_VARIABLE($params) = T_ARRAY ( T_DOUBLE_ARROW . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_VARIABLE($params) , T_VARIABLE($url_params) , , ) ; } T_IF ( T_VARIABLE($is_myisam_or_aria) T_BOOLEAN_OR T_VARIABLE($is_berkeleydb) ) { T_VARIABLE($params) = T_ARRAY ( T_DOUBLE_ARROW . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_VARIABLE($params) , T_VARIABLE($url_params) , ) ; } T_IF ( T_VARIABLE($is_myisam_or_aria) T_BOOLEAN_AND ! T_STRING ) { T_VARIABLE($params) = T_ARRAY ( T_DOUBLE_ARROW . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_VARIABLE($params) , T_VARIABLE($url_params) , ) ; } T_IF ( ( T_VARIABLE($is_myisam_or_aria) T_BOOLEAN_OR T_VARIABLE($is_innodb) T_BOOLEAN_OR T_VARIABLE($is_berkeleydb) ) T_BOOLEAN_AND ! T_STRING ) { T_VARIABLE($params) = T_ARRAY ( T_DOUBLE_ARROW . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_VARIABLE($params) , T_VARIABLE($url_params) , ) ; } } T_VARIABLE($params) = T_ARRAY ( T_DOUBLE_ARROW . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_VARIABLE($params) , T_VARIABLE($url_params) , ) ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getMaintainActionlink) ( T_VARIABLE($action) , T_VARIABLE($params) , T_VARIABLE($url_params) , T_VARIABLE($link) , T_VARIABLE($chapter) = ) { T_RETURN . . . T_STRING ( T_STRING ( T_VARIABLE($url_params) , T_VARIABLE($params) ) ) . . T_VARIABLE($action) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($chapter) , T_VARIABLE($link) ) . ; } T_FUNCTION(PMA_getHtmlForDeleteDataOrTable) ( T_VARIABLE($truncate_table_url_params) , T_VARIABLE($drop_table_url_params) ) { T_VARIABLE($html_output) = . . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($truncate_table_url_params) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($truncate_table_url_params) , , T_STRING ( ) , ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($drop_table_url_params) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($drop_table_url_params) , , T_STRING ( ) , ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getDeleteDataOrTablelink) ( T_VARIABLE($url_params) , T_VARIABLE($syntax) , T_VARIABLE($link) , T_VARIABLE($id) ) { T_RETURN . . T_STRING ( T_VARIABLE($url_params) ) . . . T_VARIABLE($id) . . T_VARIABLE($link) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($syntax) ) . ; } T_FUNCTION(PMA_getHtmlForPartitionMaintenance) ( T_VARIABLE($partition_names) , T_VARIABLE($url_params) ) { T_VARIABLE($choices) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($html_output) = . . T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) . . . T_STRING ( ) . ; T_VARIABLE($html_select) = . ; T_FOREACH ( T_VARIABLE($partition_names) T_AS T_VARIABLE($one_partition) ) { T_VARIABLE($one_partition) = T_STRING ( T_VARIABLE($one_partition) ) ; T_VARIABLE($html_select) T_CONCAT_EQUAL . T_VARIABLE($one_partition) . . T_VARIABLE($one_partition) . . ; } T_VARIABLE($html_select) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_VARIABLE($html_select) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($choices) , , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($this_url_params) = T_STRING ( T_VARIABLE($url_params) , T_ARRAY ( T_DOUBLE_ARROW . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this_url_params) ) . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . T_STRING ( ) . . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForReferentialIntegrityCheck) ( T_VARIABLE($foreign) , T_VARIABLE($url_params) ) { T_VARIABLE($html_output) = . . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($foreign) T_AS T_VARIABLE($master) T_DOUBLE_ARROW T_VARIABLE($arr) ) { T_VARIABLE($join_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arr) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arr) [ ] ) ; T_IF ( T_VARIABLE($arr) [ ] T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($foreign_table) = T_VARIABLE($GLOBALS) [ ] . ; T_VARIABLE($join_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_table) ) ; } T_ELSE { T_VARIABLE($foreign_table) = T_VARIABLE($arr) [ ] ; } T_VARIABLE($join_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($master) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arr) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_table) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arr) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arr) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_table) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arr) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($master) ) . ; T_VARIABLE($this_url_params) = T_STRING ( T_VARIABLE($url_params) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($join_query) ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($this_url_params) ) . . T_VARIABLE($master) . . T_VARIABLE($arr) [ ] . . T_VARIABLE($arr) [ ] . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getQueryAndResultForReorderingTable) ( ) { T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_IDENTICAL ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL ; } T_VARIABLE($sql_query) T_CONCAT_EQUAL ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_RETURN T_ARRAY ( T_VARIABLE($sql_query) , T_VARIABLE($result) ) ; } T_FUNCTION(PMA_getTableAltersArray) ( T_VARIABLE($is_myisam_or_aria) , T_VARIABLE($is_isam) , T_VARIABLE($pack_keys) , T_VARIABLE($checksum) , T_VARIABLE($is_aria) , T_VARIABLE($page_checksum) , T_VARIABLE($delay_key_write) , T_VARIABLE($is_innodb) , T_VARIABLE($is_pbxt) , T_VARIABLE($row_format) , T_VARIABLE($new_tbl_storage_engine) , T_VARIABLE($transactional) , T_VARIABLE($tbl_collation) ) { T_VARIABLE($table_alters) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_IS_NOT_IDENTICAL T_VARIABLE($_REQUEST) [ ] ) { T_VARIABLE($table_alters) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($new_tbl_storage_engine) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($new_tbl_storage_engine) ) T_IS_NOT_IDENTICAL T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($table_alters) [ ] = . T_VARIABLE($new_tbl_storage_engine) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_NOT_IDENTICAL T_VARIABLE($tbl_collation) ) { T_VARIABLE($table_alters) [ ] = . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_IF ( ( T_VARIABLE($is_myisam_or_aria) T_BOOLEAN_OR T_VARIABLE($is_isam) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_NOT_EQUAL T_STRING_CAST T_VARIABLE($pack_keys) ) { T_VARIABLE($table_alters) [ ] = . T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($_REQUEST) [ ] = T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ? : ; T_IF ( T_VARIABLE($is_myisam_or_aria) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_NOT_IDENTICAL T_VARIABLE($checksum) ) { T_VARIABLE($table_alters) [ ] = . T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($_REQUEST) [ ] = T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ? : ; T_IF ( T_VARIABLE($is_aria) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_NOT_IDENTICAL T_VARIABLE($transactional) ) { T_VARIABLE($table_alters) [ ] = . T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($_REQUEST) [ ] = T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ? : ; T_IF ( T_VARIABLE($is_aria) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_NOT_IDENTICAL T_VARIABLE($page_checksum) ) { T_VARIABLE($table_alters) [ ] = . T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($_REQUEST) [ ] = T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ? : ; T_IF ( T_VARIABLE($is_myisam_or_aria) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_NOT_IDENTICAL T_VARIABLE($delay_key_write) ) { T_VARIABLE($table_alters) [ ] = . T_VARIABLE($_REQUEST) [ ] ; } T_IF ( ( T_VARIABLE($is_myisam_or_aria) T_BOOLEAN_OR T_VARIABLE($is_innodb) T_BOOLEAN_OR T_VARIABLE($is_pbxt) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ( ! T_ISSET ( T_VARIABLE($auto_increment) ) T_BOOLEAN_OR T_VARIABLE($_REQUEST) [ ] T_IS_NOT_IDENTICAL T_VARIABLE($auto_increment) ) ) { T_VARIABLE($table_alters) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_IF ( ( T_VARIABLE($is_myisam_or_aria) T_BOOLEAN_OR T_VARIABLE($is_innodb) T_BOOLEAN_OR T_VARIABLE($is_pbxt) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ( ! T_STRING ( T_VARIABLE($row_format) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_IS_NOT_IDENTICAL T_STRING ( T_VARIABLE($row_format) ) ) ) { T_VARIABLE($table_alters) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_RETURN T_VARIABLE($table_alters) ; } T_FUNCTION(PMA_setGlobalVariablesForEngine) ( T_VARIABLE($tbl_storage_engine) ) { T_VARIABLE($is_myisam_or_aria) = T_VARIABLE($is_isam) = T_VARIABLE($is_innodb) = T_VARIABLE($is_berkeleydb) = T_VARIABLE($is_aria) = T_VARIABLE($is_pbxt) = T_STRING ; T_VARIABLE($upper_tbl_storage_engine) = T_STRING ( T_VARIABLE($tbl_storage_engine) ) ; T_VARIABLE($is_myisam_or_aria) = ( T_VARIABLE($upper_tbl_storage_engine) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($upper_tbl_storage_engine) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($upper_tbl_storage_engine) T_IS_EQUAL ) ; T_VARIABLE($is_aria) = ( T_VARIABLE($upper_tbl_storage_engine) T_IS_EQUAL ) ; T_VARIABLE($is_isam) = ( T_VARIABLE($upper_tbl_storage_engine) T_IS_EQUAL ) ; T_VARIABLE($is_innodb) = ( T_VARIABLE($upper_tbl_storage_engine) T_IS_EQUAL ) ; T_VARIABLE($is_berkeleydb) = ( T_VARIABLE($upper_tbl_storage_engine) T_IS_EQUAL ) ; T_VARIABLE($is_pbxt) = ( T_VARIABLE($upper_tbl_storage_engine) T_IS_EQUAL ) ; T_RETURN T_ARRAY ( T_VARIABLE($is_myisam_or_aria) , T_VARIABLE($is_innodb) , T_VARIABLE($is_isam) , T_VARIABLE($is_berkeleydb) , T_VARIABLE($is_aria) , T_VARIABLE($is_pbxt) ) ; } T_FUNCTION(PMA_getWarningMessagesArray) ( ) { T_VARIABLE($warning_messages) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($warning) ) { T_IF ( ! ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($warning) [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($warning) [ ] T_IS_EQUAL ) ) { T_VARIABLE($warning_messages) [ ] = T_VARIABLE($warning) [ ] . . T_VARIABLE($warning) [ ] . . T_VARIABLE($warning) [ ] ; } } T_RETURN T_VARIABLE($warning_messages) ; } T_FUNCTION(PMA_getQueryAndResultForPartition) ( ) { T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_VARIABLE($_REQUEST) [ ] . . T_VARIABLE($_REQUEST) [ ] . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_RETURN T_ARRAY ( T_VARIABLE($sql_query) , T_VARIABLE($result) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PRIVATE T_STATIC T_VARIABLE($_instance) ; T_PRIVATE T_VARIABLE($_mode) ; T_PRIVATE T_VARIABLE($_content) ; T_PRIVATE T_VARIABLE($_on) ; T_PRIVATE T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($mode) = T_LNUMBER ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_STRING ( ) ) { T_IF ( T_STRING ( ) T_IS_EQUAL ) { T_VARIABLE($mode) = T_LNUMBER ; } T_ELSEIF ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( ) > T_LNUMBER ) { T_VARIABLE($mode) = T_LNUMBER ; } T_ELSE { T_VARIABLE($mode) = T_LNUMBER ; } } T_RETURN T_VARIABLE($mode) ; } T_PUBLIC T_STATIC T_STRING ( ) { T_IF ( T_EMPTY ( T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ) ) { T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) = T_NEW T_STRING ( ) ; } T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ; } T_PUBLIC T_STRING ( ) { T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( ) ; } T_STRING ( ) ; T_IF ( ! T_STRING ( ) ) { T_STRING ( . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } } T_PUBLIC T_STATIC T_STRING ( ) { T_VARIABLE($buffer) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_VARIABLE($buffer) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($buffer) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($buffer) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_STRING ( ) ; } T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_IF ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( ) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($sql_query) ; T_VARIABLE($parsed_sql) = T_STRING ( T_VARIABLE($sql_query) ) ; T_VARIABLE($analyzed_sql) = T_STRING ( T_VARIABLE($parsed_sql) ) ; T_VARIABLE($is_select) = T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) ; T_IF ( T_VARIABLE($is_select) ) { T_VARIABLE($prev_db) = T_VARIABLE($db) ; T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($table) = T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_LNUMBER ] [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($db) = T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_LNUMBER ] [ ] ; } T_ELSE { T_VARIABLE($db) = T_VARIABLE($prev_db) ; } T_IF ( T_EMPTY ( T_VARIABLE($reload) ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($reload) = ( T_VARIABLE($db) T_IS_EQUAL T_VARIABLE($prev_db) ) ? T_LNUMBER : T_LNUMBER ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( ) ) { T_RETURN T_STRING ( . . T_VARIABLE($db) . . T_VARIABLE($table) . ) ; } T_ELSE { T_RETURN T_ARRAY ( ) ; } } T_STATIC T_PUBLIC T_STRING ( ) { T_STATIC T_VARIABLE($have_partitioning) = T_STRING ; T_STATIC T_VARIABLE($already_checked) = T_STRING ; T_IF ( ! T_VARIABLE($already_checked) ) { T_IF ( T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_IF ( T_STRING < T_LNUMBER ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($have_partitioning) = T_STRING ; } } T_ELSE { T_VARIABLE($plugins) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($plugins) T_AS T_VARIABLE($value) ) { T_IF ( T_VARIABLE($value) [ ] T_IS_EQUAL ) { T_VARIABLE($have_partitioning) = T_STRING ; T_BREAK ; } } } T_VARIABLE($already_checked) = T_STRING ; } } T_RETURN T_VARIABLE($have_partitioning) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE T_STRING ; T_STRING ( , ) ; T_STRING T_EXTENDS T_STRING { T_VAR T_VARIABLE($footerset) ; T_VAR T_VARIABLE($Alias) = T_ARRAY ( ) ; T_PUBLIC T_STRING ( T_VARIABLE($orientation) = , T_VARIABLE($unit) = , T_VARIABLE($format) = , T_VARIABLE($unicode) = T_STRING , T_VARIABLE($encoding) = , T_VARIABLE($diskcache) = T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING , , T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( T_STRING , , T_LNUMBER ) ) ; } T_STRING ( ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( - T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING , , T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , , T_LNUMBER , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING T_DOUBLE_COLON T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] = T_LNUMBER ; } } T_PUBLIC T_STRING ( T_VARIABLE($str) ) { T_RETURN ( T_STRING ( T_VARIABLE($str) ) T_LOGICAL_OR ( T_STRING ( T_VARIABLE($str) ) T_LOGICAL_AND ( T_STRING ( T_VARIABLE($str) ) T_IS_EQUAL T_LNUMBER ) ) ) ; } T_STRING ( T_VARIABLE($name) , T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($name) ) ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($value) ) ; } T_STRING ( ) { T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) > T_LNUMBER ) { T_VARIABLE($nb) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_FOR ( T_VARIABLE($n) = T_LNUMBER ; T_VARIABLE($n) T_IS_SMALLER_OR_EQUAL T_VARIABLE($nb) ; T_VARIABLE($n) T_INC ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($n) ] = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($n) ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } } T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_STRING ( T_VARIABLE($error_message) = ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) . . T_VARIABLE($error_message) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_EXIT ; } T_STRING ( T_VARIABLE($filename) ) { T_VARIABLE($pdfData) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( T_VARIABLE($filename) , , T_STRING ( T_VARIABLE($pdfData) ) ) ; T_ECHO T_VARIABLE($pdfData) ; } }',no
'T_OPEN_TAG T_FUNCTION(PMA_getPlugin) ( T_VARIABLE($plugin_type) , T_VARIABLE($plugin_format) , T_VARIABLE($plugins_dir) , T_VARIABLE($plugin_param) = T_STRING ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($plugin_param) ; T_VARIABLE($class_name) = T_STRING ( T_VARIABLE($plugin_type) [ T_LNUMBER ] ) . T_STRING ( T_STRING ( T_VARIABLE($plugin_type) , T_LNUMBER ) ) . T_STRING ( T_VARIABLE($plugin_format) [ T_LNUMBER ] ) . T_STRING ( T_STRING ( T_VARIABLE($plugin_format) , T_LNUMBER ) ) ; T_VARIABLE($file) = T_VARIABLE($class_name) . ; T_IF ( T_STRING ( T_VARIABLE($plugins_dir) . T_VARIABLE($file) ) ) { T_INCLUDE_ONCE T_VARIABLE($plugins_dir) . T_VARIABLE($file) ; T_RETURN T_NEW T_VARIABLE($class_name) ; } T_RETURN T_STRING ; } T_FUNCTION(PMA_getPlugins) ( T_VARIABLE($plugin_type) , T_VARIABLE($plugins_dir) , T_VARIABLE($plugin_param) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($plugin_param) ; T_VARIABLE($plugin_list) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($handle) = @ T_STRING ( T_VARIABLE($plugins_dir) ) ) { T_WHILE ( T_VARIABLE($file) = @ T_STRING ( T_VARIABLE($handle) ) ) { T_VARIABLE($class_type) = T_STRING ( T_VARIABLE($plugin_type) [ T_LNUMBER ] ) . T_STRING ( T_STRING ( T_VARIABLE($plugin_type) , T_LNUMBER ) ) ; T_IF ( T_STRING ( T_VARIABLE($plugins_dir) . T_VARIABLE($file) ) T_BOOLEAN_AND T_STRING ( . T_VARIABLE($class_type) . , T_VARIABLE($file) , T_VARIABLE($matches) ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_INCLUDE_ONCE T_VARIABLE($plugins_dir) . T_VARIABLE($file) ; T_IF ( ! T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($class_name) = T_VARIABLE($class_type) . T_VARIABLE($matches) [ T_LNUMBER ] ; T_VARIABLE($plugin_list) [ ] = T_NEW T_VARIABLE($class_name) ; } } } } T_STRING ( T_VARIABLE($plugin_list) ) ; T_RETURN T_VARIABLE($plugin_list) ; } T_FUNCTION(PMA_getString) ( T_VARIABLE($name) ) { T_RETURN T_ISSET ( T_VARIABLE($GLOBALS) [ T_VARIABLE($name) ] ) ? T_VARIABLE($GLOBALS) [ T_VARIABLE($name) ] : T_VARIABLE($name) ; } T_FUNCTION(PMA_pluginCheckboxCheck) ( T_VARIABLE($section) , T_VARIABLE($opt) ) { T_IF ( T_ISSET ( T_VARIABLE($_GET) [ T_VARIABLE($opt) ] ) T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND ( ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ T_VARIABLE($opt) ] ) ) T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($section) ] [ T_VARIABLE($opt) ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($section) ] [ T_VARIABLE($opt) ] ) ) ) { T_RETURN ; } T_RETURN ; } T_FUNCTION(PMA_pluginGetDefault) ( T_VARIABLE($section) , T_VARIABLE($opt) ) { T_IF ( T_ISSET ( T_VARIABLE($_GET) [ T_VARIABLE($opt) ] ) ) { T_RETURN T_STRING ( T_VARIABLE($_GET) [ T_VARIABLE($opt) ] ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ T_VARIABLE($opt) ] ) ) { T_RETURN T_STRING ( T_VARIABLE($_REQUEST) [ T_VARIABLE($opt) ] ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($section) ] [ T_VARIABLE($opt) ] ) ) { T_VARIABLE($matches) = T_ARRAY ( ) ; T_IF ( T_STRING ( , T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($section) ] [ T_VARIABLE($opt) ] , T_VARIABLE($matches) ) ) { T_VARIABLE($val) = T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($section) ] [ T_VARIABLE($opt) ] ; T_FOREACH ( T_VARIABLE($matches) [ T_LNUMBER ] T_AS T_VARIABLE($match) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ T_VARIABLE($match) ] ) ) { T_VARIABLE($val) = T_STRING ( T_VARIABLE($match) , T_VARIABLE($GLOBALS) [ T_VARIABLE($match) ] , T_VARIABLE($val) ) ; } } T_RETURN T_STRING ( T_VARIABLE($val) ) ; } T_ELSE { T_RETURN T_STRING ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($section) ] [ T_VARIABLE($opt) ] ) ; } } T_RETURN ; } T_FUNCTION(PMA_pluginGetChoice) ( T_VARIABLE($section) , T_VARIABLE($name) , & T_VARIABLE($list) , T_VARIABLE($cfgname) = T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($cfgname) ) ) { T_VARIABLE($cfgname) = T_VARIABLE($name) ; } T_VARIABLE($ret) = . T_VARIABLE($name) . ; T_VARIABLE($default) = T_STRING ( T_VARIABLE($section) , T_VARIABLE($cfgname) ) ; T_FOREACH ( T_VARIABLE($list) T_AS T_VARIABLE($plugin) ) { T_VARIABLE($plugin_name) = T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($plugin) ) , T_STRING ( T_VARIABLE($section) ) ) ) ; T_VARIABLE($ret) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($_GET) [ T_VARIABLE($name) ] ) T_BOOLEAN_AND T_VARIABLE($plugin_name) T_IS_EQUAL T_VARIABLE($_GET) [ T_VARIABLE($name) ] T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($_GET) [ T_VARIABLE($name) ] ) T_BOOLEAN_AND T_VARIABLE($plugin_name) T_IS_EQUAL T_VARIABLE($default) ) { T_VARIABLE($ret) T_CONCAT_EQUAL ; } T_VARIABLE($properties) = T_VARIABLE($plugin) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($text) = T_STRING ; T_IF ( T_VARIABLE($properties) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($text) = T_VARIABLE($properties) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($plugin_name) . . T_STRING ( T_VARIABLE($text) ) . . ; } T_VARIABLE($ret) T_CONCAT_EQUAL . ; T_FOREACH ( T_VARIABLE($list) T_AS T_VARIABLE($plugin) ) { T_VARIABLE($plugin_name) = T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($plugin) ) , T_STRING ( T_VARIABLE($section) ) ) ) ; T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($plugin_name) . ; T_VARIABLE($properties) = T_VARIABLE($plugin) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($section) , ) T_BOOLEAN_OR ( T_VARIABLE($properties) T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($properties) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL T_STRING ) ) { T_VARIABLE($ret) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($ret) T_CONCAT_EQUAL ; } T_VARIABLE($ret) T_CONCAT_EQUAL . ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(PMA_pluginGetOneOption) ( T_VARIABLE($section) , T_VARIABLE($plugin_name) , & T_VARIABLE($propertyGroup) , T_VARIABLE($is_subgroup) = T_STRING ) { T_VARIABLE($ret) = ; T_IF ( ! T_VARIABLE($is_subgroup) ) { T_IF ( T_STRING ( T_STRING ( T_VARIABLE($propertyGroup) ) , ) ) { T_VARIABLE($properties) = T_ARRAY ( T_VARIABLE($propertyGroup) ) ; } T_ELSE { T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyGroup) T_OBJECT_OPERATOR T_STRING ( ) . ; T_IF ( T_STRING ( T_VARIABLE($propertyGroup) , ) ) { T_VARIABLE($text) = T_VARIABLE($propertyGroup) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_VARIABLE($text) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($ret) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($text) ) . ; } T_VARIABLE($ret) T_CONCAT_EQUAL ; } } T_IF ( ! T_ISSET ( T_VARIABLE($properties) ) ) { T_VARIABLE($not_subgroup_header) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($propertyGroup) , ) ) { T_VARIABLE($properties) = T_VARIABLE($propertyGroup) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_IF ( T_ISSET ( T_VARIABLE($properties) ) ) { T_FOREACH ( T_VARIABLE($properties) T_AS T_VARIABLE($propertyItem) ) { T_VARIABLE($property_class) = T_STRING ( T_VARIABLE($propertyItem) ) ; T_IF ( T_STRING ( T_VARIABLE($property_class) , ) ) { T_VARIABLE($subgroup_header) = T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($subgroup_header) ) ) { T_VARIABLE($ret) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($section) , T_VARIABLE($plugin_name) , T_VARIABLE($subgroup_header) ) ; } T_VARIABLE($ret) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($subgroup_header) ) ) { T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($subgroup_header) T_OBJECT_OPERATOR T_STRING ( ) . ; } T_ELSE { T_VARIABLE($ret) T_CONCAT_EQUAL ; } T_VARIABLE($ret) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($section) , T_VARIABLE($plugin_name) , T_VARIABLE($propertyItem) , T_STRING ) ; } T_ELSE { T_SWITCH ( T_VARIABLE($property_class) ) { T_CASE : T_VARIABLE($ret) T_CONCAT_EQUAL . ; T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . . . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . . . T_STRING ( T_VARIABLE($section) , T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_IF ( T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($ret) T_CONCAT_EQUAL . . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . . . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . . ; } T_VARIABLE($ret) T_CONCAT_EQUAL ; T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . . T_STRING ( T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) ) . ; T_BREAK ; T_CASE : T_ECHO ; T_BREAK ; T_CASE : T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . . . T_STRING ( T_VARIABLE($section) , T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) ) . . ; T_BREAK ; T_CASE : T_VARIABLE($ret) T_CONCAT_EQUAL . ; T_VARIABLE($ret) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) ) . ; T_BREAK ; T_CASE : T_VARIABLE($default) = T_STRING ( T_VARIABLE($section) , T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_FOREACH ( T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . . T_VARIABLE($key) . . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . . T_VARIABLE($key) . ; T_IF ( T_VARIABLE($key) T_IS_EQUAL T_VARIABLE($default) ) { T_VARIABLE($ret) T_CONCAT_EQUAL ; } T_VARIABLE($ret) T_CONCAT_EQUAL . . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . . T_VARIABLE($key) . . T_STRING ( T_VARIABLE($val) ) . ; } T_BREAK ; T_CASE : T_VARIABLE($ret) T_CONCAT_EQUAL . ; T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . . T_STRING ( T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) ) . ; T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . . . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . ; T_VARIABLE($default) = T_STRING ( T_VARIABLE($section) , T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_FOREACH ( T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($key) . ; T_IF ( T_VARIABLE($key) T_IS_EQUAL T_VARIABLE($default) ) { T_VARIABLE($ret) T_CONCAT_EQUAL ; } T_VARIABLE($ret) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($val) ) . ; } T_VARIABLE($ret) T_CONCAT_EQUAL ; T_BREAK ; T_CASE : T_VARIABLE($ret) T_CONCAT_EQUAL . ; T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . . T_STRING ( T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) ) . ; T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . . . T_STRING ( T_VARIABLE($section) , T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) ) . . . T_VARIABLE($plugin_name) . . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . . ( T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL T_STRING ? . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . : ) . ( T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL T_STRING ? . T_VARIABLE($propertyItem) T_OBJECT_OPERATOR T_STRING ( ) . : ) . ; T_BREAK ; T_DEFAULT : ; } } } } T_IF ( T_VARIABLE($is_subgroup) ) { T_VARIABLE($ret) T_CONCAT_EQUAL ; } T_ELSE { T_IF ( ! T_EMPTY ( T_VARIABLE($not_subgroup_header) ) ) { T_VARIABLE($ret) T_CONCAT_EQUAL ; } } T_IF ( T_STRING ( T_VARIABLE($propertyGroup) , ) ) { T_VARIABLE($doc) = T_VARIABLE($propertyGroup) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($doc) T_IS_NOT_EQUAL T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($doc) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($ret) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($doc) [ T_LNUMBER ] , T_VARIABLE($doc) [ T_LNUMBER ] , T_STRING , T_VARIABLE($doc) [ T_LNUMBER ] ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($doc) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($ret) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($doc) [ T_LNUMBER ] ) ; } T_ELSE { T_VARIABLE($ret) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($doc) [ T_LNUMBER ] , T_VARIABLE($doc) [ T_LNUMBER ] ) ; } } } T_IF ( T_ISSET ( T_VARIABLE($property_class) ) ) { T_IF ( T_VARIABLE($property_class) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($property_class) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($property_class) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($property_class) T_IS_EQUAL ) { T_VARIABLE($ret) T_CONCAT_EQUAL ; } } T_VARIABLE($ret) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(PMA_pluginGetOptions) ( T_VARIABLE($section) , & T_VARIABLE($list) ) { T_VARIABLE($ret) = ; T_VARIABLE($default) = T_STRING ( , ) ; T_FOREACH ( T_VARIABLE($list) T_AS T_VARIABLE($plugin) ) { T_VARIABLE($properties) = T_VARIABLE($plugin) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($properties) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($text) = T_VARIABLE($properties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($options) = T_VARIABLE($properties) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($plugin_name) = T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($plugin) ) , T_STRING ( T_VARIABLE($section) ) ) ) ; T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($plugin_name) . ; T_VARIABLE($ret) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($text) ) . ; T_VARIABLE($no_options) = T_STRING ; T_IF ( T_VARIABLE($options) T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($options) ) > T_LNUMBER ) { T_FOREACH ( T_VARIABLE($options) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($propertyMainGroup) ) { T_VARIABLE($no_options) = T_STRING ; T_FOREACH ( T_VARIABLE($propertyMainGroup) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($propertyItem) ) { T_IF ( T_STRING ( , T_STRING ( T_VARIABLE($propertyItem) ) ) ) { T_VARIABLE($no_options) = T_STRING ; T_BREAK ; } } T_VARIABLE($ret) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($section) , T_VARIABLE($plugin_name) , T_VARIABLE($propertyMainGroup) ) ; } } T_IF ( T_VARIABLE($no_options) ) { T_VARIABLE($ret) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_VARIABLE($ret) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($ret) ; }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($conn_error) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($conn_error) ) { T_VARIABLE($conn_error) = T_STRING ( ) ; } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_ECHO ; T_ECHO T_STRING ( T_STRING ( ) , ) ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_STRING ( T_STRING ( ) , T_STRING ) ; } T_ELSE { T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) { T_ECHO . T_STRING ( T_STRING ( . . ) , , ) . . ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_LNUMBER ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_LNUMBER ) { T_STRING ( T_STRING ( . . . . ) , T_STRING ) ; } T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($conn_error) , , T_STRING , , T_STRING ) ; } T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_ECHO . ; T_ECHO . T_VARIABLE($GLOBALS) [ ] [ ] . T_STRING ( T_ARRAY ( ) ) . . T_STRING ( ) . . ; T_ECHO . ; T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) > T_LNUMBER ) { T_INCLUDE_ONCE ; T_ECHO . ; T_ECHO . ; T_ECHO T_STRING ( T_STRING , T_STRING ) ; T_ECHO . ; T_ECHO . ; } T_ECHO . ; T_EXIT ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_ELSE T_IF ( T_STRING ( ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ( T_STRING ( ) ) ; } T_REQUIRE ; T_IF ( T_STRING ( ) ) { T_IF ( T_EMPTY ( T_VARIABLE($_COOKIE) [ ] ) T_BOOLEAN_OR ! ( T_VARIABLE($iv) = T_STRING ( T_VARIABLE($_COOKIE) [ ] , T_STRING ) ) ) { T_STRING ( T_DOUBLE_CAST T_STRING ( ) * T_LNUMBER ) ; T_VARIABLE($td) = T_STRING ( T_STRING , , T_STRING , ) ; T_IF ( T_VARIABLE($td) T_IS_IDENTICAL T_STRING ) { T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($iv) = T_STRING ( T_STRING ( T_VARIABLE($td) ) , T_STRING ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_VARIABLE($iv) ) ) ; } } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($conn_error) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($login_link) = . T_STRING ( , T_VARIABLE($GLOBALS) [ ] [ ] , T_STRING ( ) ) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($conn_error) ) ) { T_VARIABLE($conn_error) T_CONCAT_EQUAL T_VARIABLE($login_link) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($conn_error) ) ) ; } T_ELSE { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) . T_VARIABLE($login_link) ) ) ; } T_EXIT ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; T_EXIT ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($default_user) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($default_server) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($autocomplete) = ; } T_ELSE { T_VARIABLE($default_user) = ; T_VARIABLE($default_server) = ; T_VARIABLE($autocomplete) = ; } T_VARIABLE($cell_align) = ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) ? : ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_STRING ) ) { T_INCLUDE T_STRING ; } T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO ; T_VARIABLE($logo_image) = T_VARIABLE($GLOBALS) [ ] . ; T_IF ( @ T_STRING ( T_VARIABLE($logo_image) ) ) { T_ECHO . T_VARIABLE($logo_image) . ; } T_ELSE { T_ECHO . T_VARIABLE($GLOBALS) [ ] . . . ; } T_ECHO ; T_ECHO T_STRING ( T_STRING ( ) , ) ; T_ECHO ; T_IF ( ! T_EMPTY ( T_VARIABLE($conn_error) ) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($conn_error) ) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ECHO ; T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_ECHO ; T_ECHO ; T_IF ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_INCLUDE_ONCE ; T_ECHO T_STRING ( T_STRING , T_STRING ) ; } T_ECHO . T_VARIABLE($autocomplete) . ; T_ECHO T_STRING ( ) ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_ECHO ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( T_VARIABLE($default_server) ) ; T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO ; } T_ECHO . T_STRING ( ) . . . T_STRING ( T_VARIABLE($default_user) ) . . . T_STRING ( ) . . ; T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) > T_LNUMBER ) { T_ECHO . T_STRING ( ) . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_ECHO . ; } T_ECHO ; T_INCLUDE_ONCE ; T_ECHO T_STRING ( T_STRING , T_STRING ) ; T_ECHO ; } T_ELSE { T_ECHO . T_VARIABLE($GLOBALS) [ ] . ; } T_ECHO . T_STRING ( ) . ; T_VARIABLE($_form_params) = T_ARRAY ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($_form_params) [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($_form_params) [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($_form_params) [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_ECHO T_STRING ( T_VARIABLE($_form_params) , , T_LNUMBER , ) ; T_ECHO ; T_STRING ( , ) ; T_IF ( T_EMPTY ( T_VARIABLE($_COOKIE) ) ) { T_STRING ( T_STRING ( ) , T_STRING ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) { T_ECHO ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_ECHO ; } T_ECHO ; T_IF ( T_STRING ( T_STRING ) ) { T_INCLUDE T_STRING ; } T_EXIT ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_IF ( ! T_STRING ( ) ) { T_RETURN T_STRING ; } T_IF ( T_STRING ( ) ) { T_FOREACH ( T_VARIABLE($GLOBALS) [ ] [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($key) ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($key) ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($key) ) ; } T_RETURN T_STRING ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_FOREACH ( T_VARIABLE($GLOBALS) [ ] [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($key) ) ; T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) [ . T_VARIABLE($key) ] ) ) { T_UNSET ( T_VARIABLE($_COOKIE) [ . T_VARIABLE($key) ] ) ; } } } T_ELSE { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) [ . T_VARIABLE($GLOBALS) [ ] ] ) ) { T_UNSET ( T_VARIABLE($_COOKIE) [ . T_VARIABLE($GLOBALS) [ ] ] ) ; } } } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($GLOBALS) [ ] = T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ? : T_VARIABLE($_REQUEST) [ ] ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_RETURN T_STRING ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_COOKIE) [ . T_VARIABLE($GLOBALS) [ ] ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_COOKIE) [ . T_VARIABLE($GLOBALS) [ ] ] ; } T_IF ( T_EMPTY ( T_VARIABLE($_COOKIE) [ . T_VARIABLE($GLOBALS) [ ] ] ) ) { T_RETURN T_STRING ; } T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_COOKIE) [ . T_VARIABLE($GLOBALS) [ ] ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_IF ( T_EMPTY ( T_VARIABLE($_SESSION) [ ] ) ) { T_RETURN T_STRING ; } T_VARIABLE($last_access_time) = T_STRING ( ) - T_VARIABLE($GLOBALS) [ ] [ ] ; T_IF ( T_VARIABLE($_SESSION) [ ] < T_VARIABLE($last_access_time) ) { T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_EXIT ; } T_IF ( T_EMPTY ( T_VARIABLE($_COOKIE) [ . T_VARIABLE($GLOBALS) [ ] ] ) ) { T_RETURN T_STRING ; } T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_COOKIE) [ . T_VARIABLE($GLOBALS) [ ] ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) { T_VARIABLE($GLOBALS) [ ] = ; } T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($cfg) ; T_IF ( T_VARIABLE($cfg) [ ] [ ] T_IS_NOT_EQUAL T_VARIABLE($GLOBALS) [ ] ) { T_FOREACH ( T_VARIABLE($cfg) [ ] T_AS T_VARIABLE($idx) T_DOUBLE_ARROW T_VARIABLE($current) ) { T_IF ( T_VARIABLE($current) [ ] T_IS_EQUAL T_VARIABLE($cfg) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($current) [ ] T_IS_EQUAL T_VARIABLE($cfg) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($current) [ ] T_IS_EQUAL T_VARIABLE($cfg) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($current) [ ] T_IS_EQUAL T_VARIABLE($cfg) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($current) [ ] T_IS_EQUAL T_VARIABLE($cfg) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($current) [ ] T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($idx) ; T_VARIABLE($cfg) [ ] = T_VARIABLE($current) ; T_BREAK ; } } } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_STRING ( T_VARIABLE($parts) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($tmp_host) = T_VARIABLE($parts) [ T_LNUMBER ] ; T_VARIABLE($tmp_port) = T_VARIABLE($parts) [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($tmp_host) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($tmp_port) = ; } T_IF ( T_VARIABLE($cfg) [ ] [ ] T_IS_NOT_EQUAL T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($cfg) [ ] [ ] = T_VARIABLE($tmp_host) ; T_IF ( ! T_EMPTY ( T_VARIABLE($tmp_port) ) ) { T_VARIABLE($cfg) [ ] [ ] = T_VARIABLE($tmp_port) ; } } T_UNSET ( T_VARIABLE($tmp_host) , T_VARIABLE($tmp_port) , T_VARIABLE($parts) ) ; } T_VARIABLE($cfg) [ ] [ ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($cfg) [ ] [ ] = T_VARIABLE($GLOBALS) [ ] ; T_UNSET ( T_VARIABLE($GLOBALS) [ ] ) ; T_UNSET ( T_VARIABLE($_SERVER) [ ] ) ; T_VARIABLE($_SESSION) [ ] = T_STRING ( ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($cfg) [ ] [ ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ? T_VARIABLE($cfg) [ ] [ ] : , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) , T_STRING , T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_IF ( ! T_VARIABLE($GLOBALS) [ ] ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($cfg) [ ] [ ] ) ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($GLOBALS) [ ] ) ; } } T_VARIABLE($redirect_url) = T_VARIABLE($cfg) [ ] . ; T_VARIABLE($url_params) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($url_params) [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($url_params) [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($url_params) [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( T_VARIABLE($redirect_url) . T_STRING ( T_VARIABLE($url_params) , ) , T_STRING ) ; T_EXIT ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($conn_error) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($conn_error) = T_STRING ( . ) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($conn_error) = T_STRING ( ) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($conn_error) = T_STRING ( T_STRING ( ) , T_VARIABLE($GLOBALS) [ ] [ ] ) ; } T_ELSEIF ( T_STRING ( ) ) { T_VARIABLE($conn_error) = . T_VARIABLE($GLOBALS) [ ] . . T_STRING ( ) ; } T_ELSE { T_VARIABLE($conn_error) = T_STRING ( ) ; } T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PRIVATE T_STRING ( ) { T_IF ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_IF ( T_EMPTY ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = T_STRING ( , T_STRING ) ; } T_RETURN T_VARIABLE($_SESSION) [ ] ; } T_ELSE { T_RETURN T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ; } } T_PUBLIC T_STRING ( T_VARIABLE($data) , T_VARIABLE($secret) ) { T_GLOBAL T_VARIABLE($iv) ; T_IF ( ! T_STRING ( ) ) { T_INCLUDE_ONCE ; T_VARIABLE($cipher) = T_NEW T_STRING ( T_STRING ) ; T_VARIABLE($cipher) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($secret) ) ; T_RETURN T_STRING ( T_VARIABLE($cipher) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($data) ) ) ; } T_ELSE { T_RETURN T_STRING ( T_STRING ( T_STRING , T_VARIABLE($secret) , T_VARIABLE($data) , T_STRING , T_VARIABLE($iv) ) ) ; } } T_PUBLIC T_STRING ( T_VARIABLE($encdata) , T_VARIABLE($secret) ) { T_GLOBAL T_VARIABLE($iv) ; T_IF ( ! T_STRING ( ) ) { T_INCLUDE_ONCE ; T_VARIABLE($cipher) = T_NEW T_STRING ( T_STRING ) ; T_VARIABLE($cipher) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($secret) ) ; T_RETURN T_VARIABLE($cipher) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($encdata) ) ) ; } T_ELSE { T_VARIABLE($data) = T_STRING ( T_VARIABLE($encdata) ) ; T_VARIABLE($decrypted) = T_STRING ( T_STRING , T_VARIABLE($secret) , T_VARIABLE($data) , T_STRING , T_VARIABLE($iv) ) ; T_RETURN T_STRING ( T_VARIABLE($decrypted) ) ; } } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; T_EXIT ; } T_IF ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_IF ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_VARIABLE($server_message) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; } T_ELSE { T_VARIABLE($server_message) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; } T_VARIABLE($realm_message) = . T_VARIABLE($server_message) ; } T_ELSE { T_VARIABLE($realm_message) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; } T_VARIABLE($realm_message) = T_STRING ( , , T_VARIABLE($realm_message) ) ; T_STRING ( . T_VARIABLE($realm_message) . ) ; T_STRING ( ) ; T_IF ( T_STRING ( ) T_IS_NOT_IDENTICAL ) { T_STRING ( ) ; } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) , ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_STRING ) ) { T_INCLUDE T_STRING ; } T_EXIT ; } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($PHP_AUTH_USER) , T_VARIABLE($PHP_AUTH_PW) ; T_IF ( T_EMPTY ( T_VARIABLE($PHP_AUTH_USER) ) ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($PHP_AUTH_USER) = T_STRING ( ) ; } T_ELSEIF ( T_STRING ( ) ) { T_VARIABLE($PHP_AUTH_USER) = T_STRING ( ) ; } T_ELSEIF ( T_STRING ( ) ) { T_VARIABLE($PHP_AUTH_USER) = T_STRING ( ) ; } T_ELSEIF ( T_STRING ( ) ) { T_VARIABLE($PHP_AUTH_USER) = T_STRING ( ) ; } T_ELSEIF ( T_STRING ( ) T_BOOLEAN_AND T_STRING T_IS_IDENTICAL T_STRING ( T_STRING ( ) , ) ) { T_VARIABLE($PHP_AUTH_USER) = T_STRING ( ) ; } T_ELSEIF ( T_STRING ( ) ) { T_VARIABLE($PHP_AUTH_USER) = T_STRING ( ) ; } } T_IF ( T_EMPTY ( T_VARIABLE($PHP_AUTH_PW) ) ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($PHP_AUTH_PW) = T_STRING ( ) ; } T_ELSEIF ( T_STRING ( ) ) { T_VARIABLE($PHP_AUTH_PW) = T_STRING ( ) ; } T_ELSEIF ( T_STRING ( ) ) { T_VARIABLE($PHP_AUTH_PW) = T_STRING ( ) ; } } T_IF ( T_STRING ( T_STRING ( T_VARIABLE($PHP_AUTH_USER) , T_LNUMBER , T_LNUMBER ) , ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($usr_pass) = T_STRING ( T_STRING ( T_VARIABLE($PHP_AUTH_USER) , T_LNUMBER ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($usr_pass) ) ) { T_VARIABLE($colon) = T_STRING ( T_VARIABLE($usr_pass) , ) ; T_IF ( T_VARIABLE($colon) ) { T_VARIABLE($PHP_AUTH_USER) = T_STRING ( T_VARIABLE($usr_pass) , T_LNUMBER , T_VARIABLE($colon) ) ; T_VARIABLE($PHP_AUTH_PW) = T_STRING ( T_VARIABLE($usr_pass) , T_VARIABLE($colon) + T_LNUMBER ) ; } T_UNSET ( T_VARIABLE($colon) ) ; } T_UNSET ( T_VARIABLE($usr_pass) ) ; } T_VARIABLE($old_usr) = T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : ; T_IF ( ! T_EMPTY ( T_VARIABLE($old_usr) ) T_BOOLEAN_AND ( T_ISSET ( T_VARIABLE($PHP_AUTH_USER) ) T_BOOLEAN_AND T_VARIABLE($old_usr) T_IS_EQUAL T_VARIABLE($PHP_AUTH_USER) ) ) { T_VARIABLE($PHP_AUTH_USER) = ; T_STRING ( ) ; } T_IF ( T_EMPTY ( T_VARIABLE($PHP_AUTH_USER) ) ) { T_RETURN T_STRING ; } T_ELSE { T_RETURN T_STRING ; } } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($cfg) , T_VARIABLE($server) ; T_GLOBAL T_VARIABLE($PHP_AUTH_USER) , T_VARIABLE($PHP_AUTH_PW) ; T_IF ( T_VARIABLE($cfg) [ ] [ ] T_IS_NOT_EQUAL T_VARIABLE($PHP_AUTH_USER) ) { T_VARIABLE($servers_cnt) = T_STRING ( T_VARIABLE($cfg) [ ] ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($servers_cnt) ; T_VARIABLE($i) T_INC ) { T_IF ( T_ISSET ( T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] ) T_BOOLEAN_AND ( T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_VARIABLE($cfg) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_VARIABLE($PHP_AUTH_USER) ) ) { T_VARIABLE($server) = T_VARIABLE($i) ; T_VARIABLE($cfg) [ ] = T_VARIABLE($cfg) [ ] [ T_VARIABLE($i) ] ; T_BREAK ; } } } T_VARIABLE($cfg) [ ] [ ] = T_VARIABLE($PHP_AUTH_USER) ; T_VARIABLE($cfg) [ ] [ ] = T_VARIABLE($PHP_AUTH_PW) ; T_UNSET ( T_VARIABLE($GLOBALS) [ ] ) ; T_UNSET ( T_VARIABLE($_SERVER) [ ] ) ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($error) = T_STRING ( ) ; T_IF ( T_VARIABLE($error) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_LNUMBER ) { T_STRING ( T_VARIABLE($error) ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_STRING ; } } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; T_IF ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_STRING ( ) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; } T_ELSE { T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; } T_EXIT ( ) ; } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($PHP_AUTH_USER) , T_VARIABLE($PHP_AUTH_PW) ; T_VARIABLE($signon_url) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) T_BOOLEAN_AND T_VARIABLE($_SESSION) [ ] T_IS_NOT_EQUAL T_VARIABLE($signon_url) ) { T_RETURN T_STRING ; } T_VARIABLE($script_name) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_VARIABLE($session_name) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_VARIABLE($signon_url) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_VARIABLE($single_signon_host) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_VARIABLE($single_signon_port) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_VARIABLE($single_signon_cfgupdate) = T_ARRAY ( ) ; T_VARIABLE($do_logout) = ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($script_name) ) ) { T_IF ( ! T_STRING ( T_VARIABLE($script_name) ) ) { T_STRING ( T_STRING ( ) . . T_VARIABLE($script_name) ) ; } T_INCLUDE T_VARIABLE($script_name) ; T_LIST ( T_VARIABLE($PHP_AUTH_USER) , T_VARIABLE($PHP_AUTH_PW) ) = T_STRING ( T_VARIABLE($cfg) [ ] [ ] ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_COOKIE) [ T_VARIABLE($session_name) ] ) ) { T_VARIABLE($old_session) = T_STRING ( ) ; T_VARIABLE($old_id) = T_STRING ( ) ; T_STRING ( ) ; T_STRING ( T_VARIABLE($session_name) ) ; T_STRING ( T_VARIABLE($_COOKIE) [ T_VARIABLE($session_name) ] ) ; T_STRING ( ) ; T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_IF ( T_VARIABLE($do_logout) ) { T_VARIABLE($PHP_AUTH_USER) = ; } T_ELSE { T_VARIABLE($PHP_AUTH_USER) = T_VARIABLE($_SESSION) [ ] ; } } T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_IF ( T_VARIABLE($do_logout) ) { T_VARIABLE($PHP_AUTH_PW) = ; } T_ELSE { T_VARIABLE($PHP_AUTH_PW) = T_VARIABLE($_SESSION) [ ] ; } } T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($single_signon_host) = T_VARIABLE($_SESSION) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($single_signon_port) = T_VARIABLE($_SESSION) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($single_signon_cfgupdate) = T_VARIABLE($_SESSION) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($pma_token) = T_VARIABLE($_SESSION) [ ] ; } T_STRING ( ) ; T_STRING ( T_VARIABLE($old_session) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($old_id) ) ) { T_STRING ( T_VARIABLE($old_id) ) ; } T_STRING ( ) ; T_VARIABLE($GLOBALS) [ ] [ ] [ ] = T_VARIABLE($single_signon_host) ; T_VARIABLE($GLOBALS) [ ] [ ] [ ] = T_VARIABLE($single_signon_port) ; T_VARIABLE($GLOBALS) [ ] [ ] = T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] , T_VARIABLE($single_signon_cfgupdate) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($pma_token) ) ) { T_VARIABLE($_SESSION) [ ] = T_VARIABLE($pma_token) ; } T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_IF ( T_EMPTY ( T_VARIABLE($PHP_AUTH_USER) ) ) { T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; T_RETURN T_STRING ; } T_ELSE { T_VARIABLE($_SESSION) [ ] = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_RETURN T_STRING ; } } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($cfg) ; T_GLOBAL T_VARIABLE($PHP_AUTH_USER) , T_VARIABLE($PHP_AUTH_PW) ; T_VARIABLE($cfg) [ ] [ ] = T_VARIABLE($PHP_AUTH_USER) ; T_VARIABLE($cfg) [ ] [ ] = T_VARIABLE($PHP_AUTH_PW) ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($session_name) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) [ T_VARIABLE($session_name) ] ) ) { T_VARIABLE($old_session) = T_STRING ( ) ; T_VARIABLE($old_id) = T_STRING ( ) ; T_STRING ( ) ; T_STRING ( T_VARIABLE($session_name) ) ; T_STRING ( T_VARIABLE($_COOKIE) [ T_VARIABLE($session_name) ] ) ; T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = T_STRING ( . ) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = T_STRING ( ) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = T_STRING ( T_STRING ( ) , T_VARIABLE($GLOBALS) [ ] [ ] ) ; } T_ELSEIF ( T_STRING ( ) ) { T_VARIABLE($_SESSION) [ ] = T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($_SESSION) [ ] = T_STRING ( ) ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_ABSTRACT T_PUBLIC T_STRING ( ) ; T_ABSTRACT T_PUBLIC T_STRING ( ) ; T_ABSTRACT T_PUBLIC T_STRING ( ) ; T_ABSTRACT T_PUBLIC T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_FUNCTION(Swekey_auth_check) ( ) { T_GLOBAL T_VARIABLE($cfg) ; T_VARIABLE($confFile) = T_VARIABLE($cfg) [ ] [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = T_ARRAY ( ) ; } T_VARIABLE($_SESSION) [ ] [ ] = ( ! T_EMPTY ( T_VARIABLE($confFile) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($confFile) ) ) ; T_IF ( T_VARIABLE($_SESSION) [ ] [ ] T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] = T_STRING ; T_VARIABLE($_SESSION) [ ] [ ] = T_ARRAY ( ) ; T_VARIABLE($valid_swekeys) = T_STRING ( , @ T_STRING ( T_VARIABLE($confFile) ) ) ; T_FOREACH ( T_VARIABLE($valid_swekeys) T_AS T_VARIABLE($line) ) { T_IF ( T_STRING ( , T_VARIABLE($line) ) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($items) = T_STRING ( , T_VARIABLE($line) ) ; T_IF ( T_STRING ( T_VARIABLE($items) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($items) [ T_LNUMBER ] ] = T_STRING ( T_VARIABLE($items) [ T_LNUMBER ] ) ; } } T_ELSEIF ( T_STRING ( , T_VARIABLE($line) ) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($items) = T_STRING ( , T_VARIABLE($line) ) ; T_VARIABLE($_SESSION) [ ] [ . T_STRING ( T_VARIABLE($items) [ T_LNUMBER ] ) ] = T_STRING ( T_VARIABLE($items) [ T_LNUMBER ] ) ; } } T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] = T_STRING ; } T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] = T_STRING ; } } T_IF ( T_VARIABLE($_SESSION) [ ] [ ] ) { T_IF ( T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_RETURN T_STRING ; } } T_RETURN T_STRING ; } T_FUNCTION(Swekey_auth_error) ( ) { T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_RETURN T_STRING ; } T_IF ( ! T_VARIABLE($_SESSION) [ ] [ ] ) { T_RETURN T_STRING ; } T_INCLUDE_ONCE ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($_SESSION) [ ] [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_ECHO T_VARIABLE($key) . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_RETURN T_STRING ; } T_IF ( T_STRING ( T_VARIABLE($_SESSION) [ ] [ ] ) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ( T_STRING ( ) , T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; } T_INCLUDE_ONCE ; T_STRING ( T_VARIABLE($_SESSION) [ ] [ ] ) ; T_STRING ( T_VARIABLE($_SESSION) [ ] [ ] ) ; T_STRING ( T_VARIABLE($_SESSION) [ ] [ ] ) ; T_STRING ( T_VARIABLE($_SESSION) [ ] [ ] ) ; T_VARIABLE($caFile) = T_VARIABLE($_SESSION) [ ] [ ] ; T_IF ( T_EMPTY ( T_VARIABLE($caFile) ) ) { T_VARIABLE($caFile) = T_FILE ; T_VARIABLE($pos) = T_STRING ( T_VARIABLE($caFile) , ) ; T_IF ( T_VARIABLE($pos) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($pos) = T_STRING ( T_VARIABLE($caFile) , ) ; } T_VARIABLE($caFile) = T_STRING ( T_VARIABLE($caFile) , T_LNUMBER , T_VARIABLE($pos) + T_LNUMBER ) . ; } T_IF ( T_STRING ( T_VARIABLE($caFile) ) ) { T_STRING ( T_VARIABLE($caFile) ) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($caFile) ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($_SESSION) [ ] [ ] , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) ) { T_RETURN T_ENCAPSED_AND_WHITESPACE T_VARIABLE($caFile) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($result) = T_STRING ; T_VARIABLE($swekey_id) = T_VARIABLE($_GET) [ ] ; T_VARIABLE($swekey_otp) = T_VARIABLE($_GET) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($swekey_id) ) ) { T_UNSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_UNSET ( T_VARIABLE($swekey_id) ) ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($swekey_id) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($res) = T_STRING ( T_VARIABLE($swekey_id) , T_VARIABLE($_SESSION) [ ] [ ] , T_VARIABLE($swekey_otp) ) ; T_UNSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ; T_IF ( ! T_VARIABLE($res) ) { T_VARIABLE($result) = T_STRING ( ) . . T_STRING ( ) . ; } T_ELSE { T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($swekey_id) ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($swekey_id) ] ; T_RETURN T_STRING ; } } T_ELSE { T_VARIABLE($result) = T_STRING ( ) ; T_IF ( T_VARIABLE($_SESSION) [ ] [ ] ) { T_VARIABLE($result) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($swekey_id) ) ; } T_UNSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ; } } } T_ELSE { T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; } T_VARIABLE($_SESSION) [ ] [ ] = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($_SESSION) [ ] [ ] ) T_IS_NOT_EQUAL T_LNUMBER ) { T_VARIABLE($result) = T_STRING ( ) . . T_STRING ( ) . ; T_UNSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($swekey_id) ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO . T_VARIABLE($_SESSION) [ ] [ ] . ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_RETURN T_STRING ( ) ; } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(Swekey_login) ( T_VARIABLE($input_name) , T_VARIABLE($input_go) ) { T_VARIABLE($swekeyErr) = T_STRING ( ) ; T_IF ( T_VARIABLE($swekeyErr) T_IS_NOT_EQUAL T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($swekeyErr) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) { T_ECHO ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_ECHO ; } } T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) T_BOOLEAN_AND T_VARIABLE($_SESSION) [ ] [ ] ) { T_ECHO ; T_IF ( T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_ECHO ; } T_ELSE { T_ECHO . T_VARIABLE($_SESSION) [ ] [ ] . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($input_name) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($input_go) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) ) { T_STRING ( ) ; T_STRING ( T_VARIABLE($_GET) [ ] ) ; T_STRING ( ) ; T_VARIABLE($_SESSION) = T_ARRAY ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_EXIT ; } T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_GLOBAL T_VARIABLE($gSwekeyLastError) ; T_VARIABLE($gSwekeyLastError) = T_LNUMBER ; T_GLOBAL T_VARIABLE($gSwekeyLastResult) ; T_VARIABLE($gSwekeyLastResult) = ; T_GLOBAL T_VARIABLE($gSwekeyCheckServer) ; T_IF ( ! T_ISSET ( T_VARIABLE($gSwekeyCheckServer) ) ) { T_VARIABLE($gSwekeyCheckServer) = T_STRING ; } T_GLOBAL T_VARIABLE($gSwekeyRndTokenServer) ; T_IF ( ! T_ISSET ( T_VARIABLE($gSwekeyRndTokenServer) ) ) { T_VARIABLE($gSwekeyRndTokenServer) = T_STRING ; } T_GLOBAL T_VARIABLE($gSwekeyStatusServer) ; T_IF ( ! T_ISSET ( T_VARIABLE($gSwekeyStatusServer) ) ) { T_VARIABLE($gSwekeyStatusServer) = T_STRING ; } T_GLOBAL T_VARIABLE($gSwekeyCA) ; T_GLOBAL T_VARIABLE($gSwekeyTokenCacheEnabled) ; T_IF ( ! T_ISSET ( T_VARIABLE($gSwekeyTokenCacheEnabled) ) ) { T_VARIABLE($gSwekeyTokenCacheEnabled) = T_STRING ; } T_FUNCTION(Swekey_SetCheckServer) ( T_VARIABLE($server) ) { T_GLOBAL T_VARIABLE($gSwekeyCheckServer) ; T_IF ( T_EMPTY ( T_VARIABLE($server) ) ) { T_VARIABLE($gSwekeyCheckServer) = T_STRING ; } T_ELSE { T_VARIABLE($gSwekeyCheckServer) = T_VARIABLE($server) ; } } T_FUNCTION(Swekey_SetRndTokenServer) ( T_VARIABLE($server) ) { T_GLOBAL T_VARIABLE($gSwekeyRndTokenServer) ; T_IF ( T_EMPTY ( T_VARIABLE($server) ) ) { T_VARIABLE($gSwekeyRndTokenServer) = T_STRING ; } T_ELSE { T_VARIABLE($gSwekeyRndTokenServer) = T_VARIABLE($server) ; } } T_FUNCTION(Swekey_SetStatusServer) ( T_VARIABLE($server) ) { T_GLOBAL T_VARIABLE($gSwekeyStatusServer) ; T_IF ( T_EMPTY ( T_VARIABLE($server) ) ) { T_VARIABLE($gSwekeyStatusServer) = T_STRING ; } T_ELSE { T_VARIABLE($gSwekeyStatusServer) = T_VARIABLE($server) ; } } T_FUNCTION(Swekey_SetCAFile) ( T_VARIABLE($cafile) ) { T_GLOBAL T_VARIABLE($gSwekeyCA) ; T_VARIABLE($gSwekeyCA) = T_VARIABLE($cafile) ; } T_FUNCTION(Swekey_EnableTokenCache) ( T_VARIABLE($enable) ) { T_GLOBAL T_VARIABLE($gSwekeyTokenCacheEnabled) ; T_VARIABLE($gSwekeyTokenCacheEnabled) = ! T_EMPTY ( T_VARIABLE($enable) ) ; } T_FUNCTION(Swekey_GetLastError) ( ) { T_GLOBAL T_VARIABLE($gSwekeyLastError) ; T_RETURN T_VARIABLE($gSwekeyLastError) ; } T_FUNCTION(Swekey_GetLastResult) ( ) { T_GLOBAL T_VARIABLE($gSwekeyLastResult) ; T_RETURN T_VARIABLE($gSwekeyLastResult) ; } T_FUNCTION(Swekey_HttpGet) ( T_VARIABLE($url) , & T_VARIABLE($response_code) ) { T_GLOBAL T_VARIABLE($gSwekeyLastError) ; T_VARIABLE($gSwekeyLastError) = T_LNUMBER ; T_GLOBAL T_VARIABLE($gSwekeyLastResult) ; T_VARIABLE($gSwekeyLastResult) = ; T_IF ( T_STRING ( ) ) { T_VARIABLE($sess) = T_STRING ( T_VARIABLE($url) ) ; T_IF ( T_STRING ( T_VARIABLE($url) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_GLOBAL T_VARIABLE($gSwekeyCA) ; T_IF ( ! T_EMPTY ( T_VARIABLE($gSwekeyCA) ) ) { T_IF ( T_STRING ( T_VARIABLE($gSwekeyCA) ) ) { T_IF ( ! T_STRING ( T_VARIABLE($sess) , T_STRING , T_VARIABLE($gSwekeyCA) ) ) { T_STRING ( . T_STRING ( T_VARIABLE($sess) ) ) ; } T_ELSE { T_VARIABLE($caFileOk) = T_STRING ; } } T_ELSE { T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($gSwekeyCA) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($url) ) ; } } T_STRING ( T_VARIABLE($sess) , T_STRING , ) ; T_STRING ( T_VARIABLE($sess) , T_STRING , ) ; T_STRING ( T_VARIABLE($sess) , T_STRING , ) ; T_STRING ( T_VARIABLE($sess) , T_STRING , ) ; } T_ELSE { T_STRING ( T_VARIABLE($sess) , T_STRING , ) ; T_STRING ( T_VARIABLE($sess) , T_STRING , ) ; } T_STRING ( T_VARIABLE($sess) , T_STRING , ) ; T_VARIABLE($res) = T_STRING ( T_VARIABLE($sess) ) ; T_VARIABLE($response_code) = T_STRING ( T_VARIABLE($sess) , T_STRING ) ; T_VARIABLE($curlerr) = T_STRING ( T_VARIABLE($sess) ) ; T_STRING ( T_VARIABLE($sess) ) ; T_IF ( T_VARIABLE($response_code) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($gSwekeyLastResult) = T_VARIABLE($res) ; T_RETURN T_VARIABLE($res) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($response_code) ) ) { T_VARIABLE($gSwekeyLastError) = T_VARIABLE($response_code) ; T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($gSwekeyLastError) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($curlerr) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($url) ) ; T_RETURN ; } T_VARIABLE($response_code) = T_LNUMBER ; T_VARIABLE($gSwekeyLastError) = T_VARIABLE($response_code) ; T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($curlerr) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($url) ) ; T_RETURN ; } T_IF ( T_STRING ( ) ) { T_FOR ( T_VARIABLE($num) = T_LNUMBER ; T_VARIABLE($num) T_IS_SMALLER_OR_EQUAL T_LNUMBER ; T_VARIABLE($num) T_INC ) { T_VARIABLE($r) = T_NEW T_STRING ( T_VARIABLE($url) ) ; T_VARIABLE($options) = T_ARRAY ( T_DOUBLE_ARROW ) ; T_IF ( T_STRING ( T_VARIABLE($url) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($sslOptions) = T_ARRAY ( ) ; T_VARIABLE($sslOptions) [ ] = T_STRING ; T_VARIABLE($sslOptions) [ ] = T_STRING ; T_VARIABLE($capath) = T_FILE ; T_VARIABLE($name) = T_STRING ( T_VARIABLE($capath) , ) ; T_IF ( T_EMPTY ( T_VARIABLE($name) ) ) { T_VARIABLE($name) = T_STRING ( T_VARIABLE($capath) , ) ; } T_VARIABLE($capath) = T_STRING ( T_VARIABLE($capath) , T_LNUMBER , T_STRING ( T_VARIABLE($capath) ) - T_STRING ( T_VARIABLE($name) ) + T_LNUMBER ) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($gSwekeyCA) ) ) { T_VARIABLE($sslOptions) [ ] = T_VARIABLE($gSwekeyCA) ; } T_VARIABLE($options) [ ] = T_VARIABLE($sslOptions) ; } T_VARIABLE($r) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($options) ) ; { T_VARIABLE($reply) = T_VARIABLE($r) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($res) = T_VARIABLE($reply) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($info) = T_VARIABLE($r) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response_code) = T_VARIABLE($info) [ ] ; T_IF ( T_VARIABLE($response_code) T_IS_NOT_EQUAL T_LNUMBER ) { T_VARIABLE($gSwekeyLastError) = T_VARIABLE($response_code) ; T_STRING ( . T_VARIABLE($gSwekeyLastError) . . T_VARIABLE($url) ) ; T_RETURN ; } T_VARIABLE($gSwekeyLastResult) = T_VARIABLE($res) ; T_RETURN T_VARIABLE($res) ; } } T_VARIABLE($response_code) = T_LNUMBER ; T_VARIABLE($gSwekeyLastError) = T_VARIABLE($response_code) ; T_STRING ( . T_VARIABLE($gSwekeyLastError) . . T_VARIABLE($url) ) ; T_RETURN ; } T_GLOBAL T_VARIABLE($http_response_header) ; T_VARIABLE($res) = @ T_STRING ( T_VARIABLE($url) ) ; T_VARIABLE($response_code) = T_STRING ( T_VARIABLE($http_response_header) [ T_LNUMBER ] , T_LNUMBER , T_LNUMBER ) ; T_IF ( T_VARIABLE($response_code) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($gSwekeyLastResult) = T_VARIABLE($res) ; T_RETURN T_VARIABLE($res) ; } T_VARIABLE($gSwekeyLastError) = T_VARIABLE($response_code) ; T_STRING ( . T_VARIABLE($response_code) . . T_VARIABLE($url) ) ; T_RETURN ; } T_FUNCTION(Swekey_GetRndToken) ( ) { T_GLOBAL T_VARIABLE($gSwekeyRndTokenServer) ; T_RETURN T_STRING ( T_VARIABLE($gSwekeyRndTokenServer) . , T_VARIABLE($response_code) ) ; } T_FUNCTION(Swekey_GetHalfRndToken) ( ) { T_GLOBAL T_VARIABLE($gSwekeyRndTokenServer) ; T_RETURN T_STRING ( T_VARIABLE($gSwekeyRndTokenServer) . , T_VARIABLE($response_code) ) ; } T_FUNCTION(Swekey_GetFastHalfRndToken) ( ) { T_GLOBAL T_VARIABLE($gSwekeyTokenCacheEnabled) ; T_VARIABLE($res) = ; T_VARIABLE($cachefile) = ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_IF ( T_STRING ( ) - T_VARIABLE($_SESSION) [ ] < T_LNUMBER ) { T_VARIABLE($res) = T_VARIABLE($_SESSION) [ ] ; } } T_IF ( T_STRING ( T_VARIABLE($res) ) T_IS_NOT_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($gSwekeyTokenCacheEnabled) ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($tempdir) = T_STRING ( ) ; T_VARIABLE($cachefile) = T_VARIABLE($tempdir) . . T_STRING ( ) ; T_VARIABLE($modif) = T_STRING ( T_VARIABLE($cachefile) ) ; T_IF ( T_VARIABLE($modif) T_IS_NOT_EQUAL T_STRING ) { T_IF ( T_STRING ( ) - T_VARIABLE($modif) < T_LNUMBER ) { T_VARIABLE($res) = @ T_STRING ( T_VARIABLE($cachefile) ) ; T_IF ( T_STRING ( T_VARIABLE($res) ) T_IS_NOT_EQUAL T_LNUMBER ) { T_VARIABLE($res) = ; } T_ELSE { T_VARIABLE($_SESSION) [ ] = T_VARIABLE($res) ; T_VARIABLE($_SESSION) [ ] = T_VARIABLE($modif) ; } } } } } T_IF ( T_STRING ( T_VARIABLE($res) ) T_IS_NOT_EQUAL T_LNUMBER ) { T_VARIABLE($res) = T_STRING ( T_STRING ( ) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($_SESSION) [ ] = T_VARIABLE($res) ; T_VARIABLE($_SESSION) [ ] = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($cachefile) ) ) { T_STRING ( T_VARIABLE($cachefile) ) ; T_VARIABLE($file) = T_STRING ( T_VARIABLE($cachefile) , ) ; T_IF ( T_VARIABLE($file) T_IS_NOT_EQUAL T_STRING ) { @ T_STRING ( T_VARIABLE($file) , T_VARIABLE($res) ) ; @ T_STRING ( T_VARIABLE($file) ) ; } } } T_RETURN T_VARIABLE($res) . ; } T_FUNCTION(Swekey_GetFastRndToken) ( ) { T_VARIABLE($res) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($res) ) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($res) , T_LNUMBER , T_LNUMBER ) . T_STRING ( T_STRING ( . T_STRING ( ) . T_STRING ( T_STRING ) ) ) ; } T_RETURN ; } T_FUNCTION(Swekey_CheckOtp) ( T_VARIABLE($id) , T_VARIABLE($rt) , T_VARIABLE($otp) ) { T_GLOBAL T_VARIABLE($gSwekeyCheckServer) ; T_VARIABLE($res) = T_STRING ( T_VARIABLE($gSwekeyCheckServer) . . T_VARIABLE($id) . . T_VARIABLE($rt) . . T_VARIABLE($otp) , T_VARIABLE($response_code) ) ; T_RETURN T_VARIABLE($response_code) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($res) T_IS_EQUAL ; } T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(Swekey_GetStatusStr) ( T_VARIABLE($status) ) { T_SWITCH ( T_VARIABLE($status) ) { T_CASE T_STRING : T_RETURN ; T_CASE T_STRING : T_RETURN ; T_CASE T_STRING : T_RETURN ; T_CASE T_STRING : T_RETURN ; T_CASE T_STRING : T_RETURN ; T_CASE T_STRING : T_RETURN ; T_CASE T_STRING : T_RETURN ; T_CASE T_STRING : T_RETURN ; T_CASE T_STRING : T_RETURN ; T_CASE T_STRING : T_RETURN ; T_CASE T_STRING : T_RETURN ; } T_RETURN . T_VARIABLE($status) ; } T_FUNCTION(Swekey_GetStatus) ( T_VARIABLE($id) ) { T_GLOBAL T_VARIABLE($gSwekeyStatusServer) ; T_VARIABLE($res) = T_STRING ( T_VARIABLE($gSwekeyStatusServer) . . T_VARIABLE($id) , T_VARIABLE($response_code) ) ; T_IF ( T_VARIABLE($response_code) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($res) ) ; } T_RETURN T_STRING ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_cgFormats) ; T_PRIVATE T_VARIABLE($_cgHandlers) ; T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( , ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( , ) ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($exportPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($exportSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($generalOptions) ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($exportSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($exportPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($sql_query) ) { T_VARIABLE($CG_FORMATS) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($CG_HANDLERS) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($format) = T_VARIABLE($GLOBALS) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($CG_FORMATS) [ T_VARIABLE($format) ] ) ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_VARIABLE($CG_HANDLERS) [ T_VARIABLE($format) ] ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) ) ) ; } T_RETURN T_STRING ( T_STRING ( , T_VARIABLE($format) ) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($str) , T_VARIABLE($ucfirst) = T_STRING ) { T_VARIABLE($str) = T_STRING ( , , T_VARIABLE($str) ) ; T_IF ( ! T_STRING ( , T_VARIABLE($str) ) ) { T_VARIABLE($str) = . T_VARIABLE($str) ; } T_IF ( T_VARIABLE($ucfirst) ) { T_VARIABLE($str) = T_STRING ( T_VARIABLE($str) ) ; } T_RETURN T_VARIABLE($str) ; } T_PRIVATE T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) ) { T_VARIABLE($lines) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ) ) ; T_IF ( T_VARIABLE($result) ) { T_VARIABLE($tableProperties) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($tableProperties) [ ] = T_NEW T_STRING ( T_VARIABLE($row) ) ; } T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($lines) [ ] = ; T_VARIABLE($lines) [ ] = ; T_VARIABLE($lines) [ ] = ; T_VARIABLE($lines) [ ] = ; T_VARIABLE($lines) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($lines) [ ] = ; T_VARIABLE($lines) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($lines) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($lines) [ ] = ; T_VARIABLE($lines) [ ] = ; T_FOREACH ( T_VARIABLE($tableProperties) T_AS T_VARIABLE($tableProperty) ) { T_VARIABLE($lines) [ ] = T_VARIABLE($tableProperty) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($lines) [ ] = ; T_VARIABLE($lines) [ ] = ; T_VARIABLE($lines) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($temp) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tableProperties) T_AS T_VARIABLE($tableProperty) ) { T_IF ( ! T_VARIABLE($tableProperty) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($temp) [ ] = T_VARIABLE($tableProperty) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_VARIABLE($lines) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_STRING ( , T_VARIABLE($temp) ) . ; T_VARIABLE($lines) [ ] = ; T_FOREACH ( T_VARIABLE($tableProperties) T_AS T_VARIABLE($tableProperty) ) { T_IF ( ! T_VARIABLE($tableProperty) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($lines) [ ] = T_VARIABLE($tableProperty) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_VARIABLE($lines) [ ] = ; T_VARIABLE($lines) [ ] = ; T_VARIABLE($lines) [ ] = ; T_FOREACH ( T_VARIABLE($tableProperties) T_AS T_VARIABLE($tableProperty) ) { T_VARIABLE($lines) [ ] = T_VARIABLE($tableProperty) T_OBJECT_OPERATOR T_STRING ( . . . . . . . . ) ; } T_VARIABLE($lines) [ ] = ; T_VARIABLE($lines) [ ] = ; T_VARIABLE($lines) [ ] = ; T_VARIABLE($lines) [ ] = ; } T_RETURN T_STRING ( , T_VARIABLE($lines) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) ) { T_VARIABLE($lines) = T_ARRAY ( ) ; T_VARIABLE($lines) [ ] = . ; T_VARIABLE($lines) [ ] = . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_VARIABLE($lines) [ ] = . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($result) = T_STRING ( T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ) ) ; T_IF ( T_VARIABLE($result) ) { T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($tableProperty) = T_NEW T_STRING ( T_VARIABLE($row) ) ; T_IF ( T_VARIABLE($tableProperty) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($lines) [ ] = T_VARIABLE($tableProperty) T_OBJECT_OPERATOR T_STRING ( . . . . . . . . . ) ; } T_ELSE { T_VARIABLE($lines) [ ] = T_VARIABLE($tableProperty) T_OBJECT_OPERATOR T_STRING ( . . . . . . ) ; } } T_STRING ( T_VARIABLE($result) ) ; } T_VARIABLE($lines) [ ] = ; T_VARIABLE($lines) [ ] = ; T_RETURN T_STRING ( , T_VARIABLE($lines) ) ; } T_PRIVATE T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($CG_FORMATS) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($CG_FORMATS) ; } T_PRIVATE T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($CG_HANDLERS) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($CG_HANDLERS) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_csvTerminated) ; T_PRIVATE T_VARIABLE($_csvSeparator) ; T_PRIVATE T_VARIABLE($_csvEnclosed) ; T_PRIVATE T_VARIABLE($_csvEscaped) ; T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($exportPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($exportSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($generalOptions) ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($exportSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($exportPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($what) , T_VARIABLE($csv_terminated) , T_VARIABLE($csv_separator) , T_VARIABLE($csv_enclosed) , T_VARIABLE($csv_escaped) ; T_IF ( T_VARIABLE($what) T_IS_EQUAL ) { T_VARIABLE($csv_terminated) = ; T_SWITCH ( T_VARIABLE($GLOBALS) [ ] ) { T_CASE : T_VARIABLE($csv_separator) = ; T_BREAK ; T_CASE : T_VARIABLE($csv_separator) = ; T_BREAK ; T_CASE : T_VARIABLE($csv_separator) = ; T_BREAK ; } T_VARIABLE($csv_enclosed) = ; T_VARIABLE($csv_escaped) = ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = ; } } T_ELSE { T_IF ( T_EMPTY ( T_VARIABLE($csv_terminated) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($csv_terminated) ) T_IS_EQUAL ) { T_VARIABLE($csv_terminated) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_VARIABLE($csv_terminated) = T_STRING ( , , T_VARIABLE($csv_terminated) ) ; T_VARIABLE($csv_terminated) = T_STRING ( , , T_VARIABLE($csv_terminated) ) ; T_VARIABLE($csv_terminated) = T_STRING ( , , T_VARIABLE($csv_terminated) ) ; } T_VARIABLE($csv_separator) = T_STRING ( , , T_VARIABLE($csv_separator) ) ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($sql_query) ) { T_GLOBAL T_VARIABLE($what) , T_VARIABLE($csv_terminated) , T_VARIABLE($csv_separator) , T_VARIABLE($csv_enclosed) , T_VARIABLE($csv_escaped) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) , T_STRING , T_STRING ) ; T_VARIABLE($fields_cnt) = T_STRING ( T_VARIABLE($result) ) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($schema_insert) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($fields_cnt) ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($csv_enclosed) T_IS_EQUAL ) { T_VARIABLE($schema_insert) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ) ; } T_ELSE { T_VARIABLE($schema_insert) T_CONCAT_EQUAL T_VARIABLE($csv_enclosed) . T_STRING ( T_VARIABLE($csv_enclosed) , T_VARIABLE($csv_escaped) . T_VARIABLE($csv_enclosed) , T_STRING ( T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ) ) . T_VARIABLE($csv_enclosed) ; } T_VARIABLE($schema_insert) T_CONCAT_EQUAL T_VARIABLE($csv_separator) ; } T_VARIABLE($schema_insert) = T_STRING ( T_STRING ( T_VARIABLE($schema_insert) , T_LNUMBER , - T_LNUMBER ) ) ; T_IF ( ! T_STRING ( T_VARIABLE($schema_insert) . T_VARIABLE($csv_terminated) ) ) { T_RETURN T_STRING ; } } T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($schema_insert) = ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($fields_cnt) ; T_VARIABLE($j) T_INC ) { T_IF ( ! T_ISSET ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) ) { T_VARIABLE($schema_insert) T_CONCAT_EQUAL T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] ; } T_ELSEIF ( T_VARIABLE($row) [ T_VARIABLE($j) ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($row) [ T_VARIABLE($j) ] T_IS_NOT_EQUAL ) { T_IF ( T_VARIABLE($what) T_IS_EQUAL ) { T_VARIABLE($row) [ T_VARIABLE($j) ] = T_STRING ( , , T_VARIABLE($row) [ T_VARIABLE($j) ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] ) { T_VARIABLE($row) [ T_VARIABLE($j) ] = T_STRING ( , , T_STRING ( , , T_VARIABLE($row) [ T_VARIABLE($j) ] ) ) ; } T_IF ( T_VARIABLE($csv_enclosed) T_IS_EQUAL ) { T_VARIABLE($schema_insert) T_CONCAT_EQUAL T_VARIABLE($row) [ T_VARIABLE($j) ] ; } T_ELSE { T_IF ( T_VARIABLE($csv_escaped) T_IS_NOT_EQUAL T_VARIABLE($csv_enclosed) ) { T_VARIABLE($schema_insert) T_CONCAT_EQUAL T_VARIABLE($csv_enclosed) . T_STRING ( T_VARIABLE($csv_enclosed) , T_VARIABLE($csv_escaped) . T_VARIABLE($csv_enclosed) , T_STRING ( T_VARIABLE($csv_escaped) , T_VARIABLE($csv_escaped) . T_VARIABLE($csv_escaped) , T_VARIABLE($row) [ T_VARIABLE($j) ] ) ) . T_VARIABLE($csv_enclosed) ; } T_ELSE { T_VARIABLE($schema_insert) T_CONCAT_EQUAL T_VARIABLE($csv_enclosed) . T_STRING ( T_VARIABLE($csv_enclosed) , T_VARIABLE($csv_escaped) . T_VARIABLE($csv_enclosed) , T_VARIABLE($row) [ T_VARIABLE($j) ] ) . T_VARIABLE($csv_enclosed) ; } } } T_ELSE { T_VARIABLE($schema_insert) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($j) < T_VARIABLE($fields_cnt) - T_LNUMBER ) { T_VARIABLE($schema_insert) T_CONCAT_EQUAL T_VARIABLE($csv_separator) ; } } T_IF ( ! T_STRING ( T_VARIABLE($schema_insert) . T_VARIABLE($csv_terminated) ) ) { T_RETURN T_STRING ; } } T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_STRING ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($exportPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($exportSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($generalOptions) ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($exportSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($exportPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($exportPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($exportSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dumpWhat) = T_NEW T_STRING ( ) ; T_VARIABLE($dumpWhat) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dumpWhat) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($dumpWhat) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dumpWhat) ) ; T_VARIABLE($dataOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dataOptions) ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($exportSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($exportPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($charset_of_file) ; T_RETURN T_STRING ( . . ( T_ISSET ( T_VARIABLE($charsetOfFile) ) ? T_VARIABLE($charsetOfFile) : ) . ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ( ) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ( . T_STRING ( ) . . T_STRING ( T_VARIABLE($db) ) . ) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($sql_query) ) { T_GLOBAL T_VARIABLE($what) ; T_IF ( ! T_STRING ( . T_STRING ( ) . . T_STRING ( T_VARIABLE($table) ) . ) ) { T_RETURN T_STRING ; } T_IF ( ! T_STRING ( ) ) { T_RETURN T_STRING ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) , T_STRING , T_STRING ) ; T_VARIABLE($fields_cnt) = T_STRING ( T_VARIABLE($result) ) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($schema_insert) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($fields_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($schema_insert) T_CONCAT_EQUAL . T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ) ) . ; } T_VARIABLE($schema_insert) T_CONCAT_EQUAL ; T_IF ( ! T_STRING ( T_VARIABLE($schema_insert) ) ) { T_RETURN T_STRING ; } } T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($schema_insert) = ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($fields_cnt) ; T_VARIABLE($j) T_INC ) { T_IF ( ! T_ISSET ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) ) { T_VARIABLE($value) = T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] ; } T_ELSEIF ( T_VARIABLE($row) [ T_VARIABLE($j) ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($row) [ T_VARIABLE($j) ] T_IS_NOT_EQUAL ) { T_VARIABLE($value) = T_VARIABLE($row) [ T_VARIABLE($j) ] ; } T_ELSE { T_VARIABLE($value) = ; } T_VARIABLE($schema_insert) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($value) ) . ; } T_VARIABLE($schema_insert) T_CONCAT_EQUAL ; T_IF ( ! T_STRING ( T_VARIABLE($schema_insert) ) ) { T_RETURN T_STRING ; } } T_STRING ( T_VARIABLE($result) ) ; T_IF ( ! T_STRING ( ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($view) , T_VARIABLE($crlf) ) { T_VARIABLE($schema_insert) = . . . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . . ; T_VARIABLE($unique_keys) = T_ARRAY ( ) ; T_VARIABLE($keys) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($key) ) { T_IF ( T_VARIABLE($key) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($unique_keys) [ ] = T_VARIABLE($key) [ ] ; } } T_VARIABLE($columns) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($view) ) ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($column) ) { T_VARIABLE($schema_insert) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column) , T_VARIABLE($unique_keys) ) ; T_VARIABLE($schema_insert) T_CONCAT_EQUAL ; } T_VARIABLE($schema_insert) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($schema_insert) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($show_dates) = T_STRING , T_VARIABLE($add_semicolon) = T_STRING , T_VARIABLE($view) = T_STRING ) { T_GLOBAL T_VARIABLE($cfgRelation) ; T_VARIABLE($schema_insert) = ; T_STRING ( T_VARIABLE($db) ) ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($res_rel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($res_rel) T_BOOLEAN_AND T_STRING ( T_VARIABLE($res_rel) ) > T_LNUMBER ) { T_VARIABLE($have_rel) = T_STRING ; } T_ELSE { T_VARIABLE($have_rel) = T_STRING ; } } T_ELSE { T_VARIABLE($have_rel) = T_STRING ; } T_VARIABLE($schema_insert) T_CONCAT_EQUAL ; T_VARIABLE($columns_cnt) = T_LNUMBER ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND T_VARIABLE($have_rel) ) { T_VARIABLE($columns_cnt) T_INC ; } T_IF ( T_VARIABLE($do_comments) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($columns_cnt) T_INC ; } T_IF ( T_VARIABLE($do_mime) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($columns_cnt) T_INC ; } T_VARIABLE($schema_insert) T_CONCAT_EQUAL ; T_VARIABLE($schema_insert) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($schema_insert) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($schema_insert) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($schema_insert) T_CONCAT_EQUAL . T_STRING ( ) . ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND T_VARIABLE($have_rel) ) { T_VARIABLE($schema_insert) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_IF ( T_VARIABLE($do_comments) ) { T_VARIABLE($schema_insert) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($comments) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_IF ( T_VARIABLE($do_mime) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($schema_insert) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($mime_map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_STRING ) ; } T_VARIABLE($schema_insert) T_CONCAT_EQUAL ; T_VARIABLE($columns) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($unique_keys) = T_ARRAY ( ) ; T_VARIABLE($keys) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($key) ) { T_IF ( T_VARIABLE($key) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($unique_keys) [ ] = T_VARIABLE($key) [ ] ; } } T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($column) ) { T_VARIABLE($schema_insert) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column) , T_VARIABLE($unique_keys) ) ; T_VARIABLE($field_name) = T_VARIABLE($column) [ ] ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND T_VARIABLE($have_rel) ) { T_VARIABLE($schema_insert) T_CONCAT_EQUAL . ( T_ISSET ( T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] ) ? T_STRING ( T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] . . T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] . ) : ) . ; } T_IF ( T_VARIABLE($do_comments) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($schema_insert) T_CONCAT_EQUAL . ( T_ISSET ( T_VARIABLE($comments) [ T_VARIABLE($field_name) ] ) ? T_STRING ( T_VARIABLE($comments) [ T_VARIABLE($field_name) ] ) : ) . ; } T_IF ( T_VARIABLE($do_mime) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($schema_insert) T_CONCAT_EQUAL . ( T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($field_name) ] ) ? T_STRING ( T_STRING ( , , T_VARIABLE($mime_map) [ T_VARIABLE($field_name) ] [ ] ) ) : ) . ; } T_VARIABLE($schema_insert) T_CONCAT_EQUAL ; } T_VARIABLE($schema_insert) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($schema_insert) ; } T_PROTECTED T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) { T_VARIABLE($dump) = ; T_VARIABLE($dump) T_CONCAT_EQUAL ; T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($dump) T_CONCAT_EQUAL ; T_VARIABLE($triggers) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_FOREACH ( T_VARIABLE($triggers) T_AS T_VARIABLE($trigger) ) { T_VARIABLE($dump) T_CONCAT_EQUAL ; T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($trigger) [ ] ) . . . T_STRING ( T_VARIABLE($trigger) [ ] ) . . . T_STRING ( T_VARIABLE($trigger) [ ] ) . . . T_STRING ( T_VARIABLE($trigger) [ ] ) . . ; } T_VARIABLE($dump) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($dump) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($export_mode) , T_VARIABLE($export_type) , T_VARIABLE($do_relation) = T_STRING , T_VARIABLE($do_comments) = T_STRING , T_VARIABLE($do_mime) = T_STRING , T_VARIABLE($dates) = T_STRING ) { T_VARIABLE($dump) = ; T_SWITCH ( T_VARIABLE($export_mode) ) { T_CASE : T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) . . T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($dates) ) ; T_BREAK ; T_CASE : T_VARIABLE($dump) = ; T_VARIABLE($triggers) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($triggers) ) { T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) . . T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_BREAK ; T_CASE : T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) . . T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($dates) , T_STRING , T_STRING ) ; T_BREAK ; T_CASE : T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) . . T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) ) ; } T_RETURN T_STRING ( T_VARIABLE($dump) ) ; } T_PROTECTED T_STRING ( T_VARIABLE($column) , T_VARIABLE($unique_keys) ) { T_VARIABLE($definition) = ; T_VARIABLE($extracted_columnspec) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) [ ] ) ; T_VARIABLE($type) = T_STRING ( T_VARIABLE($extracted_columnspec) [ ] ) ; T_IF ( T_EMPTY ( T_VARIABLE($type) ) ) { T_VARIABLE($type) = ; } T_IF ( ! T_ISSET ( T_VARIABLE($column) [ ] ) ) { T_IF ( T_VARIABLE($column) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($column) [ ] = ; } } T_VARIABLE($fmt_pre) = ; T_VARIABLE($fmt_post) = ; T_IF ( T_STRING ( T_VARIABLE($column) [ ] , T_VARIABLE($unique_keys) ) ) { T_VARIABLE($fmt_pre) = . T_VARIABLE($fmt_pre) ; T_VARIABLE($fmt_post) = T_VARIABLE($fmt_post) . ; } T_IF ( T_VARIABLE($column) [ ] T_IS_EQUAL ) { T_VARIABLE($fmt_pre) = . T_VARIABLE($fmt_pre) ; T_VARIABLE($fmt_post) = T_VARIABLE($fmt_post) . ; } T_VARIABLE($definition) T_CONCAT_EQUAL . T_VARIABLE($fmt_pre) . T_STRING ( T_VARIABLE($column) [ ] ) . T_VARIABLE($fmt_post) . ; T_VARIABLE($definition) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($type) ) . ; T_VARIABLE($definition) T_CONCAT_EQUAL . ( ( T_VARIABLE($column) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($column) [ ] T_IS_EQUAL ) ? T_STRING ( ) : T_STRING ( ) ) . ; T_VARIABLE($definition) T_CONCAT_EQUAL . T_STRING ( T_ISSET ( T_VARIABLE($column) [ ] ) ? T_VARIABLE($column) [ ] : ) . ; T_RETURN T_VARIABLE($definition) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($exportPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($exportSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($generalOptions) ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($exportSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($exportPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_STRING ( . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] . T_VARIABLE($GLOBALS) [ ] ) ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_STRING ( . T_VARIABLE($db) . . T_VARIABLE($GLOBALS) [ ] ) ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($sql_query) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) , T_STRING , T_STRING ) ; T_VARIABLE($columns_cnt) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($fields_meta) = T_STRING ( T_VARIABLE($result) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($columns_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($columns) [ T_VARIABLE($i) ] = T_STRING ( T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ) ; } T_UNSET ( T_VARIABLE($i) ) ; T_VARIABLE($buffer) = ; T_VARIABLE($record_cnt) = T_LNUMBER ; T_WHILE ( T_VARIABLE($record) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($record_cnt) T_INC ; T_IF ( T_VARIABLE($record_cnt) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($buffer) T_CONCAT_EQUAL . T_VARIABLE($db) . . T_VARIABLE($table) . T_VARIABLE($crlf) . T_VARIABLE($crlf) ; T_VARIABLE($buffer) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($buffer) T_CONCAT_EQUAL ; } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($columns_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($isLastLine) = ( T_VARIABLE($i) + T_LNUMBER T_IS_GREATER_OR_EQUAL T_VARIABLE($columns_cnt) ) ; T_VARIABLE($column) = T_VARIABLE($columns) [ T_VARIABLE($i) ] ; T_IF ( T_STRING ( T_VARIABLE($record) [ T_VARIABLE($i) ] ) ) { T_VARIABLE($buffer) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($column) ) . . ( ! T_VARIABLE($isLastLine) ? : ) ; } T_ELSEIF ( T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($buffer) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($column) ) . . T_VARIABLE($record) [ T_VARIABLE($i) ] . ( ! T_VARIABLE($isLastLine) ? : ) ; } T_ELSE { T_VARIABLE($buffer) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($column) ) . . T_STRING ( T_VARIABLE($record) [ T_VARIABLE($i) ] ) . . ( ! T_VARIABLE($isLastLine) ? : ) ; } } T_VARIABLE($buffer) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($record_cnt) ) { T_VARIABLE($buffer) T_CONCAT_EQUAL ; } T_IF ( ! T_STRING ( T_VARIABLE($buffer) ) ) { T_RETURN T_STRING ; } T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_STRING ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ( ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ( ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_GLOBAL T_VARIABLE($plugin_param) ; T_VARIABLE($hide_structure) = T_STRING ; T_IF ( T_VARIABLE($plugin_param) [ ] T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($plugin_param) [ ] ) { T_VARIABLE($hide_structure) = T_STRING ; } T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($exportPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($exportSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($generalOptions) ) ; T_VARIABLE($dumpWhat) = T_NEW T_STRING ( ) ; T_VARIABLE($dumpWhat) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dumpWhat) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($dumpWhat) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dumpWhat) ) ; T_IF ( ! T_VARIABLE($hide_structure) ) { T_VARIABLE($structureOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; } T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; } T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($structureOptions) ) ; } T_VARIABLE($dataOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dataOptions) ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($exportSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($exportPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($crlf) ; T_GLOBAL T_VARIABLE($cfg) ; T_VARIABLE($head) = . T_VARIABLE($crlf) . . T_STRING . T_VARIABLE($crlf) . . T_VARIABLE($crlf) . . T_VARIABLE($crlf) . . T_STRING ( ) . . T_VARIABLE($cfg) [ ] [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ) { T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($cfg) [ ] [ ] ; } T_VARIABLE($head) T_CONCAT_EQUAL T_VARIABLE($crlf) . . T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( ) . T_VARIABLE($crlf) . . T_STRING ( ) . . T_STRING . T_VARIABLE($crlf) . . T_STRING ( ) . . T_STRING ( ) . T_VARIABLE($crlf) ; T_RETURN T_STRING ( T_VARIABLE($head) ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_GLOBAL T_VARIABLE($crlf) ; T_VARIABLE($head) = . T_VARIABLE($crlf) . . T_STRING ( ) . . . T_VARIABLE($db) . . T_VARIABLE($crlf) . . T_VARIABLE($crlf) ; T_RETURN T_STRING ( T_VARIABLE($head) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($sql_query) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) , T_STRING , T_STRING ) ; T_VARIABLE($columns_cnt) = T_STRING ( T_VARIABLE($result) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($columns_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($columns) [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ; } T_UNSET ( T_VARIABLE($i) ) ; T_VARIABLE($buffer) = T_VARIABLE($crlf) . . T_VARIABLE($crlf) . . T_STRING ( ) . . T_VARIABLE($table) . T_VARIABLE($crlf) . . T_VARIABLE($crlf) . ; T_FOR ( T_VARIABLE($index) = T_LNUMBER ; T_VARIABLE($index) < T_VARIABLE($columns_cnt) ; T_VARIABLE($index) T_INC ) { T_VARIABLE($buffer) T_CONCAT_EQUAL ; } T_VARIABLE($buffer) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; T_VARIABLE($buffer) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($buffer) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_ARRAY ( , T_STRING ( T_VARIABLE($this) ) , . T_STRING ( T_VARIABLE($this) ) . ) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($table) , T_DOUBLE_ARROW T_VARIABLE($db) ) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($table) , T_DOUBLE_ARROW T_VARIABLE($db) ) ) . ; } T_IF ( ! T_STRING ( T_VARIABLE($buffer) ) ) { T_RETURN T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($buffer) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($columns_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($buffer) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($columns) [ T_VARIABLE($i) ] ) ) . ; } T_VARIABLE($buffer) = T_STRING ( T_VARIABLE($buffer) , T_LNUMBER , - T_LNUMBER ) . ; T_IF ( ! T_STRING ( T_VARIABLE($buffer) . . T_VARIABLE($crlf) ) ) { T_RETURN T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_IF ( ! T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_ARRAY ( , T_STRING ( T_VARIABLE($this) ) , . T_STRING ( T_VARIABLE($this) ) . ) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($table) , T_DOUBLE_ARROW T_VARIABLE($db) ) ) . ) ) { T_RETURN T_STRING ; } } T_IF ( ! T_STRING ( T_VARIABLE($buffer) . . T_VARIABLE($crlf) ) ) { T_RETURN T_STRING ; } } T_ELSE { T_IF ( ! T_STRING ( ) ) { T_RETURN T_STRING ; } } T_WHILE ( T_VARIABLE($record) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($buffer) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($columns_cnt) ; T_VARIABLE($i) T_INC ) { T_IF ( ( ! T_STRING ( ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($record) [ T_VARIABLE($columns) [ T_VARIABLE($i) ] ] ) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($record) [ T_VARIABLE($columns) [ T_VARIABLE($i) ] ] ) ) { T_VARIABLE($column_value) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($record) [ T_VARIABLE($columns) [ T_VARIABLE($i) ] ] ) ) ; } T_ELSE { T_VARIABLE($column_value) = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_VARIABLE($i) T_IS_EQUAL ( T_VARIABLE($columns_cnt) - T_LNUMBER ) ) { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($column_value) ; } T_ELSE { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($column_value) . ; } } T_VARIABLE($buffer) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; T_IF ( ! T_STRING ( T_VARIABLE($buffer) ) ) { T_RETURN T_STRING ; } } T_VARIABLE($buffer) = . T_VARIABLE($crlf) ; T_IF ( ! T_STRING ( T_VARIABLE($buffer) ) ) { T_RETURN T_STRING ; } T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($export_mode) , T_VARIABLE($export_type) , T_VARIABLE($do_relation) = T_STRING , T_VARIABLE($do_comments) = T_STRING , T_VARIABLE($do_mime) = T_STRING , T_VARIABLE($dates) = T_STRING ) { T_GLOBAL T_VARIABLE($cfgRelation) ; T_IF ( T_VARIABLE($export_mode) T_IS_EQUAL ) { T_RETURN T_STRING ; } T_VARIABLE($unique_keys) = T_ARRAY ( ) ; T_VARIABLE($keys) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($key) ) { T_IF ( T_VARIABLE($key) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($unique_keys) [ ] = T_VARIABLE($key) [ ] ; } } T_STRING ( T_VARIABLE($db) ) ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($res_rel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($res_rel) T_BOOLEAN_AND T_STRING ( T_VARIABLE($res_rel) ) > T_LNUMBER ) { T_VARIABLE($have_rel) = T_STRING ; } T_ELSE { T_VARIABLE($have_rel) = T_STRING ; } } T_ELSE { T_VARIABLE($have_rel) = T_STRING ; } T_VARIABLE($buffer) = T_VARIABLE($crlf) . . T_VARIABLE($crlf) . . T_STRING ( ) . . T_VARIABLE($table) . T_VARIABLE($crlf) . . T_VARIABLE($crlf) . ; T_IF ( ! T_STRING ( T_VARIABLE($buffer) ) ) { T_RETURN T_STRING ; } T_VARIABLE($columns_cnt) = T_LNUMBER ; T_VARIABLE($alignment) = ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND T_VARIABLE($have_rel) ) { T_VARIABLE($columns_cnt) T_INC ; T_VARIABLE($alignment) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($do_comments) ) { T_VARIABLE($columns_cnt) T_INC ; T_VARIABLE($alignment) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($do_mime) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($columns_cnt) T_INC ; T_VARIABLE($alignment) T_CONCAT_EQUAL ; } T_VARIABLE($buffer) = T_VARIABLE($alignment) . . T_VARIABLE($crlf) ; T_VARIABLE($header) = ; T_VARIABLE($header) T_CONCAT_EQUAL . T_STRING ( ) . . T_STRING ( ) . . T_STRING ( ) . . T_STRING ( ) . ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND T_VARIABLE($have_rel) ) { T_VARIABLE($header) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_IF ( T_VARIABLE($do_comments) ) { T_VARIABLE($header) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($comments) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_IF ( T_VARIABLE($do_mime) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($mime_map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_STRING ) ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($buffer) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_ARRAY ( , T_STRING ( T_VARIABLE($this) ) , . T_STRING ( T_VARIABLE($this) ) . ) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($table) , T_DOUBLE_ARROW T_VARIABLE($db) ) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($table) , T_DOUBLE_ARROW T_VARIABLE($db) ) ) . . T_VARIABLE($crlf) ; } T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($header) . . T_VARIABLE($crlf) . . T_VARIABLE($crlf) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($buffer) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_ARRAY ( , T_STRING ( T_VARIABLE($this) ) , . T_STRING ( T_VARIABLE($this) ) . ) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($table) , T_DOUBLE_ARROW T_VARIABLE($db) ) ) . . T_VARIABLE($crlf) ; } T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($header) . . T_VARIABLE($crlf) ; T_IF ( ! T_STRING ( T_VARIABLE($buffer) ) ) { T_RETURN T_STRING ; } T_VARIABLE($fields) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($row) ) { T_VARIABLE($extracted_columnspec) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) ; T_VARIABLE($type) = T_VARIABLE($extracted_columnspec) [ ] ; T_IF ( T_EMPTY ( T_VARIABLE($type) ) ) { T_VARIABLE($type) = ; } T_IF ( ! T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($row) [ ] = ; } } T_VARIABLE($field_name) = T_VARIABLE($row) [ ] ; T_VARIABLE($local_buffer) = T_VARIABLE($field_name) . . T_VARIABLE($type) . . ( ( T_VARIABLE($row) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($row) [ ] T_IS_EQUAL ) ? T_STRING ( ) : T_STRING ( ) ) . . ( T_ISSET ( T_VARIABLE($row) [ ] ) ? T_VARIABLE($row) [ ] : ) ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND T_VARIABLE($have_rel) ) { T_VARIABLE($local_buffer) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] ) ) { T_VARIABLE($local_buffer) T_CONCAT_EQUAL T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] . . T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] . ; } } T_IF ( T_VARIABLE($do_comments) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($local_buffer) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($comments) [ T_VARIABLE($field_name) ] ) ) { T_VARIABLE($local_buffer) T_CONCAT_EQUAL T_VARIABLE($comments) [ T_VARIABLE($field_name) ] ; } } T_IF ( T_VARIABLE($do_mime) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($local_buffer) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($field_name) ] ) ) { T_VARIABLE($local_buffer) T_CONCAT_EQUAL T_STRING ( , , T_VARIABLE($mime_map) [ T_VARIABLE($field_name) ] [ ] ) ; } } T_VARIABLE($local_buffer) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($local_buffer) ) ; T_IF ( T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($pos) = T_STRING ( T_VARIABLE($local_buffer) , ) ; T_VARIABLE($local_buffer) = . T_STRING ( T_VARIABLE($local_buffer) , T_LNUMBER , T_VARIABLE($pos) ) . . T_STRING ( T_VARIABLE($local_buffer) , T_VARIABLE($pos) ) ; } T_IF ( T_STRING ( T_VARIABLE($field_name) , T_VARIABLE($unique_keys) ) ) { T_VARIABLE($pos) = T_STRING ( T_VARIABLE($local_buffer) , ) ; T_VARIABLE($local_buffer) = . T_STRING ( T_VARIABLE($local_buffer) , T_LNUMBER , T_VARIABLE($pos) ) . . T_STRING ( T_VARIABLE($local_buffer) , T_VARIABLE($pos) ) ; } T_VARIABLE($buffer) = T_STRING ( , , T_VARIABLE($local_buffer) ) ; T_VARIABLE($buffer) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; T_IF ( ! T_STRING ( T_VARIABLE($buffer) ) ) { T_RETURN T_STRING ; } } T_VARIABLE($buffer) = . T_VARIABLE($crlf) ; T_RETURN T_STRING ( T_VARIABLE($buffer) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($string) ) { T_VARIABLE($escape) = T_ARRAY ( , , , , , , , ) ; T_VARIABLE($cnt_escape) = T_STRING ( T_VARIABLE($escape) ) ; T_FOR ( T_VARIABLE($k) = T_LNUMBER ; T_VARIABLE($k) < T_VARIABLE($cnt_escape) ; T_VARIABLE($k) T_INC ) { T_VARIABLE($string) = T_STRING ( T_VARIABLE($escape) [ T_VARIABLE($k) ] , . T_VARIABLE($escape) [ T_VARIABLE($k) ] , T_VARIABLE($string) ) ; } T_RETURN T_VARIABLE($string) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($exportPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($exportSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($subgroup) = T_NEW T_STRING ( ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($subgroup) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($generalOptions) ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($exportSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($exportPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($export_mode) , T_VARIABLE($export_type) , T_VARIABLE($do_relation) = T_STRING , T_VARIABLE($do_comments) = T_STRING , T_VARIABLE($do_mime) = T_STRING , T_VARIABLE($dates) = T_STRING ) { T_SWITCH ( T_VARIABLE($export_mode) ) { T_CASE : T_VARIABLE($columns) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($columns) = T_STRING ( T_VARIABLE($columns) ) ; T_VARIABLE($row_cnt) = T_STRING ( T_VARIABLE($columns) ) ; T_VARIABLE($output) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($table) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($row_cnt) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($columns) [ T_VARIABLE($i) ] [ ] . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($row_cnt) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($columns) [ T_VARIABLE($i) ] [ ] . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($row_cnt) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($columns) [ T_VARIABLE($i) ] [ ] . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($row_cnt) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($columns) [ T_VARIABLE($i) ] [ ] . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($row_cnt) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($columns) [ T_VARIABLE($i) ] [ ] . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_LNUMBER ) ; T_BREAK ; } T_RETURN T_STRING ( T_VARIABLE($output) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($sql_query) ) { T_VARIABLE($output) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($table) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($column_names) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( ! T_STRING ( T_VARIABLE($column_names) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($column_names) T_AS T_VARIABLE($column) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($column) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } } T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) , T_STRING , T_STRING ) ; T_VARIABLE($fields_cnt) = T_STRING ( T_VARIABLE($result) ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($fields_cnt) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($row) [ T_VARIABLE($i) ] . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_LNUMBER ) ; T_RETURN T_STRING ( T_VARIABLE($output) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($text) = ) { T_VARIABLE($comment) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($comment) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($comment) T_CONCAT_EQUAL T_VARIABLE($text) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($comment) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_LNUMBER ) ; T_RETURN T_VARIABLE($comment) ; } T_PRIVATE T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_VARIABLE($GLOBALS) [ ] = ; T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($exportPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($exportSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($generalOptions) ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($exportSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($exportPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . . T_VARIABLE($GLOBALS) [ ] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . ; T_IF ( ! T_STRING ( T_STRING ( , T_VARIABLE($GLOBALS) [ ] ) ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($sql_query) ) { T_GLOBAL T_VARIABLE($what) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) , T_STRING , T_STRING ) ; T_VARIABLE($fields_cnt) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($fields_meta) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($field_flags) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($fields_cnt) ; T_VARIABLE($j) T_INC ) { T_VARIABLE($field_flags) [ T_VARIABLE($j) ] = T_STRING ( T_VARIABLE($result) , T_VARIABLE($j) ) ; } T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($table) ) . ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] ) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($fields_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ) ) . . ; } T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; } T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($fields_cnt) ; T_VARIABLE($j) T_INC ) { T_IF ( ! T_ISSET ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] ) . . ; } T_ELSEIF ( T_STRING ( T_VARIABLE($field_flags) [ T_VARIABLE($j) ] , ) T_BOOLEAN_AND T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . ; } T_ELSEIF ( T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( , T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) ) . . . T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) . . ; } T_ELSEIF ( T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( , T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) ) . . . T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) . . ; } T_ELSEIF ( T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( , T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) ) . . . T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) . . ; } T_ELSEIF ( ( T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_BOOLEAN_AND ! T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_VARIABLE($row) [ T_VARIABLE($j) ] . . . T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) . . ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) . . ; } } T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; } T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; T_RETURN T_STRING ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_VARIABLE($GLOBALS) [ ] = ; T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_GLOBAL T_VARIABLE($plugin_param) ; T_VARIABLE($hide_structure) = T_STRING ; T_IF ( T_VARIABLE($plugin_param) [ ] T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($plugin_param) [ ] ) { T_VARIABLE($hide_structure) = T_STRING ; } T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($exportPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($exportSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dumpWhat) = T_NEW T_STRING ( ) ; T_VARIABLE($dumpWhat) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dumpWhat) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($dumpWhat) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dumpWhat) ) ; T_IF ( ! T_VARIABLE($hide_structure) ) { T_VARIABLE($structureOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; } T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; } T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($structureOptions) ) ; } T_VARIABLE($dataOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dataOptions) ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($exportSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($exportPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . . T_VARIABLE($GLOBALS) [ ] . . . ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . ; T_IF ( ! T_STRING ( T_STRING ( , T_VARIABLE($GLOBALS) [ ] ) ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( ) . . T_STRING ( T_VARIABLE($db) ) . ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($sql_query) ) { T_GLOBAL T_VARIABLE($what) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) , T_STRING , T_STRING ) ; T_VARIABLE($fields_cnt) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($fields_meta) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($field_flags) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($fields_cnt) ; T_VARIABLE($j) T_INC ) { T_VARIABLE($field_flags) [ T_VARIABLE($j) ] = T_STRING ( T_VARIABLE($result) , T_VARIABLE($j) ) ; } T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( ) . . T_STRING ( T_VARIABLE($table) ) . . . . T_STRING ( T_VARIABLE($table) ) . . . . T_VARIABLE($fields_cnt) . ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] ) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($fields_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ) ) . . ; } T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; } T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($fields_cnt) ; T_VARIABLE($j) T_INC ) { T_IF ( ! T_ISSET ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] ) . . ; } T_ELSEIF ( T_STRING ( T_VARIABLE($field_flags) [ T_VARIABLE($j) ] , ) T_BOOLEAN_AND T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . ; } T_ELSEIF ( T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_BOOLEAN_AND ! T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_VARIABLE($row) [ T_VARIABLE($j) ] . . . T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) . . ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) . . ; } } T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; } T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($view) , T_VARIABLE($crlf) ) { T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($columns_cnt) = T_LNUMBER ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_VARIABLE($columns_cnt) . ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . . T_STRING ( ) . . . . . T_STRING ( ) . . . . . T_STRING ( ) . . . . . T_STRING ( ) . . . ; T_VARIABLE($columns) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($view) ) ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($column) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column) ) ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; } T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($show_dates) = T_STRING , T_VARIABLE($add_semicolon) = T_STRING , T_VARIABLE($view) = T_STRING ) { T_GLOBAL T_VARIABLE($cfgRelation) ; T_STRING ( T_VARIABLE($db) ) ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($res_rel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($res_rel) T_BOOLEAN_AND T_STRING ( T_VARIABLE($res_rel) ) > T_LNUMBER ) { T_VARIABLE($have_rel) = T_STRING ; } T_ELSE { T_VARIABLE($have_rel) = T_STRING ; } } T_ELSE { T_VARIABLE($have_rel) = T_STRING ; } T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($columns_cnt) = T_LNUMBER ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND T_VARIABLE($have_rel) ) { T_VARIABLE($columns_cnt) T_INC ; } T_IF ( T_VARIABLE($do_comments) ) { T_VARIABLE($columns_cnt) T_INC ; } T_IF ( T_VARIABLE($do_mime) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($columns_cnt) T_INC ; } T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_VARIABLE($columns_cnt) . ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . . T_STRING ( ) . . . . . T_STRING ( ) . . . . . T_STRING ( ) . . . . . T_STRING ( ) . . ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND T_VARIABLE($have_rel) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( ) . . ; } T_IF ( T_VARIABLE($do_comments) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( ) . . ; T_VARIABLE($comments) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_IF ( T_VARIABLE($do_mime) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( ) . . ; T_VARIABLE($mime_map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_STRING ) ; } T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; T_VARIABLE($columns) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($column) ) { T_VARIABLE($field_name) = T_VARIABLE($column) [ ] ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column) ) ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND T_VARIABLE($have_rel) ) { T_IF ( T_ISSET ( T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] ) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] . . T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] . ) . . ; } } T_IF ( T_VARIABLE($do_comments) ) { T_IF ( T_ISSET ( T_VARIABLE($comments) [ T_VARIABLE($field_name) ] ) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($comments) [ T_VARIABLE($field_name) ] ) . . ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . ; } } T_IF ( T_VARIABLE($do_mime) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_IF ( T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($field_name) ] ) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( T_STRING ( , , T_VARIABLE($mime_map) [ T_VARIABLE($field_name) ] [ ] ) ) . . ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . ; } } T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; } T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; T_RETURN T_STRING ; } T_PROTECTED T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($table) ) . . . . . . . T_STRING ( ) . . . . . T_STRING ( ) . . . . . T_STRING ( ) . . . . . T_STRING ( ) . . . ; T_VARIABLE($triggers) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_FOREACH ( T_VARIABLE($triggers) T_AS T_VARIABLE($trigger) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($trigger) [ ] ) . . ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($trigger) [ ] ) . . ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($trigger) [ ] ) . . ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($trigger) [ ] ) . . ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; } T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($export_mode) , T_VARIABLE($export_type) , T_VARIABLE($do_relation) = T_STRING , T_VARIABLE($do_comments) = T_STRING , T_VARIABLE($do_mime) = T_STRING , T_VARIABLE($dates) = T_STRING ) { T_SWITCH ( T_VARIABLE($export_mode) ) { T_CASE : T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( ) . . T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($dates) ) ; T_BREAK ; T_CASE : T_VARIABLE($triggers) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($triggers) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( ) . . T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_BREAK ; T_CASE : T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( ) . . T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($dates) , T_STRING , T_STRING ) ; T_BREAK ; T_CASE : T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . . T_STRING ( ) . . T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) ) ; } T_RETURN T_STRING ; } T_PROTECTED T_STRING ( T_VARIABLE($column) ) { T_VARIABLE($field_name) = T_VARIABLE($column) [ ] ; T_VARIABLE($definition) = ; T_VARIABLE($definition) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($field_name) ) . . ; T_VARIABLE($extracted_columnspec) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) [ ] ) ; T_VARIABLE($type) = T_STRING ( T_VARIABLE($extracted_columnspec) [ ] ) ; T_IF ( T_EMPTY ( T_VARIABLE($type) ) ) { T_VARIABLE($type) = ; } T_VARIABLE($definition) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($type) ) . . ; T_IF ( ! T_ISSET ( T_VARIABLE($column) [ ] ) ) { T_IF ( T_VARIABLE($column) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($column) [ ] = ; } T_ELSE { T_VARIABLE($column) [ ] = ; } } T_ELSE { T_VARIABLE($column) [ ] = T_VARIABLE($column) [ ] ; } T_VARIABLE($definition) T_CONCAT_EQUAL . . ( ( T_VARIABLE($column) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($column) [ ] T_IS_EQUAL ) ? T_STRING ( ) : T_STRING ( ) ) . . ; T_VARIABLE($definition) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($column) [ ] ) . . ; T_RETURN T_VARIABLE($definition) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_pdf) ; T_PRIVATE T_VARIABLE($_pdfReportTitle) ; T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_NEW T_STRING ( , , ) ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($exportPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($exportSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($generalOptions) ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($exportSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($exportPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_VARIABLE($pdf_report_title) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($pdf) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($attr) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($pdf_report_title) ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($attr) ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($pdf) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($sql_query) ) { T_VARIABLE($pdf) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($attr) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db) , T_DOUBLE_ARROW T_VARIABLE($table) ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($attr) ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($sql_query) ) ; T_RETURN T_STRING ; } T_PRIVATE T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($pdf) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($pdf) ; } T_PRIVATE T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($pdfReportTitle) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($pdfReportTitle) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($exportPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($exportSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($generalOptions) ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($exportSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($exportPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_STRING ( . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] . T_VARIABLE($GLOBALS) [ ] ) ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_STRING ( . T_VARIABLE($GLOBALS) [ ] . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] ) ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($sql_query) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) , T_STRING , T_STRING ) ; T_VARIABLE($columns_cnt) = T_STRING ( T_VARIABLE($result) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($columns_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($columns) [ T_VARIABLE($i) ] = T_STRING ( T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ) ; } T_UNSET ( T_VARIABLE($i) ) ; T_IF ( ! T_STRING ( , T_VARIABLE($table) ) ) { T_VARIABLE($tablefixed) = T_STRING ( , , T_VARIABLE($table) ) ; T_IF ( T_STRING ( , T_VARIABLE($tablefixed) ) T_IS_EQUAL T_STRING ) { T_VARIABLE($tablefixed) = . T_VARIABLE($tablefixed) ; } } T_ELSE { T_VARIABLE($tablefixed) = T_VARIABLE($table) ; } T_VARIABLE($buffer) = ; T_VARIABLE($record_cnt) = T_LNUMBER ; T_WHILE ( T_VARIABLE($record) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($record_cnt) T_INC ; T_IF ( T_VARIABLE($record_cnt) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($crlf) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . T_VARIABLE($crlf) ; T_VARIABLE($buffer) T_CONCAT_EQUAL . T_VARIABLE($tablefixed) . . T_VARIABLE($crlf) ; T_VARIABLE($buffer) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($buffer) T_CONCAT_EQUAL . T_VARIABLE($crlf) . ; } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($columns_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($buffer) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($columns) [ T_VARIABLE($i) ] , T_STRING ) . . T_STRING ( T_VARIABLE($record) [ T_VARIABLE($i) ] , T_STRING ) . ( ( T_VARIABLE($i) + T_LNUMBER T_IS_GREATER_OR_EQUAL T_VARIABLE($columns_cnt) ) ? : ) ; } T_VARIABLE($buffer) T_CONCAT_EQUAL ; } T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($crlf) . . T_VARIABLE($crlf) ; T_IF ( ! T_STRING ( T_VARIABLE($buffer) ) ) { T_RETURN T_STRING ; } T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_STRING ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ; } } T_PROTECTED T_STRING ( ) { T_GLOBAL T_VARIABLE($plugin_param) ; T_VARIABLE($hide_sql) = T_STRING ; T_VARIABLE($hide_structure) = T_STRING ; T_IF ( T_VARIABLE($plugin_param) [ ] T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($plugin_param) [ ] ) { T_VARIABLE($hide_structure) = T_STRING ; T_VARIABLE($hide_sql) = T_STRING ; } T_IF ( ! T_VARIABLE($hide_sql) ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($exportPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($exportSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($subgroup) = T_NEW T_STRING ( ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( . ) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( . ) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; } T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($subgroup) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( , , ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( , , ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($compats) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($compats) ) > T_LNUMBER ) { T_VARIABLE($values) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($compats) T_AS T_VARIABLE($val) ) { T_VARIABLE($values) [ T_VARIABLE($val) ] = T_VARIABLE($val) ; } T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( . ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($values) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( , ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_UNSET ( T_VARIABLE($values) ) ; } T_IF ( T_VARIABLE($plugin_param) [ ] T_IS_EQUAL ) { T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) , ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; } T_VARIABLE($subgroup) = T_NEW T_STRING ( ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($subgroup) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($generalOptions) ) ; T_IF ( ! T_VARIABLE($hide_structure) ) { T_VARIABLE($structureOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($subgroup) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_IF ( T_VARIABLE($plugin_param) [ ] T_IS_EQUAL ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($drop_clause) = ; } T_ELSE { T_VARIABLE($drop_clause) = ; } } T_ELSE { T_IF ( T_STRING ) { T_VARIABLE($drop_clause) = ; } T_ELSE { T_VARIABLE($drop_clause) = . ; T_IF ( T_STRING > T_LNUMBER ) { T_VARIABLE($drop_clause) T_CONCAT_EQUAL ; } } } T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($drop_clause) ) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_IF ( ! T_STRING ) { T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) , . ( T_STRING > T_LNUMBER ? : ) ) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; } T_VARIABLE($subgroup_create_table) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($subgroup_create_table) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($subgroup_create_table) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($subgroup_create_table) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($subgroup_create_table) ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($subgroup) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( . . ) ) ; T_VARIABLE($structureOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($structureOptions) ) ; } T_VARIABLE($dataOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($subgroup) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_IF ( ! T_STRING ) { T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( , ) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; } T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( , ) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($subgroup) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($subgroup) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( . ) ) ) ; T_VARIABLE($subgroup) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($subgroup) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( . ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_IF ( ! T_STRING ) { T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( . . ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; } T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dataOptions) ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($exportSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($exportPluginProperties) ; } } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_GLOBAL T_VARIABLE($crlf) ; T_VARIABLE($text) = ; T_VARIABLE($delimiter) = ; T_VARIABLE($procedure_names) = T_STRING ( T_VARIABLE($db) , ) ; T_VARIABLE($function_names) = T_STRING ( T_VARIABLE($db) , ) ; T_IF ( T_VARIABLE($procedure_names) T_BOOLEAN_OR T_VARIABLE($function_names) ) { T_VARIABLE($text) T_CONCAT_EQUAL T_VARIABLE($crlf) . . T_VARIABLE($delimiter) . T_VARIABLE($crlf) ; } T_IF ( T_VARIABLE($procedure_names) ) { T_VARIABLE($text) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($procedure_names) T_AS T_VARIABLE($procedure_name) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($text) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($procedure_name) ) . T_VARIABLE($delimiter) . T_VARIABLE($crlf) ; } T_VARIABLE($text) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($db) , , T_VARIABLE($procedure_name) ) . T_VARIABLE($delimiter) . T_VARIABLE($crlf) . T_VARIABLE($crlf) ; } } T_IF ( T_VARIABLE($function_names) ) { T_VARIABLE($text) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($function_names) T_AS T_VARIABLE($function_name) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($text) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($function_name) ) . T_VARIABLE($delimiter) . T_VARIABLE($crlf) ; } T_VARIABLE($text) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($db) , , T_VARIABLE($function_name) ) . T_VARIABLE($delimiter) . T_VARIABLE($crlf) . T_VARIABLE($crlf) ; } } T_IF ( T_VARIABLE($procedure_names) T_BOOLEAN_OR T_VARIABLE($function_names) ) { T_VARIABLE($text) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($text) ) ) { T_RETURN T_STRING ( T_VARIABLE($text) ) ; } T_ELSE { T_RETURN T_STRING ; } } T_PRIVATE T_STRING ( T_VARIABLE($text) = ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_RETURN . ( T_EMPTY ( T_VARIABLE($text) ) ? : ) . T_VARIABLE($text) . T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN ; } } T_PRIVATE T_STRING ( ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_RETURN T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN ; } } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($crlf) , T_VARIABLE($mysql_charset_map) ; T_VARIABLE($foot) = ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($foot) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($foot) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; } T_VARIABLE($charset_of_file) = T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($mysql_charset_map) [ T_VARIABLE($charset_of_file) ] ) T_BOOLEAN_AND ! T_STRING ) { T_VARIABLE($foot) T_CONCAT_EQUAL T_VARIABLE($crlf) . . T_VARIABLE($crlf) . . T_VARIABLE($crlf) . . T_VARIABLE($crlf) ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_STRING ( . T_VARIABLE($GLOBALS) [ ] . ) ; } T_RETURN T_STRING ( T_VARIABLE($foot) ) ; } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($crlf) , T_VARIABLE($cfg) ; T_GLOBAL T_VARIABLE($mysql_charset_map) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($tmp_compat) = T_VARIABLE($GLOBALS) [ ] ; T_IF ( T_VARIABLE($tmp_compat) T_IS_EQUAL ) { T_VARIABLE($tmp_compat) = ; } T_STRING ( . T_VARIABLE($tmp_compat) . ) ; T_UNSET ( T_VARIABLE($tmp_compat) ) ; } T_VARIABLE($head) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_STRING ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($host_string) = T_STRING ( ) . . T_VARIABLE($cfg) [ ] [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ) { T_VARIABLE($host_string) T_CONCAT_EQUAL . T_VARIABLE($cfg) [ ] [ ] ; } T_VARIABLE($head) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($host_string) ) ; T_VARIABLE($head) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( ) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_STRING ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_STRING ( ) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($lines) = T_STRING ( , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($head) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($lines) T_AS T_VARIABLE($one_line) ) { T_VARIABLE($head) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($one_line) ) ; } T_VARIABLE($head) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; } T_IF ( ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) T_BOOLEAN_AND ! T_STRING ) { T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($crlf) . . T_VARIABLE($crlf) ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ( ) ; T_STRING ( ) ; } T_VARIABLE($head) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND ! T_STRING ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($mysql_charset_map) [ T_VARIABLE($GLOBALS) [ ] ] ) ) { T_VARIABLE($set_names) = T_VARIABLE($mysql_charset_map) [ T_VARIABLE($GLOBALS) [ ] ] ; } T_ELSE { T_VARIABLE($set_names) = T_VARIABLE($mysql_charset_map) [ ] ; } T_VARIABLE($head) T_CONCAT_EQUAL T_VARIABLE($crlf) . . . T_VARIABLE($crlf) . . . T_VARIABLE($crlf) . . . T_VARIABLE($crlf) . . T_VARIABLE($set_names) . . T_VARIABLE($crlf) . T_VARIABLE($crlf) ; } T_RETURN T_STRING ( T_VARIABLE($head) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_GLOBAL T_VARIABLE($crlf) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($compat) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_VARIABLE($compat) = ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_IF ( ! T_STRING ( . ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($compat) ) : T_VARIABLE($db) ) . . T_VARIABLE($crlf) ) ) { T_RETURN T_STRING ; } } T_VARIABLE($create_query) = . ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($compat) ) : T_VARIABLE($db) ) ; T_VARIABLE($collation) = T_STRING ( T_VARIABLE($db) ) ; T_IF ( T_STRING ) { T_VARIABLE($create_query) T_CONCAT_EQUAL . T_VARIABLE($collation) ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($collation) , ) ) { T_VARIABLE($create_query) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($collation) , T_LNUMBER , T_STRING ( T_VARIABLE($collation) , ) ) . . T_VARIABLE($collation) ; } T_ELSE { T_VARIABLE($create_query) T_CONCAT_EQUAL . T_VARIABLE($collation) ; } } T_VARIABLE($create_query) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; T_IF ( ! T_STRING ( T_VARIABLE($create_query) ) ) { T_RETURN T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND ( ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) T_BOOLEAN_OR T_STRING ) ) { T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($compat) ) . . T_VARIABLE($crlf) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( . T_VARIABLE($db) . . T_VARIABLE($crlf) ) ; } T_RETURN T_VARIABLE($result) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($compat) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_VARIABLE($compat) = ; } T_VARIABLE($head) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($compat) ) : . T_VARIABLE($db) . ) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_STRING ( T_VARIABLE($head) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_GLOBAL T_VARIABLE($crlf) ; T_VARIABLE($result) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_UNSET ( T_VARIABLE($GLOBALS) [ ] ) ; } T_IF ( ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($text) = ; T_VARIABLE($delimiter) = ; T_IF ( T_STRING > T_LNUMBER ) { T_VARIABLE($event_names) = T_STRING ( . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_STRING ) . ) ; } T_ELSE { T_VARIABLE($event_names) = T_ARRAY ( ) ; } T_IF ( T_VARIABLE($event_names) ) { T_VARIABLE($text) T_CONCAT_EQUAL T_VARIABLE($crlf) . . T_VARIABLE($delimiter) . T_VARIABLE($crlf) ; T_VARIABLE($text) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($event_names) T_AS T_VARIABLE($event_name) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($text) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($event_name) ) . T_VARIABLE($delimiter) . T_VARIABLE($crlf) ; } T_VARIABLE($text) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($db) , , T_VARIABLE($event_name) ) . T_VARIABLE($delimiter) . T_VARIABLE($crlf) . T_VARIABLE($crlf) ; } T_VARIABLE($text) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($text) ) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($text) ) ; } } T_RETURN T_VARIABLE($result) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($view) , T_VARIABLE($crlf) ) { T_VARIABLE($create_query) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($create_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($view) ) . . T_VARIABLE($crlf) ; } T_VARIABLE($create_query) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($create_query) T_CONCAT_EQUAL ; } T_VARIABLE($create_query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($view) ) . . T_VARIABLE($crlf) ; T_VARIABLE($tmp) = T_ARRAY ( ) ; T_VARIABLE($columns) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($view) ) ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($column_name) T_DOUBLE_ARROW T_VARIABLE($definition) ) { T_VARIABLE($tmp) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column_name) ) . . T_VARIABLE($definition) [ ] . T_VARIABLE($crlf) ; } T_VARIABLE($create_query) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($tmp) ) . ; T_RETURN ( T_VARIABLE($create_query) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($show_dates) = T_STRING , T_VARIABLE($add_semicolon) = T_STRING , T_VARIABLE($view) = T_STRING ) { T_GLOBAL T_VARIABLE($sql_drop_table) , T_VARIABLE($sql_backquotes) , T_VARIABLE($sql_constraints) , T_VARIABLE($sql_constraints_query) , T_VARIABLE($sql_drop_foreign_keys) ; T_VARIABLE($schema_create) = ; T_VARIABLE($auto_increment) = ; T_VARIABLE($new_crlf) = T_VARIABLE($crlf) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($compat) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_VARIABLE($compat) = ; } T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_STRING ) . , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($result) T_IS_NOT_EQUAL T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($result) ) > T_LNUMBER ) { T_VARIABLE($tmpres) = T_STRING ( T_VARIABLE($result) ) ; T_IF ( T_STRING T_BOOLEAN_AND T_VARIABLE($show_dates) ) { T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($tmpres) = T_STRING ( T_STRING ( T_VARIABLE($sql) ) , T_VARIABLE($tmpres) ) ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($tmpres) [ ] ) ) { T_VARIABLE($auto_increment) T_CONCAT_EQUAL . T_VARIABLE($tmpres) [ ] . ; } T_IF ( T_VARIABLE($show_dates) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($tmpres) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($tmpres) [ ] ) ) { T_VARIABLE($schema_create) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($tmpres) [ ] ) ) ) ; T_VARIABLE($new_crlf) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($crlf) ; } T_IF ( T_VARIABLE($show_dates) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($tmpres) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($tmpres) [ ] ) ) { T_VARIABLE($schema_create) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($tmpres) [ ] ) ) ) ; T_VARIABLE($new_crlf) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($crlf) ; } T_IF ( T_VARIABLE($show_dates) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($tmpres) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($tmpres) [ ] ) ) { T_VARIABLE($schema_create) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($tmpres) [ ] ) ) ) ; T_VARIABLE($new_crlf) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($crlf) ; } } T_STRING ( T_VARIABLE($result) ) ; } T_VARIABLE($schema_create) T_CONCAT_EQUAL T_VARIABLE($new_crlf) ; T_IF ( ! T_EMPTY ( T_VARIABLE($sql_drop_table) ) T_BOOLEAN_AND ! T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ) { T_VARIABLE($schema_create) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($sql_backquotes) ) . . T_VARIABLE($crlf) ; } T_IF ( ! T_STRING ) { T_IF ( T_VARIABLE($sql_backquotes) ) { T_STRING ( ) ; } T_ELSE { T_STRING ( ) ; } } T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ) ; T_VARIABLE($tmp_error) = T_STRING ( ) ; T_IF ( T_VARIABLE($tmp_error) ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_VARIABLE($tmp_error) . ) ; } T_IF ( T_VARIABLE($result) T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) ) { T_VARIABLE($create_query) = T_VARIABLE($row) [ T_LNUMBER ] ; T_UNSET ( T_VARIABLE($row) ) ; T_IF ( T_STRING ( T_VARIABLE($create_query) , ) ) { T_VARIABLE($create_query) = T_STRING ( , T_VARIABLE($crlf) , T_VARIABLE($create_query) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($create_query) , ) ) { T_VARIABLE($create_query) = T_STRING ( , T_VARIABLE($crlf) , T_VARIABLE($create_query) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($create_query) , ) ) { T_VARIABLE($create_query) = T_STRING ( , T_VARIABLE($crlf) , T_VARIABLE($create_query) ) ; } T_IF ( T_VARIABLE($view) ) { T_VARIABLE($create_query) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . , , T_VARIABLE($create_query) ) ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($compat) T_IS_NOT_EQUAL ) { T_VARIABLE($create_query) = T_STRING ( , , T_VARIABLE($create_query) ) ; } T_IF ( T_VARIABLE($compat) T_IS_EQUAL ) { T_VARIABLE($create_query) = T_STRING ( , . , T_VARIABLE($create_query) ) ; T_VARIABLE($create_query) = T_STRING ( , . , T_VARIABLE($create_query) ) ; T_VARIABLE($create_query) = T_STRING ( , , T_VARIABLE($create_query) ) ; T_VARIABLE($create_query) = T_STRING ( , . , T_VARIABLE($create_query) ) ; T_VARIABLE($create_query) = T_STRING ( , . , T_VARIABLE($create_query) ) ; T_VARIABLE($create_query) = T_STRING ( , , T_VARIABLE($create_query) ) ; T_VARIABLE($create_query) = T_STRING ( , . , T_VARIABLE($create_query) ) ; T_VARIABLE($create_query) = T_STRING ( , . , T_VARIABLE($create_query) ) ; T_VARIABLE($create_query) = T_STRING ( , , T_VARIABLE($create_query) ) ; T_VARIABLE($create_query) = T_STRING ( , . , T_VARIABLE($create_query) ) ; T_VARIABLE($create_query) = T_STRING ( , . , T_VARIABLE($create_query) ) ; T_VARIABLE($create_query) = T_STRING ( , , T_VARIABLE($create_query) ) ; } T_IF ( T_STRING ) { T_VARIABLE($create_query) = T_STRING ( , , T_VARIABLE($create_query) ) ; } T_IF ( T_STRING ( , T_VARIABLE($create_query) ) ) { T_VARIABLE($sql_lines) = T_STRING ( T_VARIABLE($crlf) , T_VARIABLE($create_query) ) ; T_VARIABLE($sql_count) = T_STRING ( T_VARIABLE($sql_lines) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($sql_count) ; T_VARIABLE($i) T_INC ) { T_IF ( T_STRING ( , T_VARIABLE($sql_lines) [ T_VARIABLE($i) ] ) ) { T_BREAK ; } } T_IF ( T_VARIABLE($i) T_IS_NOT_EQUAL T_VARIABLE($sql_count) ) { T_VARIABLE($sql_lines) [ T_VARIABLE($i) - T_LNUMBER ] = T_STRING ( , , T_VARIABLE($sql_lines) [ T_VARIABLE($i) - T_LNUMBER ] ) ; T_IF ( ! T_ISSET ( T_VARIABLE($sql_constraints) ) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($sql_constraints) = ; } T_ELSE { T_VARIABLE($sql_constraints) = T_VARIABLE($crlf) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_IF ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($sql_constraints) T_CONCAT_EQUAL T_VARIABLE($crlf) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($compat) ) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($sql_constraints_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($compat) ) . T_VARIABLE($crlf) ; T_VARIABLE($sql_constraints) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($compat) ) . T_VARIABLE($crlf) ; T_VARIABLE($sql_drop_foreign_keys) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($compat) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($compat) ) . T_VARIABLE($crlf) ; T_VARIABLE($first) = T_STRING ; T_FOR ( T_VARIABLE($j) = T_VARIABLE($i) ; T_VARIABLE($j) < T_VARIABLE($sql_count) ; T_VARIABLE($j) T_INC ) { T_IF ( T_STRING ( , T_VARIABLE($sql_lines) [ T_VARIABLE($j) ] ) ) { T_IF ( ! T_VARIABLE($first) ) { T_VARIABLE($sql_constraints) T_CONCAT_EQUAL T_VARIABLE($crlf) ; } T_IF ( T_STRING ( T_VARIABLE($sql_lines) [ T_VARIABLE($j) ] , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($tmp_str) = T_STRING ( , , T_VARIABLE($sql_lines) [ T_VARIABLE($j) ] ) ; T_VARIABLE($sql_constraints_query) T_CONCAT_EQUAL T_VARIABLE($tmp_str) ; T_VARIABLE($sql_constraints) T_CONCAT_EQUAL T_VARIABLE($tmp_str) ; } T_ELSE { T_VARIABLE($tmp_str) = T_STRING ( , , T_VARIABLE($sql_lines) [ T_VARIABLE($j) ] ) ; T_VARIABLE($sql_constraints_query) T_CONCAT_EQUAL T_VARIABLE($tmp_str) ; T_VARIABLE($sql_constraints) T_CONCAT_EQUAL T_VARIABLE($tmp_str) ; T_STRING ( , T_VARIABLE($sql_lines) [ T_VARIABLE($j) ] , T_VARIABLE($matches) ) ; T_IF ( ! T_VARIABLE($first) ) { T_VARIABLE($sql_drop_foreign_keys) T_CONCAT_EQUAL ; } T_VARIABLE($sql_drop_foreign_keys) T_CONCAT_EQUAL . T_VARIABLE($matches) [ T_LNUMBER ] ; } T_VARIABLE($first) = T_STRING ; } T_ELSE { T_BREAK ; } } T_VARIABLE($sql_constraints) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; T_VARIABLE($sql_constraints_query) T_CONCAT_EQUAL ; T_VARIABLE($create_query) = T_STRING ( T_VARIABLE($crlf) , T_STRING ( T_VARIABLE($sql_lines) , T_LNUMBER , T_VARIABLE($i) ) ) . T_VARIABLE($crlf) . T_STRING ( T_VARIABLE($crlf) , T_STRING ( T_VARIABLE($sql_lines) , T_VARIABLE($j) , T_VARIABLE($sql_count) - T_LNUMBER ) ) ; T_UNSET ( T_VARIABLE($sql_lines) ) ; } } T_VARIABLE($schema_create) T_CONCAT_EQUAL T_VARIABLE($create_query) ; } T_VARIABLE($schema_create) = T_STRING ( , , T_VARIABLE($schema_create) ) ; T_VARIABLE($schema_create) T_CONCAT_EQUAL ( T_VARIABLE($compat) T_IS_NOT_EQUAL ) ? T_VARIABLE($auto_increment) : ; T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_VARIABLE($schema_create) . ( T_VARIABLE($add_semicolon) ? . T_VARIABLE($crlf) : ) ; } T_PRIVATE T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($do_relation) = T_STRING , T_VARIABLE($do_mime) = T_STRING ) { T_GLOBAL T_VARIABLE($cfgRelation) , T_VARIABLE($sql_backquotes) ; T_VARIABLE($schema_create) = ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($res_rel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($res_rel) T_BOOLEAN_AND T_STRING ( T_VARIABLE($res_rel) ) > T_LNUMBER ) { T_VARIABLE($have_rel) = T_STRING ; } T_ELSE { T_VARIABLE($have_rel) = T_STRING ; } } T_ELSE { T_VARIABLE($have_rel) = T_STRING ; } T_IF ( T_VARIABLE($do_mime) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_IF ( ! ( T_VARIABLE($mime_map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_STRING ) ) ) { T_UNSET ( T_VARIABLE($mime_map) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($mime_map) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($mime_map) ) > T_LNUMBER ) { T_VARIABLE($schema_create) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($sql_backquotes) ) . ) ; @ T_STRING ( T_VARIABLE($mime_map) ) ; T_FOREACH ( T_VARIABLE($mime_map) T_AS T_VARIABLE($mime_field) T_DOUBLE_ARROW T_VARIABLE($mime) ) { T_VARIABLE($schema_create) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($mime_field) , T_VARIABLE($sql_backquotes) ) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($mime) [ ] , T_VARIABLE($sql_backquotes) ) ) ; } T_VARIABLE($schema_create) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_VARIABLE($have_rel) ) { T_VARIABLE($schema_create) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($sql_backquotes) ) . ) ; T_FOREACH ( T_VARIABLE($res_rel) T_AS T_VARIABLE($rel_field) T_DOUBLE_ARROW T_VARIABLE($rel) ) { T_VARIABLE($schema_create) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($rel_field) , T_VARIABLE($sql_backquotes) ) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($rel) [ ] , T_VARIABLE($sql_backquotes) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($rel) [ ] , T_VARIABLE($sql_backquotes) ) ) ; } T_VARIABLE($schema_create) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_RETURN T_VARIABLE($schema_create) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($export_mode) , T_VARIABLE($export_type) , T_VARIABLE($relation) = T_STRING , T_VARIABLE($comments) = T_STRING , T_VARIABLE($mime) = T_STRING , T_VARIABLE($dates) = T_STRING ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($compat) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_VARIABLE($compat) = ; } T_VARIABLE($formatted_table_name) = ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) ? T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($compat) ) : . T_VARIABLE($table) . ; T_VARIABLE($dump) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( , T_LNUMBER ) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_SWITCH ( T_VARIABLE($export_mode) ) { T_CASE : T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_VARIABLE($formatted_table_name) ) ; T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($dates) ) ; T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($relation) , T_VARIABLE($mime) ) ; T_BREAK ; T_CASE : T_VARIABLE($dump) = ; T_VARIABLE($triggers) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($triggers) ) { T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_VARIABLE($formatted_table_name) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($delimiter) = ; T_FOREACH ( T_VARIABLE($triggers) T_AS T_VARIABLE($trigger) ) { T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($trigger) [ ] . . T_VARIABLE($crlf) ; T_VARIABLE($dump) T_CONCAT_EQUAL . T_VARIABLE($delimiter) . T_VARIABLE($crlf) ; T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($trigger) [ ] ; T_VARIABLE($dump) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; } } T_BREAK ; T_CASE : T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_VARIABLE($formatted_table_name) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($export_type) T_IS_NOT_EQUAL ) { T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_VARIABLE($crlf) ; } T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($dates) , T_STRING , T_STRING ) ; T_BREAK ; T_CASE : T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_VARIABLE($formatted_table_name) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) ) ; } T_UNSET ( T_VARIABLE($GLOBALS) [ ] ) ; T_RETURN T_STRING ( T_VARIABLE($dump) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($sql_query) ) { T_GLOBAL T_VARIABLE($current_row) , T_VARIABLE($sql_backquotes) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($compat) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_VARIABLE($compat) = ; } T_VARIABLE($formatted_table_name) = ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) ? T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($compat) ) : . T_VARIABLE($table) . ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ) { T_VARIABLE($head) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . . T_VARIABLE($formatted_table_name) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_STRING ( ) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($head) ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_VARIABLE($analyzed_sql) = T_STRING ( T_STRING ( T_VARIABLE($sql_query) ) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) , T_STRING , T_STRING ) ; T_VARIABLE($tmp_error) = T_STRING ( ) ; T_IF ( T_VARIABLE($tmp_error) ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_VARIABLE($tmp_error) . ) ) ; } T_IF ( T_VARIABLE($result) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($fields_cnt) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($fields_meta) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($field_flags) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($fields_cnt) ; T_VARIABLE($j) T_INC ) { T_VARIABLE($field_flags) [ T_VARIABLE($j) ] = T_STRING ( T_VARIABLE($result) , T_VARIABLE($j) ) ; } T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($fields_cnt) ; T_VARIABLE($j) T_INC ) { T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($j) ] [ ] ) ) { T_VARIABLE($field_set) [ T_VARIABLE($j) ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($j) ] [ ] , T_VARIABLE($compat) , T_VARIABLE($sql_backquotes) ) ; } T_ELSE { T_VARIABLE($field_set) [ T_VARIABLE($j) ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING , T_VARIABLE($compat) , T_VARIABLE($sql_backquotes) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) { T_VARIABLE($schema_insert) = ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($schema_insert) T_CONCAT_EQUAL ; } T_VARIABLE($schema_insert) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($compat) , T_VARIABLE($sql_backquotes) ) . ; } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) { T_VARIABLE($sql_command) = ; } T_ELSE { T_VARIABLE($sql_command) = ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($insert_delayed) = ; } T_ELSE { T_VARIABLE($insert_delayed) = ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($insert_delayed) T_CONCAT_EQUAL ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND T_VARIABLE($sql_command) T_IS_EQUAL ) { T_VARIABLE($truncate) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($compat) , T_VARIABLE($sql_backquotes) ) . ; T_VARIABLE($truncatehead) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_VARIABLE($formatted_table_name) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($crlf) ; T_STRING ( T_VARIABLE($truncatehead) ) ; T_STRING ( T_VARIABLE($truncate) ) ; } T_ELSE { T_VARIABLE($truncate) = ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) { T_VARIABLE($fields) = T_STRING ( , T_VARIABLE($field_set) ) ; T_VARIABLE($schema_insert) = T_VARIABLE($sql_command) . T_VARIABLE($insert_delayed) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($compat) , T_VARIABLE($sql_backquotes) ) . . T_VARIABLE($fields) . ; } T_ELSE { T_VARIABLE($schema_insert) = T_VARIABLE($sql_command) . T_VARIABLE($insert_delayed) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($compat) , T_VARIABLE($sql_backquotes) ) . ; } } T_VARIABLE($search) = T_ARRAY ( , , , ) ; T_VARIABLE($replace) = T_ARRAY ( , , , ) ; T_VARIABLE($current_row) = T_LNUMBER ; T_VARIABLE($query_size) = T_LNUMBER ; T_IF ( ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) T_BOOLEAN_AND ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL ) ) { T_VARIABLE($separator) = ; T_VARIABLE($schema_insert) T_CONCAT_EQUAL T_VARIABLE($crlf) ; } T_ELSE { T_VARIABLE($separator) = ; } T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_VARIABLE($current_row) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($head) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . . T_VARIABLE($formatted_table_name) ) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($crlf) ; T_IF ( ! T_STRING ( T_VARIABLE($head) ) ) { T_RETURN T_STRING ; } } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($current_row) T_IS_EQUAL T_LNUMBER ) { T_IF ( ! T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($compat) ) . . T_VARIABLE($crlf) ) ) { T_RETURN T_STRING ; } } T_VARIABLE($current_row) T_INC ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($fields_cnt) ; T_VARIABLE($j) T_INC ) { T_IF ( ! T_ISSET ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) ) { T_VARIABLE($values) [ ] = ; } T_ELSEIF ( T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_BOOLEAN_AND ! T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($values) [ ] = T_VARIABLE($row) [ T_VARIABLE($j) ] ; } T_ELSEIF ( T_STRING ( T_VARIABLE($field_flags) [ T_VARIABLE($j) ] , ) T_BOOLEAN_AND T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_IF ( T_EMPTY ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) T_BOOLEAN_AND T_VARIABLE($row) [ T_VARIABLE($j) ] T_IS_NOT_EQUAL ) { T_VARIABLE($values) [ ] = ; } T_ELSE { T_VARIABLE($values) [ ] = . T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) ; } } T_ELSEIF ( T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($values) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] , T_VARIABLE($fields_meta) [ T_VARIABLE($j) ] T_OBJECT_OPERATOR T_STRING ) ) . ; } T_ELSE { T_VARIABLE($values) [ ] = . T_STRING ( T_VARIABLE($search) , T_VARIABLE($replace) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) ) . ; } } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) { T_VARIABLE($insert_line) = T_VARIABLE($schema_insert) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($fields_cnt) ; T_VARIABLE($i) T_INC ) { T_IF ( T_LNUMBER T_IS_EQUAL T_VARIABLE($i) ) { T_VARIABLE($insert_line) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($i) > T_LNUMBER ) { T_VARIABLE($insert_line) T_CONCAT_EQUAL ; } T_VARIABLE($insert_line) T_CONCAT_EQUAL T_VARIABLE($field_set) [ T_VARIABLE($i) ] . . T_VARIABLE($values) [ T_VARIABLE($i) ] ; } T_LIST ( T_VARIABLE($tmp_unique_condition) , T_VARIABLE($tmp_clause_is_unique) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($result) , T_VARIABLE($fields_cnt) , T_VARIABLE($fields_meta) , T_VARIABLE($row) ) ; T_VARIABLE($insert_line) T_CONCAT_EQUAL . T_VARIABLE($tmp_unique_condition) ; T_UNSET ( T_VARIABLE($tmp_unique_condition) , T_VARIABLE($tmp_clause_is_unique) ) ; } T_ELSE { T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) { T_IF ( T_VARIABLE($current_row) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($insert_line) = T_VARIABLE($schema_insert) . . T_STRING ( , T_VARIABLE($values) ) . ; } T_ELSE { T_VARIABLE($insert_line) = . T_STRING ( , T_VARIABLE($values) ) . ; T_VARIABLE($sql_max_size) = T_VARIABLE($GLOBALS) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($sql_max_size) ) T_BOOLEAN_AND T_VARIABLE($sql_max_size) > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($query_size) + T_STRING ( T_VARIABLE($insert_line) ) > T_VARIABLE($sql_max_size) ) { T_IF ( ! T_STRING ( . T_VARIABLE($crlf) ) ) { T_RETURN T_STRING ; } T_VARIABLE($query_size) = T_LNUMBER ; T_VARIABLE($current_row) = T_LNUMBER ; T_VARIABLE($insert_line) = T_VARIABLE($schema_insert) . T_VARIABLE($insert_line) ; } } T_VARIABLE($query_size) T_PLUS_EQUAL T_STRING ( T_VARIABLE($insert_line) ) ; } T_ELSE { T_VARIABLE($insert_line) = T_VARIABLE($schema_insert) . . T_STRING ( , T_VARIABLE($values) ) . ; } } T_UNSET ( T_VARIABLE($values) ) ; T_IF ( ! T_STRING ( ( T_VARIABLE($current_row) T_IS_EQUAL T_LNUMBER ? : T_VARIABLE($separator) . T_VARIABLE($crlf) ) . T_VARIABLE($insert_line) ) ) { T_RETURN T_STRING ; } } T_IF ( T_VARIABLE($current_row) > T_LNUMBER ) { T_IF ( ! T_STRING ( . T_VARIABLE($crlf) ) ) { T_RETURN T_STRING ; } } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($current_row) > T_LNUMBER ) { T_VARIABLE($outputSucceeded) = T_STRING ( T_VARIABLE($crlf) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($compat) ) . . T_VARIABLE($crlf) ) ; T_IF ( ! T_VARIABLE($outputSucceeded) ) { T_RETURN T_STRING ; } } } T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_STRING ; } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($exportPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($exportSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dumpWhat) = T_NEW T_STRING ( ) ; T_VARIABLE($dumpWhat) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dumpWhat) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($dumpWhat) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dumpWhat) ) ; T_VARIABLE($dataOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($dataOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dataOptions) ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($exportSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($exportPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ( . T_STRING ( ) . . T_VARIABLE($db) . ) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($sql_query) ) { T_GLOBAL T_VARIABLE($what) ; T_IF ( ! T_STRING ( . T_STRING ( ) . . T_VARIABLE($table) . ) ) { T_RETURN T_STRING ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) , T_STRING , T_STRING ) ; T_VARIABLE($fields_cnt) = T_STRING ( T_VARIABLE($result) ) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] ) ) { T_VARIABLE($text_output) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($fields_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($text_output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ) ) ; } T_VARIABLE($text_output) T_CONCAT_EQUAL ; T_IF ( ! T_STRING ( T_VARIABLE($text_output) ) ) { T_RETURN T_STRING ; } } T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($text_output) = ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($fields_cnt) ; T_VARIABLE($j) T_INC ) { T_IF ( ! T_ISSET ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($j) ] ) ) { T_VARIABLE($value) = T_VARIABLE($GLOBALS) [ T_VARIABLE($what) . ] ; } T_ELSEIF ( T_VARIABLE($row) [ T_VARIABLE($j) ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($row) [ T_VARIABLE($j) ] T_IS_NOT_EQUAL ) { T_VARIABLE($value) = T_VARIABLE($row) [ T_VARIABLE($j) ] ; } T_ELSE { T_VARIABLE($value) = ; } T_VARIABLE($text_output) T_CONCAT_EQUAL . T_STRING ( , , T_STRING ( T_VARIABLE($value) ) ) ; } T_VARIABLE($text_output) T_CONCAT_EQUAL ; T_IF ( ! T_STRING ( T_VARIABLE($text_output) ) ) { T_RETURN T_STRING ; } } T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_STRING ; } T_STRING ( T_VARIABLE($db) , T_VARIABLE($view) , T_VARIABLE($crlf) ) { T_VARIABLE($text_output) = ; T_VARIABLE($unique_keys) = T_ARRAY ( ) ; T_VARIABLE($keys) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($view) ) ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($key) ) { T_IF ( T_VARIABLE($key) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($unique_keys) [ ] = T_VARIABLE($key) [ ] ; } } T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($text_output) T_CONCAT_EQUAL . . T_STRING ( ) . . T_STRING ( ) . . T_STRING ( ) . . T_STRING ( ) . ; T_VARIABLE($columns) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($view) ) ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($column) ) { T_VARIABLE($text_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column) , T_VARIABLE($unique_keys) ) ; T_VARIABLE($text_output) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($text_output) ; } T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($show_dates) = T_STRING , T_VARIABLE($add_semicolon) = T_STRING , T_VARIABLE($view) = T_STRING ) { T_GLOBAL T_VARIABLE($cfgRelation) ; T_VARIABLE($text_output) = ; T_VARIABLE($unique_keys) = T_ARRAY ( ) ; T_VARIABLE($keys) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($key) ) { T_IF ( T_VARIABLE($key) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($unique_keys) [ ] = T_VARIABLE($key) [ ] ; } } T_STRING ( T_VARIABLE($db) ) ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($res_rel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($res_rel) T_BOOLEAN_AND T_STRING ( T_VARIABLE($res_rel) ) > T_LNUMBER ) { T_VARIABLE($have_rel) = T_STRING ; } T_ELSE { T_VARIABLE($have_rel) = T_STRING ; } } T_ELSE { T_VARIABLE($have_rel) = T_STRING ; } T_VARIABLE($columns_cnt) = T_LNUMBER ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND T_VARIABLE($have_rel) ) { T_VARIABLE($columns_cnt) T_INC ; } T_IF ( T_VARIABLE($do_comments) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($columns_cnt) T_INC ; } T_IF ( T_VARIABLE($do_mime) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($columns_cnt) T_INC ; } T_VARIABLE($text_output) T_CONCAT_EQUAL ; T_VARIABLE($text_output) T_CONCAT_EQUAL . T_STRING ( ) ; T_VARIABLE($text_output) T_CONCAT_EQUAL . T_STRING ( ) ; T_VARIABLE($text_output) T_CONCAT_EQUAL . T_STRING ( ) ; T_VARIABLE($text_output) T_CONCAT_EQUAL . T_STRING ( ) ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND T_VARIABLE($have_rel) ) { T_VARIABLE($text_output) T_CONCAT_EQUAL . T_STRING ( ) ; } T_IF ( T_VARIABLE($do_comments) ) { T_VARIABLE($text_output) T_CONCAT_EQUAL . T_STRING ( ) ; T_VARIABLE($comments) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_IF ( T_VARIABLE($do_mime) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($text_output) T_CONCAT_EQUAL . T_STRING ( ) ; T_VARIABLE($mime_map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_STRING ) ; } T_VARIABLE($text_output) T_CONCAT_EQUAL ; T_VARIABLE($columns) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($column) ) { T_VARIABLE($text_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column) , T_VARIABLE($unique_keys) ) ; T_VARIABLE($field_name) = T_VARIABLE($column) [ ] ; T_IF ( T_VARIABLE($do_relation) T_BOOLEAN_AND T_VARIABLE($have_rel) ) { T_VARIABLE($text_output) T_CONCAT_EQUAL . ( T_ISSET ( T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] ) ? T_STRING ( T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] . . T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] . ) : ) ; } T_IF ( T_VARIABLE($do_comments) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($text_output) T_CONCAT_EQUAL . ( T_ISSET ( T_VARIABLE($comments) [ T_VARIABLE($field_name) ] ) ? T_STRING ( T_VARIABLE($comments) [ T_VARIABLE($field_name) ] ) : ) ; } T_IF ( T_VARIABLE($do_mime) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($text_output) T_CONCAT_EQUAL . ( T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($field_name) ] ) ? T_STRING ( T_STRING ( , , T_VARIABLE($mime_map) [ T_VARIABLE($field_name) ] [ ] ) ) : ) ; } T_VARIABLE($text_output) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($text_output) ; } T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) { T_VARIABLE($text_output) T_CONCAT_EQUAL ; T_VARIABLE($text_output) T_CONCAT_EQUAL . T_STRING ( ) ; T_VARIABLE($dump) = ; T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) ; T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) ; T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) ; T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) ; T_VARIABLE($dump) T_CONCAT_EQUAL ; T_VARIABLE($triggers) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_FOREACH ( T_VARIABLE($triggers) T_AS T_VARIABLE($trigger) ) { T_VARIABLE($dump) T_CONCAT_EQUAL . T_VARIABLE($trigger) [ ] ; T_VARIABLE($dump) T_CONCAT_EQUAL . T_VARIABLE($trigger) [ ] ; T_VARIABLE($dump) T_CONCAT_EQUAL . T_VARIABLE($trigger) [ ] ; T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( , , T_STRING ( T_VARIABLE($trigger) [ ] ) ) ; T_VARIABLE($dump) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($dump) ; } T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($export_mode) , T_VARIABLE($export_type) , T_VARIABLE($do_relation) = T_STRING , T_VARIABLE($do_comments) = T_STRING , T_VARIABLE($do_mime) = T_STRING , T_VARIABLE($dates) = T_STRING ) { T_VARIABLE($dump) = ; T_SWITCH ( T_VARIABLE($export_mode) ) { T_CASE : T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) . . T_VARIABLE($table) . ; T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($dates) ) ; T_BREAK ; T_CASE : T_VARIABLE($dump) = ; T_VARIABLE($triggers) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($triggers) ) { T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) . . T_VARIABLE($table) . ; T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_BREAK ; T_CASE : T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) . . T_VARIABLE($table) . ; T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($do_relation) , T_VARIABLE($do_comments) , T_VARIABLE($do_mime) , T_VARIABLE($dates) , T_STRING , T_STRING ) ; T_BREAK ; T_CASE : T_VARIABLE($dump) T_CONCAT_EQUAL . T_STRING ( ) . . T_VARIABLE($table) . ; T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) ) ; } T_RETURN T_STRING ( T_VARIABLE($dump) ) ; } T_STRING ( T_VARIABLE($column) , T_VARIABLE($unique_keys) ) { T_VARIABLE($extracted_columnspec) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) [ ] ) ; T_VARIABLE($type) = T_VARIABLE($extracted_columnspec) [ ] ; T_IF ( T_EMPTY ( T_VARIABLE($type) ) ) { T_VARIABLE($type) = ; } T_IF ( ! T_ISSET ( T_VARIABLE($column) [ ] ) ) { T_IF ( T_VARIABLE($column) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($column) [ ] = ; } } T_VARIABLE($fmt_pre) = ; T_VARIABLE($fmt_post) = ; T_IF ( T_STRING ( T_VARIABLE($column) [ ] , T_VARIABLE($unique_keys) ) ) { T_VARIABLE($fmt_pre) = . T_VARIABLE($fmt_pre) ; T_VARIABLE($fmt_post) = T_VARIABLE($fmt_post) . ; } T_IF ( T_VARIABLE($column) [ ] T_IS_EQUAL ) { T_VARIABLE($fmt_pre) = . T_VARIABLE($fmt_pre) ; T_VARIABLE($fmt_post) = T_VARIABLE($fmt_post) . ; } T_VARIABLE($definition) = . T_VARIABLE($fmt_pre) . T_STRING ( T_VARIABLE($column) [ ] ) . T_VARIABLE($fmt_post) ; T_VARIABLE($definition) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($type) ) ; T_VARIABLE($definition) T_CONCAT_EQUAL . ( ( T_VARIABLE($column) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($column) [ ] T_IS_EQUAL ) ? T_STRING ( ) : T_STRING ( ) ) ; T_VARIABLE($definition) T_CONCAT_EQUAL . T_STRING ( T_ISSET ( T_VARIABLE($column) [ ] ) ? T_VARIABLE($column) [ ] : ) ; T_RETURN T_VARIABLE($definition) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_IF ( ! T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_RETURN ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_table) ; T_PRIVATE T_VARIABLE($_tables) ; T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_GLOBAL T_VARIABLE($table) , T_VARIABLE($tables) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($tables) ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($exportPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($exportSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($generalOptions) ) ; T_VARIABLE($structure) = T_NEW T_STRING ( ) ; T_VARIABLE($structure) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($structure) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_IF ( ! T_STRING ) { T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($structure) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($structure) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; } T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($structure) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_IF ( ! T_STRING ) { T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($structure) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($structure) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; } T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($structure) ) ; T_VARIABLE($data) = T_NEW T_STRING ( ) ; T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($data) ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($exportSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($exportPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_GLOBAL T_VARIABLE($crlf) , T_VARIABLE($cfg) , T_VARIABLE($db) ; T_VARIABLE($table) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($tables) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($export_struct) = T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($export_data) = T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? T_STRING : T_STRING ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($charset) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_VARIABLE($charset) = ; } T_VARIABLE($head) = . T_VARIABLE($charset) . . T_VARIABLE($crlf) . . T_VARIABLE($crlf) . . T_VARIABLE($crlf) . . T_STRING . T_VARIABLE($crlf) . . T_VARIABLE($crlf) . . T_VARIABLE($crlf) . . T_STRING ( ) . . T_VARIABLE($cfg) [ ] [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ) { T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($cfg) [ ] [ ] ; } T_VARIABLE($head) T_CONCAT_EQUAL T_VARIABLE($crlf) . . T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( ) . T_VARIABLE($crlf) . . T_STRING ( ) . . T_STRING . T_VARIABLE($crlf) . . T_STRING ( ) . . T_STRING ( ) . T_VARIABLE($crlf) . . T_VARIABLE($crlf) . T_VARIABLE($crlf) ; T_VARIABLE($head) T_CONCAT_EQUAL . ( ( T_VARIABLE($export_struct) ) ? : ) . . T_VARIABLE($crlf) ; T_IF ( T_VARIABLE($export_struct) ) { T_IF ( T_STRING ) { T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ) ; } T_VARIABLE($db_collation) = T_VARIABLE($result) [ T_LNUMBER ] [ ] ; T_VARIABLE($db_charset) = T_VARIABLE($result) [ T_LNUMBER ] [ ] ; T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; T_VARIABLE($head) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($db) ) . . T_VARIABLE($db_collation) . . T_VARIABLE($db_charset) . . T_VARIABLE($crlf) ; T_IF ( T_STRING ( T_VARIABLE($tables) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($tables) [ ] = T_VARIABLE($table) ; } T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($table) ) { T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) , T_LNUMBER ) ; T_VARIABLE($tbl) = T_VARIABLE($result) [ T_VARIABLE($table) ] [ T_LNUMBER ] ; T_VARIABLE($is_view) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($is_view) ) { T_VARIABLE($type) = ; } T_ELSE { T_VARIABLE($type) = ; } T_IF ( T_VARIABLE($is_view) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_CONTINUE ; } T_IF ( ! T_VARIABLE($is_view) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_CONTINUE ; } T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($type) . . T_VARIABLE($table) . . T_VARIABLE($crlf) ; T_VARIABLE($tbl) = . T_STRING ( T_VARIABLE($tbl) ) ; T_VARIABLE($tbl) = T_STRING ( , , T_VARIABLE($tbl) ) ; T_VARIABLE($head) T_CONCAT_EQUAL T_VARIABLE($tbl) . . T_VARIABLE($crlf) ; T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($type) . . T_VARIABLE($crlf) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($triggers) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($triggers) ) { T_FOREACH ( T_VARIABLE($triggers) T_AS T_VARIABLE($trigger) ) { T_VARIABLE($code) = T_VARIABLE($trigger) [ ] ; T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($trigger) [ ] . . T_VARIABLE($crlf) ; T_VARIABLE($code) = T_STRING ( T_STRING ( T_VARIABLE($code) ) , T_LNUMBER , - T_LNUMBER ) ; T_VARIABLE($code) = . T_STRING ( T_VARIABLE($code) ) ; T_VARIABLE($code) = T_STRING ( , , T_VARIABLE($code) ) ; T_VARIABLE($head) T_CONCAT_EQUAL T_VARIABLE($code) . T_VARIABLE($crlf) ; T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; } T_UNSET ( T_VARIABLE($trigger) ) ; T_UNSET ( T_VARIABLE($triggers) ) ; } } } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($functions) = T_STRING ( T_VARIABLE($db) , ) ; T_IF ( T_VARIABLE($functions) ) { T_FOREACH ( T_VARIABLE($functions) T_AS T_VARIABLE($function) ) { T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($function) . . T_VARIABLE($crlf) ; T_VARIABLE($sql) = T_STRING ( T_VARIABLE($db) , , T_VARIABLE($function) ) ; T_VARIABLE($sql) = T_STRING ( T_VARIABLE($sql) ) ; T_VARIABLE($sql) = . T_STRING ( T_VARIABLE($sql) ) ; T_VARIABLE($sql) = T_STRING ( , , T_VARIABLE($sql) ) ; T_VARIABLE($head) T_CONCAT_EQUAL T_VARIABLE($sql) . T_VARIABLE($crlf) ; T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; } T_UNSET ( T_VARIABLE($function) ) ; T_UNSET ( T_VARIABLE($functions) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($procedures) = T_STRING ( T_VARIABLE($db) , ) ; T_IF ( T_VARIABLE($procedures) ) { T_FOREACH ( T_VARIABLE($procedures) T_AS T_VARIABLE($procedure) ) { T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($procedure) . . T_VARIABLE($crlf) ; T_VARIABLE($sql) = T_STRING ( T_VARIABLE($db) , , T_VARIABLE($procedure) ) ; T_VARIABLE($sql) = T_STRING ( T_VARIABLE($sql) ) ; T_VARIABLE($sql) = . T_STRING ( T_VARIABLE($sql) ) ; T_VARIABLE($sql) = T_STRING ( , , T_VARIABLE($sql) ) ; T_VARIABLE($head) T_CONCAT_EQUAL T_VARIABLE($sql) . T_VARIABLE($crlf) ; T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; } T_UNSET ( T_VARIABLE($procedure) ) ; T_UNSET ( T_VARIABLE($procedures) ) ; } } T_UNSET ( T_VARIABLE($result) ) ; T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; T_VARIABLE($head) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; T_IF ( T_VARIABLE($export_data) ) { T_VARIABLE($head) T_CONCAT_EQUAL T_VARIABLE($crlf) ; } } T_RETURN T_STRING ( T_VARIABLE($head) ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($foot) = ; T_RETURN T_STRING ( T_VARIABLE($foot) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_GLOBAL T_VARIABLE($crlf) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($head) = . T_VARIABLE($crlf) . . T_STRING ( ) . . . T_VARIABLE($db) . . T_VARIABLE($crlf) . . T_VARIABLE($crlf) . . T_STRING ( T_VARIABLE($db) ) . . T_VARIABLE($crlf) ; T_RETURN T_STRING ( T_VARIABLE($head) ) ; } T_ELSE { T_RETURN T_STRING ; } } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_GLOBAL T_VARIABLE($crlf) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_RETURN T_STRING ( . T_VARIABLE($crlf) ) ; } T_ELSE { T_RETURN T_STRING ; } } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($sql_query) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) , T_STRING , T_STRING ) ; T_VARIABLE($columns_cnt) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($columns) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($columns_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($columns) [ T_VARIABLE($i) ] = T_STRING ( T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ) ; } T_UNSET ( T_VARIABLE($i) ) ; T_VARIABLE($buffer) = . T_STRING ( ) . . T_VARIABLE($table) . . T_VARIABLE($crlf) ; T_IF ( ! T_STRING ( T_VARIABLE($buffer) ) ) { T_RETURN T_STRING ; } T_WHILE ( T_VARIABLE($record) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($buffer) = . T_STRING ( T_VARIABLE($table) ) . . T_VARIABLE($crlf) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($columns_cnt) ; T_VARIABLE($i) T_INC ) { T_IF ( ! T_ISSET ( T_VARIABLE($record) [ T_VARIABLE($i) ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($record) [ T_VARIABLE($i) ] ) ) { T_VARIABLE($record) [ T_VARIABLE($i) ] = ; } T_VARIABLE($buffer) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($columns) [ T_VARIABLE($i) ] ) . . T_STRING ( T_STRING_CAST T_VARIABLE($record) [ T_VARIABLE($i) ] ) . . T_VARIABLE($crlf) ; } T_VARIABLE($buffer) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; T_IF ( ! T_STRING ( T_VARIABLE($buffer) ) ) { T_RETURN T_STRING ; } } T_STRING ( T_VARIABLE($result) ) ; } T_RETURN T_STRING ; } T_PRIVATE T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($table) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($table) ; } T_PRIVATE T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($tables) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($tables) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($exportPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($exportSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($exportSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($generalOptions) ) ; T_VARIABLE($exportPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($exportSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($exportPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_STRING ( . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] ) ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_STRING ( . T_VARIABLE($GLOBALS) [ ] ) ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($sql_query) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) , T_STRING , T_STRING ) ; T_VARIABLE($columns_cnt) = T_STRING ( T_VARIABLE($result) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($columns_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($columns) [ T_VARIABLE($i) ] = T_STRING ( T_STRING ( T_VARIABLE($result) , T_VARIABLE($i) ) ) ; } T_UNSET ( T_VARIABLE($i) ) ; T_VARIABLE($buffer) = ; T_VARIABLE($record_cnt) = T_LNUMBER ; T_WHILE ( T_VARIABLE($record) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($record_cnt) T_INC ; T_IF ( T_VARIABLE($record_cnt) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($buffer) = . T_VARIABLE($db) . . T_VARIABLE($table) . T_VARIABLE($crlf) ; T_VARIABLE($buffer) T_CONCAT_EQUAL . T_VARIABLE($crlf) ; } T_ELSE { T_VARIABLE($buffer) = . T_VARIABLE($crlf) ; } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($columns_cnt) ; T_VARIABLE($i) T_INC ) { T_IF ( ! T_ISSET ( T_VARIABLE($record) [ T_VARIABLE($i) ] ) ) { T_CONTINUE ; } T_VARIABLE($column) = T_VARIABLE($columns) [ T_VARIABLE($i) ] ; T_IF ( T_STRING ( T_VARIABLE($record) [ T_VARIABLE($i) ] ) ) { T_VARIABLE($buffer) T_CONCAT_EQUAL . T_VARIABLE($column) . . T_VARIABLE($crlf) ; T_CONTINUE ; } T_IF ( T_STRING ( T_VARIABLE($record) [ T_VARIABLE($i) ] ) ) { T_VARIABLE($buffer) T_CONCAT_EQUAL . T_VARIABLE($column) . . T_VARIABLE($record) [ T_VARIABLE($i) ] . T_VARIABLE($crlf) ; T_CONTINUE ; } T_VARIABLE($record) [ T_VARIABLE($i) ] = T_STRING ( T_ARRAY ( , , , ) , T_ARRAY ( , , , ) , T_VARIABLE($record) [ T_VARIABLE($i) ] ) ; T_VARIABLE($buffer) T_CONCAT_EQUAL . T_VARIABLE($column) . . T_VARIABLE($record) [ T_VARIABLE($i) ] . . T_VARIABLE($crlf) ; } T_IF ( ! T_STRING ( T_VARIABLE($buffer) ) ) { T_RETURN T_STRING ; } } T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_STRING ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PROTECTED T_VARIABLE($properties) ; T_ABSTRACT T_PUBLIC T_STRING ( ) ; T_ABSTRACT T_PUBLIC T_STRING ( ) ; T_ABSTRACT T_PUBLIC T_STRING ( T_VARIABLE($db) ) ; T_ABSTRACT T_PUBLIC T_STRING ( T_VARIABLE($db) ) ; T_ABSTRACT T_PUBLIC T_STRING ( T_VARIABLE($db) ) ; T_ABSTRACT T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($sql_query) ) ; T_PUBLIC T_STRING ( T_VARIABLE($db) ) { ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($crlf) , T_VARIABLE($error_url) , T_VARIABLE($export_mode) , T_VARIABLE($export_type) , T_VARIABLE($relation) = T_STRING , T_VARIABLE($comments) = T_STRING , T_VARIABLE($mime) = T_STRING , T_VARIABLE($dates) = T_STRING ) { ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($view) , T_VARIABLE($crlf) ) { ; } T_PROTECTED T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) { ; } T_PROTECTED T_STRING ( ) { ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_ABSTRACT T_PROTECTED T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_VAR T_VARIABLE($tablewidths) ; T_VAR T_VARIABLE($headerset) ; T_STRING ( T_VARIABLE($h) = T_LNUMBER , T_VARIABLE($y) = , T_VARIABLE($addpage) = T_STRING ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($y) ) ) { T_VARIABLE($y) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($current_page) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_IF ( ( ( T_VARIABLE($y) + T_VARIABLE($h) ) > T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_LOGICAL_AND ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_LOGICAL_AND ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_IF ( T_VARIABLE($addpage) ) { T_VARIABLE($x) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($oldpage) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_LNUMBER ; T_VARIABLE($this_page_orm) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] ; T_VARIABLE($old_page_orm) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($oldpage) ] [ ] ; T_VARIABLE($this_page_olm) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] ; T_VARIABLE($old_page_olm) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($oldpage) ] [ ] ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_VARIABLE($this_page_orm) T_IS_NOT_EQUAL T_VARIABLE($old_page_orm) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($x) - ( T_VARIABLE($this_page_orm) - T_VARIABLE($old_page_orm) ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($x) ; } } T_ELSE { T_IF ( T_VARIABLE($this_page_olm) T_IS_NOT_EQUAL T_VARIABLE($old_page_olm) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($x) + ( T_VARIABLE($this_page_olm) - T_VARIABLE($old_page_olm) ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($x) ; } } } T_RETURN T_STRING ; } T_IF ( T_VARIABLE($current_page) T_IS_NOT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_STRING ( ) { T_GLOBAL T_VARIABLE($maxY) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($fullwidth) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($width) ) { T_VARIABLE($fullwidth) T_PLUS_EQUAL T_VARIABLE($width) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) - ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) * T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING , , ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING , , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) - ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) * T_DNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING ( ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . T_STRING ( ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($l) = ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($col) T_DOUBLE_ARROW T_VARIABLE($txt) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($l) , ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($col) ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($txt) ) ; T_VARIABLE($l) T_PLUS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($col) ] ; T_VARIABLE($maxY) = ( T_VARIABLE($maxY) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ? T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) : T_VARIABLE($maxY) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($l) = ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($col) T_DOUBLE_ARROW T_VARIABLE($txt) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($l) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($col) ] , T_VARIABLE($maxY) - ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) , , T_LNUMBER , T_LNUMBER , , T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($l) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($col) ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($txt) , T_LNUMBER , ) ; T_VARIABLE($l) T_PLUS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($col) ] ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] = T_LNUMBER ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($maxY) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; } T_STRING ( T_VARIABLE($lineheight) = T_LNUMBER ) { T_VARIABLE($l) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($startheight) = T_VARIABLE($h) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($startpage) = T_VARIABLE($currpage) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($fullwidth) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($width) ) { T_VARIABLE($fullwidth) T_PLUS_EQUAL T_VARIABLE($width) ; } T_VARIABLE($row) = T_LNUMBER ; T_VARIABLE($tmpheight) = T_ARRAY ( ) ; T_VARIABLE($maxpage) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_WHILE ( T_VARIABLE($data) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($currpage) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($l) , T_VARIABLE($h) , T_VARIABLE($fullwidth) + T_VARIABLE($l) , T_VARIABLE($h) ) ; T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($col) T_DOUBLE_ARROW T_VARIABLE($txt) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($currpage) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($l) , T_VARIABLE($h) ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($col) ] > T_LNUMBER ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($col) ] , T_VARIABLE($lineheight) , T_VARIABLE($txt) , T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($col) ] ) ; T_VARIABLE($l) T_PLUS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($col) ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($tmpheight) [ T_VARIABLE($row) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($tmpheight) [ T_VARIABLE($row) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] = T_LNUMBER ; } T_IF ( T_VARIABLE($tmpheight) [ T_VARIABLE($row) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($tmpheight) [ T_VARIABLE($row) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING > T_VARIABLE($maxpage) ) { T_VARIABLE($maxpage) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_UNSET ( T_VARIABLE($data) [ T_VARIABLE($col) ] ) ; } T_VARIABLE($h) = T_VARIABLE($tmpheight) [ T_VARIABLE($row) . . T_VARIABLE($maxpage) ] ; T_VARIABLE($l) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($currpage) = T_VARIABLE($maxpage) ; T_UNSET ( T_VARIABLE($data) [ T_VARIABLE($row) ] ) ; T_VARIABLE($row) T_INC ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($maxpage) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($l) , T_VARIABLE($h) , T_VARIABLE($fullwidth) + T_VARIABLE($l) , T_VARIABLE($h) ) ; T_FOR ( T_VARIABLE($i) = T_VARIABLE($startpage) ; T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($maxpage) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($i) ; T_VARIABLE($l) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($t) = ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($startpage) ) ? T_VARIABLE($startheight) : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($lh) = ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($maxpage) ) ? T_VARIABLE($h) : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($l) , T_VARIABLE($t) , T_VARIABLE($l) , T_VARIABLE($lh) ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($width) ) { T_VARIABLE($l) T_PLUS_EQUAL T_VARIABLE($width) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($l) , T_VARIABLE($t) , T_VARIABLE($l) , T_VARIABLE($lh) ) ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($maxpage) ; } T_STRING ( T_VARIABLE($attr) = T_ARRAY ( ) ) { T_FOREACH ( T_VARIABLE($attr) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_VARIABLE($key) = T_VARIABLE($val) ; } } T_STRING ( T_VARIABLE($topMargin) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($topMargin) ; } T_STRING ( T_VARIABLE($query) ) { T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($query) , T_STRING , T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($availableWidth) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($availableWidth) / T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($totalTitleWidth) = T_LNUMBER ; T_VARIABLE($colFits) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($i) T_INC ) { T_VARIABLE($stringWidth) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ) + T_LNUMBER ; T_VARIABLE($titleWidth) [ T_VARIABLE($i) ] = T_VARIABLE($stringWidth) ; T_VARIABLE($totalTitleWidth) T_PLUS_EQUAL T_VARIABLE($stringWidth) ; T_IF ( T_VARIABLE($stringWidth) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($colFits) [ T_VARIABLE($i) ] = T_VARIABLE($stringWidth) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] = T_STRING ; T_SWITCH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ) { T_CASE : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] = ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_CASE : T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING , ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] = T_STRING ; T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] = ; T_BREAK ; T_DEFAULT : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] = ; } } T_IF ( T_VARIABLE($totalTitleWidth) > T_VARIABLE($availableWidth) ) { T_VARIABLE($adjustingMode) = T_STRING ; } T_ELSE { T_VARIABLE($adjustingMode) = T_STRING ; T_FOREACH ( T_VARIABLE($titleWidth) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($colFits) [ T_VARIABLE($key) ] = T_VARIABLE($val) ; } } T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_FOREACH ( T_VARIABLE($colFits) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($stringWidth) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($key) ] ) + T_LNUMBER ; T_IF ( T_VARIABLE($adjustingMode) T_BOOLEAN_AND ( T_VARIABLE($stringWidth) > T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_UNSET ( T_VARIABLE($colFits) [ T_VARIABLE($key) ] ) ; } T_ELSE { T_IF ( T_VARIABLE($stringWidth) > T_VARIABLE($val) T_BOOLEAN_AND T_VARIABLE($stringWidth) < ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_LNUMBER ) ) { T_VARIABLE($colFits) [ T_VARIABLE($key) ] = T_VARIABLE($stringWidth) ; } } } } T_VARIABLE($totAlreadyFitted) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($colFits) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] = T_VARIABLE($val) ; T_VARIABLE($totAlreadyFitted) T_PLUS_EQUAL T_VARIABLE($val) ; } T_IF ( T_VARIABLE($adjustingMode) ) { T_VARIABLE($surplus) = ( T_STRING ( T_VARIABLE($colFits) ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) - T_VARIABLE($totAlreadyFitted) ; T_VARIABLE($surplusToAdd) = T_VARIABLE($surplus) / ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_STRING ( T_VARIABLE($colFits) ) ) ; } T_ELSE { T_VARIABLE($surplusToAdd) = T_LNUMBER ; } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($i) T_INC ) { T_IF ( ! T_STRING ( T_VARIABLE($i) , T_STRING ( T_VARIABLE($colFits) ) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($surplusToAdd) ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] T_IS_EQUAL T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] = T_LNUMBER ; } } T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($query) , T_STRING , T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING , , T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PUBLIC T_VARIABLE($name) ; T_PUBLIC T_VARIABLE($type) ; T_PUBLIC T_VARIABLE($nullable) ; T_PUBLIC T_VARIABLE($key) ; T_PUBLIC T_VARIABLE($defaultValue) ; T_PUBLIC T_VARIABLE($ext) ; T_STRING ( T_VARIABLE($row) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($row) [ T_LNUMBER ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($row) [ T_LNUMBER ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($row) [ T_LNUMBER ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($row) [ T_LNUMBER ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($row) [ T_LNUMBER ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($row) [ T_LNUMBER ] ) ; } T_STRING ( ) { T_VARIABLE($pos) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) ; T_IF ( T_VARIABLE($pos) > T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_VARIABLE($pos) ) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ? : ; } T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ? : ; } T_STRING ( ) { T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_RETURN ; } T_STRING ( ) { T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_RETURN ; } T_STRING ( ) { T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) > T_LNUMBER ) { T_RETURN . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING , ) . ; } T_RETURN ; } T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ; } T_STRING ( T_VARIABLE($text) ) { T_VARIABLE($text) = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING ) , T_VARIABLE($text) ) ; T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($text) ) ; } T_STRING ( T_VARIABLE($text) ) { T_VARIABLE($text) = T_STRING ( , T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING , ) , T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($text) ) ; T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($text) ) ; } T_STRING ( T_VARIABLE($text) ) { T_VARIABLE($text) = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) , T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($text) ) ; T_RETURN T_VARIABLE($text) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($importPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($importSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($importSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($importSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($generalOptions) ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($importSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($importPluginProperties) ; T_RETURN T_VARIABLE($generalOptions) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_analyze) ; T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_IDENTICAL ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; } T_VARIABLE($generalOptions) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_IDENTICAL ) { T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( . . ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; } T_ELSE { T_VARIABLE($hint) = T_NEW T_STRING ( T_STRING ( . . . ) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hint) ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; } } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($csv_terminated) , T_VARIABLE($csv_enclosed) , T_VARIABLE($csv_escaped) , T_VARIABLE($csv_new_line) ; T_GLOBAL T_VARIABLE($error) , T_VARIABLE($timeout_passed) , T_VARIABLE($finished) ; T_VARIABLE($replacements) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($csv_terminated) = T_STRING ( T_VARIABLE($csv_terminated) , T_VARIABLE($replacements) ) ; T_VARIABLE($csv_enclosed) = T_STRING ( T_VARIABLE($csv_enclosed) , T_VARIABLE($replacements) ) ; T_VARIABLE($csv_escaped) = T_STRING ( T_VARIABLE($csv_escaped) , T_VARIABLE($replacements) ) ; T_VARIABLE($csv_new_line) = T_STRING ( T_VARIABLE($csv_new_line) , T_VARIABLE($replacements) ) ; T_VARIABLE($param_error) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($csv_terminated) ) T_IS_NOT_EQUAL T_LNUMBER ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) , T_STRING ) ; T_VARIABLE($error) = T_STRING ; T_VARIABLE($param_error) = T_STRING ; } T_ELSEIF ( T_STRING ( T_VARIABLE($csv_enclosed) ) > T_LNUMBER ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) , T_STRING ) ; T_VARIABLE($error) = T_STRING ; T_VARIABLE($param_error) = T_STRING ; } T_ELSEIF ( T_STRING ( T_VARIABLE($csv_escaped) ) T_IS_NOT_EQUAL T_LNUMBER ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) , T_STRING ) ; T_VARIABLE($error) = T_STRING ; T_VARIABLE($param_error) = T_STRING ; } T_ELSEIF ( T_STRING ( T_VARIABLE($csv_new_line) ) T_IS_NOT_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($csv_new_line) T_IS_NOT_EQUAL ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) , T_STRING ) ; T_VARIABLE($error) = T_STRING ; T_VARIABLE($param_error) = T_STRING ; } T_IF ( T_VARIABLE($param_error) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) , , , T_VARIABLE($err_url) ) ; } T_VARIABLE($buffer) = ; T_VARIABLE($required_fields) = T_LNUMBER ; T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_IF ( T_ISSET ( T_VARIABLE($csv_replace) ) ) { T_VARIABLE($sql_template) = ; } T_ELSE { T_VARIABLE($sql_template) = ; T_IF ( T_ISSET ( T_VARIABLE($csv_ignore) ) ) { T_VARIABLE($sql_template) T_CONCAT_EQUAL ; } } T_VARIABLE($sql_template) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($tmp_fields) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_EMPTY ( T_VARIABLE($csv_columns) ) ) { T_VARIABLE($fields) = T_VARIABLE($tmp_fields) ; } T_ELSE { T_VARIABLE($sql_template) T_CONCAT_EQUAL ; T_VARIABLE($fields) = T_ARRAY ( ) ; T_VARIABLE($tmp) = T_STRING ( , T_VARIABLE($csv_columns) ) ; T_FOREACH ( T_VARIABLE($tmp) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_IF ( T_STRING ( T_VARIABLE($fields) ) > T_LNUMBER ) { T_VARIABLE($sql_template) T_CONCAT_EQUAL ; } T_VARIABLE($val) = T_STRING ( T_VARIABLE($val) , ) ; T_VARIABLE($found) = T_STRING ; T_FOREACH ( T_VARIABLE($tmp_fields) T_AS T_VARIABLE($field) ) { T_IF ( T_VARIABLE($field) [ ] T_IS_EQUAL T_VARIABLE($val) ) { T_VARIABLE($found) = T_STRING ; T_BREAK ; } } T_IF ( ! T_VARIABLE($found) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . . ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($val) ) ; T_VARIABLE($error) = T_STRING ; T_BREAK ; } T_VARIABLE($fields) [ ] = T_VARIABLE($field) ; T_VARIABLE($sql_template) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($val) ) ; } T_VARIABLE($sql_template) T_CONCAT_EQUAL ; } T_VARIABLE($required_fields) = T_STRING ( T_VARIABLE($fields) ) ; T_VARIABLE($sql_template) T_CONCAT_EQUAL ; } T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($len) = T_LNUMBER ; T_VARIABLE($line) = T_LNUMBER ; T_VARIABLE($lasti) = - T_LNUMBER ; T_VARIABLE($values) = T_ARRAY ( ) ; T_VARIABLE($csv_finish) = T_STRING ; T_VARIABLE($tempRow) = T_ARRAY ( ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_VARIABLE($col_names) = T_ARRAY ( ) ; T_VARIABLE($tables) = T_ARRAY ( ) ; T_VARIABLE($col_count) = T_LNUMBER ; T_VARIABLE($max_cols) = T_LNUMBER ; T_WHILE ( ! ( T_VARIABLE($finished) T_BOOLEAN_AND T_VARIABLE($i) T_IS_GREATER_OR_EQUAL T_VARIABLE($len) ) T_BOOLEAN_AND ! T_VARIABLE($error) T_BOOLEAN_AND ! T_VARIABLE($timeout_passed) ) { T_VARIABLE($data) = T_STRING ( ) ; T_IF ( T_VARIABLE($data) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($offset) T_MINUS_EQUAL T_STRING ( T_VARIABLE($buffer) ) ; T_BREAK ; } T_ELSEIF ( T_VARIABLE($data) T_IS_IDENTICAL T_STRING ) { } T_ELSE { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($data) ; T_UNSET ( T_VARIABLE($data) ) ; T_IF ( ( T_VARIABLE($csv_new_line) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($buffer) , ) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($buffer) , ) T_IS_IDENTICAL T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($csv_new_line) T_IS_NOT_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($csv_new_line) ) T_IS_IDENTICAL T_STRING ) ) { T_CONTINUE ; } } T_VARIABLE($len) = T_STRING ( T_VARIABLE($buffer) ) ; T_VARIABLE($ch) = T_VARIABLE($buffer) [ T_VARIABLE($i) ] ; T_WHILE ( T_VARIABLE($i) < T_VARIABLE($len) ) { T_IF ( T_VARIABLE($lasti) T_IS_EQUAL T_VARIABLE($i) T_BOOLEAN_AND T_VARIABLE($lastlen) T_IS_EQUAL T_VARIABLE($len) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($line) ) ; T_VARIABLE($error) = T_STRING ; T_BREAK ; } T_VARIABLE($lasti) = T_VARIABLE($i) ; T_VARIABLE($lastlen) = T_VARIABLE($len) ; T_IF ( ! T_VARIABLE($csv_finish) ) { T_IF ( T_VARIABLE($ch) T_IS_EQUAL T_VARIABLE($csv_terminated) ) { T_IF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($len) - T_LNUMBER ) { T_BREAK ; } T_VARIABLE($values) [ ] = ; T_VARIABLE($i) T_INC ; T_VARIABLE($ch) = T_VARIABLE($buffer) [ T_VARIABLE($i) ] ; T_CONTINUE ; } T_VARIABLE($fallbacki) = T_VARIABLE($i) ; T_IF ( T_VARIABLE($ch) T_IS_EQUAL T_VARIABLE($csv_enclosed) ) { T_IF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($len) - T_LNUMBER ) { T_BREAK ; } T_VARIABLE($need_end) = T_STRING ; T_VARIABLE($i) T_INC ; T_VARIABLE($ch) = T_VARIABLE($buffer) [ T_VARIABLE($i) ] ; } T_ELSE { T_VARIABLE($need_end) = T_STRING ; } T_VARIABLE($fail) = T_STRING ; T_VARIABLE($value) = ; T_WHILE ( ( T_VARIABLE($need_end) T_BOOLEAN_AND ( T_VARIABLE($ch) T_IS_NOT_EQUAL T_VARIABLE($csv_enclosed) T_BOOLEAN_OR T_VARIABLE($csv_enclosed) T_IS_EQUAL T_VARIABLE($csv_escaped) ) ) T_BOOLEAN_OR ( ! T_VARIABLE($need_end) T_BOOLEAN_AND ! ( T_VARIABLE($ch) T_IS_EQUAL T_VARIABLE($csv_terminated) T_BOOLEAN_OR T_VARIABLE($ch) T_IS_EQUAL T_VARIABLE($csv_new_line) T_BOOLEAN_OR ( T_VARIABLE($csv_new_line) T_IS_EQUAL T_BOOLEAN_AND ( T_VARIABLE($ch) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($ch) T_IS_EQUAL ) ) ) ) ) { T_IF ( T_VARIABLE($ch) T_IS_EQUAL T_VARIABLE($csv_escaped) ) { T_IF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($len) - T_LNUMBER ) { T_VARIABLE($fail) = T_STRING ; T_BREAK ; } T_VARIABLE($i) T_INC ; T_VARIABLE($ch) = T_VARIABLE($buffer) [ T_VARIABLE($i) ] ; T_IF ( T_VARIABLE($csv_enclosed) T_IS_EQUAL T_VARIABLE($csv_escaped) T_BOOLEAN_AND ( T_VARIABLE($ch) T_IS_EQUAL T_VARIABLE($csv_terminated) T_BOOLEAN_OR T_VARIABLE($ch) T_IS_EQUAL T_VARIABLE($csv_new_line) T_BOOLEAN_OR ( T_VARIABLE($csv_new_line) T_IS_EQUAL T_BOOLEAN_AND ( T_VARIABLE($ch) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($ch) T_IS_EQUAL ) ) ) ) { T_BREAK ; } } T_VARIABLE($value) T_CONCAT_EQUAL T_VARIABLE($ch) ; T_IF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($len) - T_LNUMBER ) { T_IF ( ! T_VARIABLE($finished) ) { T_VARIABLE($fail) = T_STRING ; } T_BREAK ; } T_VARIABLE($i) T_INC ; T_VARIABLE($ch) = T_VARIABLE($buffer) [ T_VARIABLE($i) ] ; } T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($need_end) T_BOOLEAN_AND T_VARIABLE($value) T_IS_IDENTICAL ) { T_VARIABLE($value) = T_STRING ; } T_IF ( T_VARIABLE($fail) ) { T_VARIABLE($i) = T_VARIABLE($fallbacki) ; T_VARIABLE($ch) = T_VARIABLE($buffer) [ T_VARIABLE($i) ] ; T_BREAK ; } T_IF ( T_VARIABLE($need_end) T_BOOLEAN_AND T_VARIABLE($ch) T_IS_EQUAL T_VARIABLE($csv_enclosed) ) { T_IF ( T_VARIABLE($finished) T_BOOLEAN_AND T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($len) - T_LNUMBER ) { T_VARIABLE($ch) = T_STRING ; } T_ELSEIF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($len) - T_LNUMBER ) { T_VARIABLE($i) = T_VARIABLE($fallbacki) ; T_VARIABLE($ch) = T_VARIABLE($buffer) [ T_VARIABLE($i) ] ; T_BREAK ; } T_ELSE { T_VARIABLE($i) T_INC ; T_VARIABLE($ch) = T_VARIABLE($buffer) [ T_VARIABLE($i) ] ; } } T_IF ( T_VARIABLE($ch) T_IS_EQUAL T_VARIABLE($csv_new_line) T_BOOLEAN_OR ( T_VARIABLE($csv_new_line) T_IS_EQUAL T_BOOLEAN_AND ( T_VARIABLE($ch) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($ch) T_IS_EQUAL ) ) T_BOOLEAN_OR ( T_VARIABLE($finished) T_BOOLEAN_AND T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($len) - T_LNUMBER ) ) { T_VARIABLE($csv_finish) = T_STRING ; } T_IF ( T_VARIABLE($ch) T_IS_EQUAL T_VARIABLE($csv_terminated) ) { T_IF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($len) - T_LNUMBER ) { T_VARIABLE($i) = T_VARIABLE($fallbacki) ; T_VARIABLE($ch) = T_VARIABLE($buffer) [ T_VARIABLE($i) ] ; T_BREAK ; } T_VARIABLE($i) T_INC ; T_VARIABLE($ch) = T_VARIABLE($buffer) [ T_VARIABLE($i) ] ; } T_VARIABLE($values) [ ] = T_VARIABLE($value) ; } T_IF ( T_VARIABLE($csv_finish) T_BOOLEAN_OR T_VARIABLE($ch) T_IS_EQUAL T_VARIABLE($csv_new_line) T_BOOLEAN_OR ( T_VARIABLE($csv_new_line) T_IS_EQUAL T_BOOLEAN_AND ( T_VARIABLE($ch) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($ch) T_IS_EQUAL ) ) ) { T_IF ( T_VARIABLE($csv_new_line) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($ch) T_IS_EQUAL ) { T_IF ( T_VARIABLE($i) T_IS_GREATER_OR_EQUAL ( T_VARIABLE($len) - T_LNUMBER ) T_BOOLEAN_AND ! T_VARIABLE($finished) ) { T_BREAK ; } T_IF ( T_VARIABLE($buffer) [ T_VARIABLE($i) + T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($i) T_INC ; } } T_IF ( ! T_VARIABLE($csv_finish) ) { T_VARIABLE($values) [ ] = ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_FOREACH ( T_VARIABLE($values) T_AS T_VARIABLE($val) ) { T_VARIABLE($tempRow) [ ] = T_VARIABLE($val) ; T_INC T_VARIABLE($col_count) ; } T_IF ( T_VARIABLE($col_count) > T_VARIABLE($max_cols) ) { T_VARIABLE($max_cols) = T_VARIABLE($col_count) ; } T_VARIABLE($col_count) = T_LNUMBER ; T_VARIABLE($rows) [ ] = T_VARIABLE($tempRow) ; T_VARIABLE($tempRow) = T_ARRAY ( ) ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($values) ) T_IS_NOT_EQUAL T_VARIABLE($required_fields) ) { T_IF ( T_VARIABLE($values) [ T_STRING ( T_VARIABLE($values) ) - T_LNUMBER ] T_IS_EQUAL ) { T_UNSET ( T_VARIABLE($values) [ T_STRING ( T_VARIABLE($values) ) - T_LNUMBER ] ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($line) ) ; T_VARIABLE($error) = T_STRING ; T_BREAK ; } } T_VARIABLE($first) = T_STRING ; T_VARIABLE($sql) = T_VARIABLE($sql_template) ; T_FOREACH ( T_VARIABLE($values) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_IF ( ! T_VARIABLE($first) ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($val) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($sql) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($val) ) . ; } T_VARIABLE($first) = T_STRING ; } T_VARIABLE($sql) T_CONCAT_EQUAL ; T_STRING ( T_VARIABLE($sql) , T_VARIABLE($sql) ) ; } T_VARIABLE($line) T_INC ; T_VARIABLE($csv_finish) = T_STRING ; T_VARIABLE($values) = T_ARRAY ( ) ; T_VARIABLE($buffer) = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($i) + T_LNUMBER ) ; T_VARIABLE($len) = T_STRING ( T_VARIABLE($buffer) ) ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($lasti) = - T_LNUMBER ; T_VARIABLE($ch) = T_VARIABLE($buffer) [ T_LNUMBER ] ; } } } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($num_rows) = T_STRING ( T_VARIABLE($rows) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($num_rows) ; T_INC T_VARIABLE($i) ) { T_FOR ( T_VARIABLE($j) = T_STRING ( T_VARIABLE($rows) [ T_VARIABLE($i) ] ) ; T_VARIABLE($j) < T_VARIABLE($max_cols) ; T_INC T_VARIABLE($j) ) { T_VARIABLE($rows) [ T_VARIABLE($i) ] [ ] = ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($col_names) = T_STRING ( T_VARIABLE($rows) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($col_names) = T_VARIABLE($col_names) [ T_LNUMBER ] ; } T_IF ( ( T_ISSET ( T_VARIABLE($col_names) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($col_names) ) T_IS_NOT_EQUAL T_VARIABLE($max_cols) ) T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($col_names) ) ) { T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($max_cols) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($col_names) [ ] = . ( T_VARIABLE($i) + T_LNUMBER ) ; } } T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($tbl_name) = . ( T_STRING ( T_VARIABLE($result) ) + T_LNUMBER ) ; } T_ELSE { T_VARIABLE($tbl_name) = ; } T_VARIABLE($tables) [ ] = T_ARRAY ( T_VARIABLE($tbl_name) , T_VARIABLE($col_names) , T_VARIABLE($rows) ) ; T_VARIABLE($analyses) = T_ARRAY ( ) ; T_VARIABLE($analyses) [ ] = T_STRING ( T_VARIABLE($tables) [ T_LNUMBER ] ) ; T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($db_name) = T_VARIABLE($db) ; T_VARIABLE($options) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; } T_ELSE { T_VARIABLE($db_name) = ; T_VARIABLE($options) = T_STRING ; } T_VARIABLE($create) = T_STRING ; T_STRING ( T_VARIABLE($db_name) , T_VARIABLE($tables) , T_VARIABLE($analyses) , T_VARIABLE($create) , T_VARIABLE($options) ) ; T_UNSET ( T_VARIABLE($tables) ) ; T_UNSET ( T_VARIABLE($analyses) ) ; } T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($values) ) T_IS_NOT_EQUAL T_LNUMBER T_BOOLEAN_AND ! T_VARIABLE($error) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($line) ) ; T_VARIABLE($error) = T_STRING ; } } T_PRIVATE T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($analyze) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($analyze) ; } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_IDENTICAL ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_RETURN ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] T_IS_EQUAL ) { T_VARIABLE($GLOBALS) [ ] [ ] [ ] = T_STRING ; T_VARIABLE($result) = T_STRING ( ) ; T_IF ( T_VARIABLE($result) T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($result) ) > T_LNUMBER ) { T_VARIABLE($tmp) = T_STRING ( T_VARIABLE($result) ) ; T_IF ( T_VARIABLE($tmp) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($GLOBALS) [ ] [ ] [ ] = T_STRING ; } } T_STRING ( T_VARIABLE($result) ) ; T_UNSET ( T_VARIABLE($result) ) ; } T_VARIABLE($generalOptions) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($finished) , T_VARIABLE($error) , T_VARIABLE($import_file) , T_VARIABLE($compression) , T_VARIABLE($charset_conversion) , T_VARIABLE($table) ; T_GLOBAL T_VARIABLE($ldi_local_option) , T_VARIABLE($ldi_replace) , T_VARIABLE($ldi_terminated) , T_VARIABLE($ldi_enclosed) , T_VARIABLE($ldi_escaped) , T_VARIABLE($ldi_new_line) , T_VARIABLE($skip_queries) , T_VARIABLE($ldi_columns) ; T_IF ( T_VARIABLE($import_file) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($compression) T_IS_NOT_EQUAL T_BOOLEAN_OR T_VARIABLE($charset_conversion) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($error) = T_STRING ; T_RETURN ; } T_VARIABLE($sql) = ; T_IF ( T_ISSET ( T_VARIABLE($ldi_local_option) ) ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_VARIABLE($sql) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($import_file) ) . ; T_IF ( T_ISSET ( T_VARIABLE($ldi_replace) ) ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($ldi_ignore) ) ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_VARIABLE($sql) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_IF ( T_STRING ( T_VARIABLE($ldi_terminated) ) > T_LNUMBER ) { T_VARIABLE($sql) T_CONCAT_EQUAL . T_VARIABLE($ldi_terminated) . ; } T_IF ( T_STRING ( T_VARIABLE($ldi_enclosed) ) > T_LNUMBER ) { T_VARIABLE($sql) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ldi_enclosed) ) . ; } T_IF ( T_STRING ( T_VARIABLE($ldi_escaped) ) > T_LNUMBER ) { T_VARIABLE($sql) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ldi_escaped) ) . ; } T_IF ( T_STRING ( T_VARIABLE($ldi_new_line) ) > T_LNUMBER ) { T_IF ( T_VARIABLE($ldi_new_line) T_IS_EQUAL ) { T_VARIABLE($ldi_new_line) = ( T_STRING T_DOUBLE_COLON T_STRING ( ) T_IS_EQUAL ) ? : ; } T_VARIABLE($sql) T_CONCAT_EQUAL . T_VARIABLE($ldi_new_line) . ; } T_IF ( T_VARIABLE($skip_queries) > T_LNUMBER ) { T_VARIABLE($sql) T_CONCAT_EQUAL . T_VARIABLE($skip_queries) . ; T_VARIABLE($skip_queries) = T_LNUMBER ; } T_IF ( T_STRING ( T_VARIABLE($ldi_columns) ) > T_LNUMBER ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; T_VARIABLE($tmp) = T_STRING ( , T_VARIABLE($ldi_columns) ) ; T_VARIABLE($cnt_tmp) = T_STRING ( T_VARIABLE($tmp) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($cnt_tmp) ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($i) > T_LNUMBER ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_VARIABLE($sql) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($tmp) [ T_VARIABLE($i) ] , ) ) ; } T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_STRING ( T_VARIABLE($sql) , T_VARIABLE($sql) ) ; T_STRING ( ) ; T_VARIABLE($finished) = T_STRING ; } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_analyze) ; T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_IDENTICAL ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; } T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($importPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( ) ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($importPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($error) , T_VARIABLE($timeout_passed) , T_VARIABLE($finished) ; T_VARIABLE($buffer) = ; T_VARIABLE($last_chunk_line) = ; T_VARIABLE($inside_comment) = T_STRING ; T_VARIABLE($inside_data_comment) = T_STRING ; T_VARIABLE($inside_structure_comment) = T_STRING ; T_VARIABLE($mediawiki_new_line) = ; T_VARIABLE($cur_table_name) = ; T_WHILE ( ! T_VARIABLE($finished) T_BOOLEAN_AND ! T_VARIABLE($error) T_BOOLEAN_AND ! T_VARIABLE($timeout_passed) ) { T_VARIABLE($data) = T_STRING ( ) ; T_IF ( T_VARIABLE($data) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($offset) T_MINUS_EQUAL T_STRING ( T_VARIABLE($buffer) ) ; T_BREAK ; } T_ELSEIF ( T_VARIABLE($data) T_IS_IDENTICAL T_STRING ) { } T_ELSE { T_VARIABLE($buffer) = T_VARIABLE($data) ; T_UNSET ( T_VARIABLE($data) ) ; T_IF ( T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($mediawiki_new_line) ) T_IS_IDENTICAL T_STRING ) { T_CONTINUE ; } } T_VARIABLE($buffer) = T_VARIABLE($last_chunk_line) . T_VARIABLE($buffer) ; T_VARIABLE($buffer_lines) = T_STRING ( T_VARIABLE($mediawiki_new_line) , T_VARIABLE($buffer) ) ; T_VARIABLE($full_buffer_lines_count) = T_STRING ( T_VARIABLE($buffer_lines) ) ; T_IF ( ! T_VARIABLE($finished) ) { T_VARIABLE($full_buffer_lines_count) T_MINUS_EQUAL T_LNUMBER ; T_VARIABLE($last_chunk_line) = T_VARIABLE($buffer_lines) [ T_VARIABLE($full_buffer_lines_count) ] ; } T_FOR ( T_VARIABLE($line_nr) = T_LNUMBER ; T_VARIABLE($line_nr) < T_VARIABLE($full_buffer_lines_count) ; T_INC T_VARIABLE($line_nr) ) { T_VARIABLE($cur_buffer_line) = T_STRING ( T_VARIABLE($buffer_lines) [ T_VARIABLE($line_nr) ] ) ; T_IF ( T_VARIABLE($cur_buffer_line) T_IS_IDENTICAL ) { T_CONTINUE ; } T_VARIABLE($first_character) = T_VARIABLE($cur_buffer_line) [ T_LNUMBER ] ; T_VARIABLE($matches) = T_ARRAY ( ) ; T_IF ( ! T_STRING ( T_STRING ( T_VARIABLE($cur_buffer_line) , T_LNUMBER , T_LNUMBER ) , ) ) { T_VARIABLE($inside_comment) = T_STRING ; T_CONTINUE ; } T_ELSEIF ( T_VARIABLE($inside_comment) ) { T_IF ( ! T_STRING ( T_STRING ( T_VARIABLE($cur_buffer_line) , T_LNUMBER , T_LNUMBER ) , ) ) { T_IF ( T_VARIABLE($inside_data_comment) ) { T_VARIABLE($inside_data_comment) = T_STRING ; } T_IF ( ! T_VARIABLE($inside_structure_comment) ) { T_VARIABLE($inside_comment) = T_STRING ; } } T_ELSE { T_VARIABLE($match_table_name) = T_ARRAY ( ) ; T_IF ( T_STRING ( , T_VARIABLE($cur_buffer_line) , T_VARIABLE($match_table_name) ) ) { T_VARIABLE($cur_table_name) = T_VARIABLE($match_table_name) [ T_LNUMBER ] ; T_VARIABLE($inside_data_comment) = T_STRING ; T_IF ( T_VARIABLE($inside_structure_comment) ) { T_VARIABLE($inside_structure_comment) = T_STRING ; } } T_ELSEIF ( T_STRING ( , T_VARIABLE($cur_buffer_line) , T_VARIABLE($match_table_name) ) ) { T_VARIABLE($inside_structure_comment) = T_STRING ; } } T_CONTINUE ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($cur_buffer_line) , T_VARIABLE($matches) ) ) { T_VARIABLE($cur_temp_table) = T_ARRAY ( ) ; T_VARIABLE($cur_temp_line) = T_ARRAY ( ) ; T_VARIABLE($in_table_header) = T_STRING ; } T_ELSEIF ( T_STRING ( T_VARIABLE($cur_buffer_line) , T_LNUMBER , T_LNUMBER ) T_IS_IDENTICAL T_BOOLEAN_OR T_STRING ( T_VARIABLE($cur_buffer_line) , T_LNUMBER , T_LNUMBER ) T_IS_IDENTICAL T_BOOLEAN_OR T_STRING ( T_VARIABLE($cur_buffer_line) , T_LNUMBER , T_LNUMBER ) T_IS_IDENTICAL ) { T_IF ( ! T_EMPTY ( T_VARIABLE($cur_temp_line) ) ) { T_IF ( T_VARIABLE($in_table_header) ) { T_VARIABLE($cur_temp_table_headers) = T_VARIABLE($cur_temp_line) ; } T_ELSE { T_VARIABLE($cur_temp_table) [ ] = T_VARIABLE($cur_temp_line) ; } } T_VARIABLE($cur_temp_line) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($cur_buffer_line) , T_LNUMBER , T_LNUMBER ) T_IS_IDENTICAL ) { T_VARIABLE($current_table) = T_ARRAY ( T_VARIABLE($cur_table_name) , T_VARIABLE($cur_temp_table_headers) , T_VARIABLE($cur_temp_table) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($current_table) ) ; T_VARIABLE($cur_table_name) = ; } } T_ELSEIF ( ( T_VARIABLE($first_character) T_IS_IDENTICAL ) T_BOOLEAN_OR ( T_VARIABLE($first_character) T_IS_IDENTICAL ) ) { T_IF ( T_VARIABLE($first_character) T_IS_IDENTICAL ) { T_VARIABLE($cur_buffer_line) = T_STRING ( , , T_VARIABLE($cur_buffer_line) ) ; T_VARIABLE($in_table_header) = T_STRING ; } T_ELSE { T_VARIABLE($in_table_header) = T_STRING ; } T_VARIABLE($cells) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($cur_buffer_line) ) ; T_FOREACH ( T_VARIABLE($cells) T_AS T_VARIABLE($cell) ) { T_VARIABLE($cell_data) = T_STRING ( , T_VARIABLE($cell) , T_LNUMBER ) ; T_IF ( T_STRING ( T_VARIABLE($cell_data) [ T_LNUMBER ] , ) T_IS_IDENTICAL T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($cell_data) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($cell) = T_VARIABLE($cell_data) [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($cell) = T_VARIABLE($cell_data) [ T_LNUMBER ] ; } } T_VARIABLE($cell) = T_STRING ( T_VARIABLE($cell) ) ; T_VARIABLE($col_start_chars) = T_ARRAY ( , ) ; T_FOREACH ( T_VARIABLE($col_start_chars) T_AS T_VARIABLE($col_start_char) ) { T_IF ( T_STRING ( T_VARIABLE($cell) , T_VARIABLE($col_start_char) ) T_IS_IDENTICAL T_LNUMBER ) { T_VARIABLE($cell) = T_STRING ( T_STRING ( T_VARIABLE($cell) , T_LNUMBER ) ) ; } } T_VARIABLE($cur_temp_line) [ ] = T_VARIABLE($cell) ; } } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($cur_buffer_line) ) ; T_VARIABLE($error) = T_STRING ; } } } } T_PRIVATE T_STRING ( T_VARIABLE($table) ) { T_VARIABLE($analyze) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($analyze) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($table) [ T_LNUMBER ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($table) [ T_LNUMBER ] , T_VARIABLE($table) [ T_LNUMBER ] [ T_LNUMBER ] ) ; T_VARIABLE($tables) = T_ARRAY ( ) ; T_VARIABLE($tables) [ ] = T_ARRAY ( T_VARIABLE($table) [ T_LNUMBER ] , T_VARIABLE($table) [ T_LNUMBER ] , T_VARIABLE($table) [ T_LNUMBER ] ) ; T_VARIABLE($analyses) = T_ARRAY ( ) ; T_VARIABLE($analyses) [ ] = T_STRING ( T_VARIABLE($tables) [ T_LNUMBER ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($tables) , T_VARIABLE($analyses) ) ; } T_STRING ( ) ; } T_PRIVATE T_STRING ( & T_VARIABLE($table_name) ) { T_IF ( T_EMPTY ( T_VARIABLE($table_name) ) ) { T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($table_name) = . ( T_STRING ( T_VARIABLE($result) ) + T_LNUMBER ) ; } } T_PRIVATE T_STRING ( & T_VARIABLE($table_headers) , T_VARIABLE($table_row) ) { T_IF ( T_EMPTY ( T_VARIABLE($table_headers) ) ) { T_VARIABLE($num_cols) = T_STRING ( T_VARIABLE($table_row) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($num_cols) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($table_headers) [ T_VARIABLE($i) ] = . ( T_VARIABLE($i) + T_LNUMBER ) ; } } } T_PRIVATE T_STRING ( & T_VARIABLE($tables) , & T_VARIABLE($analyses) ) { T_GLOBAL T_VARIABLE($db) ; T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($db_name) = T_VARIABLE($db) ; T_VARIABLE($options) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; } T_ELSE { T_VARIABLE($db_name) = ; T_VARIABLE($options) = T_STRING ; } T_VARIABLE($create) = T_STRING ; T_STRING ( T_VARIABLE($db_name) , T_VARIABLE($tables) , T_VARIABLE($analyses) , T_VARIABLE($create) , T_VARIABLE($options) ) ; T_UNSET ( T_VARIABLE($tables) ) ; T_UNSET ( T_VARIABLE($analyses) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($start_delim) , T_VARIABLE($end_delim) , T_VARIABLE($replace) , T_VARIABLE($subject) ) { T_VARIABLE($cleaned) = ; T_VARIABLE($inside_tag) = T_STRING ; T_VARIABLE($inside_attribute) = T_STRING ; T_VARIABLE($start_attribute_character) = T_STRING ; T_VARIABLE($partial_separator) = T_STRING ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($subject) ) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($cur_char) = T_VARIABLE($subject) [ T_VARIABLE($i) ] ; T_IF ( T_VARIABLE($cur_char) T_IS_EQUAL ) { T_IF ( ! T_VARIABLE($inside_attribute) ) { T_VARIABLE($cleaned) T_CONCAT_EQUAL T_VARIABLE($cur_char) ; T_IF ( T_VARIABLE($partial_separator) ) { T_VARIABLE($inside_tag) = T_STRING ; T_VARIABLE($inside_attribute) = T_STRING ; } } T_ELSEIF ( T_VARIABLE($partial_separator) ) { T_VARIABLE($cleaned) T_CONCAT_EQUAL T_VARIABLE($replace) ; } T_VARIABLE($partial_separator) = ! T_VARIABLE($partial_separator) ; } T_ELSE { T_IF ( T_VARIABLE($partial_separator) T_BOOLEAN_AND T_VARIABLE($inside_attribute) ) { T_VARIABLE($cleaned) T_CONCAT_EQUAL ; } T_VARIABLE($partial_separator) = T_STRING ; T_VARIABLE($cleaned) T_CONCAT_EQUAL T_VARIABLE($cur_char) ; T_IF ( T_VARIABLE($cur_char) T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($inside_attribute) ) { T_VARIABLE($inside_tag) = T_STRING ; } T_ELSEIF ( T_VARIABLE($cur_char) T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($inside_attribute) ) { T_VARIABLE($inside_tag) = T_STRING ; } T_ELSEIF ( ( T_VARIABLE($cur_char) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($cur_char) T_IS_EQUAL ) T_BOOLEAN_AND T_VARIABLE($inside_tag) ) { T_IF ( ! T_VARIABLE($inside_attribute) ) { T_VARIABLE($inside_attribute) = T_STRING ; T_VARIABLE($start_attribute_character) = T_VARIABLE($cur_char) ; } T_ELSE { T_IF ( T_VARIABLE($cur_char) T_IS_EQUAL T_VARIABLE($start_attribute_character) ) { T_VARIABLE($inside_attribute) = T_STRING ; T_VARIABLE($start_attribute_character) = T_STRING ; } } } } } T_RETURN T_VARIABLE($cleaned) ; } T_PRIVATE T_STRING ( T_VARIABLE($text) ) { T_VARIABLE($separator) = ; T_VARIABLE($placeholder) = ; T_VARIABLE($text) = T_STRING ( T_VARIABLE($placeholder) , , T_VARIABLE($text) ) ; T_VARIABLE($cleaned) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , , T_VARIABLE($placeholder) , T_VARIABLE($text) ) ; T_VARIABLE($items) = T_STRING ( T_VARIABLE($separator) , T_VARIABLE($cleaned) ) ; T_FOREACH ( T_VARIABLE($items) T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($str) ) { T_VARIABLE($items) [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($placeholder) , T_VARIABLE($separator) , T_VARIABLE($str) ) ; } T_RETURN T_VARIABLE($items) ; } T_PRIVATE T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($analyze) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($analyze) ; } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_IF ( ! T_STRING ( ) ) { T_RETURN ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($importPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($importSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($importSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( . . ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($importSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($generalOptions) ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($importSpecificOptions) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($importPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($error) , T_VARIABLE($timeout_passed) , T_VARIABLE($finished) ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($len) = T_LNUMBER ; T_VARIABLE($buffer) = ; T_WHILE ( ! ( T_VARIABLE($finished) T_BOOLEAN_AND T_VARIABLE($i) T_IS_GREATER_OR_EQUAL T_VARIABLE($len) ) T_BOOLEAN_AND ! T_VARIABLE($error) T_BOOLEAN_AND ! T_VARIABLE($timeout_passed) ) { T_VARIABLE($data) = T_STRING ( ) ; T_IF ( T_VARIABLE($data) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($offset) T_MINUS_EQUAL T_STRING ( T_VARIABLE($buffer) ) ; T_BREAK ; } T_ELSEIF ( T_VARIABLE($data) T_IS_IDENTICAL T_STRING ) { } T_ELSE { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($data) ; T_UNSET ( T_VARIABLE($data) ) ; } } T_UNSET ( T_VARIABLE($data) ) ; T_STRING ( ) ; T_VARIABLE($xml) = T_STRING ( T_VARIABLE($buffer) , , T_STRING ) ; T_UNSET ( T_VARIABLE($buffer) ) ; T_IF ( T_VARIABLE($xml) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($sheets) = T_ARRAY ( ) ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . ) ) ; T_VARIABLE($error) = T_STRING ; } T_ELSE { T_VARIABLE($sheets) = T_VARIABLE($xml) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) T_OBJECT_OPERATOR { } T_OBJECT_OPERATOR { } T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; } T_VARIABLE($tables) = T_ARRAY ( ) ; T_VARIABLE($max_cols) = T_LNUMBER ; T_VARIABLE($row_count) = T_LNUMBER ; T_VARIABLE($col_count) = T_LNUMBER ; T_VARIABLE($col_names) = T_ARRAY ( ) ; T_VARIABLE($tempRow) = T_ARRAY ( ) ; T_VARIABLE($tempRows) = T_ARRAY ( ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($sheets) T_AS T_VARIABLE($sheet) ) { T_VARIABLE($col_names_in_first_row) = T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ; T_FOREACH ( T_VARIABLE($sheet) T_AS T_VARIABLE($row) ) { T_VARIABLE($type) = T_VARIABLE($row) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_STRING ( , T_VARIABLE($type) ) ) { T_FOREACH ( T_VARIABLE($row) T_AS T_VARIABLE($cell) ) { T_VARIABLE($text) = T_VARIABLE($cell) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_VARIABLE($cell_attrs) = T_VARIABLE($cell) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_IF ( T_STRING ( T_VARIABLE($text) ) T_IS_NOT_EQUAL T_LNUMBER ) { T_VARIABLE($attr) = T_VARIABLE($cell) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_VARIABLE($num_repeat) = T_INT_CAST T_VARIABLE($attr) [ ] ; T_VARIABLE($num_iterations) = T_VARIABLE($num_repeat) ? T_VARIABLE($num_repeat) : T_LNUMBER ; T_FOR ( T_VARIABLE($k) = T_LNUMBER ; T_VARIABLE($k) < T_VARIABLE($num_iterations) ; T_VARIABLE($k) T_INC ) { T_IF ( T_VARIABLE($_REQUEST) [ ] T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($cell_attrs) [ ] ) ) { T_VARIABLE($value) = T_DOUBLE_CAST T_VARIABLE($cell_attrs) [ ] ; } T_ELSEIF ( T_VARIABLE($_REQUEST) [ ] T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($cell_attrs) [ ] ) ) { T_VARIABLE($value) = T_DOUBLE_CAST T_VARIABLE($cell_attrs) [ ] ; } T_ELSE { T_VARIABLE($values) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($text) T_AS T_VARIABLE($paragraph) ) { T_VARIABLE($values) [ ] = T_STRING_CAST T_VARIABLE($paragraph) ; } T_VARIABLE($value) = T_STRING ( , T_VARIABLE($values) ) ; } T_IF ( ! T_VARIABLE($col_names_in_first_row) ) { T_VARIABLE($tempRow) [ ] = T_VARIABLE($value) ; } T_ELSE { T_VARIABLE($col_names) [ ] = T_VARIABLE($value) ; } T_INC T_VARIABLE($col_count) ; } } T_ELSE { T_IF ( T_VARIABLE($col_count) < T_STRING ( T_VARIABLE($row) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ) - T_LNUMBER ) { T_VARIABLE($attr) = T_VARIABLE($cell) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_VARIABLE($num_null) = T_INT_CAST T_VARIABLE($attr) [ ] ; T_IF ( T_VARIABLE($num_null) ) { T_IF ( ! T_VARIABLE($col_names_in_first_row) ) { T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($num_null) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($tempRow) [ ] = ; T_INC T_VARIABLE($col_count) ; } } T_ELSE { T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($num_null) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($col_names) [ ] = T_STRING ( T_VARIABLE($col_count) + T_LNUMBER ) ; T_INC T_VARIABLE($col_count) ; } } } T_ELSE { T_IF ( ! T_VARIABLE($col_names_in_first_row) ) { T_VARIABLE($tempRow) [ ] = ; } T_ELSE { T_VARIABLE($col_names) [ ] = T_STRING ( T_VARIABLE($col_count) + T_LNUMBER ) ; } T_INC T_VARIABLE($col_count) ; } } } } T_IF ( T_VARIABLE($col_count) > T_VARIABLE($max_cols) ) { T_VARIABLE($max_cols) = T_VARIABLE($col_count) ; } T_IF ( ! T_VARIABLE($col_names_in_first_row) ) { T_IF ( T_VARIABLE($_REQUEST) [ ] ) { T_FOREACH ( T_VARIABLE($tempRow) T_AS T_VARIABLE($cell) ) { T_IF ( T_STRING ( , T_VARIABLE($cell) ) ) { T_VARIABLE($tempRows) [ ] = T_VARIABLE($tempRow) ; T_BREAK ; } } } T_ELSE { T_VARIABLE($tempRows) [ ] = T_VARIABLE($tempRow) ; } } T_VARIABLE($col_count) = T_LNUMBER ; T_VARIABLE($col_names_in_first_row) = T_STRING ; T_VARIABLE($tempRow) = T_ARRAY ( ) ; } } T_IF ( T_STRING ( T_VARIABLE($tempRows) ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR T_STRING ( T_VARIABLE($tempRows) [ T_LNUMBER ] ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($col_names) = T_ARRAY ( ) ; T_VARIABLE($tempRow) = T_ARRAY ( ) ; T_VARIABLE($tempRows) = T_ARRAY ( ) ; T_CONTINUE ; } T_FOR ( T_VARIABLE($i) = T_STRING ( T_VARIABLE($col_names) ) ; T_VARIABLE($i) < T_VARIABLE($max_cols) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($col_names) [ ] = T_STRING ( T_VARIABLE($i) + T_LNUMBER ) ; } T_VARIABLE($num_rows) = T_STRING ( T_VARIABLE($tempRows) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($num_rows) ; T_INC T_VARIABLE($i) ) { T_FOR ( T_VARIABLE($j) = T_STRING ( T_VARIABLE($tempRows) [ T_VARIABLE($i) ] ) ; T_VARIABLE($j) < T_VARIABLE($max_cols) ; T_INC T_VARIABLE($j) ) { T_VARIABLE($tempRows) [ T_VARIABLE($i) ] [ ] = ; } } T_VARIABLE($tbl_attr) = T_VARIABLE($sheet) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_VARIABLE($tables) [ ] = T_ARRAY ( T_STRING_CAST T_VARIABLE($tbl_attr) [ ] ) ; T_VARIABLE($rows) [ ] = T_ARRAY ( T_STRING_CAST T_VARIABLE($tbl_attr) [ ] , T_VARIABLE($col_names) , T_VARIABLE($tempRows) ) ; T_VARIABLE($tempRows) = T_ARRAY ( ) ; T_VARIABLE($col_names) = T_ARRAY ( ) ; T_VARIABLE($max_cols) = T_LNUMBER ; } T_UNSET ( T_VARIABLE($tempRow) ) ; T_UNSET ( T_VARIABLE($tempRows) ) ; T_UNSET ( T_VARIABLE($col_names) ) ; T_UNSET ( T_VARIABLE($sheets) ) ; T_UNSET ( T_VARIABLE($xml) ) ; T_VARIABLE($num_tbls) = T_STRING ( T_VARIABLE($tables) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($num_tbls) ; T_INC T_VARIABLE($i) ) { T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_STRING ( T_VARIABLE($rows) ) ; T_INC T_VARIABLE($j) ) { T_IF ( ! T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] , T_VARIABLE($rows) [ T_VARIABLE($j) ] [ T_STRING ] ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) ) { T_VARIABLE($tables) [ T_VARIABLE($i) ] [ ] = T_VARIABLE($rows) [ T_VARIABLE($j) ] [ T_STRING ] ; } T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] = T_VARIABLE($rows) [ T_VARIABLE($j) ] [ T_STRING ] ; } } } T_UNSET ( T_VARIABLE($rows) ) ; T_VARIABLE($analyses) = T_ARRAY ( ) ; T_VARIABLE($len) = T_STRING ( T_VARIABLE($tables) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($len) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($analyses) [ ] = T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] ) ; } T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($db_name) = T_VARIABLE($db) ; T_VARIABLE($options) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; } T_ELSE { T_VARIABLE($db_name) = ; T_VARIABLE($options) = T_STRING ; } T_VARIABLE($create) = T_STRING ; T_STRING ( T_VARIABLE($db_name) , T_VARIABLE($tables) , T_VARIABLE($analyses) , T_VARIABLE($create) , T_VARIABLE($options) ) ; T_UNSET ( T_VARIABLE($tables) ) ; T_UNSET ( T_VARIABLE($analyses) ) ; T_STRING ( ) ; } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_IF ( T_STRING ) { T_RETURN ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($importPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( ) ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($importPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($error) , T_VARIABLE($finished) ; T_IF ( T_INT_CAST T_STRING ( ) < T_LNUMBER ) { @ T_STRING ( , ) ; } @ T_STRING ( T_LNUMBER ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_VARIABLE($buffer) = ; T_VARIABLE($eof) = T_STRING ; T_VARIABLE($shp) = T_NEW T_STRING ( T_LNUMBER ) ; T_IF ( T_VARIABLE($compression) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($import_file) ) > T_LNUMBER ) { T_VARIABLE($zip_content) = T_STRING ( T_VARIABLE($import_file) , ) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($zip_content) [ ] ; } T_VARIABLE($temp_dbf_file) = T_STRING ; T_IF ( T_STRING ( ) ) { T_IF ( T_VARIABLE($compression) T_IS_EQUAL T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($cfg) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($cfg) [ ] ) ) { T_VARIABLE($dbf_file_name) = T_STRING ( , T_VARIABLE($import_file) ) ; T_IF ( T_VARIABLE($dbf_file_name) ) { T_VARIABLE($extracted) = T_STRING ( T_VARIABLE($import_file) , T_STRING ( T_VARIABLE($cfg) [ ] ) , T_ARRAY ( T_VARIABLE($dbf_file_name) ) ) ; T_IF ( T_VARIABLE($extracted) ) { T_VARIABLE($dbf_file_path) = T_STRING ( T_VARIABLE($cfg) [ ] ) . ( T_STRING ? : ) . T_VARIABLE($dbf_file_name) ; T_VARIABLE($temp_dbf_file) = T_STRING ; T_VARIABLE($file_name) = T_STRING ( T_VARIABLE($dbf_file_path) , T_LNUMBER , T_STRING ( T_VARIABLE($dbf_file_path) ) - T_LNUMBER ) . ; T_VARIABLE($shp) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($file_name) ; } } } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($local_import_file) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($cfg) [ ] ) T_BOOLEAN_AND T_VARIABLE($compression) T_IS_EQUAL ) { T_VARIABLE($file_name) = T_STRING ( T_VARIABLE($import_file) , T_LNUMBER , T_STRING ( T_VARIABLE($import_file) ) - T_LNUMBER ) . ; T_VARIABLE($shp) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($file_name) ; } } T_VARIABLE($shp) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($shp) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL ) { T_VARIABLE($error) = T_STRING ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($shp) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN ; } T_IF ( T_VARIABLE($temp_dbf_file) ) { T_STRING ( T_VARIABLE($dbf_file_path) ) ; } T_VARIABLE($esri_types) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , ) ; T_SWITCH ( T_VARIABLE($shp) T_OBJECT_OPERATOR T_STRING ) { T_CASE T_LNUMBER : T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($gis_type) = ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($gis_type) = ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($gis_type) = ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($gis_type) = ; T_BREAK ; T_DEFAULT : T_VARIABLE($error) = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($esri_types) [ T_VARIABLE($shp) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . ) ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($param) ) ; } T_RETURN ; } T_IF ( T_ISSET ( T_VARIABLE($gis_type) ) ) { T_INCLUDE_ONCE ; T_VARIABLE($gis_obj) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($gis_type) ) ; } T_ELSE { T_VARIABLE($gis_obj) = T_STRING ; } T_VARIABLE($num_rows) = T_STRING ( T_VARIABLE($shp) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($num_data_cols) = T_ISSET ( T_VARIABLE($shp) T_OBJECT_OPERATOR T_STRING ) ? T_STRING ( T_VARIABLE($shp) T_OBJECT_OPERATOR T_STRING ) : T_LNUMBER ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_VARIABLE($col_names) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($num_rows) T_IS_NOT_EQUAL T_LNUMBER ) { T_FOREACH ( T_VARIABLE($shp) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($record) ) { T_VARIABLE($tempRow) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($gis_obj) T_IS_EQUAL T_STRING ) { T_VARIABLE($tempRow) [ ] = T_STRING ; } T_ELSE { T_VARIABLE($tempRow) [ ] = . T_VARIABLE($gis_obj) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($record) T_OBJECT_OPERATOR T_STRING ) . ; } T_IF ( T_ISSET ( T_VARIABLE($shp) T_OBJECT_OPERATOR T_STRING ) ) { T_FOREACH ( T_VARIABLE($shp) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($c) ) { T_VARIABLE($cell) = T_STRING ( T_VARIABLE($record) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($c) [ T_LNUMBER ] ] ) ; T_IF ( ! T_STRING ( T_VARIABLE($cell) , ) ) { T_VARIABLE($cell) = ; } T_VARIABLE($tempRow) [ ] = T_VARIABLE($cell) ; } } T_VARIABLE($rows) [ ] = T_VARIABLE($tempRow) ; } } T_IF ( T_STRING ( T_VARIABLE($rows) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($error) = T_STRING ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_RETURN ; } T_VARIABLE($col_names) [ ] = ; T_FOR ( T_VARIABLE($n) = T_LNUMBER ; T_VARIABLE($n) < T_VARIABLE($num_data_cols) ; T_VARIABLE($n) T_INC ) { T_VARIABLE($col_names) [ ] = T_VARIABLE($shp) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($n) ] [ T_LNUMBER ] ; } T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($table_name) = . ( T_STRING ( T_VARIABLE($result) ) + T_LNUMBER ) ; } T_ELSE { T_VARIABLE($table_name) = ; } T_VARIABLE($tables) = T_ARRAY ( T_ARRAY ( T_VARIABLE($table_name) , T_VARIABLE($col_names) , T_VARIABLE($rows) ) ) ; T_VARIABLE($analyses) = T_ARRAY ( ) ; T_VARIABLE($analyses) [ ] = T_STRING ( T_VARIABLE($tables) [ T_LNUMBER ] ) ; T_VARIABLE($table_no) = T_LNUMBER ; T_VARIABLE($spatial_col) = T_LNUMBER ; T_VARIABLE($analyses) [ T_VARIABLE($table_no) ] [ T_STRING ] [ T_VARIABLE($spatial_col) ] = T_STRING ; T_VARIABLE($analyses) [ T_VARIABLE($table_no) ] [ T_STRING ] [ T_VARIABLE($spatial_col) ] = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($db_name) = T_VARIABLE($db) ; T_VARIABLE($options) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; } T_ELSE { T_VARIABLE($db_name) = ; T_VARIABLE($options) = T_STRING ; } T_VARIABLE($null_param) = T_STRING ; T_STRING ( T_VARIABLE($db_name) , T_VARIABLE($tables) , T_VARIABLE($analyses) , T_VARIABLE($null_param) , T_VARIABLE($options) ) ; T_UNSET ( T_VARIABLE($tables) ) ; T_UNSET ( T_VARIABLE($analyses) ) ; T_VARIABLE($finished) = T_STRING ; T_VARIABLE($error) = T_STRING ; T_STRING ( ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($length) ) { T_GLOBAL T_VARIABLE($buffer) , T_VARIABLE($eof) ; T_IF ( T_STRING ( T_VARIABLE($buffer) ) < T_VARIABLE($length) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($eof) = T_STRING ; } T_ELSE { T_VARIABLE($buffer) T_CONCAT_EQUAL T_STRING ( ) ; } } T_VARIABLE($result) = T_STRING ( T_VARIABLE($buffer) , T_LNUMBER , T_VARIABLE($length) ) ; T_VARIABLE($buffer) = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($length) ) ; T_RETURN T_VARIABLE($result) ; } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($importPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($compats) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($compats) ) > T_LNUMBER ) { T_VARIABLE($values) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($compats) T_AS T_VARIABLE($val) ) { T_VARIABLE($values) [ T_VARIABLE($val) ] = T_VARIABLE($val) ; } T_VARIABLE($importSpecificOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($importSpecificOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($generalOptions) = T_NEW T_STRING ( ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($values) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( , , ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($leaf) = T_NEW T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($leaf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( , , ) ) ; T_VARIABLE($generalOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($leaf) ) ; T_VARIABLE($importSpecificOptions) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($generalOptions) ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($importSpecificOptions) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($importPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( & T_VARIABLE($sql_data) = T_ARRAY ( ) ) { T_GLOBAL T_VARIABLE($error) , T_VARIABLE($timeout_passed) ; T_VARIABLE($buffer) = ; T_VARIABLE($sql) = ; T_VARIABLE($start_pos) = T_LNUMBER ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($len) = T_LNUMBER ; T_VARIABLE($big_value) = T_LNUMBER ; T_VARIABLE($delimiter_keyword) = ; T_VARIABLE($length_of_delimiter_keyword) = T_STRING ( T_VARIABLE($delimiter_keyword) ) ; T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($sql_delimiter) = T_VARIABLE($_POST) [ ] ; } T_ELSE { T_VARIABLE($sql_delimiter) = ; } T_VARIABLE($sql_modes) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_IS_NOT_EQUAL T_VARIABLE($_REQUEST) [ ] ) { T_VARIABLE($sql_modes) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sql_modes) [ ] = ; } T_IF ( T_STRING ( T_VARIABLE($sql_modes) ) > T_LNUMBER ) { T_STRING ( . T_STRING ( , T_VARIABLE($sql_modes) ) . ) ; } T_UNSET ( T_VARIABLE($sql_modes) ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_WHILE ( ! ( T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND T_VARIABLE($i) T_IS_GREATER_OR_EQUAL T_VARIABLE($len) ) T_BOOLEAN_AND ! T_VARIABLE($error) T_BOOLEAN_AND ! T_VARIABLE($timeout_passed) ) { T_VARIABLE($data) = T_STRING ( ) ; T_IF ( T_VARIABLE($data) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($offset) T_MINUS_EQUAL T_STRING ( T_VARIABLE($buffer) ) ; T_BREAK ; } T_ELSEIF ( T_VARIABLE($data) T_IS_IDENTICAL T_STRING ) { } T_ELSE { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($data) ; T_UNSET ( T_VARIABLE($data) ) ; T_IF ( ( T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($sql_delimiter) , T_VARIABLE($i) ) T_IS_IDENTICAL T_STRING ) T_BOOLEAN_AND ! T_VARIABLE($GLOBALS) [ ] ) { T_CONTINUE ; } } T_VARIABLE($len) = T_STRING ( T_VARIABLE($buffer) ) ; T_WHILE ( T_VARIABLE($i) < T_VARIABLE($len) ) { T_VARIABLE($found_delimiter) = T_STRING ; T_VARIABLE($old_i) = T_VARIABLE($i) ; T_VARIABLE($match) = T_STRING ( . T_VARIABLE($delimiter_keyword) . , T_VARIABLE($buffer) , T_VARIABLE($matches) , T_STRING , T_VARIABLE($i) ) ; T_IF ( T_VARIABLE($match) ) { T_VARIABLE($first_position) = T_VARIABLE($matches) [ T_LNUMBER ] [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($first_position) = T_VARIABLE($big_value) ; } T_VARIABLE($first_sql_delimiter) = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($sql_delimiter) , T_VARIABLE($i) ) ; T_IF ( T_VARIABLE($first_sql_delimiter) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($first_sql_delimiter) = T_VARIABLE($big_value) ; } T_ELSE { T_VARIABLE($found_delimiter) = T_STRING ; } T_VARIABLE($i) = T_STRING ( T_VARIABLE($first_position) , T_VARIABLE($first_sql_delimiter) ) ; T_IF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($big_value) ) { T_VARIABLE($i) = T_VARIABLE($old_i) ; T_IF ( ! T_VARIABLE($GLOBALS) [ ] ) { T_BREAK ; } T_IF ( T_STRING ( T_VARIABLE($buffer) ) T_IS_EQUAL ) { T_VARIABLE($buffer) = ; T_VARIABLE($len) = T_LNUMBER ; T_BREAK ; } T_VARIABLE($i) = T_STRING ( T_VARIABLE($buffer) ) - T_LNUMBER ; } T_VARIABLE($ch) = T_VARIABLE($buffer) [ T_VARIABLE($i) ] ; T_IF ( T_STRING ( , T_VARIABLE($ch) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($quote) = T_VARIABLE($ch) ; T_VARIABLE($endq) = T_STRING ; T_WHILE ( ! T_VARIABLE($endq) ) { T_VARIABLE($pos) = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($quote) , T_VARIABLE($i) + T_LNUMBER ) ; T_IF ( T_VARIABLE($pos) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_VARIABLE($quote) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($found_delimiter) ) { T_VARIABLE($pos) = T_VARIABLE($first_sql_delimiter) - T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($pos) T_IS_IDENTICAL T_STRING ) { T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($endq) = T_STRING ; T_VARIABLE($i) = T_VARIABLE($len) - T_LNUMBER ; } T_VARIABLE($found_delimiter) = T_STRING ; T_BREAK ; } T_VARIABLE($j) = T_VARIABLE($pos) - T_LNUMBER ; T_WHILE ( T_VARIABLE($buffer) [ T_VARIABLE($j) ] T_IS_EQUAL ) { T_VARIABLE($j) T_DEC ; } T_VARIABLE($endq) = ( ( ( ( T_VARIABLE($pos) - T_LNUMBER ) - T_VARIABLE($j) ) \% T_LNUMBER ) T_IS_EQUAL T_LNUMBER ) ; T_VARIABLE($i) = T_VARIABLE($pos) ; T_IF ( T_VARIABLE($first_sql_delimiter) < T_VARIABLE($pos) ) { T_VARIABLE($found_delimiter) = T_STRING ; } } T_IF ( ! T_VARIABLE($endq) ) { T_BREAK ; } T_VARIABLE($i) T_INC ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($len) ) { T_VARIABLE($i) T_DEC ; } T_ELSE { T_CONTINUE ; } } T_IF ( ( ( T_VARIABLE($i) T_IS_EQUAL ( T_VARIABLE($len) - T_LNUMBER ) T_BOOLEAN_AND ( T_VARIABLE($ch) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($ch) T_IS_EQUAL ) ) T_BOOLEAN_OR ( T_VARIABLE($i) T_IS_EQUAL ( T_VARIABLE($len) - T_LNUMBER ) T_BOOLEAN_AND ( ( T_VARIABLE($ch) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($buffer) [ T_VARIABLE($i) + T_LNUMBER ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($ch) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($buffer) [ T_VARIABLE($i) + T_LNUMBER ] T_IS_EQUAL ) ) ) ) T_BOOLEAN_AND ! T_VARIABLE($GLOBALS) [ ] ) { T_BREAK ; } T_IF ( T_VARIABLE($ch) T_IS_EQUAL T_BOOLEAN_OR ( T_VARIABLE($i) < ( T_VARIABLE($len) - T_LNUMBER ) T_BOOLEAN_AND T_VARIABLE($ch) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($buffer) [ T_VARIABLE($i) + T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND ( ( T_VARIABLE($i) < ( T_VARIABLE($len) - T_LNUMBER ) T_BOOLEAN_AND T_VARIABLE($buffer) [ T_VARIABLE($i) + T_LNUMBER ] T_IS_SMALLER_OR_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($i) T_IS_EQUAL ( T_VARIABLE($len) - T_LNUMBER ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) ) ) T_BOOLEAN_OR ( T_VARIABLE($i) < ( T_VARIABLE($len) - T_LNUMBER ) T_BOOLEAN_AND T_VARIABLE($ch) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($buffer) [ T_VARIABLE($i) + T_LNUMBER ] T_IS_EQUAL ) ) { T_IF ( T_VARIABLE($start_pos) T_IS_NOT_EQUAL T_VARIABLE($i) ) { T_VARIABLE($sql) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($start_pos) , T_VARIABLE($i) - T_VARIABLE($start_pos) ) ; } T_VARIABLE($start_of_comment) = T_VARIABLE($i) ; T_VARIABLE($i) = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($ch) T_IS_EQUAL ? : , T_VARIABLE($i) ) ; T_IF ( T_VARIABLE($i) T_IS_IDENTICAL T_STRING ) { T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($i) = T_VARIABLE($len) - T_LNUMBER ; } T_ELSE { T_BREAK ; } } T_IF ( T_VARIABLE($ch) T_IS_EQUAL ) { T_VARIABLE($i) T_INC ; } T_VARIABLE($i) T_INC ; T_VARIABLE($sql) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($start_of_comment) , T_VARIABLE($i) - T_VARIABLE($start_of_comment) ) ; T_VARIABLE($start_pos) = T_VARIABLE($i) ; T_IF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($len) ) { T_VARIABLE($i) T_DEC ; } T_ELSE { T_CONTINUE ; } } T_IF ( ( T_VARIABLE($i) + T_VARIABLE($length_of_delimiter_keyword) < T_VARIABLE($len) ) T_BOOLEAN_AND T_STRING ( T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($i) , T_VARIABLE($length_of_delimiter_keyword) ) ) T_IS_EQUAL T_VARIABLE($delimiter_keyword) ) { T_VARIABLE($new_line_pos) = T_STRING ( T_VARIABLE($buffer) , , T_VARIABLE($i) + T_VARIABLE($length_of_delimiter_keyword) ) ; T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($new_line_pos) ) { T_VARIABLE($new_line_pos) = T_VARIABLE($len) ; } T_VARIABLE($sql_delimiter) = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($i) + T_VARIABLE($length_of_delimiter_keyword) , T_VARIABLE($new_line_pos) - T_VARIABLE($i) - T_VARIABLE($length_of_delimiter_keyword) ) ; T_VARIABLE($i) = T_VARIABLE($new_line_pos) + T_LNUMBER ; T_VARIABLE($start_pos) = T_VARIABLE($i) ; T_CONTINUE ; } T_IF ( T_VARIABLE($found_delimiter) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($len) - T_LNUMBER ) ) ) { T_VARIABLE($tmp_sql) = T_VARIABLE($sql) ; T_IF ( T_VARIABLE($start_pos) < T_VARIABLE($len) ) { T_VARIABLE($length_to_grab) = T_VARIABLE($i) - T_VARIABLE($start_pos) ; T_IF ( ! T_VARIABLE($found_delimiter) ) { T_VARIABLE($length_to_grab) T_INC ; } T_VARIABLE($tmp_sql) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($start_pos) , T_VARIABLE($length_to_grab) ) ; T_UNSET ( T_VARIABLE($length_to_grab) ) ; } T_IF ( ! T_STRING ( , T_STRING ( T_VARIABLE($tmp_sql) ) ) ) { T_VARIABLE($sql) = T_VARIABLE($tmp_sql) ; T_STRING ( T_VARIABLE($sql) , T_STRING ( T_VARIABLE($buffer) , T_LNUMBER , T_VARIABLE($i) + T_STRING ( T_VARIABLE($sql_delimiter) ) ) , T_STRING , T_VARIABLE($sql_data) ) ; T_VARIABLE($buffer) = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($i) + T_STRING ( T_VARIABLE($sql_delimiter) ) ) ; T_VARIABLE($len) = T_STRING ( T_VARIABLE($buffer) ) ; T_VARIABLE($sql) = ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($start_pos) = T_LNUMBER ; T_IF ( T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($sql_delimiter) ) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND ! T_VARIABLE($GLOBALS) [ ] ) { T_BREAK ; } } T_ELSE { T_VARIABLE($i) T_INC ; T_VARIABLE($start_pos) = T_VARIABLE($i) ; } } } } T_STRING ( , T_STRING ( T_VARIABLE($buffer) , T_LNUMBER , T_VARIABLE($len) ) , T_STRING , T_VARIABLE($sql_data) ) ; T_STRING ( , , T_STRING , T_VARIABLE($sql_data) ) ; } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_IF ( ! T_STRING ( ) ) { T_RETURN ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($props) = ; T_INCLUDE_ONCE T_VARIABLE($props) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($importPluginProperties) = T_NEW T_STRING ( ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( ) ) ; T_VARIABLE($importPluginProperties) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($importPluginProperties) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($error) , T_VARIABLE($timeout_passed) , T_VARIABLE($finished) , T_VARIABLE($db) ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($len) = T_LNUMBER ; T_VARIABLE($buffer) = ; T_WHILE ( ! ( T_VARIABLE($finished) T_BOOLEAN_AND T_VARIABLE($i) T_IS_GREATER_OR_EQUAL T_VARIABLE($len) ) T_BOOLEAN_AND ! T_VARIABLE($error) T_BOOLEAN_AND ! T_VARIABLE($timeout_passed) ) { T_VARIABLE($data) = T_STRING ( ) ; T_IF ( T_VARIABLE($data) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($offset) T_MINUS_EQUAL T_STRING ( T_VARIABLE($buffer) ) ; T_BREAK ; } T_ELSEIF ( T_VARIABLE($data) T_IS_IDENTICAL T_STRING ) { } T_ELSE { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($data) ; T_UNSET ( T_VARIABLE($data) ) ; } } T_UNSET ( T_VARIABLE($data) ) ; T_STRING ( ) ; T_VARIABLE($xml) = T_STRING ( T_VARIABLE($buffer) , , T_STRING ) ; T_UNSET ( T_VARIABLE($buffer) ) ; T_IF ( T_VARIABLE($xml) T_IS_IDENTICAL T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_UNSET ( T_VARIABLE($xml) ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_RETURN ; } T_VARIABLE($tables) = T_ARRAY ( ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_VARIABLE($tempRow) = T_ARRAY ( ) ; T_VARIABLE($tempCells) = T_ARRAY ( ) ; T_VARIABLE($struct_present) = T_STRING ; T_VARIABLE($namespaces) = T_VARIABLE($xml) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($db_attr) = T_VARIABLE($xml) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($namespaces) [ ] ) T_OBJECT_OPERATOR { } T_OBJECT_OPERATOR { } ; T_IF ( T_VARIABLE($db_attr) T_INSTANCEOF T_STRING ) { T_VARIABLE($db_attr) = T_VARIABLE($db_attr) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($db_name) = T_STRING_CAST T_VARIABLE($db_attr) [ ] ; T_VARIABLE($collation) = T_STRING_CAST T_VARIABLE($db_attr) [ ] ; T_VARIABLE($charset) = T_STRING_CAST T_VARIABLE($db_attr) [ ] ; } T_ELSE { T_VARIABLE($db_attr) = T_VARIABLE($xml) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($db_name) = T_STRING_CAST T_VARIABLE($db_attr) [ ] ; T_VARIABLE($collation) = T_STRING ; T_VARIABLE($charset) = T_STRING ; } T_IF ( T_VARIABLE($db_name) T_IS_IDENTICAL T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_UNSET ( T_VARIABLE($xml) ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_RETURN ; } T_IF ( T_ISSET ( T_VARIABLE($namespaces) [ ] ) ) { T_VARIABLE($struct) = T_VARIABLE($xml) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($namespaces) [ ] ) ; T_VARIABLE($create) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($struct) T_AS T_VARIABLE($tier1) T_DOUBLE_ARROW T_VARIABLE($val1) ) { T_FOREACH ( T_VARIABLE($val1) T_AS T_VARIABLE($tier2) T_DOUBLE_ARROW T_VARIABLE($val2) ) { T_VARIABLE($attrs) = T_VARIABLE($val2) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($create) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($attrs) [ ] ) ; T_FOREACH ( T_VARIABLE($val2) T_AS T_VARIABLE($val3) ) { T_VARIABLE($val3) = T_STRING ( , , T_STRING_CAST T_VARIABLE($val3) ) ; T_VARIABLE($create) [ ] = T_VARIABLE($val3) ; } } } T_VARIABLE($struct_present) = T_STRING ; } T_VARIABLE($xml) = T_VARIABLE($xml) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($data_present) = T_STRING ; T_IF ( T_VARIABLE($xml) T_BOOLEAN_AND @ T_STRING ( T_VARIABLE($xml) T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_VARIABLE($data_present) = T_STRING ; T_FOREACH ( T_VARIABLE($xml) T_AS T_VARIABLE($k1) T_DOUBLE_ARROW T_VARIABLE($v1) ) { T_VARIABLE($tbl_attr) = T_VARIABLE($v1) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($isInTables) = T_STRING ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($tables) ) ; T_INC T_VARIABLE($i) ) { T_IF ( ! T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] , T_STRING_CAST T_VARIABLE($tbl_attr) [ ] ) ) { T_VARIABLE($isInTables) = T_STRING ; T_BREAK ; } } T_IF ( T_VARIABLE($isInTables) T_IS_EQUAL T_STRING ) { T_VARIABLE($tables) [ ] = T_ARRAY ( T_STRING_CAST T_VARIABLE($tbl_attr) [ ] ) ; } T_FOREACH ( T_VARIABLE($v1) T_AS T_VARIABLE($k2) T_DOUBLE_ARROW T_VARIABLE($v2) ) { T_VARIABLE($row_attr) = T_VARIABLE($v2) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_STRING ( T_STRING_CAST T_VARIABLE($row_attr) [ ] , T_VARIABLE($tempRow) ) ) { T_VARIABLE($tempRow) [ ] = T_STRING_CAST T_VARIABLE($row_attr) [ ] ; } T_VARIABLE($tempCells) [ ] = T_STRING_CAST T_VARIABLE($v2) ; } T_VARIABLE($rows) [ ] = T_ARRAY ( T_STRING_CAST T_VARIABLE($tbl_attr) [ ] , T_VARIABLE($tempRow) , T_VARIABLE($tempCells) ) ; T_VARIABLE($tempRow) = T_ARRAY ( ) ; T_VARIABLE($tempCells) = T_ARRAY ( ) ; } T_UNSET ( T_VARIABLE($tempRow) ) ; T_UNSET ( T_VARIABLE($tempCells) ) ; T_UNSET ( T_VARIABLE($xml) ) ; T_VARIABLE($num_tbls) = T_STRING ( T_VARIABLE($tables) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($num_tbls) ; T_INC T_VARIABLE($i) ) { T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_STRING ( T_VARIABLE($rows) ) ; T_INC T_VARIABLE($j) ) { T_IF ( ! T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] , T_VARIABLE($rows) [ T_VARIABLE($j) ] [ T_STRING ] ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] ) ) { T_VARIABLE($tables) [ T_VARIABLE($i) ] [ ] = T_VARIABLE($rows) [ T_VARIABLE($j) ] [ T_STRING ] ; } T_VARIABLE($tables) [ T_VARIABLE($i) ] [ T_STRING ] [ ] = T_VARIABLE($rows) [ T_VARIABLE($j) ] [ T_STRING ] ; } } } T_UNSET ( T_VARIABLE($rows) ) ; T_IF ( ! T_VARIABLE($struct_present) ) { T_VARIABLE($analyses) = T_ARRAY ( ) ; T_VARIABLE($len) = T_STRING ( T_VARIABLE($tables) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($len) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($analyses) [ ] = T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($i) ] ) ; } } } T_UNSET ( T_VARIABLE($xml) ) ; T_UNSET ( T_VARIABLE($tempRows) ) ; T_UNSET ( T_VARIABLE($tempCells) ) ; T_UNSET ( T_VARIABLE($rows) ) ; T_IF ( T_VARIABLE($data_present) ) { T_IF ( ! T_ISSET ( T_VARIABLE($analyses) ) ) { T_VARIABLE($analyses) = T_STRING ; T_IF ( ! T_VARIABLE($struct_present) ) { T_VARIABLE($create) = T_STRING ; } } } T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($db_name) = T_VARIABLE($db) ; T_VARIABLE($options) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; } T_ELSE { T_IF ( T_VARIABLE($db_name) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($db_name) = ; } T_VARIABLE($options) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($collation) , T_DOUBLE_ARROW T_VARIABLE($charset) , ) ; } T_STRING ( T_VARIABLE($db_name) , T_VARIABLE($tables) , T_VARIABLE($analyses) , T_VARIABLE($create) , T_VARIABLE($options) ) ; T_UNSET ( T_VARIABLE($analyses) ) ; T_UNSET ( T_VARIABLE($tables) ) ; T_UNSET ( T_VARIABLE($create) ) ; T_STRING ( ) ; } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PROTECTED T_VARIABLE($properties) ; T_ABSTRACT T_PUBLIC T_STRING ( ) ; T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_ABSTRACT T_PROTECTED T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_STRING ( ) { T_RETURN T_STRING ( ) ; } T_STRING ( T_VARIABLE($FileName) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_STRING ( ) { T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_STRING ( ) { T_GLOBAL T_VARIABLE($eof) ; T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ; T_WHILE ( T_STRING ) { T_VARIABLE($record) = T_NEW T_STRING ( - T_LNUMBER ) ; T_VARIABLE($record) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($record) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL ) { T_RETURN T_STRING ; } T_IF ( T_VARIABLE($eof) ) { T_BREAK ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($record) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_EXTENDS T_STRING { T_STRING ( & T_VARIABLE($SHPFile) , & T_VARIABLE($DBFFile) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($DBFFile) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_SWITCH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_CASE T_LNUMBER : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_BREAK ; T_DEFAULT : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) ; T_BREAK ; } T_IF ( T_STRING ( ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; } T_STRING ( ) { T_VARIABLE($data) = T_ARRAY ( ) ; T_VARIABLE($data) [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($data) [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_RETURN T_VARIABLE($data) ; } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ; T_VARIABLE($i) T_INC ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ; T_VARIABLE($i) T_INC ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($i) ] = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER ) ) ; } T_VARIABLE($readPoints) = T_LNUMBER ; T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) ; T_WHILE ( T_LIST ( T_VARIABLE($partIndex) , T_VARIABLE($partData) ) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($partIndex) ] [ ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($partIndex) ] [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($partIndex) ] = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($partIndex) ] [ ] = T_ARRAY ( ) ; } T_WHILE ( ! T_STRING ( T_VARIABLE($readPoints) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_AND ( T_VARIABLE($readPoints) < ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($partIndex) ] [ ] [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($readPoints) T_INC ; } } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_IMPLEMENTS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($id) ) { T_GLOBAL T_VARIABLE($SESSION_KEY) ; T_IF ( T_STRING ( T_VARIABLE($id) ) T_IS_EQUAL ) { T_RETURN T_STRING ; } T_IF ( ! T_STRING ( T_VARIABLE($id) , T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] ) ) { T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ T_VARIABLE($id) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($id) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING T_DOUBLE_COLON T_STRING ( ) ) ; } T_VARIABLE($ret) = T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ T_VARIABLE($id) ] ; T_IF ( ! T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($ret) [ ] ) { T_RETURN T_VARIABLE($ret) ; } T_VARIABLE($status) = T_STRING ( . T_VARIABLE($id) ) ; T_IF ( T_VARIABLE($status) ) { T_VARIABLE($ret) [ ] = T_BOOL_CAST T_VARIABLE($status) [ ] ; T_VARIABLE($ret) [ ] = T_VARIABLE($status) [ ] ; T_VARIABLE($ret) [ ] = T_VARIABLE($status) [ ] ; T_IF ( T_VARIABLE($ret) [ ] > T_LNUMBER ) { T_VARIABLE($ret) [ ] = T_VARIABLE($ret) [ ] / T_VARIABLE($ret) [ ] * T_LNUMBER ; } T_IF ( T_VARIABLE($ret) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($ret) [ ] = T_BOOL_CAST T_STRING ; } T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ T_VARIABLE($id) ] = T_VARIABLE($ret) ; } T_RETURN T_VARIABLE($ret) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_IMPLEMENTS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($id) ) { T_GLOBAL T_VARIABLE($SESSION_KEY) ; T_IF ( T_STRING ( T_VARIABLE($id) ) T_IS_EQUAL ) { T_RETURN T_STRING ; } T_IF ( ! T_STRING ( T_VARIABLE($id) , T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] ) ) { T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ T_VARIABLE($id) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($id) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING T_DOUBLE_COLON T_STRING ( ) ) ; } T_VARIABLE($ret) = T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ T_VARIABLE($id) ] ; T_RETURN T_VARIABLE($ret) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_IMPLEMENTS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($id) ) { T_GLOBAL T_VARIABLE($SESSION_KEY) ; T_IF ( T_STRING ( T_VARIABLE($id) ) T_IS_EQUAL ) { T_RETURN T_STRING ; } T_IF ( ! T_STRING ( T_VARIABLE($id) , T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] ) ) { T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ T_VARIABLE($id) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($id) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING T_DOUBLE_COLON T_STRING ( ) ) ; } T_VARIABLE($ret) = T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ T_VARIABLE($id) ] ; T_IF ( ! T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($ret) [ ] ) { T_RETURN T_VARIABLE($ret) ; } T_VARIABLE($status) = T_STRING ( T_VARIABLE($id) ) ; T_IF ( T_VARIABLE($status) ) { T_IF ( T_VARIABLE($status) [ ] T_IS_EQUAL T_VARIABLE($status) [ ] ) { T_VARIABLE($ret) [ ] = T_STRING ; } T_ELSE { T_VARIABLE($ret) [ ] = T_STRING ; } T_VARIABLE($ret) [ ] = T_VARIABLE($status) [ ] ; T_VARIABLE($ret) [ ] = T_VARIABLE($status) [ ] ; T_IF ( T_VARIABLE($ret) [ ] > T_LNUMBER ) { T_VARIABLE($ret) [ ] = T_VARIABLE($ret) [ ] / T_VARIABLE($ret) [ ] * T_LNUMBER ; } } T_ELSE { T_VARIABLE($ret) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($id) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($ret) [ ] , T_DOUBLE_ARROW T_VARIABLE($ret) [ ] , T_DOUBLE_ARROW T_STRING T_DOUBLE_COLON T_STRING ( ) ) ; } T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ T_VARIABLE($id) ] = T_VARIABLE($ret) ; T_RETURN T_VARIABLE($ret) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_IMPLEMENTS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN T_STRING ( ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($id) ) { T_GLOBAL T_VARIABLE($SESSION_KEY) ; T_IF ( T_STRING ( T_VARIABLE($id) ) T_IS_EQUAL ) { T_RETURN T_STRING ; } T_IF ( ! T_STRING ( T_VARIABLE($id) , T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] ) ) { T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ T_VARIABLE($id) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($id) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING T_DOUBLE_COLON T_STRING ( ) ) ; } T_VARIABLE($ret) = T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ T_VARIABLE($id) ] ; T_IF ( ! T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($ret) [ ] ) { T_RETURN T_VARIABLE($ret) ; } T_VARIABLE($status) = T_STRING ; T_VARIABLE($sessionkey) = T_STRING ( ) . T_VARIABLE($id) ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ T_VARIABLE($sessionkey) ] ) ) { T_VARIABLE($status) = T_VARIABLE($_SESSION) [ T_VARIABLE($sessionkey) ] ; } T_IF ( T_VARIABLE($status) ) { T_VARIABLE($ret) [ ] = T_VARIABLE($status) [ ] ; T_VARIABLE($ret) [ ] = T_VARIABLE($status) [ ] ; T_VARIABLE($ret) [ ] = T_VARIABLE($status) [ ] ; T_IF ( T_VARIABLE($ret) [ ] > T_LNUMBER ) { T_VARIABLE($ret) [ ] = T_VARIABLE($ret) [ ] / T_VARIABLE($ret) [ ] * T_LNUMBER ; } } T_ELSE { T_VARIABLE($ret) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($id) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($ret) [ ] , T_DOUBLE_ARROW T_VARIABLE($ret) [ ] , T_DOUBLE_ARROW T_STRING T_DOUBLE_COLON T_STRING ( ) ) ; } T_VARIABLE($_SESSION) [ T_VARIABLE($SESSION_KEY) ] [ T_VARIABLE($id) ] = T_VARIABLE($ret) ; T_RETURN T_VARIABLE($ret) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_IMPLEMENTS T_STRING { T_PRIVATE T_VARIABLE($_storage) ; T_PRIVATE T_VARIABLE($_status) ; T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_NEW T_STRING ( ) ; } T_STRING ( T_STRING T_VARIABLE($observer) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($observer) ) ; } T_STRING ( T_STRING T_VARIABLE($observer) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($observer) ) ; } T_STRING ( ) { } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($_storage) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($_storage) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($_status) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($_status) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_IMPLEMENTS T_STRING { T_PRIVATE T_VARIABLE($_pluginManager) ; T_PUBLIC T_STRING ( T_VARIABLE($pluginManager) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($pluginManager) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { T_THROW T_NEW T_STRING ( ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($_pluginManager) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($_pluginManager) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN T_STRING ( . ) ; } T_PUBLIC T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) = T_ARRAY ( ) , T_VARIABLE($meta) = ) { T_IF ( ! T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) T_BOOLEAN_OR T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($options) [ T_LNUMBER ] = ; } T_VARIABLE($newtext) = T_VARIABLE($buffer) . T_STRING ( T_VARIABLE($options) [ T_LNUMBER ] ) ; T_RETURN T_VARIABLE($newtext) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN T_STRING ( . . . . . . . . ) ; } T_PUBLIC T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) = T_ARRAY ( ) , T_VARIABLE($meta) = ) { T_IF ( T_EMPTY ( T_VARIABLE($options) [ T_LNUMBER ] ) ) { T_VARIABLE($options) [ T_LNUMBER ] = T_LNUMBER ; } T_IF ( T_EMPTY ( T_VARIABLE($options) [ T_LNUMBER ] ) ) { T_VARIABLE($options) [ T_LNUMBER ] = ; } T_ELSE { T_VARIABLE($options) [ T_LNUMBER ] = T_STRING ( T_VARIABLE($options) [ T_LNUMBER ] ) ; } T_IF ( T_EMPTY ( T_VARIABLE($options) [ T_LNUMBER ] ) ) { T_IF ( T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($options) [ T_LNUMBER ] = T_STRING ( ) ; } T_ELSE { T_VARIABLE($options) [ T_LNUMBER ] = ; } } T_VARIABLE($timestamp) = - T_LNUMBER ; T_IF ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($timestamp) = T_VARIABLE($buffer) ; } T_ELSE T_IF ( T_STRING ( , T_VARIABLE($buffer) ) ) { T_IF ( T_STRING ( T_VARIABLE($buffer) ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR T_STRING ( T_VARIABLE($buffer) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($offset) = T_LNUMBER ; } T_ELSE { T_VARIABLE($offset) = T_LNUMBER ; } T_VARIABLE($d) = T_ARRAY ( ) ; T_VARIABLE($d) [ ] = T_STRING ( T_VARIABLE($buffer) , T_LNUMBER , T_VARIABLE($offset) ) ; T_VARIABLE($d) [ ] = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($offset) , T_LNUMBER ) ; T_VARIABLE($d) [ ] = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($offset) + T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($d) [ ] = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($offset) + T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($d) [ ] = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($offset) + T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($d) [ ] = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($offset) + T_LNUMBER , T_LNUMBER ) ; T_IF ( T_STRING ( T_VARIABLE($d) [ ] , T_VARIABLE($d) [ ] , T_VARIABLE($d) [ ] ) ) { T_VARIABLE($timestamp) = T_STRING ( T_VARIABLE($d) [ ] , T_VARIABLE($d) [ ] , T_VARIABLE($d) [ ] , T_VARIABLE($d) [ ] , T_VARIABLE($d) [ ] , T_VARIABLE($d) [ ] ) ; } } T_ELSE { T_IF ( T_STRING ( , T_VARIABLE($buffer) ) ) { T_VARIABLE($timestamp) = T_INT_CAST T_VARIABLE($buffer) ; } T_ELSE { T_VARIABLE($timestamp) = T_STRING ( T_VARIABLE($buffer) ) ; } } T_IF ( T_VARIABLE($timestamp) < T_LNUMBER T_BOOLEAN_AND T_STRING ( , T_VARIABLE($buffer) ) ) { T_VARIABLE($timestamp) = T_VARIABLE($buffer) ; } T_IF ( T_VARIABLE($timestamp) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($timestamp) T_MINUS_EQUAL T_VARIABLE($options) [ T_LNUMBER ] * T_LNUMBER * T_LNUMBER ; T_VARIABLE($source) = T_VARIABLE($buffer) ; T_IF ( T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($text) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($timestamp) , T_VARIABLE($options) [ T_LNUMBER ] ) ; } T_ELSEIF ( T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($text) = T_STRING ( T_VARIABLE($options) [ T_LNUMBER ] , T_VARIABLE($timestamp) ) ; } T_ELSE { T_VARIABLE($text) = ; } T_VARIABLE($buffer) = . T_VARIABLE($source) . . T_VARIABLE($source) . . T_VARIABLE($text) . ; } T_RETURN T_VARIABLE($buffer) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN T_STRING ( . . . . ) ; } T_PUBLIC T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) = T_ARRAY ( ) , T_VARIABLE($meta) = ) { T_GLOBAL T_VARIABLE($row) , T_VARIABLE($fields_meta) ; T_IF ( T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($options) [ T_LNUMBER ] ) ) { T_VARIABLE($cn) = T_VARIABLE($options) [ T_LNUMBER ] ; } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($options) [ T_LNUMBER ] ) ) { T_FOREACH ( T_VARIABLE($fields_meta) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_IF ( T_VARIABLE($val) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($options) [ T_LNUMBER ] ) { T_VARIABLE($pos) = T_VARIABLE($key) ; T_BREAK ; } } T_IF ( T_ISSET ( T_VARIABLE($pos) ) ) { T_VARIABLE($cn) = T_VARIABLE($row) [ T_VARIABLE($pos) ] ; } } T_IF ( T_EMPTY ( T_VARIABLE($cn) ) ) { T_VARIABLE($cn) = ; } } T_RETURN T_STRING ( . , T_VARIABLE($options) [ ] , T_STRING ( T_VARIABLE($cn) ) , T_STRING ( T_VARIABLE($cn) ) , T_STRING ( T_VARIABLE($cn) ) ) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN T_STRING ( . . . . . . . . . . . ) ; } T_PUBLIC T_STRING ( T_VARIABLE($options) = T_ARRAY ( ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) T_BOOLEAN_OR T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($nowrap) = T_STRING ; } T_ELSEIF ( T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($nowrap) = T_STRING ; } T_ELSE { T_VARIABLE($nowrap) = T_STRING ; } T_RETURN T_VARIABLE($nowrap) ; } T_PUBLIC T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) = T_ARRAY ( ) , T_VARIABLE($meta) = ) { T_VARIABLE($allowed_programs) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($allowed_programs) ) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_VARIABLE($buffer) ; } T_IF ( ! T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) T_BOOLEAN_OR T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($allowed_programs) [ T_VARIABLE($options) [ T_LNUMBER ] ] ) ) { T_VARIABLE($program) = T_VARIABLE($allowed_programs) [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($program) = T_VARIABLE($allowed_programs) [ T_VARIABLE($options) [ T_LNUMBER ] ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) T_BOOLEAN_OR T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($poptions) = ; } T_ELSE { T_VARIABLE($poptions) = T_VARIABLE($options) [ T_LNUMBER ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) T_BOOLEAN_OR T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($options) [ T_LNUMBER ] = T_LNUMBER ; } T_IF ( ! T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) T_BOOLEAN_OR T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($options) [ T_LNUMBER ] = T_LNUMBER ; } T_VARIABLE($newstring) = ; T_VARIABLE($descriptorspec) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( , ) , T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( , ) ) ; T_VARIABLE($process) = T_STRING ( T_VARIABLE($program) . . T_VARIABLE($poptions) , T_VARIABLE($descriptorspec) , T_VARIABLE($pipes) ) ; T_IF ( T_STRING ( T_VARIABLE($process) ) ) { T_STRING ( T_VARIABLE($pipes) [ T_LNUMBER ] , T_VARIABLE($buffer) ) ; T_STRING ( T_VARIABLE($pipes) [ T_LNUMBER ] ) ; T_WHILE ( ! T_STRING ( T_VARIABLE($pipes) [ T_LNUMBER ] ) ) { T_VARIABLE($newstring) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($pipes) [ T_LNUMBER ] , T_LNUMBER ) ; } T_STRING ( T_VARIABLE($pipes) [ T_LNUMBER ] ) ; T_STRING ( T_VARIABLE($process) ) ; } T_IF ( T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($retstring) = T_STRING ( T_VARIABLE($newstring) ) ; } T_ELSE { T_VARIABLE($retstring) = T_VARIABLE($newstring) ; } T_RETURN T_VARIABLE($retstring) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN T_STRING ( . . ) ; } T_PUBLIC T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) = T_ARRAY ( ) , T_VARIABLE($meta) = ) { T_RETURN T_VARIABLE($buffer) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN T_STRING ( . . ) ; } T_PUBLIC T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) = T_ARRAY ( ) , T_VARIABLE($meta) = ) { T_IF ( ! T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) ) { T_VARIABLE($options) [ T_LNUMBER ] = T_LNUMBER ; } T_ELSE { T_VARIABLE($options) [ T_LNUMBER ] = T_INT_CAST T_VARIABLE($options) [ T_LNUMBER ] ; } T_IF ( T_VARIABLE($options) [ T_LNUMBER ] < T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($buffer) ) ; } T_ELSE { T_RETURN T_STRING ( T_STRING ( T_VARIABLE($buffer) ) , T_VARIABLE($options) [ T_LNUMBER ] , ) ; } } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN T_STRING ( ) ; } T_PUBLIC T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) = T_ARRAY ( ) , T_VARIABLE($meta) = ) { T_VARIABLE($transform_options) = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($options) [ ] . ) ; T_VARIABLE($buffer) = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($transform_options) ) ; T_RETURN T_VARIABLE($buffer) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN T_STRING ( . ) ; } T_PUBLIC T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) = T_ARRAY ( ) , T_VARIABLE($meta) = ) { T_IF ( T_STRING ) { T_VARIABLE($transform_options) = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($options) [ ] . . T_VARIABLE($options) [ ] . . ( T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) ? T_VARIABLE($options) [ T_LNUMBER ] : ) . . ( T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) ? T_VARIABLE($options) [ T_LNUMBER ] : T_LNUMBER ) . ) ; } T_ELSE { T_VARIABLE($transform_options) = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($options) [ ] . ) ; } T_VARIABLE($buffer) = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($transform_options) ) ; T_RETURN T_VARIABLE($buffer) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN T_STRING ( . ) ; } T_PUBLIC T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) = T_ARRAY ( ) , T_VARIABLE($meta) = ) { T_IF ( T_VARIABLE($buffer) < T_LNUMBER T_BOOLEAN_OR T_VARIABLE($buffer) > T_LNUMBER ) { T_RETURN T_VARIABLE($buffer) ; } T_RETURN T_STRING ( T_VARIABLE($buffer) ) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN T_STRING ( ) ; } T_PUBLIC T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) = T_ARRAY ( ) , T_VARIABLE($meta) = ) { T_VARIABLE($result) = T_STRING ( T_STRING ( T_VARIABLE($buffer) ) ) ; T_STRING ( ) ; T_RETURN T_VARIABLE($result) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN T_STRING ( . . . . ) ; } T_PUBLIC T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) = T_ARRAY ( ) , T_VARIABLE($meta) = ) { T_IF ( ! T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) T_BOOLEAN_OR T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($options) [ T_LNUMBER ] = T_LNUMBER ; } T_IF ( ! T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) T_BOOLEAN_OR T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($options) [ T_LNUMBER ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) T_BOOLEAN_OR T_VARIABLE($options) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($options) [ T_LNUMBER ] = ; } T_VARIABLE($newtext) = ; T_IF ( T_VARIABLE($options) [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($newtext) = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) [ T_LNUMBER ] , T_VARIABLE($options) [ T_LNUMBER ] ) ; } T_ELSE { T_VARIABLE($newtext) = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) [ T_LNUMBER ] ) ; } T_VARIABLE($length) = T_STRING ( T_VARIABLE($newtext) ) ; T_VARIABLE($baselength) = T_STRING ( T_VARIABLE($buffer) ) ; T_IF ( T_VARIABLE($length) T_IS_NOT_EQUAL T_VARIABLE($baselength) ) { T_IF ( T_VARIABLE($options) [ T_LNUMBER ] T_IS_NOT_EQUAL T_LNUMBER ) { T_VARIABLE($newtext) = T_VARIABLE($options) [ T_LNUMBER ] . T_VARIABLE($newtext) ; } T_IF ( ( T_VARIABLE($length) + T_VARIABLE($options) [ T_LNUMBER ] ) T_IS_NOT_EQUAL T_VARIABLE($baselength) ) { T_VARIABLE($newtext) T_CONCAT_EQUAL T_VARIABLE($options) [ T_LNUMBER ] ; } } T_RETURN T_VARIABLE($newtext) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN T_STRING ( . . ) ; } T_PUBLIC T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) = T_ARRAY ( ) , T_VARIABLE($meta) = ) { T_VARIABLE($transform_options) = T_ARRAY ( T_DOUBLE_ARROW . ( T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) ? T_VARIABLE($options) [ T_LNUMBER ] : ) . T_VARIABLE($buffer) . . ( T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) ? T_VARIABLE($options) [ T_LNUMBER ] : ) . T_VARIABLE($buffer) . . ( T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) ? T_VARIABLE($options) [ T_LNUMBER ] : T_LNUMBER ) . . ( T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) ? T_VARIABLE($options) [ T_LNUMBER ] : T_LNUMBER ) . . T_VARIABLE($buffer) . ) ; T_VARIABLE($buffer) = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($transform_options) ) ; T_RETURN T_VARIABLE($buffer) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN T_STRING ( . . ) ; } T_PUBLIC T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) = T_ARRAY ( ) , T_VARIABLE($meta) = ) { T_VARIABLE($append_part) = ( T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) T_BOOLEAN_AND T_VARIABLE($options) [ T_LNUMBER ] ) ? : T_VARIABLE($buffer) ; T_VARIABLE($transform_options) = T_ARRAY ( T_DOUBLE_ARROW . T_STRING ( ( T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) ? T_VARIABLE($options) [ T_LNUMBER ] : ) . T_VARIABLE($append_part) ) . . ( T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) ? T_VARIABLE($options) [ T_LNUMBER ] : ) . . ( T_ISSET ( T_VARIABLE($options) [ T_LNUMBER ] ) ? T_VARIABLE($options) [ T_LNUMBER ] : T_VARIABLE($buffer) ) . ) ; T_VARIABLE($buffer) = T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($transform_options) ) ; T_RETURN T_VARIABLE($buffer) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($subject) ) { ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_FUNCTION(Application_Octetstream_Download_getInfo) ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_FUNCTION(Application_Octetstream_Hex_getInfo) ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_FUNCTION(Image_JPEG_Inline_getInfo) ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_FUNCTION(Image_JPEG_Link_getInfo) ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_FUNCTION(Image_PNG_Inline_getInfo) ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_INTERFACE T_STRING { T_PUBLIC T_STATIC T_FUNCTION(getInfo) ( ) ; T_PUBLIC T_STATIC T_FUNCTION(getMIMEType) ( ) ; T_PUBLIC T_STATIC T_FUNCTION(getMIMESubtype) ( ) ; T_PUBLIC T_STATIC T_FUNCTION(getName) ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING T_IMPLEMENTS T_STRING { T_PUBLIC T_STRING ( T_VARIABLE($options) = T_ARRAY ( ) ) { ; } T_ABSTRACT T_PUBLIC T_STRING ( T_VARIABLE($buffer) , T_VARIABLE($options) = T_ARRAY ( ) , T_VARIABLE($meta) = ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_FUNCTION(Text_Plain_Append_getInfo) ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_FUNCTION(Text_Plain_Dateformat_getInfo) ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_FUNCTION(Text_Plain_External_getInfo) ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_FUNCTION(Text_Plain_Formatted_getInfo) ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_FUNCTION(Text_Plain_Imagelink_getInfo) ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_FUNCTION(Text_Plain_Link_getInfo) ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_FUNCTION(Text_Plain_Longtoipv4_getInfo) ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_FUNCTION(Text_Plain_Sql_getInfo) ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN ; } } T_FUNCTION(Text_Plain_Substring_getInfo) ( ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_INTERFACE T_STRING { T_PUBLIC T_STATIC T_FUNCTION(getIdKey) ( ) ; T_PUBLIC T_STATIC T_FUNCTION(getUploadStatus) ( T_VARIABLE($id) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_STRING { T_PROTECTED T_VARIABLE($databases) = T_STRING ; T_PROTECTED T_VARIABLE($userlink) = T_STRING ; T_PROTECTED T_VARIABLE($controllink) = T_STRING ; T_PUBLIC T_STRING ( T_VARIABLE($param) ) { T_SWITCH ( T_VARIABLE($param) ) { T_CASE : T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_BREAK ; T_CASE : T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_BREAK ; T_CASE : T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_BREAK ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($param) , T_VARIABLE($value) ) { T_SWITCH ( T_VARIABLE($param) ) { T_CASE : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($value) ; T_BREAK ; T_CASE : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($value) ; T_BREAK ; } } T_PUBLIC T_STRING ( ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_NEW T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_VARIABLE($GLOBALS) [ ] [ ] = ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_FUNCTION(get_tables_info) ( ) { T_VARIABLE($retval) = T_ARRAY ( ) ; T_VARIABLE($GLOBALS) [ ] [ ] = T_ARRAY ( ) ; T_VARIABLE($GLOBALS) [ ] [ ] = T_ARRAY ( ) ; T_VARIABLE($GLOBALS) [ ] [ ] = T_ARRAY ( ) ; T_VARIABLE($tables) = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($one_table) ) { T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] = T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($one_table) [ ] ; T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] = T_VARIABLE($one_table) [ ] ; T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($one_table) [ ] ) ; T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($one_table) [ ] ) ; T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($one_table) [ ] , T_STRING ) ; T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_STRING ) ; T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($one_table) [ ] , T_STRING ) ; T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($one_table) [ ] ) ; T_VARIABLE($DF) = T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($one_table) [ ] ) ; T_IF ( T_VARIABLE($DF) T_IS_NOT_EQUAL ) { T_VARIABLE($retval) [ T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ] = T_STRING ( T_VARIABLE($DF) ) ; } T_VARIABLE($i) T_INC ; } T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(get_columns_info) ( ) { T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($tab_column) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER , T_VARIABLE($cnt) = T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_VARIABLE($i) < T_VARIABLE($cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($fields_rs) = T_STRING ( T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] , T_STRING , T_STRING ) , T_STRING , T_STRING ) ; T_VARIABLE($tbl_name_i) = T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ; T_VARIABLE($j) = T_LNUMBER ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($fields_rs) ) ) { T_VARIABLE($tab_column) [ T_VARIABLE($tbl_name_i) ] [ ] [ T_VARIABLE($j) ] = T_VARIABLE($j) ; T_VARIABLE($tab_column) [ T_VARIABLE($tbl_name_i) ] [ ] [ T_VARIABLE($j) ] = T_VARIABLE($row) [ ] ; T_VARIABLE($tab_column) [ T_VARIABLE($tbl_name_i) ] [ ] [ T_VARIABLE($j) ] = T_VARIABLE($row) [ ] ; T_VARIABLE($tab_column) [ T_VARIABLE($tbl_name_i) ] [ ] [ T_VARIABLE($j) ] = T_VARIABLE($row) [ ] ; T_VARIABLE($j) T_INC ; } } T_RETURN T_VARIABLE($tab_column) ; } T_FUNCTION(get_script_contr) ( ) { T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($con) [ ] = T_ARRAY ( ) ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($alltab_rs) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) , T_STRING , T_STRING ) ; T_WHILE ( T_VARIABLE($val) = @ T_STRING ( T_VARIABLE($alltab_rs) ) ) { T_VARIABLE($row) = T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($val) [ T_LNUMBER ] , , ) ; T_IF ( T_VARIABLE($row) T_IS_NOT_IDENTICAL T_STRING ) { T_FOREACH ( T_VARIABLE($row) T_AS T_VARIABLE($field) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] = ; T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($val) [ T_LNUMBER ] ) ; T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($field) ) ; T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($value) [ ] . . T_VARIABLE($value) [ ] ) ; T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($value) [ ] ) ; T_VARIABLE($i) T_INC ; } } T_VARIABLE($row) = T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($val) [ T_LNUMBER ] , , ) ; T_IF ( T_VARIABLE($row) T_IS_NOT_IDENTICAL T_STRING ) { T_FOREACH ( T_VARIABLE($row) T_AS T_VARIABLE($field) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] = ; T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($val) [ T_LNUMBER ] ) ; T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($field) ) ; T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($value) [ ] . . T_VARIABLE($value) [ ] ) ; T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($value) [ ] ) ; T_VARIABLE($i) T_INC ; } } } T_VARIABLE($ti) = T_LNUMBER ; T_VARIABLE($retval) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER , T_VARIABLE($cnt) = T_STRING ( T_VARIABLE($con) [ ] ) ; T_VARIABLE($i) < T_VARIABLE($cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($c_name_i) = T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] ; T_VARIABLE($dtn_i) = T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] ; T_VARIABLE($retval) [ T_VARIABLE($ti) ] = T_ARRAY ( ) ; T_VARIABLE($retval) [ T_VARIABLE($ti) ] [ T_VARIABLE($c_name_i) ] = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($dtn_i) , T_VARIABLE($GLOBALS) [ ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] , T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($retval) [ T_VARIABLE($ti) ] [ T_VARIABLE($c_name_i) ] [ T_VARIABLE($dtn_i) ] = T_ARRAY ( ) ; T_VARIABLE($retval) [ T_VARIABLE($ti) ] [ T_VARIABLE($c_name_i) ] [ T_VARIABLE($dtn_i) ] [ T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] ] = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] , T_LNUMBER T_DOUBLE_ARROW T_VARIABLE($con) [ ] [ T_VARIABLE($i) ] ) ; } T_VARIABLE($ti) T_INC ; } T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(get_pk_or_unique_keys) ( ) { T_RETURN T_STRING ( T_STRING ) ; } T_FUNCTION(get_all_keys) ( T_VARIABLE($unique_only) = T_STRING ) { T_INCLUDE_ONCE ; T_VARIABLE($keys) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($GLOBALS) [ ] [ ] T_AS T_VARIABLE($I) T_DOUBLE_ARROW T_VARIABLE($table) ) { T_VARIABLE($schema) = T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($I) ] ; T_FOREACH ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($schema) ) T_AS T_VARIABLE($index) ) { T_IF ( T_VARIABLE($unique_only) T_BOOLEAN_AND ! T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) { T_CONTINUE ; } T_VARIABLE($columns) = T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($column_name) T_DOUBLE_ARROW T_VARIABLE($dummy) ) { T_VARIABLE($keys) [ T_VARIABLE($schema) . . T_VARIABLE($table) . . T_VARIABLE($column_name) ] = T_LNUMBER ; } } } T_RETURN T_VARIABLE($keys) ; } T_FUNCTION(get_script_tabs) ( ) { T_VARIABLE($script_tabs) = . . . ; T_VARIABLE($retval) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER , T_VARIABLE($cnt) = T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_VARIABLE($i) < T_VARIABLE($cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($j) = T_LNUMBER ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ) ) { T_VARIABLE($j) = T_LNUMBER ; } T_VARIABLE($retval) [ ] [ T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ] = T_VARIABLE($j) ; T_VARIABLE($retval) [ ] [ T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ] = T_LNUMBER ; } T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(get_tab_pos) ( ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($cfgRelation) [ ] ) { T_RETURN T_STRING ; } T_VARIABLE($query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) ; T_VARIABLE($tab_pos) = T_STRING ( T_VARIABLE($query) , , T_STRING , T_VARIABLE($GLOBALS) [ ] , T_STRING ) ; T_RETURN T_STRING ( T_VARIABLE($tab_pos) ) ? T_VARIABLE($tab_pos) : T_STRING ; } T_CLOSE_TAG',yes
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_subgroupHeader) ; T_PUBLIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($subgroupHeader) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($subgroupHeader) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_properties) ; T_PUBLIC T_STRING ( T_VARIABLE($property) ) { T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($property) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_STRING ) ) { T_RETURN ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($property) ; } T_PUBLIC T_STRING ( T_VARIABLE($property) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_ARRAY ( T_VARIABLE($property) ) , T_STRING ( , ) ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_name) ; T_PRIVATE T_VARIABLE($_text) ; T_PRIVATE T_VARIABLE($_force) ; T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($name) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($name) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($text) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($text) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($force) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($force) ; } T_PUBLIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_force) ; T_PRIVATE T_VARIABLE($_values) ; T_PRIVATE T_VARIABLE($_doc) ; T_PRIVATE T_VARIABLE($_len) ; T_PRIVATE T_VARIABLE($_size) ; T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($force) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($force) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($values) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($values) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($doc) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($doc) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($len) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($len) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($size) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($size) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_text) ; T_PRIVATE T_VARIABLE($_extension) ; T_PRIVATE T_VARIABLE($_options) ; T_PRIVATE T_VARIABLE($_optionsText) ; T_PRIVATE T_VARIABLE($_mimeType) ; T_PRIVATE T_VARIABLE($_forceFile) ; T_PUBLIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($text) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($text) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($extension) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($extension) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($options) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($options) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($optionsText) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($optionsText) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($mimeType) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($mimeType) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($forceFile) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($forceFile) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_text) ; T_PRIVATE T_VARIABLE($_extension) ; T_PRIVATE T_VARIABLE($_options) ; T_PRIVATE T_VARIABLE($_optionsText) ; T_PRIVATE T_VARIABLE($_mimeType) ; T_PUBLIC T_STRING ( ) { T_RETURN ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($text) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($text) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($extension) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($extension) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($options) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($options) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($optionsText) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($optionsText) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($mimeType) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($mimeType) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_ABSTRACT T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_RETURN ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_ABSTRACT T_STRING { T_PUBLIC T_ABSTRACT T_STRING ( ) ; T_PUBLIC T_ABSTRACT T_STRING ( ) ; T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING { T_PRIVATE T_VARIABLE($_pmaTable) ; T_PUBLIC T_VARIABLE($tables) ; T_PRIVATE T_STATIC T_VARIABLE($_instance) ; T_PUBLIC T_STRING ( ) { T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; } T_VARIABLE($server_id) = T_VARIABLE($GLOBALS) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($server_id) ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($server_id) ] = T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) : T_ARRAY ( ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = & T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($server_id) ] ; } T_PUBLIC T_STATIC T_STRING ( ) { T_IF ( T_STRING ( T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ) ) { T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) = T_NEW T_STRING ( ) ; } T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($sql_query) = . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($GLOBALS) [ ] [ ] [ ] . ; T_VARIABLE($row) = T_STRING ( T_STRING ( T_VARIABLE($sql_query) ) ) ; T_IF ( T_ISSET ( T_VARIABLE($row) [ T_LNUMBER ] ) ) { T_RETURN T_STRING ( T_VARIABLE($row) [ T_LNUMBER ] , T_STRING ) ; } T_ELSE { T_RETURN T_ARRAY ( ) ; } } T_PUBLIC T_STRING ( ) { T_VARIABLE($username) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_VARIABLE($sql_query) = . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . . T_VARIABLE($username) . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) . ; T_VARIABLE($success) = T_STRING ( T_VARIABLE($sql_query) , T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( ! T_VARIABLE($success) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) ) ; T_RETURN T_VARIABLE($message) ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($max) = T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] , T_LNUMBER ) ; T_VARIABLE($trimming_occured) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) > T_VARIABLE($max) ; T_WHILE ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) > T_VARIABLE($max) ) { T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_RETURN T_VARIABLE($trimming_occured) ; } T_PUBLIC T_STRING ( ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($html) = . T_STRING ( ) . ; T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($table) ) { T_VARIABLE($html) T_CONCAT_EQUAL . T_STRING ( T_STRING ( T_VARIABLE($table) ) ) . . T_STRING ( . T_VARIABLE($table) [ ] . . T_VARIABLE($table) [ ] . ) . ; } } T_ELSE { T_VARIABLE($html) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_RETURN T_VARIABLE($html) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($html) = ; T_VARIABLE($html) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) { T_VARIABLE($table_arr) = T_ARRAY ( ) ; T_VARIABLE($table_arr) [ ] = T_VARIABLE($db) ; T_VARIABLE($table_arr) [ ] = T_VARIABLE($table) ; T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_LNUMBER ] ) T_BOOLEAN_OR T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_LNUMBER ] T_IS_NOT_EQUAL T_VARIABLE($table_arr) ) { T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table_arr) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_RETURN T_STRING ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_relationsCleanupColumn) ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($column) ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; } } T_FUNCTION(PMA_relationsCleanupTable) ( T_VARIABLE($db) , T_VARIABLE($table) ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; } } T_FUNCTION(PMA_relationsCleanupDatabase) ( T_VARIABLE($db) ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; T_VARIABLE($remove_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_STRING ( T_VARIABLE($remove_query) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_queryAsControlUser) ( T_VARIABLE($sql) , T_VARIABLE($show_error) = T_STRING , T_VARIABLE($options) = T_LNUMBER ) { T_VARIABLE($cache_affected_rows) = T_STRING ; T_IF ( T_VARIABLE($show_error) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($options) , T_VARIABLE($cache_affected_rows) ) ; } T_ELSE { T_VARIABLE($result) = @ T_STRING ( T_VARIABLE($sql) , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($options) , T_VARIABLE($cache_affected_rows) ) ; } T_IF ( T_VARIABLE($result) ) { T_RETURN T_VARIABLE($result) ; } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(PMA_getRelationsParam) ( ) { T_IF ( T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($GLOBALS) [ ] ] ) ) { T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($GLOBALS) [ ] ] = T_STRING ( ) ; } T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($GLOBALS) [ ] ] ; T_RETURN T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($GLOBALS) [ ] ] ; } T_FUNCTION(PMA_getRelationsParamDiagnostic) ( T_VARIABLE($cfgRelation) ) { T_VARIABLE($retval) = ; T_VARIABLE($doc_url) = T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($messages) [ ] = . T_STRING ( ) . . . T_VARIABLE($doc_url) . . T_STRING ( ) . ; T_VARIABLE($messages) [ ] = . T_STRING ( , ) . ; T_VARIABLE($messages) [ ] = . T_STRING ( ) . ; T_VARIABLE($messages) [ ] = . T_STRING ( ) . ; T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($messages) [ ] , ) . . . T_STRING ( ) . . T_STRING ( ) . . ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($GLOBALS) [ ] [ ] [ ] , T_VARIABLE($messages) , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) , T_VARIABLE($messages) , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , , T_VARIABLE($messages) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) , T_VARIABLE($messages) , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , , T_VARIABLE($messages) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) , T_VARIABLE($messages) , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) , T_VARIABLE($messages) , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , , T_VARIABLE($messages) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) , T_VARIABLE($messages) , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , , T_VARIABLE($messages) , T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , , T_VARIABLE($messages) ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND ! T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) , T_VARIABLE($messages) , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , , T_VARIABLE($messages) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) , T_VARIABLE($messages) , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , , T_VARIABLE($messages) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) , T_VARIABLE($messages) , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , , T_VARIABLE($messages) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) , T_VARIABLE($messages) , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , , T_VARIABLE($messages) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) , T_VARIABLE($messages) , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , , T_VARIABLE($messages) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) , T_VARIABLE($messages) , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , , T_VARIABLE($messages) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) , T_VARIABLE($messages) , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , , T_VARIABLE($messages) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( . ) ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( . . ) ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_getDiagMessageForFeature) ( T_VARIABLE($feature_name) , T_VARIABLE($relation_parameter) , T_VARIABLE($messages) , T_VARIABLE($skip_line) = T_STRING ) { T_VARIABLE($retval) = . T_VARIABLE($feature_name) . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($relation_parameter) ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($messages) [ ] ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($messages) [ ] ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($skip_line) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_getDiagMessageForParameter) ( T_VARIABLE($parameter) , T_VARIABLE($relation_parameter_set) , T_VARIABLE($messages) , T_VARIABLE($doc_anchor) ) { T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($parameter) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($relation_parameter_set) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($messages) [ ] ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($messages) [ ] , T_VARIABLE($doc_anchor) ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA__getRelationsParam) ( ) { T_VARIABLE($cfgRelation) = T_ARRAY ( ) ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] , T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] [ ] [ ] = T_STRING ; T_RETURN T_VARIABLE($cfgRelation) ; } T_VARIABLE($cfgRelation) [ ] = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_VARIABLE($cfgRelation) [ ] = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_VARIABLE($tab_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; T_VARIABLE($tab_rs) = T_STRING ( T_VARIABLE($tab_query) , T_STRING , T_STRING ) ; T_IF ( ! T_VARIABLE($tab_rs) ) { T_RETURN T_VARIABLE($cfgRelation) ; } T_WHILE ( T_VARIABLE($curr_table) = @ T_STRING ( T_VARIABLE($tab_rs) ) ) { T_IF ( T_VARIABLE($curr_table) [ T_LNUMBER ] T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($cfgRelation) [ ] = T_VARIABLE($curr_table) [ T_LNUMBER ] ; } T_ELSEIF ( T_VARIABLE($curr_table) [ T_LNUMBER ] T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($cfgRelation) [ ] = T_VARIABLE($curr_table) [ T_LNUMBER ] ; } T_ELSEIF ( T_VARIABLE($curr_table) [ T_LNUMBER ] T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($cfgRelation) [ ] = T_VARIABLE($curr_table) [ T_LNUMBER ] ; } T_ELSEIF ( T_VARIABLE($curr_table) [ T_LNUMBER ] T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($cfgRelation) [ ] = T_VARIABLE($curr_table) [ T_LNUMBER ] ; } T_ELSEIF ( T_VARIABLE($curr_table) [ T_LNUMBER ] T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($cfgRelation) [ ] = T_VARIABLE($curr_table) [ T_LNUMBER ] ; } T_ELSEIF ( T_VARIABLE($curr_table) [ T_LNUMBER ] T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($cfgRelation) [ ] = T_VARIABLE($curr_table) [ T_LNUMBER ] ; } T_ELSEIF ( T_VARIABLE($curr_table) [ T_LNUMBER ] T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($cfgRelation) [ ] = T_VARIABLE($curr_table) [ T_LNUMBER ] ; } T_ELSEIF ( T_VARIABLE($curr_table) [ T_LNUMBER ] T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($cfgRelation) [ ] = T_VARIABLE($curr_table) [ T_LNUMBER ] ; } T_ELSEIF ( T_VARIABLE($curr_table) [ T_LNUMBER ] T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($cfgRelation) [ ] = T_VARIABLE($curr_table) [ T_LNUMBER ] ; } T_ELSEIF ( T_VARIABLE($curr_table) [ T_LNUMBER ] T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($cfgRelation) [ ] = T_VARIABLE($curr_table) [ T_LNUMBER ] ; } T_ELSEIF ( T_VARIABLE($curr_table) [ T_LNUMBER ] T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($cfgRelation) [ ] = T_VARIABLE($curr_table) [ T_LNUMBER ] ; } T_ELSEIF ( T_VARIABLE($curr_table) [ T_LNUMBER ] T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($cfgRelation) [ ] = T_VARIABLE($curr_table) [ T_LNUMBER ] ; } } T_STRING ( T_VARIABLE($tab_rs) ) ; T_IF ( T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($cfgRelation) [ ] = T_STRING ; } } T_IF ( T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($cfgRelation) [ ] = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($cfgRelation) [ ] = T_STRING ; T_VARIABLE($cfgRelation) [ ] = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($cfgRelation) [ ] = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($cfgRelation) [ ] = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($cfgRelation) [ ] = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($cfgRelation) [ ] = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($cfgRelation) [ ] = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($cfgRelation) [ ] = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($cfgRelation) [ ] = T_STRING ; } T_IF ( T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($cfgRelation) [ ] = T_STRING ; } T_RETURN T_VARIABLE($cfgRelation) ; } T_FUNCTION(PMA_getForeigners) ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($column) = , T_VARIABLE($source) = ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_VARIABLE($foreign) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND ( T_VARIABLE($source) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($source) T_IS_EQUAL ) ) { T_VARIABLE($rel_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_IF ( T_STRING ( T_VARIABLE($column) ) ) { T_VARIABLE($rel_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) ) . ; } T_VARIABLE($foreign) = T_STRING ( T_VARIABLE($rel_query) , , T_STRING , T_VARIABLE($GLOBALS) [ ] ) ; } T_IF ( ( T_VARIABLE($source) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($source) T_IS_EQUAL ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($table) ) ) { T_VARIABLE($show_create_table_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($show_create_table) = T_STRING ( T_VARIABLE($show_create_table_query) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($analyzed_sql) = T_STRING ( T_STRING ( T_VARIABLE($show_create_table) ) ) ; T_FOREACH ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_AS T_VARIABLE($one_key) ) { T_IF ( T_STRING ( T_VARIABLE($one_key) [ ] ) T_IS_EQUAL T_LNUMBER ) { T_FOREACH ( T_VARIABLE($one_key) [ ] T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($field) ) { T_IF ( T_ISSET ( T_VARIABLE($one_key) [ ] ) ) { T_VARIABLE($foreign) [ T_VARIABLE($field) ] [ ] = T_VARIABLE($one_key) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($one_key) [ ] ) ) { T_VARIABLE($foreign) [ T_VARIABLE($field) ] [ ] = T_VARIABLE($one_key) [ ] ; } T_ELSE { T_VARIABLE($foreign) [ T_VARIABLE($field) ] [ ] = T_VARIABLE($db) ; } T_VARIABLE($foreign) [ T_VARIABLE($field) ] [ ] = T_VARIABLE($one_key) [ ] ; T_VARIABLE($foreign) [ T_VARIABLE($field) ] [ ] = T_VARIABLE($one_key) [ ] [ T_VARIABLE($i) ] ; T_IF ( T_ISSET ( T_VARIABLE($one_key) [ ] ) ) { T_VARIABLE($foreign) [ T_VARIABLE($field) ] [ ] = T_VARIABLE($one_key) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($one_key) [ ] ) ) { T_VARIABLE($foreign) [ T_VARIABLE($field) ] [ ] = T_VARIABLE($one_key) [ ] ; } } } } } T_VARIABLE($is_information_schema) = T_STRING ( T_VARIABLE($db) ) T_IS_EQUAL ; T_VARIABLE($is_data_dictionary) = T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($db) ) T_IS_EQUAL ; T_IF ( ( T_VARIABLE($is_information_schema) T_BOOLEAN_OR T_VARIABLE($is_data_dictionary) ) T_BOOLEAN_AND ( T_VARIABLE($source) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($source) T_IS_EQUAL ) ) { T_IF ( T_VARIABLE($is_information_schema) ) { T_VARIABLE($relations_key) = ; T_INCLUDE_ONCE ; } T_ELSE { T_VARIABLE($relations_key) = ; T_INCLUDE_ONCE ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ T_VARIABLE($relations_key) ] [ T_VARIABLE($table) ] ) ) { T_FOREACH ( T_VARIABLE($GLOBALS) [ T_VARIABLE($relations_key) ] [ T_VARIABLE($table) ] T_AS T_VARIABLE($field) T_DOUBLE_ARROW T_VARIABLE($relations) ) { T_IF ( ( ! T_STRING ( T_VARIABLE($column) ) T_BOOLEAN_OR T_VARIABLE($column) T_IS_EQUAL T_VARIABLE($field) ) T_BOOLEAN_AND ( ! T_ISSET ( T_VARIABLE($foreign) [ T_VARIABLE($field) ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($foreign) [ T_VARIABLE($field) ] ) ) ) { T_VARIABLE($foreign) [ T_VARIABLE($field) ] = T_VARIABLE($relations) ; } } } } T_RETURN T_VARIABLE($foreign) ; } T_FUNCTION(PMA_getDisplayField) ( T_VARIABLE($db) , T_VARIABLE($table) ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($disp_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($row) = T_STRING ( T_VARIABLE($disp_query) , , T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_RETURN T_VARIABLE($row) [ ] ; } } T_IF ( T_VARIABLE($db) T_IS_EQUAL ) { T_SWITCH ( T_VARIABLE($table) ) { T_CASE : T_RETURN ; T_CASE : T_RETURN ; } } T_RETURN T_STRING ; } T_FUNCTION(PMA_getComments) ( T_VARIABLE($db) , T_VARIABLE($table) = ) { T_VARIABLE($comments) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($table) T_IS_NOT_EQUAL ) { T_VARIABLE($columns) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($columns) ) { T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($column) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($column) [ ] ) ) { T_VARIABLE($comments) [ T_VARIABLE($column) [ ] ] = T_VARIABLE($column) [ ] ; } } } } T_ELSE { T_VARIABLE($comments) [ ] = T_STRING ( T_VARIABLE($db) ) ; } T_RETURN T_VARIABLE($comments) ; } T_FUNCTION(PMA_getDbComment) ( T_VARIABLE($db) ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_VARIABLE($comment) = ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($com_qry) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_VARIABLE($com_rs) = T_STRING ( T_VARIABLE($com_qry) , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($com_rs) T_BOOLEAN_AND T_STRING ( T_VARIABLE($com_rs) ) > T_LNUMBER ) { T_VARIABLE($row) = T_STRING ( T_VARIABLE($com_rs) ) ; T_VARIABLE($comment) = T_VARIABLE($row) [ ] ; } T_STRING ( T_VARIABLE($com_rs) ) ; } T_RETURN T_VARIABLE($comment) ; } T_FUNCTION(PMA_getDbComments) ( ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_VARIABLE($comments) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($com_qry) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . ; T_VARIABLE($com_rs) = T_STRING ( T_VARIABLE($com_qry) , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($com_rs) T_BOOLEAN_AND T_STRING ( T_VARIABLE($com_rs) ) > T_LNUMBER ) { T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($com_rs) ) ) { T_VARIABLE($comments) [ T_VARIABLE($row) [ ] ] = T_VARIABLE($row) [ ] ; } } T_STRING ( T_VARIABLE($com_rs) ) ; } T_RETURN T_VARIABLE($comments) ; } T_FUNCTION(PMA_setDbComment) ( T_VARIABLE($db) , T_VARIABLE($comment) = ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($cfgRelation) [ ] ) { T_RETURN T_STRING ; } T_IF ( T_STRING ( T_VARIABLE($comment) ) ) { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($comment) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($comment) ) . ; } T_ELSE { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; } T_IF ( T_ISSET ( T_VARIABLE($upd_query) ) ) { T_RETURN T_STRING ( T_VARIABLE($upd_query) ) ; } T_RETURN T_STRING ; } T_FUNCTION(PMA_setHistory) ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($username) , T_VARIABLE($sqlquery) ) { T_IF ( T_STRING ( ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($sqlquery) ) > T_VARIABLE($GLOBALS) [ ] [ ] ) { T_RETURN ; } T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = T_ARRAY ( ) ; } T_VARIABLE($key) = T_STRING ( T_VARIABLE($sqlquery) . T_VARIABLE($db) . T_VARIABLE($table) ) ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($key) ] ) ) { T_UNSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($key) ] ) ; } T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db) , T_DOUBLE_ARROW T_VARIABLE($table) , T_DOUBLE_ARROW T_VARIABLE($sqlquery) , ) ; T_IF ( T_STRING ( T_VARIABLE($_SESSION) [ ] ) > T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( T_VARIABLE($_SESSION) [ ] ) ; } T_IF ( ! T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_OR ! T_VARIABLE($GLOBALS) [ ] [ ] ) { T_RETURN ; } T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($sqlquery) ) . ) ; } T_FUNCTION(PMA_getHistory) ( T_VARIABLE($username) ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($cfgRelation) [ ] ) { T_RETURN T_STRING ; } T_VARIABLE($hist_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . ; T_RETURN T_STRING ( T_VARIABLE($hist_query) , T_STRING , T_STRING , T_VARIABLE($GLOBALS) [ ] ) ; } T_FUNCTION(PMA_purgeHistory) ( T_VARIABLE($username) ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_OR ! T_VARIABLE($cfgRelation) [ ] ) { T_RETURN ; } T_IF ( ! T_VARIABLE($cfgRelation) [ ] ) { T_RETURN ; } T_VARIABLE($search_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_VARIABLE($GLOBALS) [ ] [ ] . ; T_IF ( T_VARIABLE($max_time) = T_STRING ( T_VARIABLE($search_query) , T_LNUMBER , T_LNUMBER , T_VARIABLE($GLOBALS) [ ] ) ) { T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_VARIABLE($max_time) . ) ; } } T_FUNCTION(PMA__foreignDropdownBuild) ( T_VARIABLE($foreign) , T_VARIABLE($data) , T_VARIABLE($mode) ) { T_VARIABLE($reloptions) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($mode) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($mode) T_IS_EQUAL ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( T_VARIABLE($foreign) , ) ; } T_ELSE { T_STRING ( T_VARIABLE($foreign) ) ; } } T_ELSEIF ( T_VARIABLE($mode) T_IS_EQUAL ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( T_VARIABLE($foreign) ) ; } T_ELSE { T_STRING ( T_VARIABLE($foreign) ) ; } } T_FOREACH ( T_VARIABLE($foreign) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_STRING ( T_VARIABLE($value) ) T_IS_SMALLER_OR_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($vtitle) = ; T_VARIABLE($value) = T_STRING ( T_VARIABLE($value) ) ; } T_ELSE { T_VARIABLE($vtitle) = T_STRING ( T_VARIABLE($value) ) ; T_VARIABLE($value) = T_STRING ( T_STRING ( T_VARIABLE($value) , T_LNUMBER , T_VARIABLE($GLOBALS) [ ] [ ] ) . ) ; } T_VARIABLE($reloption) = . T_STRING ( T_VARIABLE($key) ) . ; T_IF ( T_VARIABLE($vtitle) T_IS_NOT_EQUAL ) { T_VARIABLE($reloption) T_CONCAT_EQUAL . T_VARIABLE($vtitle) . ; } T_IF ( T_STRING_CAST T_VARIABLE($key) T_IS_EQUAL T_STRING_CAST T_VARIABLE($data) ) { T_VARIABLE($reloption) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($mode) T_IS_EQUAL ) { T_VARIABLE($reloptions) [ ] = T_VARIABLE($reloption) . . T_VARIABLE($value) . . T_STRING ( T_VARIABLE($key) ) . ; } T_ELSEIF ( T_VARIABLE($mode) T_IS_EQUAL ) { T_VARIABLE($reloptions) [ ] = T_VARIABLE($reloption) . . T_STRING ( T_VARIABLE($key) ) . . T_VARIABLE($value) . ; } T_ELSEIF ( T_VARIABLE($mode) T_IS_EQUAL ) { T_VARIABLE($reloptions) [ ] = T_VARIABLE($reloption) . . T_STRING ( T_VARIABLE($key) ) . ; } } T_RETURN T_VARIABLE($reloptions) ; } T_FUNCTION(PMA_foreignDropdown) ( T_VARIABLE($disp_row) , T_VARIABLE($foreign_field) , T_VARIABLE($foreign_display) , T_VARIABLE($data) , T_VARIABLE($max) = T_STRING ) { T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($max) ) { T_VARIABLE($max) = T_VARIABLE($GLOBALS) [ ] [ ] ; } T_VARIABLE($foreign) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($disp_row) T_AS T_VARIABLE($relrow) ) { T_VARIABLE($key) = T_VARIABLE($relrow) [ T_VARIABLE($foreign_field) ] ; T_IF ( T_VARIABLE($foreign_display) ) { T_VARIABLE($value) = T_VARIABLE($relrow) [ T_VARIABLE($foreign_display) ] ; } T_ELSE { T_VARIABLE($value) = ; } T_VARIABLE($foreign) [ T_VARIABLE($key) ] = T_VARIABLE($value) ; } T_VARIABLE($top) = T_ARRAY ( ) ; T_VARIABLE($bottom) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($foreign_display) ) { T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] , ) ) { T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ T_LNUMBER ] ) ) { T_VARIABLE($top) = T_STRING ( T_VARIABLE($foreign) , T_VARIABLE($data) , T_VARIABLE($GLOBALS) [ ] [ ] [ T_LNUMBER ] ) ; } T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ T_LNUMBER ] ) ) { T_VARIABLE($bottom) = T_STRING ( T_VARIABLE($foreign) , T_VARIABLE($data) , T_VARIABLE($GLOBALS) [ ] [ ] [ T_LNUMBER ] ) ; } } T_ELSE { T_VARIABLE($top) = T_STRING ( T_VARIABLE($foreign) , T_VARIABLE($data) , ) ; T_VARIABLE($bottom) = T_STRING ( T_VARIABLE($foreign) , T_VARIABLE($data) , ) ; } } T_ELSE { T_VARIABLE($top) = T_STRING ( T_VARIABLE($foreign) , T_VARIABLE($data) , ) ; } T_VARIABLE($ret) = ; T_VARIABLE($top_count) = T_STRING ( T_VARIABLE($top) ) ; T_IF ( T_VARIABLE($max) T_IS_EQUAL - T_LNUMBER T_BOOLEAN_OR T_VARIABLE($top_count) < T_VARIABLE($max) ) { T_VARIABLE($ret) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($top) ) ; T_IF ( T_VARIABLE($foreign_display) T_BOOLEAN_AND T_VARIABLE($top_count) > T_LNUMBER ) { T_VARIABLE($ret) T_CONCAT_EQUAL ; } } T_IF ( T_VARIABLE($foreign_display) ) { T_VARIABLE($ret) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($bottom) ) ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(PMA_getForeignData) ( T_VARIABLE($foreigners) , T_VARIABLE($field) , T_VARIABLE($override_total) , T_VARIABLE($foreign_filter) , T_VARIABLE($foreign_limit) ) { T_VARIABLE($foreign_link) = T_STRING ; T_IF ( T_VARIABLE($foreigners) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($foreigners) [ T_VARIABLE($field) ] ) ) { T_VARIABLE($foreigner) = T_VARIABLE($foreigners) [ T_VARIABLE($field) ] ; T_VARIABLE($foreign_db) = T_VARIABLE($foreigner) [ ] ; T_VARIABLE($foreign_table) = T_VARIABLE($foreigner) [ ] ; T_VARIABLE($foreign_field) = T_VARIABLE($foreigner) [ ] ; T_VARIABLE($the_total) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_db) , T_VARIABLE($foreign_table) , T_STRING ) ; T_IF ( T_VARIABLE($override_total) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($the_total) < T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($foreign_display) = T_STRING ( T_VARIABLE($foreign_db) , T_VARIABLE($foreign_table) ) ; T_VARIABLE($f_query_main) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_field) ) . ( ( T_VARIABLE($foreign_display) T_IS_EQUAL T_STRING ) ? : . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_display) ) ) ; T_VARIABLE($f_query_from) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_table) ) ; T_VARIABLE($f_query_filter) = T_EMPTY ( T_VARIABLE($foreign_filter) ) ? : . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_field) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_filter) , T_STRING ) . . ( ( T_VARIABLE($foreign_display) T_IS_EQUAL T_STRING ) ? : . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_display) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_filter) , T_STRING ) . ) ; T_VARIABLE($f_query_order) = ( T_VARIABLE($foreign_display) T_IS_EQUAL T_STRING ) ? : . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_table) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_display) ) ; T_VARIABLE($f_query_limit) = T_ISSET ( T_VARIABLE($foreign_limit) ) ? T_VARIABLE($foreign_limit) : ; T_IF ( ! T_EMPTY ( T_VARIABLE($foreign_filter) ) ) { T_VARIABLE($res) = T_STRING ( . T_VARIABLE($f_query_from) . T_VARIABLE($f_query_filter) ) ; T_IF ( T_VARIABLE($res) ) { T_VARIABLE($the_total) = T_STRING ( T_VARIABLE($res) ) ; @ T_STRING ( T_VARIABLE($res) ) ; } T_ELSE { T_VARIABLE($the_total) = T_LNUMBER ; } } T_VARIABLE($disp) = T_STRING ( T_VARIABLE($f_query_main) . T_VARIABLE($f_query_from) . T_VARIABLE($f_query_filter) . T_VARIABLE($f_query_order) . T_VARIABLE($f_query_limit) ) ; T_IF ( T_VARIABLE($disp) T_BOOLEAN_AND T_STRING ( T_VARIABLE($disp) ) > T_LNUMBER ) { T_VARIABLE($disp_row) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($single_disp_row) = @ T_STRING ( T_VARIABLE($disp) ) ) { T_VARIABLE($disp_row) [ ] = T_VARIABLE($single_disp_row) ; } @ T_STRING ( T_VARIABLE($disp) ) ; } } T_ELSE { T_VARIABLE($disp_row) = T_STRING ; T_VARIABLE($foreign_link) = T_STRING ; } } T_VARIABLE($foreignData) [ ] = T_VARIABLE($foreign_link) ; T_VARIABLE($foreignData) [ ] = T_ISSET ( T_VARIABLE($the_total) ) ? T_VARIABLE($the_total) : T_STRING ; T_VARIABLE($foreignData) [ ] = T_ISSET ( T_VARIABLE($foreign_display) ) ? T_VARIABLE($foreign_display) : T_STRING ; T_VARIABLE($foreignData) [ ] = T_ISSET ( T_VARIABLE($disp_row) ) ? T_VARIABLE($disp_row) : T_STRING ; T_VARIABLE($foreignData) [ ] = T_ISSET ( T_VARIABLE($foreign_field) ) ? T_VARIABLE($foreign_field) : T_STRING ; T_RETURN T_VARIABLE($foreignData) ; } T_FUNCTION(PMA_getRelatives) ( T_VARIABLE($all_tables) , T_VARIABLE($master) ) { T_VARIABLE($fromclause) = ; T_VARIABLE($emerg) = ; T_VARIABLE($remaining_tables) = T_VARIABLE($all_tables) ; T_UNSET ( T_VARIABLE($remaining_tables) [ T_VARIABLE($master) ] ) ; T_VARIABLE($known_tables) [ T_VARIABLE($master) ] = T_VARIABLE($master) ; T_VARIABLE($run) = T_LNUMBER ; T_WHILE ( T_STRING ( T_VARIABLE($remaining_tables) ) > T_LNUMBER ) { T_IF ( T_VARIABLE($run) \% T_LNUMBER T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($from) = ; T_VARIABLE($to) = ; } T_ELSE { T_VARIABLE($from) = ; T_VARIABLE($to) = ; } T_VARIABLE($in_know) = . T_STRING ( , T_VARIABLE($known_tables) ) . ; T_VARIABLE($in_left) = . T_STRING ( , T_VARIABLE($remaining_tables) ) . ; T_VARIABLE($rel_query) = . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_VARIABLE($from) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . . T_VARIABLE($to) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . . T_VARIABLE($from) . . T_VARIABLE($in_know) . . T_VARIABLE($to) . . T_VARIABLE($in_left) ; T_VARIABLE($relations) = @ T_STRING ( T_VARIABLE($rel_query) , T_VARIABLE($GLOBALS) [ ] ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($relations) ) ) { T_VARIABLE($found_table) = T_VARIABLE($row) [ T_VARIABLE($to) . ] ; T_IF ( T_ISSET ( T_VARIABLE($remaining_tables) [ T_VARIABLE($found_table) ] ) ) { T_VARIABLE($fromclause) T_CONCAT_EQUAL . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ T_VARIABLE($to) . ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ T_VARIABLE($from) . ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ T_VARIABLE($from) . ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ T_VARIABLE($to) . ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ T_VARIABLE($to) . ] ) . ; T_VARIABLE($known_tables) [ T_VARIABLE($found_table) ] = T_VARIABLE($found_table) ; T_UNSET ( T_VARIABLE($remaining_tables) [ T_VARIABLE($found_table) ] ) ; } } T_VARIABLE($run) T_INC ; T_IF ( T_VARIABLE($run) > T_LNUMBER ) { T_FOREACH ( T_VARIABLE($remaining_tables) T_AS T_VARIABLE($table) ) { T_VARIABLE($emerg) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_UNSET ( T_VARIABLE($remaining_tables) [ T_VARIABLE($table) ] ) ; } } } T_VARIABLE($fromclause) = T_VARIABLE($emerg) . T_VARIABLE($fromclause) ; T_RETURN T_VARIABLE($fromclause) ; } T_FUNCTION(PMA_REL_renameField) ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($field) , T_VARIABLE($new_name) ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($table_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($new_name) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($field) ) . ; T_STRING ( T_VARIABLE($table_query) ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($table_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($new_name) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($field) ) . ; T_STRING ( T_VARIABLE($table_query) ) ; T_VARIABLE($table_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($new_name) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($field) ) . ; T_STRING ( T_VARIABLE($table_query) ) ; } } T_FUNCTION(PMA_REL_renameSingleTable) ( T_VARIABLE($table) , T_VARIABLE($source_db) , T_VARIABLE($target_db) , T_VARIABLE($source_table) , T_VARIABLE($target_table) , T_VARIABLE($db_field) , T_VARIABLE($table_field) ) { T_VARIABLE($query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($table) ] ) . . T_VARIABLE($db_field) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($target_db) ) . . . T_VARIABLE($table_field) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($target_table) ) . . . T_VARIABLE($db_field) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($source_db) ) . . . T_VARIABLE($table_field) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($source_table) ) . ; T_STRING ( T_VARIABLE($query) ) ; } T_FUNCTION(PMA_REL_renameTable) ( T_VARIABLE($source_db) , T_VARIABLE($target_db) , T_VARIABLE($source_table) , T_VARIABLE($target_table) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( , T_VARIABLE($source_db) , T_VARIABLE($target_db) , T_VARIABLE($source_table) , T_VARIABLE($target_table) , , ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( , T_VARIABLE($source_db) , T_VARIABLE($target_db) , T_VARIABLE($source_table) , T_VARIABLE($target_table) , , ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( , T_VARIABLE($source_db) , T_VARIABLE($target_db) , T_VARIABLE($source_table) , T_VARIABLE($target_table) , , ) ; T_STRING ( , T_VARIABLE($source_db) , T_VARIABLE($target_db) , T_VARIABLE($source_table) , T_VARIABLE($target_table) , , ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( , T_VARIABLE($source_db) , T_VARIABLE($target_db) , T_VARIABLE($source_table) , T_VARIABLE($target_table) , , ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( , T_VARIABLE($source_db) , T_VARIABLE($target_db) , T_VARIABLE($source_table) , T_VARIABLE($target_table) , , ) ; } } T_FUNCTION(PMA_REL_createPage) ( T_VARIABLE($newpage) , T_VARIABLE($cfgRelation) , T_VARIABLE($db) ) { T_IF ( ! T_ISSET ( T_VARIABLE($newpage) ) T_BOOLEAN_OR T_VARIABLE($newpage) T_IS_EQUAL ) { T_VARIABLE($newpage) = T_STRING ( ) ; } T_VARIABLE($ins_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($newpage) ) . ; T_STRING ( T_VARIABLE($ins_query) , T_STRING ) ; T_RETURN T_STRING ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_replication_db_multibox) ( ) { T_VARIABLE($multi_values) = ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($current_db) ) { T_IF ( T_STRING ( T_VARIABLE($current_db) ) ) { T_CONTINUE ; } T_IF ( ! T_EMPTY ( T_VARIABLE($selectall) ) T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($tmp_select) ) T_BOOLEAN_AND T_STRING ( . T_VARIABLE($tmp_select) , . T_VARIABLE($current_db) . ) ) ) { T_VARIABLE($is_selected) = ; } T_ELSE { T_VARIABLE($is_selected) = ; } T_VARIABLE($current_db) = T_STRING ( T_VARIABLE($current_db) ) ; T_VARIABLE($multi_values) T_CONCAT_EQUAL . T_VARIABLE($current_db) . . T_VARIABLE($is_selected) . . T_VARIABLE($current_db) . ; } T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL . T_STRING ( ) . ; T_RETURN T_VARIABLE($multi_values) ; } T_FUNCTION(PMA_replication_gui_changemaster) ( T_VARIABLE($submitname) ) { T_LIST ( T_VARIABLE($username_length) , T_VARIABLE($hostname_length) ) = T_STRING ( ) ; T_ECHO ; T_ECHO T_STRING ( , ) ; T_ECHO ; T_ECHO . T_STRING ( ) . . T_STRING ( ) . ; T_ECHO T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_VARIABLE($username_length) . . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_VARIABLE($hostname_length) . ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_VARIABLE($submitname) . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; } T_FUNCTION(PMA_replication_print_status_table) ( T_VARIABLE($type) , T_VARIABLE($hidden) = T_STRING , T_VARIABLE($title) = T_STRING ) { T_GLOBAL $ { T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ; T_GLOBAL $ { T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ; T_GLOBAL $ { T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ; T_GLOBAL $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ; T_GLOBAL $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } } ; T_ECHO . T_VARIABLE($type) . . ( T_VARIABLE($hidden) ? : ) . ; T_IF ( T_VARIABLE($title) ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_ECHO . T_VARIABLE($type) . . T_STRING ( ) . ; } T_ELSE { T_ECHO . T_VARIABLE($type) . . T_STRING ( ) . ; } } T_ELSE { T_ECHO ; } T_ECHO . T_VARIABLE($type) . ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( $ { T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } T_AS T_VARIABLE($variable) ) { T_ECHO . ( T_VARIABLE($odd_row) ? : ) . ; T_ECHO ; T_ECHO T_VARIABLE($variable) ; T_ECHO ; T_ECHO ; T_IF ( T_ISSET ( $ { T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } [ T_VARIABLE($variable) ] ) T_BOOLEAN_AND $ { T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } [ T_VARIABLE($variable) ] T_IS_EQUAL $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } [ T_LNUMBER ] [ T_VARIABLE($variable) ] ) { T_ECHO ; } T_ELSEIF ( T_ISSET ( $ { T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } [ T_VARIABLE($variable) ] ) T_BOOLEAN_AND $ { T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } [ T_VARIABLE($variable) ] T_IS_EQUAL $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } [ T_LNUMBER ] [ T_VARIABLE($variable) ] ) { T_ECHO ; } T_ELSE { T_ECHO ; } T_STATIC T_VARIABLE($variables_wrap) = T_ARRAY ( , , , , , ) ; T_IF ( T_STRING ( T_VARIABLE($variable) , T_VARIABLE($variables_wrap) ) ) { T_ECHO T_STRING ( , , $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } [ T_LNUMBER ] [ T_VARIABLE($variable) ] ) ; } T_ELSE { T_ECHO $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } [ T_LNUMBER ] [ T_VARIABLE($variable) ] ; } T_ECHO ; T_ECHO ; T_ECHO ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; } T_FUNCTION(PMA_replication_print_slaves_table) ( T_VARIABLE($hidden) = T_STRING ) { T_VARIABLE($data) = T_STRING ( , T_STRING , T_STRING ) ; T_ECHO ; T_ECHO . ( T_VARIABLE($hidden) ? : ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($slave) ) { T_ECHO . ( T_VARIABLE($odd_row) ? : ) . ; T_ECHO . T_VARIABLE($slave) [ ] . ; T_ECHO . T_VARIABLE($slave) [ ] . ; T_ECHO ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_ECHO ; T_ECHO ; T_ECHO ; T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_ECHO ; T_ECHO ; } T_FUNCTION(PMA_replication_get_username_hostname_length) ( ) { T_VARIABLE($fields_info) = T_STRING ( , ) ; T_VARIABLE($username_length) = T_LNUMBER ; T_VARIABLE($hostname_length) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($fields_info) T_AS T_VARIABLE($val) ) { T_IF ( T_VARIABLE($val) [ ] T_IS_EQUAL ) { T_STRING ( T_VARIABLE($val) [ ] , ) ; T_VARIABLE($v) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($v) ) ) { T_VARIABLE($username_length) = T_VARIABLE($v) ; } } T_ELSEIF ( T_VARIABLE($val) [ ] T_IS_EQUAL ) { T_STRING ( T_VARIABLE($val) [ ] , ) ; T_VARIABLE($v) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($v) ) ) { T_VARIABLE($hostname_length) = T_VARIABLE($v) ; } } } T_RETURN T_ARRAY ( T_VARIABLE($username_length) , T_VARIABLE($hostname_length) ) ; } T_FUNCTION(PMA_replication_gui_master_addslaveuser) ( ) { T_LIST ( T_VARIABLE($username_length) , T_VARIABLE($hostname_length) ) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] ) T_IS_IDENTICAL T_LNUMBER ) { T_VARIABLE($GLOBALS) [ ] = ; } T_ECHO ; T_ECHO ; T_ECHO T_STRING ( , ) ; T_ECHO . . T_STRING ( ) . . . . . . . . . . . T_STRING ( ) . . . . . T_STRING ( ) . . . . ( ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) ? : ) . . T_STRING ( ) . . . ( ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) ? : ) . . T_STRING ( ) . . . . . T_VARIABLE($username_length) . . T_STRING ( ) . . ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ? : . ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : T_VARIABLE($GLOBALS) [ ] ) . ) . . . . . . T_STRING ( ) . . . . . T_STRING ( ) . ; T_VARIABLE($_current_user) = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_current_user) ) ) { T_VARIABLE($thishost) = T_STRING ( , , T_STRING ( T_VARIABLE($_current_user) , ( T_STRING ( T_VARIABLE($_current_user) , ) + T_LNUMBER ) ) ) ; T_IF ( T_VARIABLE($thishost) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($thishost) T_IS_EQUAL ) { T_UNSET ( T_VARIABLE($thishost) ) ; } } T_ECHO . ( T_EMPTY ( T_VARIABLE($thishost) ) ? : . T_STRING ( T_STRING ( T_VARIABLE($thishost) ) ) . ) . . ; T_UNSET ( T_VARIABLE($_current_user) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_SWITCH ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_CASE : T_CASE : T_VARIABLE($GLOBALS) [ ] = ; T_BREAK ; T_CASE : T_VARIABLE($GLOBALS) [ ] = ; T_BREAK ; T_DEFAULT : T_VARIABLE($GLOBALS) [ ] = ; T_BREAK ; } } T_ECHO . ( ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) ? : ) . . T_STRING ( ) . . . ( ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) ? : ) . . T_STRING ( ) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($thishost) ) ) { T_ECHO . ( ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) ? : ) . . T_STRING ( ) . ; } T_UNSET ( T_VARIABLE($thishost) ) ; T_ECHO . ( ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) ? : ) . . T_STRING ( ) . . . ( ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) ? : ) . . T_STRING ( ) . . . . . T_VARIABLE($hostname_length) . . ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : ) . . T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) . . . . . T_STRING ( ) . . . . . T_STRING ( ) . . . ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($mode) T_IS_NOT_EQUAL ) { T_ECHO ; } T_ECHO . T_STRING ( ) . . . ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? : ) . . T_STRING ( ) . . . . . T_STRING ( ) . . . . . . T_STRING ( ) . . . . . T_STRING ( ) . . . . . . T_STRING ( ) . . . . . T_STRING ( ) . . . . . ; T_ECHO . . . T_STRING ( ) . . ; T_ECHO ; T_ECHO ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_VARIABLE($server_master_replication) = T_STRING ( ) ; T_VARIABLE($server_slave_replication) = T_STRING ( ) ; T_VARIABLE($replication_types) = T_ARRAY ( , ) ; T_VARIABLE($master_variables) = T_ARRAY ( , , , , ) ; T_VARIABLE($slave_variables) = T_ARRAY ( , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ) ; T_VARIABLE($slave_variables_alerts) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($slave_variables_oks) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($replication_info) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($replication_types) T_AS T_VARIABLE($type) ) { T_IF ( T_STRING ( $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ) > T_LNUMBER ) { $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } = T_STRING ; T_VARIABLE($replication_info) [ T_VARIABLE($type) ] [ ] = T_STRING ; } T_ELSE { $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } = T_STRING ; T_VARIABLE($replication_info) [ T_VARIABLE($type) ] [ ] = T_STRING ; } T_IF ( $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } = T_STRING ( , T_VARIABLE($server_master_replication) [ T_LNUMBER ] [ ] ) ; T_VARIABLE($replication_info) [ T_VARIABLE($type) ] [ ] = $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ; $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } = T_STRING ( , T_VARIABLE($server_master_replication) [ T_LNUMBER ] [ ] ) ; T_VARIABLE($replication_info) [ T_VARIABLE($type) ] [ ] = $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ; } T_ELSEIF ( T_VARIABLE($type) T_IS_EQUAL ) { $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } = T_STRING ( , T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] ) ; T_VARIABLE($replication_info) [ T_VARIABLE($type) ] [ ] = $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ; $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } = T_STRING ( , T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] ) ; T_VARIABLE($replication_info) [ T_VARIABLE($type) ] [ ] = $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ; $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } = T_STRING ( , T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] ) ; T_VARIABLE($replication_info) [ T_VARIABLE($type) ] [ ] = $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ; $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } = T_STRING ( , T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] ) ; T_VARIABLE($replication_info) [ T_VARIABLE($type) ] [ ] = $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ; $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } = T_STRING ( , T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] ) ; T_VARIABLE($replication_info) [ T_VARIABLE($type) ] [ ] = $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ; $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } = T_STRING ( , T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] ) ; T_VARIABLE($replication_info) [ T_VARIABLE($type) ] [ ] = $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ; } } } T_FUNCTION(PMA_extract_db_or_table) ( T_VARIABLE($string) , T_VARIABLE($what) = ) { T_VARIABLE($list) = T_STRING ( , T_VARIABLE($string) ) ; T_IF ( T_IS_EQUAL T_VARIABLE($what) ) { T_RETURN T_VARIABLE($list) [ T_LNUMBER ] ; } T_ELSE { T_RETURN T_VARIABLE($list) [ T_LNUMBER ] ; } } T_FUNCTION(PMA_replication_slave_control) ( T_VARIABLE($action) , T_VARIABLE($control) = T_STRING , T_VARIABLE($link) = T_STRING ) { T_VARIABLE($action) = T_STRING ( T_VARIABLE($action) ) ; T_VARIABLE($control) = T_STRING ( T_VARIABLE($control) ) ; T_IF ( T_VARIABLE($action) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($action) T_IS_NOT_EQUAL ) { T_RETURN - T_LNUMBER ; } T_IF ( T_VARIABLE($control) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($control) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($control) T_IS_NOT_EQUAL T_STRING ) { T_RETURN - T_LNUMBER ; } T_RETURN T_STRING ( T_VARIABLE($action) . . T_VARIABLE($control) . , T_VARIABLE($link) ) ; } T_FUNCTION(PMA_replication_slave_change_master) ( T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($host) , T_VARIABLE($port) , T_VARIABLE($pos) , T_VARIABLE($stop) = T_STRING , T_VARIABLE($start) = T_STRING , T_VARIABLE($link) = T_STRING ) { T_IF ( T_VARIABLE($stop) ) { T_STRING ( , T_STRING , T_VARIABLE($link) ) ; } T_VARIABLE($out) = T_STRING ( . . T_VARIABLE($host) . . . ( T_VARIABLE($port) * T_LNUMBER ) . . . T_VARIABLE($user) . . . T_VARIABLE($password) . . . T_VARIABLE($pos) [ ] . . . T_VARIABLE($pos) [ ] . , T_VARIABLE($link) ) ; T_IF ( T_VARIABLE($start) ) { T_STRING ( , T_STRING , T_VARIABLE($link) ) ; } T_RETURN T_VARIABLE($out) ; } T_FUNCTION(PMA_replication_connect_to_master) ( T_VARIABLE($user) , T_VARIABLE($password) , T_VARIABLE($host) = T_STRING , T_VARIABLE($port) = T_STRING , T_VARIABLE($socket) = T_STRING ) { T_VARIABLE($server) = T_ARRAY ( ) ; T_VARIABLE($server) [ ] = T_VARIABLE($host) ; T_VARIABLE($server) [ ] = T_VARIABLE($port) ; T_VARIABLE($server) [ ] = T_VARIABLE($socket) ; T_RETURN T_STRING ( T_VARIABLE($user) , T_VARIABLE($password) , T_STRING , T_VARIABLE($server) , T_STRING ) ; } T_FUNCTION(PMA_replication_slave_bin_log_master) ( T_VARIABLE($link) = T_STRING ) { T_VARIABLE($data) = T_STRING ( , T_STRING , T_STRING , T_VARIABLE($link) ) ; T_VARIABLE($output) = T_ARRAY ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($data) ) ) { T_VARIABLE($output) [ ] = T_VARIABLE($data) [ T_LNUMBER ] [ ] ; T_VARIABLE($output) [ ] = T_VARIABLE($data) [ T_LNUMBER ] [ ] ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(PMA_replication_master_replicated_dbs) ( T_VARIABLE($link) = T_STRING ) { T_VARIABLE($data) = T_STRING ( , T_STRING , T_STRING , T_VARIABLE($link) ) ; T_VARIABLE($do_db) = T_ARRAY ( ) ; T_VARIABLE($ignore_db) = T_ARRAY ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($data) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($do_db) = T_STRING ( , T_VARIABLE($data) [ T_LNUMBER ] [ ] ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($data) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($ignore_db) = T_STRING ( , T_VARIABLE($data) [ T_LNUMBER ] [ ] ) ; } T_VARIABLE($tmp_alldbs) = T_STRING ( , T_VARIABLE($link) ) ; T_WHILE ( T_VARIABLE($tmp_row) = T_STRING ( T_VARIABLE($tmp_alldbs) ) ) { T_IF ( T_STRING ( T_VARIABLE($tmp_row) [ T_LNUMBER ] ) ) { T_CONTINUE ; } T_IF ( T_STRING ( T_VARIABLE($do_db) ) T_IS_EQUAL T_LNUMBER ) { T_IF ( T_STRING ( T_VARIABLE($tmp_row) [ T_LNUMBER ] , T_VARIABLE($ignore_db) ) T_IS_NOT_IDENTICAL T_STRING ) { T_CONTINUE ; } T_VARIABLE($dblist) [ ] = T_VARIABLE($tmp_row) [ T_LNUMBER ] ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($tmp_row) [ T_LNUMBER ] , T_VARIABLE($do_db) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($dblist) [ ] = T_VARIABLE($tmp_row) [ T_LNUMBER ] ; } } } T_RETURN T_VARIABLE($link) ; } T_FUNCTION(PMA_replication_synchronize_db) ( T_VARIABLE($db) , T_VARIABLE($src_link) , T_VARIABLE($trg_link) , T_VARIABLE($data) = T_STRING ) { T_VARIABLE($src_db) = T_VARIABLE($trg_db) = T_VARIABLE($db) ; T_VARIABLE($src_tables) = T_STRING ( T_VARIABLE($src_db) , T_VARIABLE($src_link) ) ; T_VARIABLE($trg_tables) = T_STRING ( T_VARIABLE($trg_db) , T_VARIABLE($trg_link) ) ; T_VARIABLE($source_tables_uncommon) = T_ARRAY ( ) ; T_VARIABLE($target_tables_uncommon) = T_ARRAY ( ) ; T_VARIABLE($matching_tables) = T_ARRAY ( ) ; T_VARIABLE($matching_tables_num) = T_LNUMBER ; T_STRING ( T_VARIABLE($trg_tables) , T_VARIABLE($src_tables) , T_VARIABLE($matching_tables) , T_VARIABLE($source_tables_uncommon) ) ; T_STRING ( T_VARIABLE($trg_tables) , T_VARIABLE($matching_tables) , T_VARIABLE($target_tables_uncommon) ) ; T_VARIABLE($fields_num) = T_ARRAY ( ) ; T_VARIABLE($matching_tables_fields) = T_ARRAY ( ) ; T_VARIABLE($matching_tables_keys) = T_ARRAY ( ) ; T_VARIABLE($insert_array) = T_ARRAY ( T_ARRAY ( T_ARRAY ( ) ) ) ; T_VARIABLE($update_array) = T_ARRAY ( T_ARRAY ( T_ARRAY ( ) ) ) ; T_VARIABLE($delete_array) = T_ARRAY ( ) ; T_VARIABLE($row_count) = T_ARRAY ( ) ; T_VARIABLE($uncommon_tables_fields) = T_ARRAY ( ) ; T_VARIABLE($matching_tables_num) = T_STRING ( T_VARIABLE($matching_tables) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($matching_tables) ) ; T_VARIABLE($i) T_INC ) { T_STRING ( T_VARIABLE($src_db) , T_VARIABLE($trg_db) , T_VARIABLE($src_link) , T_VARIABLE($trg_link) , T_VARIABLE($matching_tables) , T_VARIABLE($matching_tables_fields) , T_VARIABLE($update_array) , T_VARIABLE($insert_array) , T_VARIABLE($delete_array) , T_VARIABLE($fields_num) , T_VARIABLE($i) , T_VARIABLE($matching_tables_keys) ) ; } T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_STRING ( T_VARIABLE($source_tables_uncommon) ) ; T_VARIABLE($j) T_INC ) { T_STRING ( T_VARIABLE($source_tables_uncommon) , T_VARIABLE($src_db) , T_VARIABLE($src_link) , T_VARIABLE($j) , T_VARIABLE($row_count) ) ; } T_VARIABLE($source_columns) = T_ARRAY ( ) ; T_VARIABLE($target_columns) = T_ARRAY ( ) ; T_VARIABLE($alter_str_array) = T_ARRAY ( T_ARRAY ( ) ) ; T_VARIABLE($add_column_array) = T_ARRAY ( T_ARRAY ( ) ) ; T_VARIABLE($uncommon_columns) = T_ARRAY ( ) ; T_VARIABLE($target_tables_keys) = T_ARRAY ( ) ; T_VARIABLE($source_indexes) = T_ARRAY ( ) ; T_VARIABLE($target_indexes) = T_ARRAY ( ) ; T_VARIABLE($add_indexes_array) = T_ARRAY ( ) ; T_VARIABLE($alter_indexes_array) = T_ARRAY ( ) ; T_VARIABLE($remove_indexes_array) = T_ARRAY ( ) ; T_VARIABLE($criteria) = T_ARRAY ( , , , , , , ) ; T_FOR ( T_VARIABLE($counter) = T_LNUMBER ; T_VARIABLE($counter) < T_VARIABLE($matching_tables_num) ; T_VARIABLE($counter) T_INC ) { T_STRING ( T_VARIABLE($src_db) , T_VARIABLE($trg_db) , T_VARIABLE($src_link) , T_VARIABLE($trg_link) , T_VARIABLE($matching_tables) , T_VARIABLE($source_columns) , T_VARIABLE($target_columns) , T_VARIABLE($alter_str_array) , T_VARIABLE($add_column_array) , T_VARIABLE($uncommon_columns) , T_VARIABLE($criteria) , T_VARIABLE($target_tables_keys) , T_VARIABLE($counter) ) ; T_STRING ( T_VARIABLE($src_db) , T_VARIABLE($trg_db) , T_VARIABLE($src_link) , T_VARIABLE($trg_link) , T_VARIABLE($matching_tables) , T_VARIABLE($source_indexes) , T_VARIABLE($target_indexes) , T_VARIABLE($add_indexes_array) , T_VARIABLE($alter_indexes_array) , T_VARIABLE($remove_indexes_array) , T_VARIABLE($counter) ) ; } T_FOR ( T_VARIABLE($q) = T_LNUMBER ; T_VARIABLE($q) < T_STRING ( T_VARIABLE($source_tables_uncommon) ) ; T_VARIABLE($q) T_INC ) { T_IF ( T_ISSET ( T_VARIABLE($source_tables_uncommon) [ T_VARIABLE($q) ] ) ) { T_STRING ( T_VARIABLE($src_db) , T_VARIABLE($trg_db) , T_VARIABLE($src_link) , T_VARIABLE($trg_link) , T_VARIABLE($source_tables_uncommon) , T_VARIABLE($q) , T_VARIABLE($uncommon_tables_fields) , T_STRING ) ; } T_IF ( T_ISSET ( T_VARIABLE($row_count) [ T_VARIABLE($q) ] ) T_BOOLEAN_AND T_VARIABLE($data) ) { T_STRING ( T_VARIABLE($src_db) , T_VARIABLE($trg_db) , T_VARIABLE($src_link) , T_VARIABLE($trg_link) , T_VARIABLE($source_tables_uncommon) , T_VARIABLE($q) , T_VARIABLE($uncommon_tables_fields) , T_STRING ) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING { T_PRIVATE T_STATIC T_VARIABLE($_instance) ; T_PRIVATE T_VARIABLE($_header) ; T_PRIVATE T_VARIABLE($_HTML) ; T_PRIVATE T_VARIABLE($_JSON) ; T_PRIVATE T_VARIABLE($_footer) ; T_PRIVATE T_VARIABLE($_isAjax) ; T_PRIVATE T_VARIABLE($_isAjaxPage) ; T_PRIVATE T_VARIABLE($_isSuccess) ; T_PRIVATE T_VARIABLE($_CWD) ; T_PRIVATE T_STRING ( ) { T_IF ( ! T_STRING ( ) ) { T_VARIABLE($buffer) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($buffer) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_NEW T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_NEW T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; } T_PUBLIC T_STATIC T_STRING ( ) { T_IF ( T_EMPTY ( T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ) ) { T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) = T_NEW T_STRING ( ) ; } T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($_instance) ; } T_PUBLIC T_STRING ( T_VARIABLE($state) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ( T_VARIABLE($state) T_IS_EQUAL T_STRING ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($content) ) { T_IF ( T_VARIABLE($content) T_INSTANCEOF T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL T_VARIABLE($content) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL T_VARIABLE($content) ; } } T_PUBLIC T_STRING ( T_VARIABLE($json) , T_VARIABLE($value) = T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($json) ) ) { T_FOREACH ( T_VARIABLE($json) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($key) , T_VARIABLE($value) ) ; } } T_ELSE { T_IF ( T_VARIABLE($value) T_INSTANCEOF T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($json) ] = T_VARIABLE($value) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($json) ] = T_VARIABLE($value) ; } } } T_PRIVATE T_STRING ( ) { T_VARIABLE($retval) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_VARIABLE($retval) ; } T_PRIVATE T_STRING ( ) { T_ECHO T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PRIVATE T_STRING ( ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] T_INSTANCEOF T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ; T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($menuHash) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($menuHash) ) ; T_VARIABLE($hashes) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($hashes) = T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) ; } T_IF ( ! T_STRING ( T_VARIABLE($menuHash) , T_VARIABLE($hashes) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($errors) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($errors) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($errors) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($query) = ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] ) < T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($query) = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($GLOBALS) [ ] , ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($GLOBALS) [ ] , ) , T_DOUBLE_ARROW T_VARIABLE($query) ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($query) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ) ; } } T_IF ( ! T_STRING ( ) ) { T_STRING ( ) ; T_STRING ( ) ; } T_ECHO T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_PUBLIC T_STATIC T_STRING ( ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_STRING ( T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($buffer) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($buffer) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($buffer) T_OBJECT_OPERATOR T_STRING ( ) ; T_EXIT ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_EVN_setGlobals) ( ) { T_GLOBAL T_VARIABLE($event_status) , T_VARIABLE($event_type) , T_VARIABLE($event_interval) ; T_VARIABLE($event_status) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , ) , T_DOUBLE_ARROW T_ARRAY ( , , ) ) ; T_VARIABLE($event_type) = T_ARRAY ( , ) ; T_VARIABLE($event_interval) = T_ARRAY ( , , , , , , , , , , , , , , ) ; } T_FUNCTION(PMA_EVN_main) ( ) { T_GLOBAL T_VARIABLE($db) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($columns) = ; T_VARIABLE($where) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($columns) T_ENCAPSED_AND_WHITESPACE . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($where) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($items) = T_STRING ( T_VARIABLE($query) ) ; T_ECHO T_STRING ( , T_VARIABLE($items) ) ; T_ECHO T_STRING ( ) ; } T_FUNCTION(PMA_EVN_handleEditor) ( ) { T_GLOBAL T_VARIABLE($_REQUEST) , T_VARIABLE($_POST) , T_VARIABLE($errors) , T_VARIABLE($db) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sql_query) = ; T_VARIABLE($item_query) = T_STRING ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($errors) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($create_item) = T_STRING ( T_VARIABLE($db) , , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($drop_item) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($drop_item) ) ; T_IF ( ! T_VARIABLE($result) ) { T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($drop_item) ) ) . . T_STRING ( ) . T_STRING ( T_STRING ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( T_VARIABLE($item_query) ) ; T_IF ( ! T_VARIABLE($result) ) { T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($item_query) ) ) . . T_STRING ( ) . T_STRING ( T_STRING ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($create_item) ) ; T_IF ( ! T_VARIABLE($result) ) { T_VARIABLE($errors) [ ] = T_STRING ( ) . . T_STRING ( ) . . T_STRING ( T_VARIABLE($create_item) ) . . . T_STRING ( ) . T_STRING ( T_STRING ) ; } } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ; T_VARIABLE($sql_query) = T_VARIABLE($drop_item) . T_VARIABLE($item_query) ; } } } T_ELSE { T_VARIABLE($result) = T_STRING ( T_VARIABLE($item_query) ) ; T_IF ( ! T_VARIABLE($result) ) { T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($item_query) ) ) . . T_STRING ( ) . T_STRING ( T_STRING ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ; T_VARIABLE($sql_query) = T_VARIABLE($item_query) ; } } } T_IF ( T_STRING ( T_VARIABLE($errors) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($errors) T_AS T_VARIABLE($string) ) { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($string) . ) ; } T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($output) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) , T_VARIABLE($sql_query) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($columns) = ; T_VARIABLE($where) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_VARIABLE($query) = . T_VARIABLE($columns) . . T_VARIABLE($where) . ; T_VARIABLE($event) = T_STRING ( T_VARIABLE($query) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_VARIABLE($event) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , ! T_EMPTY ( T_VARIABLE($event) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($output) ) ; } T_ELSE { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; } T_EXIT ; } } T_IF ( T_STRING ( T_VARIABLE($errors) ) T_BOOLEAN_OR ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) ) ) { T_VARIABLE($operation) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($operation) = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($title) = T_STRING ( ) ; T_VARIABLE($item) = T_STRING ( ) ; T_VARIABLE($mode) = ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($title) = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($item) = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_IF ( T_VARIABLE($item) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($item) [ ] = T_VARIABLE($item) [ ] ; } } T_ELSE { T_VARIABLE($item) = T_STRING ( ) ; } T_VARIABLE($mode) = ; } T_IF ( T_VARIABLE($item) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($editor) = T_STRING ( T_VARIABLE($mode) , T_VARIABLE($operation) , T_VARIABLE($item) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($editor) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($title) ) ; } T_ELSE { T_ECHO T_ENCAPSED_AND_WHITESPACE T_VARIABLE($title) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($editor) ; T_UNSET ( T_VARIABLE($_POST) ) ; } T_EXIT ; } T_ELSE { T_VARIABLE($message) = T_STRING ( ) . ; T_VARIABLE($message) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ) ) ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_EXIT ; } T_ELSE { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; } } } } T_FUNCTION(PMA_EVN_getDataFromRequest) ( ) { T_VARIABLE($retval) = T_ARRAY ( ) ; T_VARIABLE($indices) = T_ARRAY ( , , , , , , , , , , , ) ; T_FOREACH ( T_VARIABLE($indices) T_AS T_VARIABLE($index) ) { T_VARIABLE($retval) [ T_VARIABLE($index) ] = T_ISSET ( T_VARIABLE($_REQUEST) [ T_VARIABLE($index) ] ) ? T_VARIABLE($_REQUEST) [ T_VARIABLE($index) ] : ; } T_VARIABLE($retval) [ ] = ; T_VARIABLE($retval) [ ] = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($retval) [ ] = ; T_VARIABLE($retval) [ ] = ; } T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_EVN_getDataFromName) ( T_VARIABLE($name) ) { T_GLOBAL T_VARIABLE($db) ; T_VARIABLE($retval) = T_ARRAY ( ) ; T_VARIABLE($columns) = . . ; T_VARIABLE($where) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name) ) . ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($columns) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($where) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($item) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( ! T_VARIABLE($item) ) { T_RETURN T_STRING ; } T_VARIABLE($retval) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($item) [ ] ; T_IF ( T_VARIABLE($retval) [ ] T_IS_EQUAL ) { T_VARIABLE($retval) [ ] = ; } T_ELSE { T_VARIABLE($retval) [ ] = ; } T_VARIABLE($retval) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($retval) [ ] = ; T_IF ( T_VARIABLE($item) [ ] T_IS_EQUAL ) { T_VARIABLE($retval) [ ] = ; } T_VARIABLE($retval) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($item) [ ] ; T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_EVN_getEditorForm) ( T_VARIABLE($mode) , T_VARIABLE($operation) , T_VARIABLE($item) ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($event_status) , T_VARIABLE($event_type) , T_VARIABLE($event_interval) ; T_VARIABLE($need_escape) = T_ARRAY ( , , , , , , , , , ) ; T_FOREACH ( T_VARIABLE($need_escape) T_AS T_VARIABLE($index) ) { T_VARIABLE($item) [ T_VARIABLE($index) ] = T_STRING ( T_VARIABLE($item) [ T_VARIABLE($index) ] , T_STRING ) ; } T_VARIABLE($original_data) = ; T_IF ( T_VARIABLE($mode) T_IS_EQUAL ) { T_VARIABLE($original_data) = . T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($item) [ ] } T_ENCAPSED_AND_WHITESPACE ; } T_IF ( T_VARIABLE($operation) T_IS_EQUAL ) { T_IF ( T_VARIABLE($item) [ ] T_IS_EQUAL ) { T_VARIABLE($item) [ ] = ; T_VARIABLE($item) [ ] = ; } T_ELSE { T_VARIABLE($item) [ ] = ; T_VARIABLE($item) [ ] = ; } } T_IF ( T_VARIABLE($item) [ ] T_IS_EQUAL ) { T_VARIABLE($isrecurring_class) = ; T_VARIABLE($isonetime_class) = ; } T_ELSE { T_VARIABLE($isrecurring_class) = ; T_VARIABLE($isonetime_class) = ; } T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($mode) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($mode) } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($original_data) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($item) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($event_status) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($selected) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ ] ) T_BOOLEAN_AND T_VARIABLE($item) [ ] T_IS_EQUAL T_VARIABLE($value) ) { T_VARIABLE($selected) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($selected) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($value) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($event_type) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($selected) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ ] ) T_BOOLEAN_AND T_VARIABLE($item) [ ] T_IS_EQUAL T_VARIABLE($value) ) { T_VARIABLE($selected) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($selected) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($value) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($item) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($item) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_VARIABLE($item) [ ] ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($isonetime_class) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($item) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($isrecurring_class) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($item) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($event_interval) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($selected) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ ] ) T_BOOLEAN_AND T_VARIABLE($item) [ ] T_IS_EQUAL T_VARIABLE($value) ) { T_VARIABLE($selected) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($selected) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($value) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($isrecurring_class) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($item) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($isrecurring_class) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( , ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($item) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($item) [ ] ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($item) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($item) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($item) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($mode) } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($mode) } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($mode) ) . ; T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_EVN_getQueryFromRequest) ( ) { T_GLOBAL T_VARIABLE($_REQUEST) , T_VARIABLE($errors) , T_VARIABLE($event_status) , T_VARIABLE($event_type) , T_VARIABLE($event_interval) ; T_VARIABLE($query) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($arr) = T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arr) [ T_LNUMBER ] ) ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arr) [ T_LNUMBER ] ) . ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } } T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($event_type) ) ) { T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($event_interval) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_VARIABLE($query) T_CONCAT_EQUAL T_VARIABLE($_REQUEST) [ ] . ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; } } T_ELSE { T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } } } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_FOREACH ( T_VARIABLE($event_status) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_VARIABLE($value) T_IS_EQUAL T_VARIABLE($_REQUEST) [ ] ) { T_VARIABLE($query) T_CONCAT_EQUAL T_VARIABLE($event_status) [ ] [ T_VARIABLE($key) ] . ; T_BREAK ; } } } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; } T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($query) T_CONCAT_EQUAL T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } T_RETURN T_VARIABLE($query) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_RTE_handleExport) ( T_VARIABLE($item_name) , T_VARIABLE($export_data) ) { T_GLOBAL T_VARIABLE($db) ; T_VARIABLE($item_name) = T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_GET) [ ] ) ) ; T_IF ( T_VARIABLE($export_data) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($export_data) = . T_STRING ( T_STRING ( T_VARIABLE($export_data) ) ) . ; T_VARIABLE($title) = T_STRING ( T_STRING ( ) , T_VARIABLE($item_name) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($export_data) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($title) ) ; T_EXIT ; } T_ELSE { T_ECHO . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($title) T_ENCAPSED_AND_WHITESPACE . T_VARIABLE($export_data) . ; } } T_ELSE { T_VARIABLE($_db) = T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ) ; T_VARIABLE($response) = T_STRING ( ) . . T_STRING ( T_STRING ( ) , T_VARIABLE($item_name) , T_VARIABLE($_db) ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($response) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($response) ) ; T_EXIT ; } T_ELSE { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; } } } T_FUNCTION(PMA_EVN_handleExport) ( ) { T_GLOBAL T_VARIABLE($_GET) , T_VARIABLE($db) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($item_name) = T_VARIABLE($_GET) [ ] ; T_VARIABLE($export_data) = T_STRING ( T_VARIABLE($db) , , T_VARIABLE($item_name) ) ; T_STRING ( T_VARIABLE($item_name) , T_VARIABLE($export_data) ) ; } } T_FUNCTION(PMA_RTN_handleExport) ( ) { T_GLOBAL T_VARIABLE($_GET) , T_VARIABLE($db) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) ) { T_IF ( T_VARIABLE($_GET) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($_GET) [ ] T_IS_EQUAL ) { T_VARIABLE($export_data) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($_GET) [ ] , T_VARIABLE($_GET) [ ] ) ; T_STRING ( T_VARIABLE($_GET) [ ] , T_VARIABLE($export_data) ) ; } } } T_FUNCTION(PMA_TRI_handleExport) ( ) { T_GLOBAL T_VARIABLE($_GET) , T_VARIABLE($db) , T_VARIABLE($table) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($item_name) = T_VARIABLE($_GET) [ ] ; T_VARIABLE($triggers) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , ) ; T_VARIABLE($export_data) = T_STRING ; T_FOREACH ( T_VARIABLE($triggers) T_AS T_VARIABLE($trigger) ) { T_IF ( T_VARIABLE($trigger) [ ] T_IS_IDENTICAL T_VARIABLE($item_name) ) { T_VARIABLE($export_data) = T_VARIABLE($trigger) [ ] ; T_BREAK ; } } T_STRING ( T_VARIABLE($item_name) , T_VARIABLE($export_data) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_RTE_getFooterLinks) ( T_VARIABLE($docu) , T_VARIABLE($priv) , T_VARIABLE($name) ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($url_query) , T_VARIABLE($ajax_class) ; T_VARIABLE($icon) = . T_STRING ( T_VARIABLE($name) ) . ; T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($name) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( , ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($priv) , T_VARIABLE($db) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($ajax_class) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($name) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($url_query) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($icon) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) . ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($icon) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) . ; } T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($docu) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($name) . ; T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_RTN_getFooterLinks) ( ) { T_RETURN T_STRING ( , , ) ; } T_FUNCTION(PMA_TRI_getFooterLinks) ( ) { T_RETURN T_STRING ( , , ) ; } T_FUNCTION(PMA_EVN_getFooterLinks) ( ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($url_query) ; T_VARIABLE($es_state) = T_STRING ( , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($es_state) = T_STRING ( T_VARIABLE($es_state) ) ; T_VARIABLE($options) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ( T_VARIABLE($es_state) T_IS_NOT_EQUAL ) ) , T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ( T_VARIABLE($es_state) T_IS_EQUAL ) ) ) ; T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($url_query) T_ENCAPSED_AND_WHITESPACE . T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db) ) , , T_VARIABLE($options) , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_RTE_getList) ( T_VARIABLE($type) , T_VARIABLE($items) ) { T_GLOBAL T_VARIABLE($table) ; T_VARIABLE($class1) = ; T_VARIABLE($class2) = ; T_IF ( ! T_VARIABLE($items) ) { T_VARIABLE($class1) = ; T_VARIABLE($class2) = ; } T_VARIABLE($retval) = . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($class1) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($class2) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_LNUMBER ; T_VARIABLE($i) T_INC ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_BREAK ; T_CASE : T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_IF ( T_EMPTY ( T_VARIABLE($table) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < ( T_EMPTY ( T_VARIABLE($table) ) ? T_LNUMBER : T_LNUMBER ) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_BREAK ; T_CASE : T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_LNUMBER ; T_VARIABLE($i) T_INC ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_BREAK ; T_DEFAULT : T_BREAK ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($ct) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($items) T_AS T_VARIABLE($item) ) { T_VARIABLE($rowclass) = ( T_VARIABLE($ct) \% T_LNUMBER T_IS_EQUAL T_LNUMBER ) ? : ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($rowclass) T_CONCAT_EQUAL ; } T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($item) , T_VARIABLE($rowclass) ) ; T_BREAK ; T_CASE : T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($item) , T_VARIABLE($rowclass) ) ; T_BREAK ; T_CASE : T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($item) , T_VARIABLE($rowclass) ) ; T_BREAK ; T_DEFAULT : T_BREAK ; } T_VARIABLE($ct) T_INC ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_RTN_getRowForList) ( T_VARIABLE($routine) , T_VARIABLE($rowclass) = ) { T_GLOBAL T_VARIABLE($ajax_class) , T_VARIABLE($url_query) , T_VARIABLE($db) , T_VARIABLE($titles) ; T_VARIABLE($sql_drop) = T_STRING ( , T_VARIABLE($routine) [ ] , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($routine) [ ] ) ) ; T_VARIABLE($type_link) = T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] } ; T_VARIABLE($retval) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($rowclass) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($sql_drop) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($routine) [ ] ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($routine) [ ] T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($db) ) T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($db) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($ajax_class) [ ] . . T_VARIABLE($url_query) . . . T_STRING ( T_VARIABLE($routine) [ ] ) . . T_VARIABLE($type_link) . . T_VARIABLE($titles) [ ] . ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($titles) [ ] } T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($routine) [ ] T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($db) ) ) { T_VARIABLE($routine_details) = T_STRING ( T_VARIABLE($routine) [ ] , T_VARIABLE($routine) [ ] , T_STRING ) ; T_IF ( T_VARIABLE($routine) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($execute_action) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($routine_details) [ ] ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($routine_details) [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($routine_details) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL ) { T_CONTINUE ; } T_VARIABLE($execute_action) = ; T_BREAK ; } T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($ajax_class) [ ] . . T_VARIABLE($url_query) . . T_VARIABLE($execute_action) . . . T_STRING ( T_VARIABLE($routine) [ ] ) . . T_VARIABLE($type_link) . . T_VARIABLE($titles) [ ] . ; } } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($titles) [ ] } T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($ajax_class) [ ] . . T_VARIABLE($url_query) . . . T_STRING ( T_VARIABLE($routine) [ ] ) . . T_VARIABLE($type_link) . . T_VARIABLE($titles) [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($db) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($ajax_class) [ ] . . T_VARIABLE($url_query) . . T_STRING ( T_VARIABLE($sql_drop) ) . . T_STRING ( T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($db) } ) . . T_VARIABLE($titles) [ ] . ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($titles) [ ] } T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($routine) [ ] ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_TRI_getRowForList) ( T_VARIABLE($trigger) , T_VARIABLE($rowclass) = ) { T_GLOBAL T_VARIABLE($ajax_class) , T_VARIABLE($url_query) , T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($titles) ; T_VARIABLE($retval) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($rowclass) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($trigger) [ ] ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($trigger) [ ] ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_EMPTY ( T_VARIABLE($table) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($url_query) } . T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($trigger) [ ] } T_ENCAPSED_AND_WHITESPACE . T_VARIABLE($trigger) [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($db) , T_VARIABLE($table) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($ajax_class) [ ] . . T_VARIABLE($url_query) . . . T_STRING ( T_VARIABLE($trigger) [ ] ) . . T_VARIABLE($titles) [ ] . ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($titles) [ ] } T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($ajax_class) [ ] . . T_VARIABLE($url_query) . . . T_STRING ( T_VARIABLE($trigger) [ ] ) . . T_VARIABLE($titles) [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($db) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($ajax_class) [ ] . . T_VARIABLE($url_query) . . T_STRING ( T_VARIABLE($trigger) [ ] ) . . T_STRING ( T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($db) } ) . . T_VARIABLE($titles) [ ] . ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($titles) [ ] } T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($trigger) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($trigger) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_EVN_getRowForList) ( T_VARIABLE($event) , T_VARIABLE($rowclass) = ) { T_GLOBAL T_VARIABLE($ajax_class) , T_VARIABLE($url_query) , T_VARIABLE($db) , T_VARIABLE($titles) ; T_VARIABLE($sql_drop) = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($event) [ ] ) ) ; T_VARIABLE($retval) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($rowclass) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($sql_drop) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($event) [ ] ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($event) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($db) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($ajax_class) [ ] . . T_VARIABLE($url_query) . . . T_STRING ( T_VARIABLE($event) [ ] ) . . T_VARIABLE($titles) [ ] . ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($titles) [ ] } T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($ajax_class) [ ] . . T_VARIABLE($url_query) . . . T_STRING ( T_VARIABLE($event) [ ] ) . . T_VARIABLE($titles) [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($db) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($ajax_class) [ ] . . T_VARIABLE($url_query) . . T_STRING ( T_VARIABLE($sql_drop) ) . . T_STRING ( T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($db) } ) . . T_VARIABLE($titles) [ ] . ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($titles) [ ] } T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($event) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING ) { T_IF ( ! T_EMPTY ( T_VARIABLE($table) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($table) , T_STRING ( T_VARIABLE($db) ) ) ) { T_INCLUDE_ONCE ; } T_ELSE { T_VARIABLE($table) = ; T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; } } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_STRING ( T_VARIABLE($db) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($url_query) ) ) { T_VARIABLE($url_query) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } } } T_VARIABLE($ajax_class) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($ajax_class) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($titles) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($errors) = T_ARRAY ( ) ; T_SWITCH ( T_VARIABLE($_PMA_RTE) ) { T_CASE : T_STRING ( ) ; T_BREAK ; T_CASE : T_STRING ( ) ; T_BREAK ; T_CASE : T_STRING ( ) ; T_BREAK ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_RTN_setGlobals) ( ) { T_GLOBAL T_VARIABLE($param_directions) , T_VARIABLE($param_opts_num) , T_VARIABLE($param_sqldataaccess) ; T_VARIABLE($param_directions) = T_ARRAY ( , , ) ; T_VARIABLE($param_opts_num) = T_ARRAY ( , , ) ; T_VARIABLE($param_sqldataaccess) = T_ARRAY ( , , , ) ; } T_FUNCTION(PMA_RTN_main) ( ) { T_GLOBAL T_VARIABLE($db) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($columns) = ; T_VARIABLE($columns) T_CONCAT_EQUAL ; T_VARIABLE($where) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_VARIABLE($items) = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($columns) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($where) T_ENCAPSED_AND_WHITESPACE ) ; T_ECHO T_STRING ( , T_VARIABLE($items) ) ; T_ECHO T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] T_IS_IDENTICAL ) { T_STRING ( T_STRING ( . . . . ) , T_STRING ) ; } } T_FUNCTION(PMA_RTN_parseOneParameter) ( T_VARIABLE($value) ) { T_GLOBAL T_VARIABLE($param_directions) ; T_VARIABLE($retval) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW ) ; T_VARIABLE($parsed_param) = T_STRING ( T_VARIABLE($value) ) ; T_VARIABLE($pos) = T_LNUMBER ; T_IF ( T_STRING ( T_STRING ( T_VARIABLE($parsed_param) [ T_VARIABLE($pos) ] [ ] ) , T_VARIABLE($param_directions) ) ) { T_VARIABLE($retval) [ T_LNUMBER ] = T_STRING ( T_VARIABLE($parsed_param) [ T_LNUMBER ] [ ] ) ; T_VARIABLE($pos) T_INC ; } T_IF ( T_VARIABLE($parsed_param) [ T_VARIABLE($pos) ] [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($parsed_param) [ T_VARIABLE($pos) ] [ ] T_IS_EQUAL ) { T_VARIABLE($retval) [ T_LNUMBER ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($parsed_param) [ T_VARIABLE($pos) ] [ ] ) ; T_VARIABLE($pos) T_INC ; } T_VARIABLE($depth) = T_LNUMBER ; T_VARIABLE($param_length) = ; T_VARIABLE($param_opts) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_VARIABLE($pos) ; T_VARIABLE($i) < T_VARIABLE($parsed_param) [ ] ; T_VARIABLE($i) T_INC ) { T_IF ( ( T_VARIABLE($parsed_param) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($parsed_param) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) T_BOOLEAN_AND T_VARIABLE($depth) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($retval) [ T_LNUMBER ] = T_STRING ( T_VARIABLE($parsed_param) [ T_VARIABLE($i) ] [ ] ) ; } T_ELSE T_IF ( T_VARIABLE($parsed_param) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($depth) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($depth) = T_LNUMBER ; } T_ELSE T_IF ( T_VARIABLE($parsed_param) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($depth) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($depth) = T_LNUMBER ; } T_ELSE T_IF ( T_VARIABLE($depth) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($param_length) T_CONCAT_EQUAL T_VARIABLE($parsed_param) [ T_VARIABLE($i) ] [ ] ; } T_ELSE T_IF ( T_VARIABLE($parsed_param) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($parsed_param) [ T_VARIABLE($i) ] [ ] ) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($depth) T_IS_EQUAL T_LNUMBER ) { T_IF ( T_VARIABLE($parsed_param) [ T_VARIABLE($i) + T_LNUMBER ] [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($parsed_param) [ T_VARIABLE($i) + T_LNUMBER ] [ ] T_IS_EQUAL ) { T_VARIABLE($param_opts) [ ] = T_STRING ( T_VARIABLE($parsed_param) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ) ; } } T_ELSE T_IF ( T_VARIABLE($parsed_param) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($depth) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($param_opts) [ ] = T_STRING ( T_VARIABLE($parsed_param) [ T_VARIABLE($i) ] [ ] ) ; } } T_VARIABLE($retval) [ T_LNUMBER ] = T_VARIABLE($param_length) ; T_STRING ( T_VARIABLE($param_opts) ) ; T_VARIABLE($retval) [ T_LNUMBER ] = T_STRING ( , T_VARIABLE($param_opts) ) ; T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_RTN_parseAllParameters) ( T_VARIABLE($parsed_query) , T_VARIABLE($routine_type) ) { T_VARIABLE($retval) = T_ARRAY ( ) ; T_VARIABLE($retval) [ ] = T_LNUMBER ; T_VARIABLE($buffer) = ; T_VARIABLE($params) = T_ARRAY ( ) ; T_VARIABLE($fetching) = T_STRING ; T_VARIABLE($depth) = T_LNUMBER ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($parsed_query) [ ] ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_VARIABLE($routine_type) ) { T_VARIABLE($fetching) = T_STRING ; } T_ELSE T_IF ( T_VARIABLE($fetching) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($depth) T_INC ; T_IF ( T_VARIABLE($depth) > T_LNUMBER ) { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] . ; } } T_ELSE T_IF ( T_VARIABLE($fetching) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($depth) T_DEC ; T_IF ( T_VARIABLE($depth) > T_LNUMBER ) { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] . ; } T_ELSE { T_BREAK ; } } T_ELSE T_IF ( T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($depth) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($params) [ ] = T_VARIABLE($buffer) ; T_VARIABLE($retval) [ ] T_INC ; T_VARIABLE($buffer) = ; } T_ELSE T_IF ( T_VARIABLE($fetching) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($depth) > T_LNUMBER ) { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] . ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($buffer) ) ) { T_VARIABLE($params) [ ] = T_VARIABLE($buffer) ; T_VARIABLE($retval) [ ] T_INC ; } T_FOREACH ( T_VARIABLE($params) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_LIST ( T_VARIABLE($retval) [ ] [ ] , T_VARIABLE($retval) [ ] [ ] , T_VARIABLE($retval) [ ] [ ] , T_VARIABLE($retval) [ ] [ ] , T_VARIABLE($retval) [ ] [ ] ) = T_STRING ( T_VARIABLE($value) ) ; } T_FOREACH ( T_ARRAY ( , , , , ) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($index) ) { T_IF ( ! T_ISSET ( T_VARIABLE($retval) [ T_VARIABLE($index) ] ) ) { T_VARIABLE($retval) [ T_VARIABLE($index) ] = T_ARRAY ( ) ; } } T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_RTN_parseRoutineDefiner) ( T_VARIABLE($parsed_query) ) { T_VARIABLE($retval) = ; T_VARIABLE($fetching) = T_STRING ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($parsed_query) [ ] ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($fetching) = T_STRING ; } T_ELSE T_IF ( T_VARIABLE($fetching) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] , T_LNUMBER , T_LNUMBER ) T_IS_NOT_EQUAL ) { T_BREAK ; } T_ELSE T_IF ( T_VARIABLE($fetching) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] ) ; } T_ELSE T_IF ( T_VARIABLE($fetching) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] ; } } T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_RTN_handleEditor) ( ) { T_GLOBAL T_VARIABLE($_GET) , T_VARIABLE($_POST) , T_VARIABLE($_REQUEST) , T_VARIABLE($GLOBALS) , T_VARIABLE($db) , T_VARIABLE($errors) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sql_query) = ; T_VARIABLE($routine_query) = T_STRING ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($errors) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( ! T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_ARRAY ( , ) ) ) { T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ; } T_ELSE { T_VARIABLE($create_routine) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($drop_routine) = T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($_REQUEST) [ ] } T_ENCAPSED_AND_WHITESPACE . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($drop_routine) ) ; T_IF ( ! T_VARIABLE($result) ) { T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($drop_routine) ) ) . . T_STRING ( ) . T_STRING ( T_STRING ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( T_VARIABLE($routine_query) ) ; T_IF ( ! T_VARIABLE($result) ) { T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($routine_query) ) ) . . T_STRING ( ) . T_STRING ( T_STRING ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($create_routine) ) ; T_IF ( ! T_VARIABLE($result) ) { T_VARIABLE($errors) [ ] = T_STRING ( . ) . . T_STRING ( ) . . T_STRING ( T_VARIABLE($create_routine) ) . . . T_STRING ( ) . T_STRING ( T_STRING ) ; } } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ; T_VARIABLE($sql_query) = T_VARIABLE($drop_routine) . T_VARIABLE($routine_query) ; } } } } T_ELSE { T_VARIABLE($result) = T_STRING ( T_VARIABLE($routine_query) ) ; T_IF ( ! T_VARIABLE($result) ) { T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($routine_query) ) ) . . T_STRING ( ) . T_STRING ( T_STRING ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ; T_VARIABLE($sql_query) = T_VARIABLE($routine_query) ; } } } T_IF ( T_STRING ( T_VARIABLE($errors) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($errors) T_AS T_VARIABLE($string) ) { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($string) . ) ; } T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($output) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) , T_VARIABLE($sql_query) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($columns) = . ; T_VARIABLE($where) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_VARIABLE($routine) = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($columns) T_ENCAPSED_AND_WHITESPACE . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($where) T_ENCAPSED_AND_WHITESPACE ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_VARIABLE($routine) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , ! T_EMPTY ( T_VARIABLE($routine) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($output) ) ; } T_ELSE { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($output) ) ; } T_EXIT ; } } T_IF ( T_STRING ( T_VARIABLE($errors) ) T_BOOLEAN_OR ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) ) ) { T_VARIABLE($operation) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($operation) = ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($operation) = ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($operation) = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($title) = T_STRING ( ) ; T_VARIABLE($routine) = T_STRING ( ) ; T_VARIABLE($mode) = ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($title) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($operation) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($routine) = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_REQUEST) [ ] ) ; T_IF ( T_VARIABLE($routine) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($routine) [ ] = T_VARIABLE($routine) [ ] ; T_VARIABLE($routine) [ ] = T_VARIABLE($routine) [ ] ; } } T_ELSE { T_VARIABLE($routine) = T_STRING ( ) ; } T_VARIABLE($mode) = ; } T_IF ( T_VARIABLE($routine) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($editor) = T_STRING ( T_VARIABLE($mode) , T_VARIABLE($operation) , T_VARIABLE($routine) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($editor) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($title) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($routine) [ ] ) ; } T_ELSE { T_ECHO T_ENCAPSED_AND_WHITESPACE T_VARIABLE($title) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($editor) ; } T_EXIT ; } T_ELSE { T_VARIABLE($message) = T_STRING ( ) . ; T_VARIABLE($message) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ) ) ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_EXIT ; } T_ELSE { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; } } } } T_FUNCTION(PMA_RTN_getDataFromRequest) ( ) { T_GLOBAL T_VARIABLE($_REQUEST) , T_VARIABLE($param_directions) , T_VARIABLE($param_sqldataaccess) ; T_VARIABLE($retval) = T_ARRAY ( ) ; T_VARIABLE($indices) = T_ARRAY ( , , , , , , , ) ; T_FOREACH ( T_VARIABLE($indices) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($index) ) { T_VARIABLE($retval) [ T_VARIABLE($index) ] = T_ISSET ( T_VARIABLE($_REQUEST) [ T_VARIABLE($index) ] ) ? T_VARIABLE($_REQUEST) [ T_VARIABLE($index) ] : ; } T_VARIABLE($retval) [ ] = ; T_VARIABLE($retval) [ ] = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($retval) [ ] = ; T_VARIABLE($retval) [ ] = ; } T_VARIABLE($retval) [ ] = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($retval) [ ] = ; } T_VARIABLE($retval) [ ] = T_LNUMBER ; T_VARIABLE($retval) [ ] = T_ARRAY ( ) ; T_VARIABLE($retval) [ ] = T_ARRAY ( ) ; T_VARIABLE($retval) [ ] = T_ARRAY ( ) ; T_VARIABLE($retval) [ ] = T_ARRAY ( ) ; T_VARIABLE($retval) [ ] = T_ARRAY ( ) ; T_VARIABLE($retval{ T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($retval) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_FOREACH ( T_VARIABLE($retval) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( ! T_STRING ( T_VARIABLE($value) , T_VARIABLE($param_directions) , T_STRING ) ) { T_VARIABLE($retval) [ ] [ T_VARIABLE($key) ] = ; } } } T_VARIABLE($retval) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_FOREACH ( T_VARIABLE($retval) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( ! T_STRING ( T_VARIABLE($value) , T_STRING T_DOUBLE_COLON T_STRING ( ) , T_STRING ) ) { T_VARIABLE($retval) [ ] [ T_VARIABLE($key) ] = ; } } T_VARIABLE($retval) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($retval) [ ] = T_STRING ( T_STRING ( T_VARIABLE($retval) [ ] ) , T_STRING ( T_VARIABLE($retval) [ ] ) , T_STRING ( T_VARIABLE($retval) [ ] ) , T_STRING ( T_VARIABLE($retval) [ ] ) , T_STRING ( T_VARIABLE($retval) [ ] ) ) ; } T_VARIABLE($retval) [ ] = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_STRING T_DOUBLE_COLON T_STRING ( ) ) ) { T_VARIABLE($retval) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($retval) [ ] = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_IS_EQUAL ) { T_VARIABLE($retval) [ ] = ; } T_VARIABLE($retval) [ ] = ; T_VARIABLE($retval) [ ] = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_IDENTICAL ) { T_VARIABLE($retval) [ ] = ; } T_ELSE T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_IDENTICAL ) { T_VARIABLE($retval) [ ] = ; } } T_VARIABLE($retval) [ ] = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($param_sqldataaccess) , T_STRING ) ) { T_VARIABLE($retval) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_RTN_getDataFromName) ( T_VARIABLE($name) , T_VARIABLE($type) , T_VARIABLE($all) = T_STRING ) { T_GLOBAL T_VARIABLE($db) ; T_VARIABLE($retval) = T_ARRAY ( ) ; T_VARIABLE($fields) = . . ; T_VARIABLE($where) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($type) ) . ; T_VARIABLE($query) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($fields) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($where) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($routine) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( ! T_VARIABLE($routine) ) { T_RETURN T_STRING ; } T_VARIABLE($retval) [ ] = T_VARIABLE($routine) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($routine) [ ] ; T_VARIABLE($parsed_query) = T_STRING ( T_STRING ( T_VARIABLE($db) , T_VARIABLE($routine) [ ] , T_VARIABLE($routine) [ ] ) ) ; T_VARIABLE($params) = T_STRING ( T_VARIABLE($parsed_query) , T_VARIABLE($routine) [ ] ) ; T_VARIABLE($retval) [ ] = T_VARIABLE($params) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($params) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($params) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($params) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($params) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($params) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($params) [ ] ; T_IF ( T_VARIABLE($all) ) { T_IF ( T_VARIABLE($retval) [ ] T_IS_EQUAL ) { T_VARIABLE($retval) [ ] = ; } T_ELSE { T_VARIABLE($retval) [ ] = ; } T_VARIABLE($retval) [ ] = ; T_VARIABLE($retval) [ ] = ; T_VARIABLE($retval) [ ] = ; T_VARIABLE($retval) [ ] = ; T_IF ( ! T_EMPTY ( T_VARIABLE($routine) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($routine) [ ] ) > T_LNUMBER ) { T_VARIABLE($dtd) = ; T_VARIABLE($fetching) = T_STRING ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($parsed_query) [ ] ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] ) T_IS_EQUAL ) { T_VARIABLE($fetching) = T_STRING ; } T_ELSE T_IF ( T_VARIABLE($fetching) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($word) = T_STRING ( T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] ) ; T_IF ( T_VARIABLE($word) T_IS_EQUAL T_BOOLEAN_AND ( T_VARIABLE($parsed_query) [ T_VARIABLE($i) + T_LNUMBER ] [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($parsed_query) [ T_VARIABLE($i) + T_LNUMBER ] [ ] T_IS_EQUAL ) ) { T_VARIABLE($dtd) T_CONCAT_EQUAL T_VARIABLE($word) . . T_VARIABLE($parsed_query) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ; } T_BREAK ; } T_ELSE T_IF ( T_VARIABLE($fetching) T_IS_EQUAL T_STRING ) { T_VARIABLE($dtd) T_CONCAT_EQUAL T_VARIABLE($parsed_query) [ T_VARIABLE($i) ] [ ] . ; } } T_VARIABLE($routine) [ ] = T_VARIABLE($dtd) ; } T_VARIABLE($returnparam) = T_STRING ( T_VARIABLE($routine) [ ] ) ; T_VARIABLE($retval) [ ] = T_VARIABLE($returnparam) [ T_LNUMBER ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($returnparam) [ T_LNUMBER ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($returnparam) [ T_LNUMBER ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($returnparam) [ T_LNUMBER ] ; } T_VARIABLE($retval) [ ] = T_STRING ( T_VARIABLE($parsed_query) ) ; T_VARIABLE($retval) [ ] = T_VARIABLE($routine) [ ] ; T_VARIABLE($retval) [ ] = ; T_IF ( T_VARIABLE($routine) [ ] T_IS_EQUAL ) { T_VARIABLE($retval) [ ] = ; } T_VARIABLE($retval) [ ] = ; T_VARIABLE($retval) [ ] = ; T_IF ( T_VARIABLE($routine) [ ] T_IS_EQUAL ) { T_VARIABLE($retval) [ ] = ; } T_ELSE T_IF ( T_VARIABLE($routine) [ ] T_IS_EQUAL ) { T_VARIABLE($retval) [ ] = ; } T_VARIABLE($retval) [ ] = T_VARIABLE($routine) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($routine) [ ] ; } T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_RTN_getParameterRow) ( T_VARIABLE($routine) = T_ARRAY ( ) , T_VARIABLE($index) = T_STRING , T_VARIABLE($class) = ) { T_GLOBAL T_VARIABLE($param_directions) , T_VARIABLE($param_opts_num) , T_VARIABLE($titles) ; T_IF ( T_VARIABLE($index) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($index) = ; T_VARIABLE($drop_class) = ; T_VARIABLE($routine) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW ) ) ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($routine) ) ) { T_VARIABLE($drop_class) = ; T_VARIABLE($i) = T_VARIABLE($index) ; } T_ELSE { T_RETURN ; } T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($class) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($index) T_ENCAPSED_AND_WHITESPACE ; T_FOREACH ( T_VARIABLE($param_directions) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($selected) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] ) T_BOOLEAN_AND T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL T_VARIABLE($value) ) { T_VARIABLE($selected) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($selected) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($value) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($index) T_ENCAPSED_AND_WHITESPACE . T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($index) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING , T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($index) T_ENCAPSED_AND_WHITESPACE . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($index) T_ENCAPSED_AND_WHITESPACE . T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($index) T_ENCAPSED_AND_WHITESPACE , T_STRING , T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($index) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($param_opts_num) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($selected) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] ) T_BOOLEAN_AND T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL T_VARIABLE($value) ) { T_VARIABLE($selected) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($selected) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($value) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($drop_class) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($titles) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_RTN_getEditorForm) ( T_VARIABLE($mode) , T_VARIABLE($operation) , T_VARIABLE($routine) ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($errors) , T_VARIABLE($param_sqldataaccess) , T_VARIABLE($param_opts_num) ; T_VARIABLE($need_escape) = T_ARRAY ( , , , , , ) ; T_FOREACH ( T_VARIABLE($need_escape) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($index) ) { T_VARIABLE($routine) [ T_VARIABLE($index) ] = T_STRING ( T_VARIABLE($routine) [ T_VARIABLE($index) ] , T_STRING , ) ; } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($routine) [ ] ; T_VARIABLE($i) T_INC ) { T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] , T_STRING ) ; T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] , T_STRING ) ; } T_IF ( T_VARIABLE($operation) T_IS_EQUAL ) { T_IF ( T_VARIABLE($routine) [ ] T_IS_EQUAL ) { T_VARIABLE($routine) [ ] = ; T_VARIABLE($routine) [ ] = ; } T_ELSE { T_VARIABLE($routine) [ ] = ; T_VARIABLE($routine) [ ] = ; } } T_ELSE T_IF ( T_VARIABLE($operation) T_IS_EQUAL T_BOOLEAN_OR ( T_VARIABLE($routine) [ ] T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($mode) T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($errors) ) ) { T_VARIABLE($routine) [ ] [ ] = ; T_VARIABLE($routine) [ ] [ ] = ; T_VARIABLE($routine) [ ] [ ] = ; T_VARIABLE($routine) [ ] [ ] = ; T_VARIABLE($routine) [ ] [ ] = ; T_VARIABLE($routine) [ ] [ ] = ; T_VARIABLE($routine) [ ] T_INC ; } T_ELSE T_IF ( T_VARIABLE($operation) T_IS_EQUAL ) { T_UNSET ( T_VARIABLE($routine) [ ] [ T_VARIABLE($routine) [ ] - T_LNUMBER ] ) ; T_UNSET ( T_VARIABLE($routine) [ ] [ T_VARIABLE($routine) [ ] - T_LNUMBER ] ) ; T_UNSET ( T_VARIABLE($routine) [ ] [ T_VARIABLE($routine) [ ] - T_LNUMBER ] ) ; T_UNSET ( T_VARIABLE($routine) [ ] [ T_VARIABLE($routine) [ ] - T_LNUMBER ] ) ; T_UNSET ( T_VARIABLE($routine) [ ] [ T_VARIABLE($routine) [ ] - T_LNUMBER ] ) ; T_UNSET ( T_VARIABLE($routine) [ ] [ T_VARIABLE($routine) [ ] - T_LNUMBER ] ) ; T_VARIABLE($routine) [ ] T_DEC ; } T_VARIABLE($disable_remove_parameter) = ; T_IF ( ! T_VARIABLE($routine) [ ] ) { T_VARIABLE($disable_remove_parameter) = ; } T_VARIABLE($original_routine) = ; T_IF ( T_VARIABLE($mode) T_IS_EQUAL ) { T_VARIABLE($original_routine) = . . T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] } T_ENCAPSED_AND_WHITESPACE . . . T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] } T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($isfunction_class) = ; T_VARIABLE($isprocedure_class) = ; T_VARIABLE($isfunction_select) = ; T_VARIABLE($isprocedure_select) = ; T_IF ( T_VARIABLE($routine) [ ] T_IS_EQUAL ) { T_VARIABLE($isfunction_class) = ; T_VARIABLE($isprocedure_select) = ; } T_ELSE { T_VARIABLE($isprocedure_class) = ; T_VARIABLE($isfunction_select) = ; } T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($mode) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($mode) } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($original_routine) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($db) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($isprocedure_select) T_ENCAPSED_AND_WHITESPACE . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($isfunction_select) T_ENCAPSED_AND_WHITESPACE . ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL . T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] } T_ENCAPSED_AND_WHITESPACE . . . T_VARIABLE($routine) [ ] . . . . . T_STRING ( T_STRING ( ) , T_VARIABLE($routine) [ ] ) . ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($isprocedure_class) T_ENCAPSED_AND_WHITESPACE . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($routine) [ ] ; T_VARIABLE($i) T_INC ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($routine) , T_VARIABLE($i) , T_VARIABLE($isprocedure_class) ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($disable_remove_parameter) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($isfunction_class) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING , T_VARIABLE($routine) [ ] ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($isfunction_class) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($isfunction_class) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING , , T_STRING , T_VARIABLE($routine) [ ] ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($param_opts_num) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($selected) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($routine) [ ] ) T_BOOLEAN_AND T_VARIABLE($routine) [ ] T_IS_EQUAL T_VARIABLE($value) ) { T_VARIABLE($selected) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($selected) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($value) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($routine) [ ] ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($routine) [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($routine) [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($routine) [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($param_sqldataaccess) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($selected) = ; T_IF ( T_VARIABLE($routine) [ ] T_IS_EQUAL T_VARIABLE($value) ) { T_VARIABLE($selected) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($selected) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($value) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($mode) } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($mode) } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($mode) ) . ; T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_RTN_getQueryFromRequest) ( ) { T_GLOBAL T_VARIABLE($_REQUEST) , T_VARIABLE($errors) , T_VARIABLE($param_sqldataaccess) , T_VARIABLE($param_directions) ; T_VARIABLE($_REQUEST) [ ] = T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : ; T_VARIABLE($query) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($arr) = T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arr) [ T_LNUMBER ] ) ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arr) [ T_LNUMBER ] ) . ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } } T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($query) T_CONCAT_EQUAL T_VARIABLE($_REQUEST) [ ] . ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } T_VARIABLE($params) = ; T_VARIABLE($warned_about_dir) = T_STRING ; T_VARIABLE($warned_about_name) = T_STRING ; T_VARIABLE($warned_about_length) = T_STRING ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($i) T_INC ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ) { T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_VARIABLE($param_directions) ) ) { T_VARIABLE($params) T_CONCAT_EQUAL T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) . . T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ; } T_ELSE T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($params) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) . . T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ; } T_ELSE T_IF ( ! T_VARIABLE($warned_about_dir) ) { T_VARIABLE($warned_about_dir) = T_STRING ; T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ) ; } T_IF ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] T_IS_NOT_EQUAL T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ) { T_VARIABLE($params) T_CONCAT_EQUAL . T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] . ; } T_ELSE T_IF ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ) { T_IF ( ! T_VARIABLE($warned_about_length) ) { T_VARIABLE($warned_about_length) = T_STRING ; T_VARIABLE($errors) [ ] = T_STRING ( . ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) T_IS_EQUAL ) { T_VARIABLE($params) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) T_IS_EQUAL ) { T_VARIABLE($params) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ; } } T_IF ( T_VARIABLE($i) T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($_REQUEST) [ ] ) - T_LNUMBER ) { T_VARIABLE($params) T_CONCAT_EQUAL ; } } T_ELSE T_IF ( ! T_VARIABLE($warned_about_name) ) { T_VARIABLE($warned_about_name) = T_STRING ; T_VARIABLE($errors) [ ] = T_STRING ( ) ; T_BREAK ; } } } T_VARIABLE($query) T_CONCAT_EQUAL . T_VARIABLE($params) . ; T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_STRING T_DOUBLE_COLON T_STRING ( ) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($_REQUEST) [ ] } ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_VARIABLE($_REQUEST) [ ] . ; } T_ELSE T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( ! T_VARIABLE($warned_about_length) ) { T_VARIABLE($warned_about_length) = T_STRING ; T_VARIABLE($errors) [ ] = T_STRING ( . ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_IS_EQUAL ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_IS_EQUAL ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } } T_VARIABLE($query) T_CONCAT_EQUAL ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($query) T_CONCAT_EQUAL ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($param_sqldataaccess) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL T_VARIABLE($_REQUEST) [ ] . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_VARIABLE($_REQUEST) [ ] . ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($query) T_CONCAT_EQUAL T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } T_RETURN T_VARIABLE($query) ; } T_FUNCTION(PMA_RTN_handleExecute) ( ) { T_GLOBAL T_VARIABLE($_GET) , T_VARIABLE($_POST) , T_VARIABLE($_REQUEST) , T_VARIABLE($GLOBALS) , T_VARIABLE($db) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($routine) = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_REQUEST) [ ] , T_STRING ) ; T_IF ( T_VARIABLE($routine) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($queries) = T_ARRAY ( ) ; T_VARIABLE($end_query) = T_ARRAY ( ) ; T_VARIABLE($args) = T_ARRAY ( ) ; T_VARIABLE($all_functions) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($routine) [ ] ; T_VARIABLE($i) T_INC ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] ] ) ) { T_VARIABLE($value) = T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] ] ; T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_VARIABLE($value) = T_STRING ( , T_VARIABLE($value) ) ; } T_VARIABLE($value) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] ] , T_VARIABLE($all_functions) ) ) { T_VARIABLE($queries) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE . T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] ] . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($value) T_ENCAPSED_AND_WHITESPACE ; } T_ELSE { T_VARIABLE($queries) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($value) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($args) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) ; } T_ELSE { T_VARIABLE($args) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) ; } T_IF ( T_VARIABLE($routine) [ ] T_IS_EQUAL ) { T_IF ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL ) { T_VARIABLE($end_query) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] ) ; } } } T_IF ( T_VARIABLE($routine) [ ] T_IS_EQUAL ) { T_VARIABLE($queries) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($routine) [ ] ) . . T_STRING ( , T_VARIABLE($args) ) . ; T_IF ( T_STRING ( T_VARIABLE($end_query) ) ) { T_VARIABLE($queries) [ ] = . T_STRING ( , T_VARIABLE($end_query) ) . ; } } T_ELSE { T_VARIABLE($queries) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($routine) [ ] ) . . T_STRING ( , T_VARIABLE($args) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($routine) [ ] ) . ; } T_VARIABLE($multiple_query) = T_STRING ( , T_VARIABLE($queries) ) ; T_VARIABLE($outcome) = T_STRING ; T_VARIABLE($affected) = T_LNUMBER ; T_IF ( ! T_STRING ( T_VARIABLE($multiple_query) ) ) { T_VARIABLE($outcome) = T_STRING ; } T_IF ( T_VARIABLE($outcome) ) { T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($queries) ) ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($routine) [ ] ) ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($num_of_rusults_set_to_display) = T_LNUMBER ; T_DO { T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($num_rows) = T_STRING ( T_VARIABLE($result) ) ; T_IF ( ( T_VARIABLE($result) T_IS_NOT_IDENTICAL T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($num_rows) > T_LNUMBER ) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; T_FOREACH ( T_STRING ( T_VARIABLE($result) ) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($field) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($color_class) = ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($row) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_VARIABLE($value) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($value) = ; } T_ELSE { T_VARIABLE($value) = T_STRING ( T_VARIABLE($value) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($color_class) . . T_VARIABLE($value) . ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($color_class) = ( T_VARIABLE($color_class) T_IS_EQUAL ) ? : ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($num_of_rusults_set_to_display) T_INC ; T_VARIABLE($affected) = T_VARIABLE($num_rows) ; } T_IF ( ! T_STRING ( ) ) { T_BREAK ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_STRING ( T_VARIABLE($result) ) ; } T_WHILE ( T_STRING ( ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($message) = T_STRING ( ) ; T_IF ( T_VARIABLE($routine) [ ] T_IS_EQUAL ) { T_VARIABLE($message) T_CONCAT_EQUAL ; T_VARIABLE($message) T_CONCAT_EQUAL T_STRING ( T_STRING ( , , T_VARIABLE($affected) ) , T_VARIABLE($affected) ) ; } T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) ) ; T_IF ( T_VARIABLE($num_of_rusults_set_to_display) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($notice) = T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($notice) ) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_ELSE { T_VARIABLE($output) = ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($multiple_query) ) ) . . T_STRING ( ) . T_STRING ( T_STRING ) ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($output) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_EXIT ; } T_ELSE { T_ECHO T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) . T_VARIABLE($output) ; T_IF ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ) { T_EXIT ; } T_UNSET ( T_VARIABLE($_POST) ) ; } } T_ELSE { T_VARIABLE($message) = T_STRING ( ) . ; T_VARIABLE($message) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ) ) ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_EXIT ; } T_ELSE { T_ECHO T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_UNSET ( T_VARIABLE($_POST) ) ; } } } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($routine) = T_STRING ( T_VARIABLE($_GET) [ ] , T_VARIABLE($_GET) [ ] , T_STRING ) ; T_IF ( T_VARIABLE($routine) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($form) = T_STRING ( T_VARIABLE($routine) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($title) = T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($_GET) [ ] , T_STRING ) ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($form) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($title) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; } T_ELSE { T_ECHO . T_STRING ( ) . ; T_ECHO T_VARIABLE($form) ; } T_EXIT ; } T_ELSE T_IF ( ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) ) { T_VARIABLE($message) = T_STRING ( ) . ; T_VARIABLE($message) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ) ) ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_EXIT ; } } } T_FUNCTION(PMA_RTN_getExecuteForm) ( T_VARIABLE($routine) ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($cfg) ; T_VARIABLE($routine) [ ] = T_STRING ( T_VARIABLE($routine) [ ] , T_STRING ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($routine) [ ] ; T_VARIABLE($i) T_INC ) { T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] , T_STRING ) ; } T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($db) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_IF ( T_VARIABLE($cfg) [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($no_support_types) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($routine) [ ] ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($routine) [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL ) { T_CONTINUE ; } T_VARIABLE($rowclass) = ( T_VARIABLE($i) \% T_LNUMBER T_IS_EQUAL T_LNUMBER ) ? : ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($rowclass) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] } T_ENCAPSED_AND_WHITESPACE ; T_IF ( T_VARIABLE($cfg) [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_STRING ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] , ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] , ) T_BOOLEAN_OR T_STRING ( T_STRING ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] ) , T_VARIABLE($no_support_types) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($field) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($field) , T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($class) = ; T_IF ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL ) { T_VARIABLE($class) = ; } T_ELSE T_IF ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL ) { T_VARIABLE($class) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_STRING ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] , T_ARRAY ( , ) ) ) { T_VARIABLE($tokens) = T_STRING ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] ) ; T_IF ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL ) { T_VARIABLE($input_type) = ; } T_ELSE { T_VARIABLE($input_type) = ; } T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($tokens) [ ] ; T_VARIABLE($j) T_INC ) { T_IF ( T_VARIABLE($tokens) [ T_VARIABLE($j) ] [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($tokens) [ T_VARIABLE($j) ] [ ] = T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tokens) [ T_VARIABLE($j) ] [ ] ) , T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] } T_ENCAPSED_AND_WHITESPACE . T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($tokens) [ T_VARIABLE($j) ] [ ] } T_ENCAPSED_AND_WHITESPACE T_VARIABLE($input_type) T_ENCAPSED_AND_WHITESPACE . T_CURLY_OPEN T_VARIABLE($tokens) [ T_VARIABLE($j) ] [ ] } T_ENCAPSED_AND_WHITESPACE ; } } } T_ELSE T_IF ( T_STRING ( T_STRING ( T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] ) , T_VARIABLE($no_support_types) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($class) T_ENCAPSED_AND_WHITESPACE . T_VARIABLE($routine) [ ] [ T_VARIABLE($i) ] . ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_TRI_setGlobals) ( ) { T_GLOBAL T_VARIABLE($action_timings) , T_VARIABLE($event_manipulations) ; T_VARIABLE($action_timings) = T_ARRAY ( , ) ; T_VARIABLE($event_manipulations) = T_ARRAY ( , , ) ; } T_FUNCTION(PMA_TRI_main) ( ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($table) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($items) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_ECHO T_STRING ( , T_VARIABLE($items) ) ; T_ECHO T_STRING ( ) ; } T_FUNCTION(PMA_TRI_handleEditor) ( ) { T_GLOBAL T_VARIABLE($_REQUEST) , T_VARIABLE($_POST) , T_VARIABLE($errors) , T_VARIABLE($db) , T_VARIABLE($table) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sql_query) = ; T_VARIABLE($item_query) = T_STRING ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($errors) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($trigger) = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($create_item) = T_VARIABLE($trigger) [ ] ; T_VARIABLE($drop_item) = T_VARIABLE($trigger) [ ] . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($drop_item) ) ; T_IF ( ! T_VARIABLE($result) ) { T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($drop_item) ) ) . . T_STRING ( ) . T_STRING ( T_STRING ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( T_VARIABLE($item_query) ) ; T_IF ( ! T_VARIABLE($result) ) { T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($item_query) ) ) . . T_STRING ( ) . T_STRING ( T_STRING ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($create_item) ) ; T_IF ( ! T_VARIABLE($result) ) { T_VARIABLE($errors) [ ] = T_STRING ( ) . . T_STRING ( ) . . T_STRING ( T_VARIABLE($create_item) ) . . . T_STRING ( ) . T_STRING ( T_STRING ) ; } } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ; T_VARIABLE($sql_query) = T_VARIABLE($drop_item) . T_VARIABLE($item_query) ; } } } T_ELSE { T_VARIABLE($result) = T_STRING ( T_VARIABLE($item_query) ) ; T_IF ( ! T_VARIABLE($result) ) { T_VARIABLE($errors) [ ] = T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($item_query) ) ) . . T_STRING ( ) . T_STRING ( T_STRING ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ; T_VARIABLE($sql_query) = T_VARIABLE($item_query) ; } } } T_IF ( T_STRING ( T_VARIABLE($errors) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($errors) T_AS T_VARIABLE($string) ) { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($string) . ) ; } T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($output) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) , T_VARIABLE($sql_query) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($items) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , ) ; T_VARIABLE($trigger) = T_STRING ; T_FOREACH ( T_VARIABLE($items) T_AS T_VARIABLE($value) ) { T_IF ( T_VARIABLE($value) [ ] T_IS_EQUAL T_VARIABLE($_REQUEST) [ ] ) { T_VARIABLE($trigger) = T_VARIABLE($value) ; } } T_VARIABLE($insert) = T_STRING ; T_IF ( T_EMPTY ( T_VARIABLE($table) ) T_BOOLEAN_OR ( T_VARIABLE($trigger) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_VARIABLE($table) T_IS_EQUAL T_VARIABLE($trigger) [ ] ) ) { T_VARIABLE($insert) = T_STRING ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_VARIABLE($trigger) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($insert) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($output) ) ; } T_ELSE { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; } T_EXIT ; } } T_IF ( T_STRING ( T_VARIABLE($errors) ) T_BOOLEAN_OR ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($title) = T_STRING ( ) ; T_VARIABLE($item) = T_STRING ( ) ; T_VARIABLE($mode) = ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($title) = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($item) = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_IF ( T_VARIABLE($item) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($item) [ ] = T_VARIABLE($item) [ ] ; } } T_ELSE { T_VARIABLE($item) = T_STRING ( ) ; } T_VARIABLE($mode) = ; } T_IF ( T_VARIABLE($item) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($editor) = T_STRING ( T_VARIABLE($mode) , T_VARIABLE($item) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($editor) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($title) ) ; } T_ELSE { T_ECHO T_ENCAPSED_AND_WHITESPACE T_VARIABLE($title) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($editor) ; T_UNSET ( T_VARIABLE($_POST) ) ; } T_EXIT ; } T_ELSE { T_VARIABLE($message) = T_STRING ( ) . ; T_VARIABLE($message) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ) ) ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_EXIT ; } T_ELSE { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; } } } } T_FUNCTION(PMA_TRI_getDataFromRequest) ( ) { T_VARIABLE($retval) = T_ARRAY ( ) ; T_VARIABLE($indices) = T_ARRAY ( , , , , , , ) ; T_FOREACH ( T_VARIABLE($indices) T_AS T_VARIABLE($index) ) { T_VARIABLE($retval) [ T_VARIABLE($index) ] = T_ISSET ( T_VARIABLE($_REQUEST) [ T_VARIABLE($index) ] ) ? T_VARIABLE($_REQUEST) [ T_VARIABLE($index) ] : ; } T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_TRI_getDataFromName) ( T_VARIABLE($name) ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($_REQUEST) ; T_VARIABLE($temp) = T_ARRAY ( ) ; T_VARIABLE($items) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , ) ; T_FOREACH ( T_VARIABLE($items) T_AS T_VARIABLE($value) ) { T_IF ( T_VARIABLE($value) [ ] T_IS_EQUAL T_VARIABLE($name) ) { T_VARIABLE($temp) = T_VARIABLE($value) ; } } T_IF ( T_EMPTY ( T_VARIABLE($temp) ) ) { T_RETURN T_STRING ; } T_ELSE { T_VARIABLE($retval) = T_ARRAY ( ) ; T_VARIABLE($retval) [ ] = T_VARIABLE($temp) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($temp) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($temp) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($temp) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($temp) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($temp) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($temp) [ ] ; T_VARIABLE($retval) [ ] = T_VARIABLE($temp) [ ] ; T_RETURN T_VARIABLE($retval) ; } } T_FUNCTION(PMA_TRI_getEditorForm) ( T_VARIABLE($mode) , T_VARIABLE($item) ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($event_manipulations) , T_VARIABLE($action_timings) ; T_VARIABLE($need_escape) = T_ARRAY ( , , , ) ; T_FOREACH ( T_VARIABLE($need_escape) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($index) ) { T_VARIABLE($item) [ T_VARIABLE($index) ] = T_STRING ( T_VARIABLE($item) [ T_VARIABLE($index) ] , T_STRING , ) ; } T_VARIABLE($original_data) = ; T_IF ( T_VARIABLE($mode) T_IS_EQUAL ) { T_VARIABLE($original_data) = . T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($item) [ ] } T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($query) = ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($tables) = T_STRING ( T_VARIABLE($query) ) ; T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($mode) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($mode) } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($original_data) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($item) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($selected) = ; T_IF ( T_VARIABLE($mode) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($value) T_IS_EQUAL T_VARIABLE($table) ) { T_VARIABLE($selected) = ; } T_ELSE T_IF ( T_VARIABLE($mode) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($value) T_IS_EQUAL T_VARIABLE($item) [ ] ) { T_VARIABLE($selected) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($selected) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($value) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( , ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($action_timings) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($selected) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ ] ) T_BOOLEAN_AND T_VARIABLE($item) [ ] T_IS_EQUAL T_VARIABLE($value) ) { T_VARIABLE($selected) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($selected) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($value) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($event_manipulations) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($selected) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ ] ) T_BOOLEAN_AND T_VARIABLE($item) [ ] T_IS_EQUAL T_VARIABLE($value) ) { T_VARIABLE($selected) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($selected) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($value) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($item) [ ] ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($item) [ ] } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($mode) } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($mode) } T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($mode) ) . ; T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_TRI_getQueryFromRequest) ( ) { T_GLOBAL T_VARIABLE($_REQUEST) , T_VARIABLE($db) , T_VARIABLE($errors) , T_VARIABLE($action_timings) , T_VARIABLE($event_manipulations) ; T_VARIABLE($query) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($arr) = T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arr) [ T_LNUMBER ] ) ; T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arr) [ T_LNUMBER ] ) . ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } } T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($action_timings) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL T_VARIABLE($_REQUEST) [ ] . ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($event_manipulations) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL T_VARIABLE($_REQUEST) [ ] . ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_STRING ( T_VARIABLE($db) ) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } T_VARIABLE($query) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($query) T_CONCAT_EQUAL T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } T_RETURN T_VARIABLE($query) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_RTE_getWord) ( T_VARIABLE($index) ) { T_GLOBAL T_VARIABLE($_PMA_RTE) ; T_SWITCH ( T_VARIABLE($_PMA_RTE) ) { T_CASE : T_VARIABLE($words) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_BREAK ; T_CASE : T_VARIABLE($words) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_BREAK ; T_CASE : T_VARIABLE($words) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_BREAK ; T_DEFAULT : T_VARIABLE($words) = T_ARRAY ( ) ; T_BREAK ; } T_RETURN T_ISSET ( T_VARIABLE($words) [ T_VARIABLE($index) ] ) ? T_VARIABLE($words) [ T_VARIABLE($index) ] : ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_checkLink) ( T_VARIABLE($url) ) { T_VARIABLE($valid_starts) = T_ARRAY ( , , , , ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($valid_starts) [ ] = ; T_VARIABLE($valid_starts) [ ] = ; } T_FOREACH ( T_VARIABLE($valid_starts) T_AS T_VARIABLE($val) ) { T_IF ( T_STRING ( T_VARIABLE($url) , T_LNUMBER , T_STRING ( T_VARIABLE($val) ) ) T_IS_EQUAL T_VARIABLE($val) ) { T_RETURN T_STRING ; } } T_RETURN T_STRING ; } T_FUNCTION(PMA_replaceBBLink) ( T_VARIABLE($found) ) { T_IF ( ! T_STRING ( T_VARIABLE($found) [ T_LNUMBER ] ) ) { T_RETURN T_VARIABLE($found) [ T_LNUMBER ] ; } T_IF ( ! T_EMPTY ( T_VARIABLE($found) [ T_LNUMBER ] ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($found) [ T_LNUMBER ] ) ) { T_RETURN T_VARIABLE($found) [ T_LNUMBER ] ; } T_VARIABLE($target) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($found) [ T_LNUMBER ] ) ) { T_VARIABLE($target) = . T_VARIABLE($found) [ T_LNUMBER ] . ; } T_IF ( T_STRING ( T_VARIABLE($found) [ T_LNUMBER ] , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($url) = T_STRING ( T_VARIABLE($found) [ T_LNUMBER ] ) ; } T_ELSE { T_VARIABLE($url) = T_VARIABLE($found) [ T_LNUMBER ] ; } T_RETURN . T_VARIABLE($url) . . T_VARIABLE($target) . ; } T_FUNCTION(PMA_replaceDocLink) ( T_VARIABLE($found) ) { T_VARIABLE($anchor) = T_VARIABLE($found) [ T_LNUMBER ] ; T_IF ( T_STRING ( , T_VARIABLE($anchor) , T_LNUMBER ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($page) = ; } T_ELSE T_IF ( T_STRING ( , T_VARIABLE($anchor) , T_LNUMBER ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($page) = ; } T_ELSE { T_VARIABLE($page) = ; } T_VARIABLE($link) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($page) , T_VARIABLE($anchor) ) ; T_RETURN . T_VARIABLE($link) . ; } T_FUNCTION(PMA_sanitize) ( T_VARIABLE($message) , T_VARIABLE($escape) = T_STRING , T_VARIABLE($safe) = T_STRING ) { T_IF ( ! T_VARIABLE($safe) ) { T_VARIABLE($message) = T_STRING ( T_VARIABLE($message) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; } T_VARIABLE($replace_pairs) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($message) = T_STRING ( T_VARIABLE($message) , T_VARIABLE($replace_pairs) ) ; T_VARIABLE($pattern) = ; T_VARIABLE($message) = T_STRING ( T_VARIABLE($pattern) , , T_VARIABLE($message) ) ; T_VARIABLE($message) = T_STRING ( , , T_VARIABLE($message) ) ; T_IF ( T_VARIABLE($escape) ) { T_VARIABLE($message) = T_STRING ( T_VARIABLE($message) ) ; } T_RETURN T_VARIABLE($message) ; } T_FUNCTION(PMA_sanitizeFilename) ( T_VARIABLE($filename) , T_VARIABLE($replaceDots) = T_STRING ) { T_VARIABLE($pattern) = ; T_IF ( ! T_VARIABLE($replaceDots) ) { T_VARIABLE($pattern) T_CONCAT_EQUAL ; } T_VARIABLE($pattern) T_CONCAT_EQUAL ; T_VARIABLE($filename) = T_STRING ( T_VARIABLE($pattern) , , T_VARIABLE($filename) ) ; T_RETURN T_VARIABLE($filename) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_VARIABLE($title) ; T_PUBLIC T_VARIABLE($author) ; T_PUBLIC T_VARIABLE($font) ; T_PUBLIC T_VARIABLE($fontSize) ; T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_STRING ( T_VARIABLE($paper) , T_VARIABLE($topMargin) , T_VARIABLE($bottomMargin) , T_VARIABLE($leftMargin) , T_VARIABLE($rightMargin) , T_VARIABLE($portrait) ) { T_IF ( T_VARIABLE($portrait) T_IS_EQUAL ) { T_VARIABLE($isPortrait) = ; } T_ELSE { T_VARIABLE($isPortrait) = ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($paper) . . T_VARIABLE($topMargin) . . T_VARIABLE($bottomMargin) . . T_VARIABLE($leftMargin) . . T_VARIABLE($rightMargin) . . T_VARIABLE($isPortrait) . ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_STRING ( T_VARIABLE($fileName) ) { T_IF ( T_STRING ( ) ) { T_STRING ( ) ; } T_VARIABLE($output) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( T_VARIABLE($fileName) . , , T_STRING ( T_VARIABLE($output) ) ) ; T_PRINT T_VARIABLE($output) ; } } T_STRING { T_PUBLIC T_VARIABLE($tableName) ; T_PUBLIC T_VARIABLE($fields) = T_ARRAY ( ) ; T_PUBLIC T_VARIABLE($x) , T_VARIABLE($y) ; T_PUBLIC T_VARIABLE($primary) = T_ARRAY ( ) ; T_PUBLIC T_VARIABLE($tableId) ; T_PUBLIC T_VARIABLE($tableColor) ; T_STRING ( T_VARIABLE($tableName) , T_VARIABLE($pageNumber) , T_VARIABLE($showKeys) = T_STRING ) { T_GLOBAL T_VARIABLE($dia) , T_VARIABLE($cfgRelation) , T_VARIABLE($db) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($tableName) ; T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tableName) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_STRING , T_STRING ) ; T_IF ( ! T_VARIABLE($result) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pageNumber) , , T_STRING ( T_STRING ( ) , T_VARIABLE($tableName) ) ) ; } T_IF ( T_VARIABLE($showKeys) ) { T_VARIABLE($indexes) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($db) ) ; T_VARIABLE($all_columns) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($indexes) T_AS T_VARIABLE($index) ) { T_VARIABLE($all_columns) = T_STRING ( T_VARIABLE($all_columns) , T_STRING ( T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) ) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($all_columns) ) ; } T_ELSE { T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($row) [ T_LNUMBER ] ; } } T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tableName) ) . . . T_VARIABLE($pageNumber) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_STRING , T_STRING ) ; T_IF ( ! T_VARIABLE($result) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pageNumber) , , T_STRING ( T_STRING ( ) , T_VARIABLE($tableName) ) ) ; } T_LIST ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_DOUBLE_CAST T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_DOUBLE_CAST T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($db) , T_VARIABLE($tableName) ) ; T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tableName) ) . , T_STRING , T_STRING ) ; T_IF ( T_STRING ( T_VARIABLE($result) ) > T_LNUMBER ) { T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($row) [ ] ; } } } T_STRING T_DOUBLE_COLON T_VARIABLE($objectId) T_PLUS_EQUAL T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_VARIABLE($objectId) ; } T_PUBLIC T_STRING ( T_VARIABLE($changeColor) ) { T_GLOBAL T_VARIABLE($dia) ; T_IF ( T_VARIABLE($changeColor) ) { T_VARIABLE($listOfColors) = T_ARRAY ( , , ) ; T_STRING ( T_VARIABLE($listOfColors) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = . T_VARIABLE($listOfColors) [ T_LNUMBER ] . ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } T_VARIABLE($factor) = T_DNUMBER ; T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( , . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . ) ; T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( . ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($factor) ) . . ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($factor) ) . . ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($factor) ) . . ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($factor) ) . . ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($factor) ) . . ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($factor) ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . ) ; T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( , ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($field) ) { T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($field) . ) ; T_UNSET ( T_VARIABLE($pm) ) ; T_VARIABLE($pm) = ; T_IF ( T_STRING ( T_VARIABLE($field) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($pm) = ; } T_IF ( T_VARIABLE($field) T_IS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($pm) = ; } T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($pm) . . T_VARIABLE($pm) . ) ; } T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_STRING { T_PUBLIC T_VARIABLE($srcConnPointsRight) ; T_PUBLIC T_VARIABLE($srcConnPointsLeft) ; T_PUBLIC T_VARIABLE($destConnPointsRight) ; T_PUBLIC T_VARIABLE($destConnPointsLeft) ; T_PUBLIC T_VARIABLE($masterTableId) ; T_PUBLIC T_VARIABLE($foreignTableId) ; T_PUBLIC T_VARIABLE($masterTablePos) ; T_PUBLIC T_VARIABLE($foreignTablePos) ; T_PUBLIC T_VARIABLE($referenceColor) ; T_STRING ( T_VARIABLE($master_table) , T_VARIABLE($master_field) , T_VARIABLE($foreign_table) , T_VARIABLE($foreign_field) ) { T_VARIABLE($src_pos) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($master_table) , T_VARIABLE($master_field) ) ; T_VARIABLE($dest_pos) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($foreign_table) , T_VARIABLE($foreign_field) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($master_table) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($foreign_table) T_OBJECT_OPERATOR T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($table) , T_VARIABLE($column) ) { T_VARIABLE($pos) = T_STRING ( T_VARIABLE($column) , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($value) = T_LNUMBER ; T_IF ( T_VARIABLE($pos) T_IS_NOT_EQUAL T_LNUMBER ) { T_RETURN T_ARRAY ( T_VARIABLE($pos) + T_VARIABLE($value) + T_VARIABLE($pos) , T_VARIABLE($pos) + T_VARIABLE($value) + T_VARIABLE($pos) + T_LNUMBER , T_VARIABLE($pos) ) ; } T_RETURN T_ARRAY ( T_VARIABLE($pos) + T_VARIABLE($value) , T_VARIABLE($pos) + T_VARIABLE($value) + T_LNUMBER , T_VARIABLE($pos) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($changeColor) ) { T_GLOBAL T_VARIABLE($dia) ; T_STRING T_DOUBLE_COLON T_VARIABLE($objectId) T_PLUS_EQUAL T_LNUMBER ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_STRING ; } } T_IF ( T_VARIABLE($changeColor) ) { T_VARIABLE($listOfColors) = T_ARRAY ( , , ) ; T_STRING ( T_VARIABLE($listOfColors) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = . T_VARIABLE($listOfColors) [ T_LNUMBER ] . ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( . T_STRING T_DOUBLE_COLON T_VARIABLE($objectId) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . ) ; } } T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_tables) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_relations) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_topMargin) = T_DNUMBER ; T_PRIVATE T_VARIABLE($_bottomMargin) = T_DNUMBER ; T_PRIVATE T_VARIABLE($_leftMargin) = T_DNUMBER ; T_PRIVATE T_VARIABLE($_rightMargin) = T_DNUMBER ; T_PUBLIC T_STATIC T_VARIABLE($objectId) = T_LNUMBER ; T_STRING ( ) { T_GLOBAL T_VARIABLE($dia) , T_VARIABLE($db) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($dia) = T_NEW T_STRING ( ) ; T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($alltables) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_FOREACH ( T_VARIABLE($alltables) T_AS T_VARIABLE($table) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] = T_NEW T_STRING ( T_VARIABLE($table) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } } T_VARIABLE($seen_a_relation) = T_STRING ; T_FOREACH ( T_VARIABLE($alltables) T_AS T_VARIABLE($one_table) ) { T_VARIABLE($exist_rel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($one_table) , , ) ; T_IF ( T_VARIABLE($exist_rel) ) { T_VARIABLE($seen_a_relation) = T_STRING ; T_FOREACH ( T_VARIABLE($exist_rel) T_AS T_VARIABLE($master_field) T_DOUBLE_ARROW T_VARIABLE($rel) ) { T_IF ( T_STRING ( T_VARIABLE($rel) [ ] , T_VARIABLE($alltables) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($one_table) , T_VARIABLE($master_field) , T_VARIABLE($rel) [ ] , T_VARIABLE($rel) [ ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } } } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($seen_a_relation) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($dia) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_EXIT ( ) ; } T_PRIVATE T_STRING ( T_VARIABLE($masterTable) , T_VARIABLE($masterField) , T_VARIABLE($foreignTable) , T_VARIABLE($foreignField) , T_VARIABLE($showKeys) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] = T_NEW T_STRING ( T_VARIABLE($masterTable) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($showKeys) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] = T_NEW T_STRING ( T_VARIABLE($foreignTable) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($showKeys) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_NEW T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] , T_VARIABLE($masterField) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] , T_VARIABLE($foreignField) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($changeColor) ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($relation) ) { T_VARIABLE($relation) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($changeColor) ) ; } } T_PRIVATE T_STRING ( T_VARIABLE($changeColor) ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($table) ) { T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($changeColor) ) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING { T_PUBLIC T_VARIABLE($font) ; T_PUBLIC T_VARIABLE($fontSize) ; T_PUBLIC T_VARIABLE($stringCommands) ; T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; } T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($value) . ; } T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($value) . ; } T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($value) . ; } T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($value) T_IS_EQUAL ) { T_VARIABLE($value) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($value) . ; } T_ELSE { T_VARIABLE($value) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($value) . ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; } T_STRING ( T_VARIABLE($value) , T_VARIABLE($size) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($value) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($size) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($value) . ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($size) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($size) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; } T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( T_VARIABLE($x_from) = T_LNUMBER , T_VARIABLE($y_from) = T_LNUMBER , T_VARIABLE($x_to) = T_LNUMBER , T_VARIABLE($y_to) = T_LNUMBER , T_VARIABLE($lineWidth) = T_LNUMBER ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL T_VARIABLE($lineWidth) . ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL T_VARIABLE($x_from) . . T_VARIABLE($y_from) . ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL T_VARIABLE($x_to) . . T_VARIABLE($y_to) . ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; } T_STRING ( T_VARIABLE($x_from) , T_VARIABLE($y_from) , T_VARIABLE($x_to) , T_VARIABLE($y_to) , T_VARIABLE($lineWidth) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL T_VARIABLE($lineWidth) . ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL T_VARIABLE($x_from) . . T_VARIABLE($y_from) . ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($y_to) . ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL T_VARIABLE($x_to) . ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($y_to) . ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; } T_STRING ( T_VARIABLE($x) , T_VARIABLE($y) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL T_VARIABLE($x) . . T_VARIABLE($y) . ; } T_STRING ( T_VARIABLE($text) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($text) . ; } T_STRING ( T_VARIABLE($text) , T_VARIABLE($x) , T_VARIABLE($y) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($x) , T_VARIABLE($y) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($text) ) ; } T_STRING ( T_VARIABLE($text) , T_VARIABLE($font) , T_VARIABLE($fontSize) ) { T_VARIABLE($count) = T_LNUMBER ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , , , , , , , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , , , , , , , , , , , , , , , , , , , , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , , , , , , , , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , , , , , , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($text) = T_STRING ( , , T_VARIABLE($text) ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( T_STRING ( T_STRING ( , , T_VARIABLE($text) ) ) * T_DNUMBER ) ; T_VARIABLE($modifier) = T_LNUMBER ; T_VARIABLE($font) = T_STRING ( T_VARIABLE($font) ) ; T_SWITCH ( T_VARIABLE($font) ) { T_CASE : T_CASE : T_BREAK ; T_CASE : T_CASE : T_CASE : T_CASE : T_VARIABLE($modifier) = T_DNUMBER ; T_BREAK ; T_CASE : T_VARIABLE($modifier) = T_DNUMBER ; T_BREAK ; } T_VARIABLE($textWidth) = T_VARIABLE($count) * T_VARIABLE($fontSize) ; T_RETURN T_STRING ( T_VARIABLE($textWidth) * T_VARIABLE($modifier) ) ; } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; } T_STRING ( T_VARIABLE($fileName) ) { T_VARIABLE($output) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( T_VARIABLE($fileName) . , , T_STRING ( T_VARIABLE($output) ) ) ; T_PRINT T_VARIABLE($output) ; } } T_STRING { T_PRIVATE T_VARIABLE($_tableName) ; T_PRIVATE T_VARIABLE($_showInfo) = T_STRING ; T_PUBLIC T_VARIABLE($width) = T_LNUMBER ; T_PUBLIC T_VARIABLE($height) ; T_PUBLIC T_VARIABLE($fields) = T_ARRAY ( ) ; T_PUBLIC T_VARIABLE($heightCell) = T_LNUMBER ; T_PUBLIC T_VARIABLE($currentCell) = T_LNUMBER ; T_PUBLIC T_VARIABLE($x) , T_VARIABLE($y) ; T_PUBLIC T_VARIABLE($primary) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($tableName) , T_VARIABLE($font) , T_VARIABLE($fontSize) , T_VARIABLE($pageNumber) , & T_VARIABLE($same_wide_width) , T_VARIABLE($showKeys) = T_STRING , T_VARIABLE($showInfo) = T_STRING ) { T_GLOBAL T_VARIABLE($eps) , T_VARIABLE($cfgRelation) , T_VARIABLE($db) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($tableName) ; T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tableName) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_STRING , T_STRING ) ; T_IF ( ! T_VARIABLE($result) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pageNumber) , , T_STRING ( T_STRING ( ) , T_VARIABLE($tableName) ) ) ; } T_IF ( T_VARIABLE($showKeys) ) { T_VARIABLE($indexes) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($db) ) ; T_VARIABLE($all_columns) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($indexes) T_AS T_VARIABLE($index) ) { T_VARIABLE($all_columns) = T_STRING ( T_VARIABLE($all_columns) , T_STRING ( T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) ) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($all_columns) ) ; } T_ELSE { T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($row) [ T_LNUMBER ] ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($showInfo) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($fontSize) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($font) , T_VARIABLE($fontSize) ) ; T_IF ( T_VARIABLE($same_wide_width) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($same_wide_width) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tableName) ) . . . T_VARIABLE($pageNumber) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_STRING , T_STRING ) ; T_IF ( ! T_VARIABLE($result) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pageNumber) , , T_STRING ( T_STRING ( ) , T_VARIABLE($tableName) ) ) ; } T_LIST ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_DOUBLE_CAST T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_DOUBLE_CAST T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($db) , T_VARIABLE($tableName) ) ; T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tableName) ) . , T_STRING , T_STRING ) ; T_IF ( T_STRING ( T_VARIABLE($result) ) > T_LNUMBER ) { T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($row) [ ] ; } } } } T_PRIVATE T_STRING ( ) { T_RETURN ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ? T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . . T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) : ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($font) , T_VARIABLE($fontSize) ) { T_GLOBAL T_VARIABLE($eps) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($field) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($field) , T_VARIABLE($font) , T_VARIABLE($fontSize) ) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_PLUS_EQUAL T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($font) , T_VARIABLE($fontSize) ) ; T_WHILE ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING < T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($font) , T_VARIABLE($fontSize) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_PLUS_EQUAL T_LNUMBER ; } } T_PRIVATE T_STRING ( T_VARIABLE($fontSize) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($fontSize) + T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) + T_LNUMBER ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($showColor) ) { T_GLOBAL T_VARIABLE($eps) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_LNUMBER ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($field) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_PLUS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($showColor) = ; T_IF ( T_VARIABLE($showColor) ) { T_IF ( T_STRING ( T_VARIABLE($field) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($showColor) = ; } T_IF ( T_VARIABLE($field) T_IS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($showColor) = ; } } T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_LNUMBER + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($field) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_LNUMBER + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } } } T_STRING { T_PUBLIC T_VARIABLE($xSrc) , T_VARIABLE($ySrc) ; T_PUBLIC T_VARIABLE($srcDir) ; T_PUBLIC T_VARIABLE($destDir) ; T_PUBLIC T_VARIABLE($xDest) , T_VARIABLE($yDest) ; T_PUBLIC T_VARIABLE($wTick) = T_LNUMBER ; T_STRING ( T_VARIABLE($master_table) , T_VARIABLE($master_field) , T_VARIABLE($foreign_table) , T_VARIABLE($foreign_field) ) { T_VARIABLE($src_pos) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($master_table) , T_VARIABLE($master_field) ) ; T_VARIABLE($dest_pos) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($foreign_table) , T_VARIABLE($foreign_field) ) ; T_VARIABLE($src_left) = T_VARIABLE($src_pos) [ T_LNUMBER ] - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($src_right) = T_VARIABLE($src_pos) [ T_LNUMBER ] + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($dest_left) = T_VARIABLE($dest_pos) [ T_LNUMBER ] - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($dest_right) = T_VARIABLE($dest_pos) [ T_LNUMBER ] + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($d1) = T_STRING ( T_VARIABLE($src_left) - T_VARIABLE($dest_left) ) ; T_VARIABLE($d2) = T_STRING ( T_VARIABLE($src_right) - T_VARIABLE($dest_left) ) ; T_VARIABLE($d3) = T_STRING ( T_VARIABLE($src_left) - T_VARIABLE($dest_right) ) ; T_VARIABLE($d4) = T_STRING ( T_VARIABLE($src_right) - T_VARIABLE($dest_right) ) ; T_VARIABLE($d) = T_STRING ( T_VARIABLE($d1) , T_VARIABLE($d2) , T_VARIABLE($d3) , T_VARIABLE($d4) ) ; T_IF ( T_VARIABLE($d) T_IS_EQUAL T_VARIABLE($d1) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($d) T_IS_EQUAL T_VARIABLE($d2) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($d) T_IS_EQUAL T_VARIABLE($d3) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] + T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] + T_LNUMBER ; } T_PRIVATE T_STRING ( T_VARIABLE($table) , T_VARIABLE($column) ) { T_VARIABLE($pos) = T_STRING ( T_VARIABLE($column) , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_ARRAY ( T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING + ( T_VARIABLE($pos) + T_DNUMBER ) * T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; } T_PUBLIC T_STRING ( T_VARIABLE($changeColor) ) { T_GLOBAL T_VARIABLE($eps) ; T_IF ( T_VARIABLE($changeColor) ) { T_VARIABLE($listOfColors) = T_ARRAY ( , , , , , , ) ; T_STRING ( T_VARIABLE($listOfColors) ) ; T_VARIABLE($color) = T_VARIABLE($listOfColors) [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($color) = ; } T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) ; T_VARIABLE($root2) = T_LNUMBER * T_STRING ( T_LNUMBER ) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_DNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * ( T_DNUMBER - T_LNUMBER / T_VARIABLE($root2) ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($root2) , T_LNUMBER ) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_DNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * ( T_DNUMBER - T_LNUMBER / T_VARIABLE($root2) ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($root2) , T_LNUMBER ) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * ( T_DNUMBER + T_LNUMBER / T_VARIABLE($root2) ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($root2) , T_LNUMBER ) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * ( T_DNUMBER + T_LNUMBER / T_VARIABLE($root2) ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($root2) , T_LNUMBER ) ; } } T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_tables) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_relations) = T_ARRAY ( ) ; T_STRING ( ) { T_GLOBAL T_VARIABLE($eps) , T_VARIABLE($db) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($eps) = T_NEW T_STRING ( ) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($db) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( . T_STRING ) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($alltables) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_FOREACH ( T_VARIABLE($alltables) T_AS T_VARIABLE($table) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] = T_NEW T_STRING ( T_VARIABLE($table) , T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } } T_VARIABLE($seen_a_relation) = T_STRING ; T_FOREACH ( T_VARIABLE($alltables) T_AS T_VARIABLE($one_table) ) { T_VARIABLE($exist_rel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($one_table) , , ) ; T_IF ( T_VARIABLE($exist_rel) ) { T_VARIABLE($seen_a_relation) = T_STRING ; T_FOREACH ( T_VARIABLE($exist_rel) T_AS T_VARIABLE($master_field) T_DOUBLE_ARROW T_VARIABLE($rel) ) { T_IF ( T_STRING ( T_VARIABLE($rel) [ ] , T_VARIABLE($alltables) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($one_table) , T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($master_field) , T_VARIABLE($rel) [ ] , T_VARIABLE($rel) [ ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } } } } T_IF ( T_VARIABLE($seen_a_relation) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($eps) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_EXIT ( ) ; } T_PRIVATE T_STRING ( T_VARIABLE($masterTable) , T_VARIABLE($font) , T_VARIABLE($fontSize) , T_VARIABLE($masterField) , T_VARIABLE($foreignTable) , T_VARIABLE($foreignField) , T_VARIABLE($showInfo) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] = T_NEW T_STRING ( T_VARIABLE($masterTable) , T_VARIABLE($font) , T_VARIABLE($fontSize) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING , T_VARIABLE($showInfo) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] = T_NEW T_STRING ( T_VARIABLE($foreignTable) , T_VARIABLE($font) , T_VARIABLE($fontSize) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING , T_VARIABLE($showInfo) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_NEW T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] , T_VARIABLE($masterField) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] , T_VARIABLE($foreignField) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($changeColor) ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($relation) ) { T_VARIABLE($relation) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($changeColor) ) ; } } T_PRIVATE T_STRING ( T_VARIABLE($changeColor) ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($table) ) { T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($changeColor) ) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PRIVATE T_VARIABLE($_pageTitle) ; T_PUBLIC T_VARIABLE($showGrid) ; T_PUBLIC T_VARIABLE($showColor) ; T_PUBLIC T_VARIABLE($tableDimension) ; T_PUBLIC T_VARIABLE($sameWide) ; T_PUBLIC T_VARIABLE($withDoc) ; T_PUBLIC T_VARIABLE($showKeys) ; T_PUBLIC T_VARIABLE($orientation) ; T_PUBLIC T_VARIABLE($paper) ; T_PUBLIC T_VARIABLE($pageNumber) ; T_PUBLIC T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ISSET ( T_VARIABLE($value) ) ? T_VARIABLE($value) : T_LNUMBER ; } T_PUBLIC T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ( T_ISSET ( T_VARIABLE($value) ) T_BOOLEAN_AND T_VARIABLE($value) T_IS_EQUAL ) ? T_LNUMBER : T_LNUMBER ; } T_PUBLIC T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ( T_ISSET ( T_VARIABLE($value) ) T_BOOLEAN_AND T_VARIABLE($value) T_IS_EQUAL ) ? T_LNUMBER : T_LNUMBER ; } T_PUBLIC T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ( T_ISSET ( T_VARIABLE($value) ) T_BOOLEAN_AND T_VARIABLE($value) T_IS_EQUAL ) ? T_LNUMBER : T_LNUMBER ; } T_PUBLIC T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ( T_ISSET ( T_VARIABLE($value) ) T_BOOLEAN_AND T_VARIABLE($value) T_IS_EQUAL ) ? T_LNUMBER : T_LNUMBER ; } T_PUBLIC T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ( T_ISSET ( T_VARIABLE($value) ) T_BOOLEAN_AND T_VARIABLE($value) T_IS_EQUAL ) ? T_LNUMBER : T_LNUMBER ; } T_PUBLIC T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ( T_ISSET ( T_VARIABLE($value) ) T_BOOLEAN_AND T_VARIABLE($value) T_IS_EQUAL ) ? T_LNUMBER : T_LNUMBER ; } T_PUBLIC T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ( T_ISSET ( T_VARIABLE($value) ) T_BOOLEAN_AND T_VARIABLE($value) T_IS_EQUAL ) ? : ; } T_PUBLIC T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ISSET ( T_VARIABLE($value) ) ? T_VARIABLE($value) : ; } T_PUBLIC T_STRING ( T_VARIABLE($title) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($title) ; } T_PUBLIC T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($value) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($pageNumber) ) { T_GLOBAL T_VARIABLE($cfgRelation) ; T_VARIABLE($tab_sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_VARIABLE($pageNumber) ; T_VARIABLE($tab_rs) = T_STRING ( T_VARIABLE($tab_sql) , T_STRING , T_STRING ) ; T_IF ( ! T_VARIABLE($tab_rs) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($tab_rs) ) > T_LNUMBER ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( ) ) ; } T_WHILE ( T_VARIABLE($curr_table) = @ T_STRING ( T_VARIABLE($tab_rs) ) ) { T_VARIABLE($alltables) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($curr_table) [ ] ) ; } T_RETURN T_VARIABLE($alltables) ; } T_STRING ( T_VARIABLE($pageNumber) , T_VARIABLE($type) = , T_VARIABLE($error_message) = ) { T_GLOBAL T_VARIABLE($db) ; T_ECHO . T_STRING ( ) . T_VARIABLE($type) . . ; T_IF ( ! T_EMPTY ( T_VARIABLE($error_message) ) ) { T_VARIABLE($error_message) = T_STRING ( T_VARIABLE($error_message) ) ; } T_ECHO . ; T_ECHO . T_VARIABLE($error_message) . ; T_ECHO . ; T_ECHO . T_STRING ( T_VARIABLE($db) ) . . T_VARIABLE($pageNumber) . . . T_STRING ( ) . ; T_ECHO ; T_EXIT ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_VAR T_VARIABLE($_xMin) ; T_VAR T_VARIABLE($_yMin) ; T_VAR T_VARIABLE($leftMargin) = T_LNUMBER ; T_VAR T_VARIABLE($topMargin) = T_LNUMBER ; T_VAR T_VARIABLE($scale) ; T_VAR T_VARIABLE($PMA_links) ; T_VAR T_VARIABLE($Outlines) = T_ARRAY ( ) ; T_VAR T_VARIABLE($def_outlines) ; T_VAR T_VARIABLE($widths) ; T_PRIVATE T_VARIABLE($_ff) = T_STRING ; T_PUBLIC T_STRING ( T_VARIABLE($c_margin) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($c_margin) ; } T_STRING ( T_VARIABLE($scale) = T_LNUMBER , T_VARIABLE($xMin) = T_LNUMBER , T_VARIABLE($yMin) = T_LNUMBER , T_VARIABLE($leftMargin) = - T_LNUMBER , T_VARIABLE($topMargin) = - T_LNUMBER ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($scale) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($xMin) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($yMin) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL - T_LNUMBER ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($leftMargin) ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL - T_LNUMBER ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($topMargin) ; } } T_STRING ( T_VARIABLE($w) , T_VARIABLE($h) = T_LNUMBER , T_VARIABLE($txt) = , T_VARIABLE($border) = T_LNUMBER , T_VARIABLE($ln) = T_LNUMBER , T_VARIABLE($align) = , T_VARIABLE($fill) = T_LNUMBER , T_VARIABLE($link) = ) { T_VARIABLE($h) = T_VARIABLE($h) / T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($w) = T_VARIABLE($w) / T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($w) , T_VARIABLE($h) , T_VARIABLE($txt) , T_VARIABLE($border) , T_VARIABLE($ln) , T_VARIABLE($align) , T_VARIABLE($fill) , T_VARIABLE($link) ) ; } T_STRING ( T_VARIABLE($x1) , T_VARIABLE($y1) , T_VARIABLE($x2) , T_VARIABLE($y2) ) { T_VARIABLE($x1) = ( T_VARIABLE($x1) - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) / T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($y1) = ( T_VARIABLE($y1) - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) / T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($x2) = ( T_VARIABLE($x2) - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) / T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($y2) = ( T_VARIABLE($y2) - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) / T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($x1) , T_VARIABLE($y1) , T_VARIABLE($x2) , T_VARIABLE($y2) ) ; } T_STRING ( T_VARIABLE($x) , T_VARIABLE($y) ) { T_VARIABLE($x) = ( T_VARIABLE($x) - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) / T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($y) = ( T_VARIABLE($y) - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) / T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($x) , T_VARIABLE($y) ) ; } T_STRING ( T_VARIABLE($x) ) { T_VARIABLE($x) = ( T_VARIABLE($x) - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) / T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($x) ) ; } T_STRING ( T_VARIABLE($size) ) { T_VARIABLE($size) = T_VARIABLE($size) / T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($size) ) ; } T_STRING ( T_VARIABLE($width) ) { T_VARIABLE($width) = T_VARIABLE($width) / T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($width) ) ; } T_STRING ( ) { T_GLOBAL T_VARIABLE($cfgRelation) , T_VARIABLE($db) , T_VARIABLE($pdf_page_number) , T_VARIABLE($with_doc) ; T_IF ( T_VARIABLE($with_doc) ) { T_VARIABLE($test_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_VARIABLE($pdf_page_number) . ; T_VARIABLE($test_rs) = T_STRING ( T_VARIABLE($test_query) ) ; T_VARIABLE($pages) = @ T_STRING ( T_VARIABLE($test_rs) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , , T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( T_VARIABLE($pages) [ ] ) , , T_LNUMBER , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_STRING ( ) { T_GLOBAL T_VARIABLE($with_doc) ; T_IF ( T_VARIABLE($with_doc) ) { T_STRING T_DOUBLE_COLON T_STRING ( ) ; } } T_STRING ( T_VARIABLE($w) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($w) ; } T_STRING ( T_VARIABLE($data) , T_VARIABLE($links) ) { T_VARIABLE($nb) = T_LNUMBER ; T_VARIABLE($data_cnt) = T_STRING ( T_VARIABLE($data) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($data_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($nb) = T_STRING ( T_VARIABLE($nb) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] , T_VARIABLE($data) [ T_VARIABLE($i) ] ) ) ; } T_VARIABLE($il) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($h) = ( T_VARIABLE($il) + T_LNUMBER ) * T_VARIABLE($nb) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($h) ) ; T_VARIABLE($data_cnt) = T_STRING ( T_VARIABLE($data) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($data_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($w) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] ; T_VARIABLE($x) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($y) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($x) , T_VARIABLE($y) , T_VARIABLE($w) , T_VARIABLE($h) ) ; T_IF ( T_ISSET ( T_VARIABLE($links) [ T_VARIABLE($i) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($x) , T_VARIABLE($y) , T_VARIABLE($w) , T_VARIABLE($h) , T_VARIABLE($links) [ T_VARIABLE($i) ] ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($w) , T_VARIABLE($il) + T_LNUMBER , T_VARIABLE($data) [ T_VARIABLE($i) ] , T_LNUMBER , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($x) + T_VARIABLE($w) , T_VARIABLE($y) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($h) ) ; } T_STRING ( T_VARIABLE($w) , T_VARIABLE($txt) ) { T_VARIABLE($cw) = & T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ; T_IF ( T_VARIABLE($w) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($w) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($wmax) = ( T_VARIABLE($w) - T_LNUMBER * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) * T_LNUMBER / T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($s) = T_STRING ( , , T_VARIABLE($txt) ) ; T_VARIABLE($nb) = T_STRING ( T_VARIABLE($s) ) ; T_IF ( T_VARIABLE($nb) > T_LNUMBER T_LOGICAL_AND T_VARIABLE($s) [ T_VARIABLE($nb) - T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($nb) T_DEC ; } T_VARIABLE($sep) = - T_LNUMBER ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($l) = T_LNUMBER ; T_VARIABLE($nl) = T_LNUMBER ; T_WHILE ( T_VARIABLE($i) < T_VARIABLE($nb) ) { T_VARIABLE($c) = T_VARIABLE($s) [ T_VARIABLE($i) ] ; T_IF ( T_VARIABLE($c) T_IS_EQUAL ) { T_VARIABLE($i) T_INC ; T_VARIABLE($sep) = - T_LNUMBER ; T_VARIABLE($j) = T_VARIABLE($i) ; T_VARIABLE($l) = T_LNUMBER ; T_VARIABLE($nl) T_INC ; T_CONTINUE ; } T_IF ( T_VARIABLE($c) T_IS_EQUAL ) { T_VARIABLE($sep) = T_VARIABLE($i) ; } T_VARIABLE($l) T_PLUS_EQUAL T_ISSET ( T_VARIABLE($cw) [ T_STRING ( T_VARIABLE($c) ) ] ) ? T_VARIABLE($cw) [ T_STRING ( T_VARIABLE($c) ) ] : T_LNUMBER ; T_IF ( T_VARIABLE($l) > T_VARIABLE($wmax) ) { T_IF ( T_VARIABLE($sep) T_IS_EQUAL - T_LNUMBER ) { T_IF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($j) ) { T_VARIABLE($i) T_INC ; } } T_ELSE { T_VARIABLE($i) = T_VARIABLE($sep) + T_LNUMBER ; } T_VARIABLE($sep) = - T_LNUMBER ; T_VARIABLE($j) = T_VARIABLE($i) ; T_VARIABLE($l) = T_LNUMBER ; T_VARIABLE($nl) T_INC ; } T_ELSE { T_VARIABLE($i) T_INC ; } } T_RETURN T_VARIABLE($nl) ; } } T_STRING { T_PRIVATE T_VARIABLE($_tableName) ; T_PRIVATE T_VARIABLE($_showInfo) = T_STRING ; T_PUBLIC T_VARIABLE($nb_fiels) ; T_PUBLIC T_VARIABLE($width) = T_LNUMBER ; T_PUBLIC T_VARIABLE($height) ; T_PUBLIC T_VARIABLE($fields) = T_ARRAY ( ) ; T_PUBLIC T_VARIABLE($heightCell) = T_LNUMBER ; T_PUBLIC T_VARIABLE($x) , T_VARIABLE($y) ; T_PUBLIC T_VARIABLE($primary) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_ff) = T_STRING ; T_STRING ( T_VARIABLE($tableName) , T_VARIABLE($fontSize) , T_VARIABLE($pageNumber) , & T_VARIABLE($sameWideWidth) , T_VARIABLE($showKeys) = T_STRING , T_VARIABLE($showInfo) = T_STRING ) { T_GLOBAL T_VARIABLE($pdf) , T_VARIABLE($cfgRelation) , T_VARIABLE($db) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($tableName) ; T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tableName) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_STRING , T_STRING ) ; T_IF ( ! T_VARIABLE($result) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($tableName) ) ) ; } T_IF ( T_VARIABLE($showKeys) ) { T_VARIABLE($indexes) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($db) ) ; T_VARIABLE($all_columns) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($indexes) T_AS T_VARIABLE($index) ) { T_VARIABLE($all_columns) = T_STRING ( T_VARIABLE($all_columns) , T_STRING ( T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) ) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($all_columns) ) ; } T_ELSE { T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($row) [ T_LNUMBER ] ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($showInfo) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($fontSize) ) ; T_IF ( T_VARIABLE($sameWideWidth) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($sameWideWidth) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tableName) ) . . . T_VARIABLE($pageNumber) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_STRING , T_STRING ) ; T_IF ( ! T_VARIABLE($result) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($tableName) ) ) ; } T_LIST ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_DOUBLE_CAST T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_DOUBLE_CAST T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($db) , T_VARIABLE($tableName) ) ; T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tableName) ) . , T_STRING , T_STRING ) ; T_IF ( T_STRING ( T_VARIABLE($result) ) > T_LNUMBER ) { T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($row) [ ] ; } } } } T_PRIVATE T_STRING ( ) { T_VARIABLE($ret) = ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($ret) = T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_RETURN T_VARIABLE($ret) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($fontSize) ) { T_GLOBAL T_VARIABLE($pdf) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($field) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($field) ) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_PLUS_EQUAL T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , , T_VARIABLE($fontSize) ) ; T_WHILE ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING < T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_PLUS_EQUAL T_LNUMBER ; } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , , T_VARIABLE($fontSize) ) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) + T_LNUMBER ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($fontSize) , T_VARIABLE($withDoc) , T_VARIABLE($setColor) = T_LNUMBER ) { T_GLOBAL T_VARIABLE($pdf) , T_VARIABLE($withDoc) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , , T_VARIABLE($fontSize) ) ; T_IF ( T_VARIABLE($setColor) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; } T_IF ( T_VARIABLE($withDoc) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] , - T_LNUMBER ) ; } T_ELSE { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] = ; } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_LNUMBER , T_LNUMBER , , T_VARIABLE($setColor) , T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ ] ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , , T_VARIABLE($fontSize) ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($field) ) { T_IF ( T_VARIABLE($setColor) ) { T_IF ( T_STRING ( T_VARIABLE($field) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; } T_IF ( T_VARIABLE($field) T_IS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; } } T_IF ( T_VARIABLE($withDoc) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($field) ] , - T_LNUMBER ) ; } T_ELSE { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($field) ] = ; } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($field) , T_LNUMBER , T_LNUMBER , , T_VARIABLE($setColor) , T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($field) ] ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; } } } T_STRING { T_PUBLIC T_VARIABLE($xSrc) , T_VARIABLE($ySrc) ; T_PUBLIC T_VARIABLE($srcDir) ; T_PUBLIC T_VARIABLE($destDir) ; T_PUBLIC T_VARIABLE($xDest) , T_VARIABLE($yDest) ; T_PUBLIC T_VARIABLE($wTick) = T_LNUMBER ; T_STRING ( T_VARIABLE($master_table) , T_VARIABLE($master_field) , T_VARIABLE($foreign_table) , T_VARIABLE($foreign_field) ) { T_VARIABLE($src_pos) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($master_table) , T_VARIABLE($master_field) ) ; T_VARIABLE($dest_pos) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($foreign_table) , T_VARIABLE($foreign_field) ) ; T_VARIABLE($src_left) = T_VARIABLE($src_pos) [ T_LNUMBER ] - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($src_right) = T_VARIABLE($src_pos) [ T_LNUMBER ] + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($dest_left) = T_VARIABLE($dest_pos) [ T_LNUMBER ] - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($dest_right) = T_VARIABLE($dest_pos) [ T_LNUMBER ] + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($d1) = T_STRING ( T_VARIABLE($src_left) - T_VARIABLE($dest_left) ) ; T_VARIABLE($d2) = T_STRING ( T_VARIABLE($src_right) - T_VARIABLE($dest_left) ) ; T_VARIABLE($d3) = T_STRING ( T_VARIABLE($src_left) - T_VARIABLE($dest_right) ) ; T_VARIABLE($d4) = T_STRING ( T_VARIABLE($src_right) - T_VARIABLE($dest_right) ) ; T_VARIABLE($d) = T_STRING ( T_VARIABLE($d1) , T_VARIABLE($d2) , T_VARIABLE($d3) , T_VARIABLE($d4) ) ; T_IF ( T_VARIABLE($d) T_IS_EQUAL T_VARIABLE($d1) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($d) T_IS_EQUAL T_VARIABLE($d2) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($d) T_IS_EQUAL T_VARIABLE($d3) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; } T_PRIVATE T_STRING ( T_VARIABLE($table) , T_VARIABLE($column) ) { T_VARIABLE($pos) = T_STRING ( T_VARIABLE($column) , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_ARRAY ( T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING + ( T_VARIABLE($pos) + T_DNUMBER ) * T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; } T_PUBLIC T_STRING ( T_VARIABLE($changeColor) , T_VARIABLE($i) ) { T_GLOBAL T_VARIABLE($pdf) ; T_IF ( T_VARIABLE($changeColor) ) { T_VARIABLE($d) = T_VARIABLE($i) \% T_LNUMBER ; T_VARIABLE($j) = ( T_VARIABLE($i) - T_VARIABLE($d) ) / T_LNUMBER ; T_VARIABLE($j) = T_VARIABLE($j) \% T_LNUMBER ; T_VARIABLE($j) T_INC ; T_VARIABLE($case) = T_ARRAY ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER ) , T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER ) , T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER ) , T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER ) , T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER ) , T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) ; T_LIST ( T_VARIABLE($a) , T_VARIABLE($b) , T_VARIABLE($c) ) = T_VARIABLE($case) [ T_VARIABLE($d) ] ; T_VARIABLE($e) = ( T_LNUMBER - ( T_VARIABLE($j) - T_LNUMBER ) / T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($a) * T_LNUMBER * T_VARIABLE($e) , T_VARIABLE($b) * T_LNUMBER * T_VARIABLE($e) , T_VARIABLE($c) * T_LNUMBER * T_VARIABLE($e) ) ; } T_ELSE { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_DNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_DNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($root2) = T_LNUMBER * T_STRING ( T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_DNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * ( T_DNUMBER - T_LNUMBER / T_VARIABLE($root2) ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($root2) ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_DNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * ( T_DNUMBER - T_LNUMBER / T_VARIABLE($root2) ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($root2) ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * ( T_DNUMBER + T_LNUMBER / T_VARIABLE($root2) ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($root2) ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * ( T_DNUMBER + T_LNUMBER / T_VARIABLE($root2) ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($root2) ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; } } T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_tables) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_ff) = T_STRING ; T_PRIVATE T_VARIABLE($_xMax) = T_LNUMBER ; T_PRIVATE T_VARIABLE($_yMax) = T_LNUMBER ; T_PRIVATE T_VARIABLE($_scale) ; T_PRIVATE T_VARIABLE($_xMin) = T_LNUMBER ; T_PRIVATE T_VARIABLE($_yMin) = T_LNUMBER ; T_PRIVATE T_VARIABLE($_topMargin) = T_LNUMBER ; T_PRIVATE T_VARIABLE($_bottomMargin) = T_LNUMBER ; T_PRIVATE T_VARIABLE($_leftMargin) = T_LNUMBER ; T_PRIVATE T_VARIABLE($_rightMargin) = T_LNUMBER ; T_PRIVATE T_VARIABLE($_tablewidth) ; T_STRING ( ) { T_GLOBAL T_VARIABLE($pdf) , T_VARIABLE($db) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($pdf) = T_NEW T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($alltables) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( , T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($alltables) ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ ] , - T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_FOREACH ( T_VARIABLE($alltables) T_AS T_VARIABLE($table) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] = T_NEW T_STRING ( T_VARIABLE($table) , T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_STRING ( ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) / ( T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) , ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) / ( T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) * T_LNUMBER ) / T_LNUMBER ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_DNUMBER ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($seen_a_relation) = T_STRING ; T_FOREACH ( T_VARIABLE($alltables) T_AS T_VARIABLE($one_table) ) { T_VARIABLE($exist_rel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($one_table) , , ) ; T_IF ( T_VARIABLE($exist_rel) ) { T_VARIABLE($seen_a_relation) = T_STRING ; T_FOREACH ( T_VARIABLE($exist_rel) T_AS T_VARIABLE($master_field) T_DOUBLE_ARROW T_VARIABLE($rel) ) { T_IF ( T_STRING ( T_VARIABLE($rel) [ ] , T_VARIABLE($alltables) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($one_table) , T_VARIABLE($master_field) , T_VARIABLE($rel) [ ] , T_VARIABLE($rel) [ ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } } } } T_IF ( T_VARIABLE($seen_a_relation) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_EXIT ( ) ; } T_PRIVATE T_STRING ( T_VARIABLE($table) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; } T_PRIVATE T_STRING ( T_VARIABLE($masterTable) , T_VARIABLE($masterField) , T_VARIABLE($foreignTable) , T_VARIABLE($foreignField) , T_VARIABLE($showInfo) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] = T_NEW T_STRING ( T_VARIABLE($masterTable) , T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING , T_VARIABLE($showInfo) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] = T_NEW T_STRING ( T_VARIABLE($foreignTable) , T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING , T_VARIABLE($showInfo) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_NEW T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] , T_VARIABLE($masterField) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] , T_VARIABLE($foreignField) ) ; } T_PRIVATE T_STRING ( ) { T_GLOBAL T_VARIABLE($pdf) ; T_VARIABLE($gridSize) = T_LNUMBER ; T_VARIABLE($labelHeight) = T_LNUMBER ; T_VARIABLE($labelWidth) = T_LNUMBER ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($topSpace) = T_LNUMBER ; T_VARIABLE($bottomSpace) = T_LNUMBER ; } T_ELSE { T_VARIABLE($topSpace) = T_LNUMBER ; T_VARIABLE($bottomSpace) = T_LNUMBER ; } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_FOR ( T_VARIABLE($l) = T_LNUMBER ; T_VARIABLE($l) T_IS_SMALLER_OR_EQUAL T_STRING ( ( T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) - T_VARIABLE($topSpace) - T_VARIABLE($bottomSpace) ) / T_VARIABLE($gridSize) ) ; T_VARIABLE($l) T_INC ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_VARIABLE($l) * T_VARIABLE($gridSize) + T_VARIABLE($topSpace) , T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($l) * T_VARIABLE($gridSize) + T_VARIABLE($topSpace) ) ; T_IF ( T_VARIABLE($l) > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($l) T_IS_SMALLER_OR_EQUAL T_STRING ( ( T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) - T_VARIABLE($topSpace) - T_VARIABLE($bottomSpace) - T_VARIABLE($labelHeight) ) / T_VARIABLE($gridSize) ) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_VARIABLE($l) * T_VARIABLE($gridSize) + T_VARIABLE($topSpace) ) ; T_VARIABLE($label) = T_STRING_CAST T_STRING ( , ( T_VARIABLE($l) * T_VARIABLE($gridSize) + T_VARIABLE($topSpace) - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($labelWidth) , T_VARIABLE($labelHeight) , . T_VARIABLE($label) ) ; } } T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) T_IS_SMALLER_OR_EQUAL T_STRING ( T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) / T_VARIABLE($gridSize) ) ; T_VARIABLE($j) T_INC ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($j) * T_VARIABLE($gridSize) , T_VARIABLE($topSpace) , T_VARIABLE($j) * T_VARIABLE($gridSize) , T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) - T_VARIABLE($bottomSpace) ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($j) * T_VARIABLE($gridSize) , T_VARIABLE($topSpace) ) ; T_VARIABLE($label) = T_STRING_CAST T_STRING ( , ( T_VARIABLE($j) * T_VARIABLE($gridSize) - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($labelWidth) , T_VARIABLE($labelHeight) , T_VARIABLE($label) ) ; } } T_PRIVATE T_STRING ( T_VARIABLE($changeColor) ) { T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($relation) ) { T_VARIABLE($relation) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($changeColor) , T_VARIABLE($i) ) ; T_VARIABLE($i) T_INC ; } } T_PRIVATE T_STRING ( T_VARIABLE($changeColor) = T_LNUMBER ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($table) ) { T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ( T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($changeColor) ) ; } } T_PRIVATE T_STRING ( T_VARIABLE($pageNumber) ) { T_GLOBAL T_VARIABLE($pdf) , T_VARIABLE($cfgRelation) ; T_VARIABLE($_name_sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_VARIABLE($pageNumber) ; T_VARIABLE($_name_rs) = T_STRING ( T_VARIABLE($_name_sql) ) ; T_IF ( T_VARIABLE($_name_rs) ) { T_VARIABLE($_name_row) = T_STRING ( T_VARIABLE($_name_rs) ) ; T_VARIABLE($filename) = T_VARIABLE($_name_row) [ T_LNUMBER ] . ; } T_IF ( T_EMPTY ( T_VARIABLE($filename) ) ) { T_VARIABLE($filename) = T_VARIABLE($pageNumber) . ; } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($filename) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($alltables) ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($pdf) , T_VARIABLE($orientation) , T_VARIABLE($paper) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($alltables) T_AS T_VARIABLE($table) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($table) ] [ ] = T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) . . T_STRING ( , T_VARIABLE($i) ) . , T_LNUMBER , T_LNUMBER , , T_LNUMBER , T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($table) ] [ ] ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_VARIABLE($i) . . T_VARIABLE($table) , T_LNUMBER , T_LNUMBER , , T_LNUMBER , T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($table) ] [ ] ) ; T_VARIABLE($fields) = T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($table) ) ; T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($row) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($field_name) = T_VARIABLE($row) [ ] ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($table) ] [ T_VARIABLE($field_name) ] = T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($i) T_INC ; } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ ] = T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) . , T_LNUMBER , T_LNUMBER , , T_LNUMBER , T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ ] ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_VARIABLE($i) . . T_STRING ( ) , T_LNUMBER , T_LNUMBER , , T_LNUMBER , T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ ] ) ; T_VARIABLE($z) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($alltables) T_AS T_VARIABLE($table) ) { T_VARIABLE($z) T_INC ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_STRING , T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( . T_STRING ( , T_VARIABLE($z) ) . , T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($table) ] [ ] = T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($table) ] [ ] , - T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , , T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_VARIABLE($z) . . T_VARIABLE($table) , T_LNUMBER , T_LNUMBER , , T_LNUMBER , T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($table) ] [ ] ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , , T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_VARIABLE($comments) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($mime_map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_STRING ) ; } T_VARIABLE($showtable) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($show_comment) = T_ISSET ( T_VARIABLE($showtable) [ ] ) ? T_VARIABLE($showtable) [ ] : ; T_VARIABLE($create_time) = T_ISSET ( T_VARIABLE($showtable) [ ] ) ? T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($showtable) [ ] ) ) : ; T_VARIABLE($update_time) = T_ISSET ( T_VARIABLE($showtable) [ ] ) ? T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($showtable) [ ] ) ) : ; T_VARIABLE($check_time) = T_ISSET ( T_VARIABLE($showtable) [ ] ) ? T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($showtable) [ ] ) ) : ; T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ) ; T_VARIABLE($primary) = ; T_VARIABLE($indexes) = T_ARRAY ( ) ; T_VARIABLE($lastIndex) = ; T_VARIABLE($indexes_info) = T_ARRAY ( ) ; T_VARIABLE($indexes_data) = T_ARRAY ( ) ; T_VARIABLE($pk_array) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($primary) T_CONCAT_EQUAL T_VARIABLE($row) [ ] . ; T_VARIABLE($pk_array) [ T_VARIABLE($row) [ ] ] = T_LNUMBER ; } T_IF ( T_VARIABLE($row) [ ] T_IS_NOT_EQUAL T_VARIABLE($lastIndex) ) { T_VARIABLE($indexes) [ ] = T_VARIABLE($row) [ ] ; T_VARIABLE($lastIndex) = T_VARIABLE($row) [ ] ; } T_VARIABLE($indexes_info) [ T_VARIABLE($row) [ ] ] [ ] [ ] = T_VARIABLE($row) [ ] ; T_VARIABLE($indexes_info) [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($indexes_info) [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) [ ] ; } T_VARIABLE($indexes_info) [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) [ ] ; T_VARIABLE($indexes_data) [ T_VARIABLE($row) [ ] ] [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($indexes_data) [ T_VARIABLE($row) [ ] ] [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) [ ] ; } } T_IF ( T_VARIABLE($result) ) { T_STRING ( T_VARIABLE($result) ) ; } T_VARIABLE($columns) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($cfgRelation) [ ] ) ) { T_VARIABLE($res_rel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_STRING ( T_VARIABLE($res_rel) ) > T_LNUMBER ) { T_VARIABLE($have_rel) = T_STRING ; } T_ELSE { T_VARIABLE($have_rel) = T_STRING ; } } T_ELSE { T_VARIABLE($have_rel) = T_STRING ; } T_VARIABLE($break) = T_STRING ; T_IF ( ! T_EMPTY ( T_VARIABLE($show_comment) ) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) . . T_VARIABLE($show_comment) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($break) = T_STRING ; } T_IF ( ! T_EMPTY ( T_VARIABLE($create_time) ) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) . . T_VARIABLE($create_time) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($break) = T_STRING ; } T_IF ( ! T_EMPTY ( T_VARIABLE($update_time) ) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) . . T_VARIABLE($update_time) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($break) = T_STRING ; } T_IF ( ! T_EMPTY ( T_VARIABLE($check_time) ) ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) . . T_VARIABLE($check_time) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($break) = T_STRING ; } T_IF ( T_VARIABLE($break) T_IS_EQUAL T_STRING ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) ; T_IF ( T_ISSET ( T_VARIABLE($orientation) ) T_BOOLEAN_AND T_VARIABLE($orientation) T_IS_EQUAL ) { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_IF ( T_VARIABLE($paper) T_IS_EQUAL ) { T_VARIABLE($comments_width) = T_LNUMBER ; } T_ELSE { T_VARIABLE($comments_width) = T_LNUMBER ; } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($comments_width) , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_VARIABLE($comments_width) , T_LNUMBER ) ) ; } T_ELSE { T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , T_STRING ( ) , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_LNUMBER , T_LNUMBER , , T_LNUMBER , T_LNUMBER , ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) ; } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($row) ) { T_VARIABLE($extracted_columnspec) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) ; T_VARIABLE($type) = T_VARIABLE($extracted_columnspec) [ ] ; T_VARIABLE($attribute) = T_VARIABLE($extracted_columnspec) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($row) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($row) [ ] = ; } } T_VARIABLE($field_name) = T_VARIABLE($row) [ ] ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($table) ] [ T_VARIABLE($field_name) ] = T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($field_name) , T_LNUMBER , - T_LNUMBER ) ; T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($table) ] [ T_VARIABLE($field_name) ] , - T_LNUMBER ) ; T_VARIABLE($pdf_row) = T_ARRAY ( T_VARIABLE($field_name) , T_VARIABLE($type) , T_VARIABLE($attribute) , ( T_VARIABLE($row) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($row) [ ] T_IS_EQUAL ) ? T_STRING ( ) : T_STRING ( ) , ( T_ISSET ( T_VARIABLE($row) [ ] ) ? T_VARIABLE($row) [ ] : ) , T_VARIABLE($row) [ ] , ( T_ISSET ( T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] ) ? T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] . . T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] : ) , ( T_ISSET ( T_VARIABLE($comments) [ T_VARIABLE($field_name) ] ) ? T_VARIABLE($comments) [ T_VARIABLE($field_name) ] : ) , ( T_ISSET ( T_VARIABLE($mime_map) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($field_name) ] ) ? T_STRING ( , , T_VARIABLE($mime_map) [ T_VARIABLE($field_name) ] [ ] ) : ) ) ; T_VARIABLE($links) [ T_LNUMBER ] = T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($table) ] [ T_VARIABLE($field_name) ] ; T_IF ( T_ISSET ( T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] ] [ T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] ] ) ) { T_VARIABLE($links) [ T_LNUMBER ] = T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] ] [ T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] ] ; } T_ELSE { T_UNSET ( T_VARIABLE($links) [ T_LNUMBER ] ) ; } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pdf_row) , T_VARIABLE($links) ) ; } T_VARIABLE($pdf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , , T_LNUMBER ) ; } } } T_CLOSE_TAG',yes
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_VARIABLE($title) ; T_PUBLIC T_VARIABLE($author) ; T_PUBLIC T_VARIABLE($font) ; T_PUBLIC T_VARIABLE($fontSize) ; T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($value) ; } T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($value) ; } T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($value) ; } T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($value) ; } T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( T_VARIABLE($width) , T_VARIABLE($height) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($width) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($height) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_STRING ( T_VARIABLE($fileName) ) { T_VARIABLE($output) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( T_VARIABLE($fileName) . , , T_STRING ( T_VARIABLE($output) ) ) ; T_PRINT T_VARIABLE($output) ; } T_STRING ( T_VARIABLE($name) , T_VARIABLE($x) , T_VARIABLE($y) , T_VARIABLE($width) = , T_VARIABLE($height) = , T_VARIABLE($text) = , T_VARIABLE($styles) = ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($name) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($width) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($height) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($x) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($y) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($styles) ) ; T_IF ( T_ISSET ( T_VARIABLE($text) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($text) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_STRING ( T_VARIABLE($name) , T_VARIABLE($x1) , T_VARIABLE($y1) , T_VARIABLE($x2) , T_VARIABLE($y2) , T_VARIABLE($styles) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($name) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($x1) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($y1) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($x2) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($y2) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($styles) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_STRING ( T_VARIABLE($text) , T_VARIABLE($font) , T_VARIABLE($fontSize) ) { T_VARIABLE($count) = T_LNUMBER ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , , , , , , , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , , , , , , , , , , , , , , , , , , , , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , , , , , , , , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , , , , , , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( T_ARRAY ( , ) , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( ( T_STRING ( T_VARIABLE($text) ) - T_STRING ( T_STRING ( , , T_VARIABLE($text) ) ) ) * T_DNUMBER ) ; T_VARIABLE($text) = T_STRING ( , , T_VARIABLE($text) ) ; T_VARIABLE($count) = T_VARIABLE($count) + ( T_STRING ( T_STRING ( , , T_VARIABLE($text) ) ) * T_DNUMBER ) ; T_VARIABLE($modifier) = T_LNUMBER ; T_VARIABLE($font) = T_STRING ( T_VARIABLE($font) ) ; T_SWITCH ( T_VARIABLE($font) ) { T_CASE : T_CASE : T_BREAK ; T_CASE : T_CASE : T_CASE : T_CASE : T_VARIABLE($modifier) = T_DNUMBER ; T_BREAK ; T_CASE : T_VARIABLE($modifier) = T_DNUMBER ; T_BREAK ; } T_VARIABLE($textWidth) = T_VARIABLE($count) * T_VARIABLE($fontSize) ; T_RETURN T_STRING ( T_VARIABLE($textWidth) * T_VARIABLE($modifier) ) ; } } T_STRING { T_PRIVATE T_VARIABLE($_tableName) ; T_PRIVATE T_VARIABLE($_showInfo) = T_STRING ; T_PUBLIC T_VARIABLE($width) = T_LNUMBER ; T_PUBLIC T_VARIABLE($height) ; T_PUBLIC T_VARIABLE($fields) = T_ARRAY ( ) ; T_PUBLIC T_VARIABLE($heightCell) = T_LNUMBER ; T_PUBLIC T_VARIABLE($currentCell) = T_LNUMBER ; T_PUBLIC T_VARIABLE($x) , T_VARIABLE($y) ; T_PUBLIC T_VARIABLE($primary) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($tableName) , T_VARIABLE($font) , T_VARIABLE($fontSize) , T_VARIABLE($pageNumber) , & T_VARIABLE($same_wide_width) , T_VARIABLE($showKeys) = T_STRING , T_VARIABLE($showInfo) = T_STRING ) { T_GLOBAL T_VARIABLE($svg) , T_VARIABLE($cfgRelation) , T_VARIABLE($db) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($tableName) ; T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tableName) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_STRING , T_STRING ) ; T_IF ( ! T_VARIABLE($result) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pageNumber) , , T_STRING ( T_STRING ( ) , T_VARIABLE($tableName) ) ) ; } T_IF ( T_VARIABLE($showKeys) ) { T_VARIABLE($indexes) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($db) ) ; T_VARIABLE($all_columns) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($indexes) T_AS T_VARIABLE($index) ) { T_VARIABLE($all_columns) = T_STRING ( T_VARIABLE($all_columns) , T_STRING ( T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) ) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($all_columns) ) ; } T_ELSE { T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($row) [ T_LNUMBER ] ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($showInfo) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($fontSize) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($font) , T_VARIABLE($fontSize) ) ; T_IF ( T_VARIABLE($same_wide_width) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($same_wide_width) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tableName) ) . . . T_VARIABLE($pageNumber) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_STRING , T_STRING ) ; T_IF ( ! T_VARIABLE($result) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pageNumber) , , T_STRING ( T_STRING ( ) , T_VARIABLE($tableName) ) ) ; } T_LIST ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_DOUBLE_CAST T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_DOUBLE_CAST T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($db) , T_VARIABLE($tableName) ) ; T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tableName) ) . , T_STRING , T_STRING ) ; T_IF ( T_STRING ( T_VARIABLE($result) ) > T_LNUMBER ) { T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($row) [ ] ; } } } } T_PRIVATE T_STRING ( ) { T_RETURN ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ? T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . . T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) : ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($font) , T_VARIABLE($fontSize) ) { T_GLOBAL T_VARIABLE($svg) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($field) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($field) , T_VARIABLE($font) , T_VARIABLE($fontSize) ) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_PLUS_EQUAL T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($font) , T_VARIABLE($fontSize) ) ; T_WHILE ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING < T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($font) , T_VARIABLE($fontSize) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_PLUS_EQUAL T_LNUMBER ; } } T_STRING ( T_VARIABLE($fontSize) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($fontSize) + T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) + T_LNUMBER ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($showColor) ) { T_GLOBAL T_VARIABLE($svg) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING , ) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($field) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_PLUS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($showColor) = ; T_IF ( T_VARIABLE($showColor) ) { T_IF ( T_STRING ( T_VARIABLE($field) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($showColor) = ; } T_IF ( T_VARIABLE($field) T_IS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($showColor) = ; } } T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING , . T_VARIABLE($showColor) . ) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_LNUMBER + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($field) , ) ; } } } T_STRING { T_PUBLIC T_VARIABLE($xSrc) , T_VARIABLE($ySrc) ; T_PUBLIC T_VARIABLE($srcDir) ; T_PUBLIC T_VARIABLE($destDir) ; T_PUBLIC T_VARIABLE($xDest) , T_VARIABLE($yDest) ; T_PUBLIC T_VARIABLE($wTick) = T_LNUMBER ; T_STRING ( T_VARIABLE($master_table) , T_VARIABLE($master_field) , T_VARIABLE($foreign_table) , T_VARIABLE($foreign_field) ) { T_VARIABLE($src_pos) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($master_table) , T_VARIABLE($master_field) ) ; T_VARIABLE($dest_pos) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($foreign_table) , T_VARIABLE($foreign_field) ) ; T_VARIABLE($src_left) = T_VARIABLE($src_pos) [ T_LNUMBER ] - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($src_right) = T_VARIABLE($src_pos) [ T_LNUMBER ] + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($dest_left) = T_VARIABLE($dest_pos) [ T_LNUMBER ] - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($dest_right) = T_VARIABLE($dest_pos) [ T_LNUMBER ] + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($d1) = T_STRING ( T_VARIABLE($src_left) - T_VARIABLE($dest_left) ) ; T_VARIABLE($d2) = T_STRING ( T_VARIABLE($src_right) - T_VARIABLE($dest_left) ) ; T_VARIABLE($d3) = T_STRING ( T_VARIABLE($src_left) - T_VARIABLE($dest_right) ) ; T_VARIABLE($d4) = T_STRING ( T_VARIABLE($src_right) - T_VARIABLE($dest_right) ) ; T_VARIABLE($d) = T_STRING ( T_VARIABLE($d1) , T_VARIABLE($d2) , T_VARIABLE($d3) , T_VARIABLE($d4) ) ; T_IF ( T_VARIABLE($d) T_IS_EQUAL T_VARIABLE($d1) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($d) T_IS_EQUAL T_VARIABLE($d2) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($d) T_IS_EQUAL T_VARIABLE($d3) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; } T_STRING ( T_VARIABLE($table) , T_VARIABLE($column) ) { T_VARIABLE($pos) = T_STRING ( T_VARIABLE($column) , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_ARRAY ( T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING + ( T_VARIABLE($pos) + T_DNUMBER ) * T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; } T_PUBLIC T_STRING ( T_VARIABLE($changeColor) ) { T_GLOBAL T_VARIABLE($svg) ; T_IF ( T_VARIABLE($changeColor) ) { T_VARIABLE($listOfColors) = T_ARRAY ( , , , , , , ) ; T_STRING ( T_VARIABLE($listOfColors) ) ; T_VARIABLE($color) = T_VARIABLE($listOfColors) [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($color) = ; } T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($color) . ) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($color) . ) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($color) . . T_VARIABLE($color) . ) ; T_VARIABLE($root2) = T_LNUMBER * T_STRING ( T_LNUMBER ) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_DNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * ( T_DNUMBER - T_LNUMBER / T_VARIABLE($root2) ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($root2) , . T_VARIABLE($color) . ) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_DNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * ( T_DNUMBER - T_LNUMBER / T_VARIABLE($root2) ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($root2) , . T_VARIABLE($color) . ) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * ( T_DNUMBER + T_LNUMBER / T_VARIABLE($root2) ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($root2) , . T_VARIABLE($color) . ) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_LNUMBER , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING * ( T_DNUMBER + T_LNUMBER / T_VARIABLE($root2) ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($root2) , . T_VARIABLE($color) . ) ; } } T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_tables) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_relations) = T_ARRAY ( ) ; T_PRIVATE T_VARIABLE($_xMax) = T_LNUMBER ; T_PRIVATE T_VARIABLE($_yMax) = T_LNUMBER ; T_PRIVATE T_VARIABLE($_xMin) = T_LNUMBER ; T_PRIVATE T_VARIABLE($_yMin) = T_LNUMBER ; T_PRIVATE T_VARIABLE($_tablewidth) ; T_STRING ( ) { T_GLOBAL T_VARIABLE($svg) , T_VARIABLE($db) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($svg) = T_NEW T_STRING ( ) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($db) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( . T_STRING ) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($alltables) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_FOREACH ( T_VARIABLE($alltables) T_AS T_VARIABLE($table) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] = T_NEW T_STRING ( T_VARIABLE($table) , T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] ) ; } T_VARIABLE($seen_a_relation) = T_STRING ; T_FOREACH ( T_VARIABLE($alltables) T_AS T_VARIABLE($one_table) ) { T_VARIABLE($exist_rel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($one_table) , , ) ; T_IF ( T_VARIABLE($exist_rel) ) { T_VARIABLE($seen_a_relation) = T_STRING ; T_FOREACH ( T_VARIABLE($exist_rel) T_AS T_VARIABLE($master_field) T_DOUBLE_ARROW T_VARIABLE($rel) ) { T_IF ( T_STRING ( T_VARIABLE($rel) [ ] , T_VARIABLE($alltables) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($one_table) , T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($master_field) , T_VARIABLE($rel) [ ] , T_VARIABLE($rel) [ ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } } } } T_IF ( T_VARIABLE($seen_a_relation) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($svg) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_EXIT ( ) ; } T_PRIVATE T_STRING ( T_VARIABLE($table) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; } T_PRIVATE T_STRING ( T_VARIABLE($masterTable) , T_VARIABLE($font) , T_VARIABLE($fontSize) , T_VARIABLE($masterField) , T_VARIABLE($foreignTable) , T_VARIABLE($foreignField) , T_VARIABLE($showInfo) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] = T_NEW T_STRING ( T_VARIABLE($masterTable) , T_VARIABLE($font) , T_VARIABLE($fontSize) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING , T_VARIABLE($showInfo) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] = T_NEW T_STRING ( T_VARIABLE($foreignTable) , T_VARIABLE($font) , T_VARIABLE($fontSize) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING , T_VARIABLE($showInfo) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_NEW T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] , T_VARIABLE($masterField) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] , T_VARIABLE($foreignField) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($changeColor) ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($relation) ) { T_VARIABLE($relation) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($changeColor) ) ; } } T_PRIVATE T_STRING ( T_VARIABLE($changeColor) ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($table) ) { T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($changeColor) ) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PUBLIC T_VARIABLE($chosenPage) ; T_PUBLIC T_VARIABLE($autoLayoutForeign) ; T_PUBLIC T_VARIABLE($autoLayoutInternal) ; T_PUBLIC T_VARIABLE($pageNumber) ; T_PUBLIC T_VARIABLE($c_table_rows) ; T_PUBLIC T_VARIABLE($action) ; T_PUBLIC T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($value) ; } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($cfgRelation) ; T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_SWITCH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_CASE : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($_REQUEST) [ ] ; T_IF ( T_IS_EQUAL T_VARIABLE($_REQUEST) [ ] ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($cfgRelation) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($cfgRelation) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_BREAK ; T_CASE : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($_POST) [ ] , T_VARIABLE($cfgRelation) , T_VARIABLE($db) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ISSET ( T_VARIABLE($_POST) [ ] ) ? : T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ISSET ( T_VARIABLE($_POST) [ ] ) ? : T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($cfgRelation) ) ; T_BREAK ; T_CASE : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($_POST) [ ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($_POST) [ ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($cfgRelation) ) ; T_BREAK ; T_CASE : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] , T_VARIABLE($cfgRelation) , T_VARIABLE($db) , T_VARIABLE($_POST) [ ] ) ; T_BREAK ; T_CASE : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_BREAK ; } } } T_PUBLIC T_STRING ( T_VARIABLE($db) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) . ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($db) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( ) T_BOOLEAN_OR T_STRING T_DOUBLE_COLON T_STRING ( ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($cfgRelation) ; T_VARIABLE($page_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_VARIABLE($page_rs) = T_STRING ( T_VARIABLE($page_query) , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($page_rs) T_BOOLEAN_AND T_STRING ( T_VARIABLE($page_rs) ) > T_LNUMBER ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) . ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_WHILE ( T_VARIABLE($curr_page) = T_STRING ( T_VARIABLE($page_rs) ) ) { T_ECHO . . . T_VARIABLE($curr_page) [ ] . ; T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($curr_page) [ ] ) { T_ECHO ; } T_ECHO . T_VARIABLE($curr_page) [ ] . . T_STRING ( T_VARIABLE($curr_page) [ ] ) . ; } T_ECHO ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($choices) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($choices) , , T_STRING ) ; T_UNSET ( T_VARIABLE($choices) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ECHO ; } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($cfgRelation) , T_VARIABLE($table) , T_VARIABLE($with_field_names) ; T_VARIABLE($selectboxall) = T_ARRAY ( ) ; T_VARIABLE($alltab_rs) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . , T_STRING , T_STRING ) ; T_WHILE ( T_VARIABLE($val) = @ T_STRING ( T_VARIABLE($alltab_rs) ) ) { T_VARIABLE($selectboxall) [ ] = T_VARIABLE($val) [ T_LNUMBER ] ; } T_VARIABLE($tabExist) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING > T_LNUMBER ) { T_ECHO ; T_ECHO . T_STRING ( ) . ; T_VARIABLE($page_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . ; T_VARIABLE($page_rs) = T_STRING ( T_VARIABLE($page_query) , T_STRING ) ; T_VARIABLE($array_sh_page) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($temp_sh_page) = @ T_STRING ( T_VARIABLE($page_rs) ) ) { T_VARIABLE($array_sh_page) [ ] = T_VARIABLE($temp_sh_page) ; } T_IF ( ! T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($with_field_names) = T_STRING ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($with_field_names) = T_STRING ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($array_sh_page) ) ; T_ECHO ; T_ECHO T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_ECHO . . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($ctable) ) ) { T_UNSET ( T_VARIABLE($ctable) ) ; } T_VARIABLE($array_sh_page) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($array_sh_page) T_AS T_VARIABLE($sh_page) ) { T_VARIABLE($_mtab) = T_VARIABLE($sh_page) [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($_mtab) ) ) { T_VARIABLE($tabExist) [ T_VARIABLE($_mtab) ] = T_STRING ; } T_ECHO ; T_IF ( T_VARIABLE($odd_row) ) { T_ECHO ; } T_ELSE { T_ECHO ; } T_ECHO ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_ECHO ; T_ECHO . T_VARIABLE($i) . ; T_FOREACH ( T_VARIABLE($selectboxall) T_AS T_VARIABLE($value) ) { T_ECHO . T_STRING ( T_VARIABLE($value) ) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($_mtab) ) T_BOOLEAN_AND T_VARIABLE($value) T_IS_EQUAL T_VARIABLE($_mtab) ) { T_ECHO ; T_VARIABLE($tabExist) [ T_VARIABLE($_mtab) ] = T_STRING ; } T_ECHO . T_STRING ( T_VARIABLE($value) ) . ; } T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_VARIABLE($i) . . . T_VARIABLE($i) . ; T_ECHO . T_VARIABLE($i) . . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO . . T_VARIABLE($i) . . T_VARIABLE($i) . . . T_VARIABLE($i) . . T_VARIABLE($sh_page) [ ] . ; T_ECHO ; T_ECHO ; T_ECHO . . T_VARIABLE($i) . . T_VARIABLE($i) . . . T_VARIABLE($i) . . T_VARIABLE($sh_page) [ ] . ; T_ECHO ; T_ECHO ; T_VARIABLE($i) T_INC ; } T_ECHO ; T_ECHO . T_VARIABLE($i) . ; T_ECHO . ( ( T_ISSET ( T_VARIABLE($showwysiwyg) ) T_BOOLEAN_AND T_VARIABLE($showwysiwyg) T_IS_EQUAL ) ? : ) . ; T_ECHO . . ( T_ISSET ( T_VARIABLE($with_field_names) ) ? : ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . ; } T_IF ( T_ISSET ( T_VARIABLE($tabExist) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($tabExist) ) ; } } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($cfg) , T_VARIABLE($db) , T_VARIABLE($test_rs) , T_VARIABLE($chpage) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($db) ) ; T_IF ( T_VARIABLE($cfg) [ ] ) { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($test_rs) ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_WHILE ( T_VARIABLE($pages) = @ T_STRING ( T_VARIABLE($test_rs) ) ) { T_ECHO . T_VARIABLE($pages) [ ] . . T_VARIABLE($pages) [ ] . . T_STRING ( T_VARIABLE($pages) [ ] ) . . ; } T_STRING ( T_VARIABLE($test_rs) ) ; T_UNSET ( T_VARIABLE($test_rs) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSE { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($chpage) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($cfg) [ ] T_AS T_VARIABLE($val) ) { T_ECHO . T_VARIABLE($val) . ; T_IF ( T_VARIABLE($val) T_IS_EQUAL T_VARIABLE($cfg) [ ] ) { T_ECHO ; } T_ECHO . T_VARIABLE($val) . . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_PRIVATE T_STRING ( T_VARIABLE($db) , T_VARIABLE($chpage) , T_VARIABLE($tabExist) ) { T_VARIABLE($_strtrans) = ; T_VARIABLE($_strname) = ; T_VARIABLE($shoot) = T_STRING ; T_IF ( T_EMPTY ( T_VARIABLE($tabExist) ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($tabExist) ) ) { T_RETURN ; } T_FOREACH ( T_VARIABLE($tabExist) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( ! T_VARIABLE($value) ) { T_VARIABLE($_strtrans) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($key) ) . . ; T_VARIABLE($_strname) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($key) ) . . ; T_VARIABLE($shoot) = T_STRING ; } } T_IF ( ! T_VARIABLE($shoot) ) { T_RETURN ; } T_ECHO . . T_STRING ( T_VARIABLE($db) ) . . . . T_STRING ( T_VARIABLE($chpage) ) . . . T_STRING ( . ) . . . T_VARIABLE($_strname) . . . T_VARIABLE($_strtrans) . . T_STRING ( ) . . . ; } T_PRIVATE T_STRING ( T_VARIABLE($array_sh_page) ) { T_GLOBAL T_VARIABLE($with_field_names) , T_VARIABLE($db) ; T_ECHO ; T_ECHO . . T_STRING ( ) . ; T_ECHO . . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($array_sh_page) T_AS T_VARIABLE($temp_sh_page) ) { T_VARIABLE($drag_x) = T_VARIABLE($temp_sh_page) [ ] ; T_VARIABLE($drag_y) = T_VARIABLE($temp_sh_page) [ ] ; T_ECHO . T_VARIABLE($i) . . . T_VARIABLE($i) . . . T_VARIABLE($drag_x) . . . T_VARIABLE($drag_y) . . . . . T_STRING ( T_VARIABLE($temp_sh_page) [ ] ) . ; T_IF ( T_ISSET ( T_VARIABLE($with_field_names) ) ) { T_VARIABLE($fields) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($temp_sh_page) [ ] ) ; T_IF ( T_VARIABLE($fields) ) { T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($row) ) { T_ECHO . T_STRING ( T_VARIABLE($row) [ ] ) . ; } } } T_ECHO . ; T_VARIABLE($i) T_INC ; } T_ECHO ; } T_PRIVATE T_STRING ( T_VARIABLE($delrow) , T_VARIABLE($cfgRelation) , T_VARIABLE($db) , T_VARIABLE($chpage) ) { T_FOREACH ( T_VARIABLE($delrow) T_AS T_VARIABLE($current_row) ) { T_VARIABLE($del_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_row) ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($chpage) ) . ; T_STRING ( T_VARIABLE($del_query) , T_STRING ) ; } } T_PRIVATE T_STRING ( ) { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_GLOBAL T_VARIABLE($db) , T_VARIABLE($export_type) ; T_IF ( ! T_ISSET ( T_VARIABLE($export_type) ) T_BOOLEAN_OR ! T_STRING ( , T_VARIABLE($export_type) ) ) { T_VARIABLE($export_type) = ; } T_STRING ( T_VARIABLE($db) ) ; T_INCLUDE . T_STRING ( T_VARIABLE($export_type) ) . ; T_EVAL ( . T_STRING ( T_VARIABLE($export_type) ) . ) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($cfgRelation) , T_VARIABLE($choosePage) ) { T_VARIABLE($query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($choosePage) ) . ; T_STRING ( T_VARIABLE($query) , T_STRING ) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($cfgRelation) , T_VARIABLE($choosePage) ) { T_VARIABLE($query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($choosePage) ) . ; T_STRING ( T_VARIABLE($query) , T_STRING ) ; } T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($pageNumber) , T_VARIABLE($cfgRelation) ) { T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($all_tables) = T_ARRAY ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($tables) = T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($foreignkey_tables) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($table_name) T_DOUBLE_ARROW T_VARIABLE($table_properties) ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table_properties) [ ] ) ) { T_VARIABLE($foreignkey_tables) [ ] = T_VARIABLE($table_name) ; } } T_VARIABLE($all_tables) = T_VARIABLE($foreignkey_tables) ; T_UNSET ( T_VARIABLE($tables) , T_VARIABLE($foreignkey_tables) ) ; } T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($master_tables) = . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . ; T_VARIABLE($master_tables_rs) = T_STRING ( T_VARIABLE($master_tables) , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($master_tables_rs) T_BOOLEAN_AND T_STRING ( T_VARIABLE($master_tables_rs) ) > T_LNUMBER ) { T_WHILE ( T_LIST ( , T_VARIABLE($master_table) ) = T_STRING ( T_VARIABLE($master_tables_rs) ) ) { T_VARIABLE($all_tables) [ ] = T_VARIABLE($master_table) ; } T_VARIABLE($foreign_tables) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($all_tables) T_AS T_VARIABLE($master_table) ) { T_VARIABLE($foreigners) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($master_table) ) ; T_FOREACH ( T_VARIABLE($foreigners) T_AS T_VARIABLE($foreigner) ) { T_IF ( ! T_STRING ( T_VARIABLE($foreigner) [ ] , T_VARIABLE($foreign_tables) ) ) { T_VARIABLE($foreign_tables) [ ] = T_VARIABLE($foreigner) [ ] ; } } } T_FOREACH ( T_VARIABLE($foreign_tables) T_AS T_VARIABLE($foreign_table) ) { T_IF ( ! T_STRING ( T_VARIABLE($foreign_table) , T_VARIABLE($all_tables) ) ) { T_VARIABLE($all_tables) [ ] = T_VARIABLE($foreign_table) ; } } } } T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($all_tables) , T_VARIABLE($pageNumber) , T_VARIABLE($db) , T_VARIABLE($cfgRelation) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($pageNumber) ; } T_PUBLIC T_STRING ( T_VARIABLE($all_tables) , T_VARIABLE($pageNumber) , T_VARIABLE($db) , T_VARIABLE($cfgRelation) ) { T_VARIABLE($pos_x) = T_LNUMBER ; T_VARIABLE($pos_y) = T_LNUMBER ; T_VARIABLE($delta) = T_LNUMBER ; T_VARIABLE($delta_mult) = T_DNUMBER ; T_VARIABLE($direction) = ; T_FOREACH ( T_VARIABLE($all_tables) T_AS T_VARIABLE($current_table) ) { T_VARIABLE($insert_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_table) ) . . T_VARIABLE($pageNumber) . . T_VARIABLE($pos_x) . . T_VARIABLE($pos_y) . ; T_STRING ( T_VARIABLE($insert_query) , T_STRING ) ; T_SWITCH ( T_VARIABLE($direction) ) { T_CASE : T_VARIABLE($pos_x) T_PLUS_EQUAL T_VARIABLE($delta) ; T_VARIABLE($direction) = ; T_VARIABLE($delta) T_MUL_EQUAL T_VARIABLE($delta_mult) ; T_BREAK ; T_CASE : T_VARIABLE($pos_y) T_PLUS_EQUAL T_VARIABLE($delta) ; T_VARIABLE($direction) = ; T_VARIABLE($delta) T_MUL_EQUAL T_VARIABLE($delta_mult) ; T_BREAK ; T_CASE : T_VARIABLE($pos_x) T_MINUS_EQUAL T_VARIABLE($delta) ; T_VARIABLE($direction) = ; T_VARIABLE($delta) T_MUL_EQUAL T_VARIABLE($delta_mult) ; T_BREAK ; T_CASE : T_VARIABLE($pos_y) T_MINUS_EQUAL T_VARIABLE($delta) ; T_VARIABLE($direction) = ; T_VARIABLE($delta) T_MUL_EQUAL T_VARIABLE($delta_mult) ; T_BREAK ; } } } T_PRIVATE T_STRING ( T_VARIABLE($db) , T_VARIABLE($cfgRelation) ) { T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($i) T_INC ) { T_VARIABLE($arrvalue) = T_VARIABLE($_POST) [ . T_VARIABLE($i) ] ; T_IF ( ! T_ISSET ( T_VARIABLE($arrvalue) [ ] ) T_BOOLEAN_OR T_VARIABLE($arrvalue) [ ] T_IS_EQUAL ) { T_VARIABLE($arrvalue) [ ] = T_LNUMBER ; } T_IF ( ! T_ISSET ( T_VARIABLE($arrvalue) [ ] ) T_BOOLEAN_OR T_VARIABLE($arrvalue) [ ] T_IS_EQUAL ) { T_VARIABLE($arrvalue) [ ] = T_LNUMBER ; } T_IF ( T_ISSET ( T_VARIABLE($arrvalue) [ ] ) T_BOOLEAN_AND T_VARIABLE($arrvalue) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($test_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arrvalue) [ ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . ; T_VARIABLE($test_rs) = T_STRING ( T_VARIABLE($test_query) , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($test_rs) T_BOOLEAN_AND T_STRING ( T_VARIABLE($test_rs) ) > T_LNUMBER ) { T_IF ( T_ISSET ( T_VARIABLE($arrvalue) [ ] ) T_BOOLEAN_AND T_VARIABLE($arrvalue) [ ] T_IS_EQUAL ) { T_VARIABLE($ch_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arrvalue) [ ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . ; } T_ELSE { T_VARIABLE($ch_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . . T_VARIABLE($arrvalue) [ ] . . T_VARIABLE($arrvalue) [ ] . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arrvalue) [ ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . ; } } T_ELSE { T_VARIABLE($ch_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arrvalue) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . . T_VARIABLE($arrvalue) [ ] . . T_VARIABLE($arrvalue) [ ] . ; } T_STRING ( T_VARIABLE($ch_query) , T_STRING ) ; } } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_EXTENDS T_STRING { T_PUBLIC T_VARIABLE($title) ; T_PUBLIC T_VARIABLE($author) ; T_PUBLIC T_VARIABLE($font) ; T_PUBLIC T_VARIABLE($fontSize) ; T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($value) ; } T_STRING ( T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($value) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . . ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_STRING ( T_VARIABLE($fileName) ) { T_VARIABLE($output) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( T_VARIABLE($fileName) . , , T_STRING ( T_VARIABLE($output) ) ) ; T_PRINT T_VARIABLE($output) ; } } T_STRING { T_PRIVATE T_VARIABLE($_tableName) ; T_PRIVATE T_VARIABLE($_showInfo) = T_STRING ; T_PUBLIC T_VARIABLE($width) = T_LNUMBER ; T_PUBLIC T_VARIABLE($height) ; T_PUBLIC T_VARIABLE($fields) = T_ARRAY ( ) ; T_PUBLIC T_VARIABLE($heightCell) = T_LNUMBER ; T_PUBLIC T_VARIABLE($currentCell) = T_LNUMBER ; T_PUBLIC T_VARIABLE($x) , T_VARIABLE($y) ; T_PUBLIC T_VARIABLE($primary) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($tableName) , T_VARIABLE($pageNumber) , & T_VARIABLE($same_wide_width) , T_VARIABLE($showKeys) = T_STRING , T_VARIABLE($showInfo) = T_STRING ) { T_GLOBAL T_VARIABLE($visio) , T_VARIABLE($cfgRelation) , T_VARIABLE($db) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($tableName) ; T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tableName) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_STRING , T_STRING ) ; T_IF ( ! T_VARIABLE($result) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($visio) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pageNumber) , , T_STRING ( T_STRING ( ) , T_VARIABLE($tableName) ) ) ; } T_IF ( T_VARIABLE($showKeys) ) { T_VARIABLE($indexes) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($db) ) ; T_VARIABLE($all_columns) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($indexes) T_AS T_VARIABLE($index) ) { T_VARIABLE($all_columns) = T_STRING ( T_VARIABLE($all_columns) , T_STRING ( T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) ) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($all_columns) ) ; } T_ELSE { T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($row) [ T_LNUMBER ] ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($showInfo) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($fontSize) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($font) , T_VARIABLE($fontSize) ) ; T_IF ( T_VARIABLE($same_wide_width) < T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($same_wide_width) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tableName) ) . . . T_VARIABLE($pageNumber) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_STRING , T_STRING ) ; T_IF ( ! T_VARIABLE($result) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($visio) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($pageNumber) , , T_STRING ( T_STRING ( ) , T_VARIABLE($tableName) ) ) ; } T_LIST ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_DOUBLE_CAST T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_DOUBLE_CAST T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($db) , T_VARIABLE($tableName) ) ; T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tableName) ) . , T_STRING , T_STRING ) ; T_IF ( T_STRING ( T_VARIABLE($result) ) > T_LNUMBER ) { T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($row) [ ] ; } } } } T_PRIVATE T_STRING ( ) { T_RETURN ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ? T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . . T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) : ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($font) , T_VARIABLE($fontSize) ) { } T_STRING ( T_VARIABLE($fontSize) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($fontSize) + T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) + T_LNUMBER ) * T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($showColor) ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($field) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_PLUS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($showColor) = ; T_IF ( T_VARIABLE($showColor) ) { T_IF ( T_STRING ( T_VARIABLE($field) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($showColor) = ; } T_IF ( T_VARIABLE($field) T_IS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($showColor) = ; } } } } } T_STRING { T_PUBLIC T_VARIABLE($xSrc) , T_VARIABLE($ySrc) ; T_PUBLIC T_VARIABLE($srcDir) ; T_PUBLIC T_VARIABLE($destDir) ; T_PUBLIC T_VARIABLE($xDest) , T_VARIABLE($yDest) ; T_PUBLIC T_VARIABLE($wTick) = T_LNUMBER ; T_STRING ( T_VARIABLE($master_table) , T_VARIABLE($master_field) , T_VARIABLE($foreign_table) , T_VARIABLE($foreign_field) ) { T_VARIABLE($src_pos) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($master_table) , T_VARIABLE($master_field) ) ; T_VARIABLE($dest_pos) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($foreign_table) , T_VARIABLE($foreign_field) ) ; T_VARIABLE($src_left) = T_VARIABLE($src_pos) [ T_LNUMBER ] - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($src_right) = T_VARIABLE($src_pos) [ T_LNUMBER ] + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($dest_left) = T_VARIABLE($dest_pos) [ T_LNUMBER ] - T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($dest_right) = T_VARIABLE($dest_pos) [ T_LNUMBER ] + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($d1) = T_STRING ( T_VARIABLE($src_left) - T_VARIABLE($dest_left) ) ; T_VARIABLE($d2) = T_STRING ( T_VARIABLE($src_right) - T_VARIABLE($dest_left) ) ; T_VARIABLE($d3) = T_STRING ( T_VARIABLE($src_left) - T_VARIABLE($dest_right) ) ; T_VARIABLE($d4) = T_STRING ( T_VARIABLE($src_right) - T_VARIABLE($dest_right) ) ; T_VARIABLE($d) = T_STRING ( T_VARIABLE($d1) , T_VARIABLE($d2) , T_VARIABLE($d3) , T_VARIABLE($d4) ) ; T_IF ( T_VARIABLE($d) T_IS_EQUAL T_VARIABLE($d1) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($d) T_IS_EQUAL T_VARIABLE($d2) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($d) T_IS_EQUAL T_VARIABLE($d3) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($src_pos) [ T_LNUMBER ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest_pos) [ T_LNUMBER ] ; } T_STRING ( T_VARIABLE($table) , T_VARIABLE($column) ) { T_VARIABLE($pos) = T_STRING ( T_VARIABLE($column) , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_ARRAY ( T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING + ( T_VARIABLE($pos) + T_DNUMBER ) * T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ) ; } T_PUBLIC T_STRING ( T_VARIABLE($changeColor) ) { T_IF ( T_VARIABLE($changeColor) ) { T_VARIABLE($listOfColors) = T_ARRAY ( , , , , , , ) ; T_STRING ( T_VARIABLE($listOfColors) ) ; T_VARIABLE($color) = T_VARIABLE($listOfColors) [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($color) = ; } } } T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_tables) = T_ARRAY ( ) ; T_STRING ( ) { T_GLOBAL T_VARIABLE($visio) , T_VARIABLE($db) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($visio) = T_NEW T_STRING ( ) ; T_VARIABLE($visio) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($db) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($visio) T_OBJECT_OPERATOR T_STRING ( . T_STRING ) ; T_VARIABLE($visio) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($alltables) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_FOREACH ( T_VARIABLE($alltables) T_AS T_VARIABLE($table) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($table) ] = T_NEW T_STRING ( T_VARIABLE($table) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } } T_VARIABLE($seen_a_relation) = T_STRING ; T_FOREACH ( T_VARIABLE($alltables) T_AS T_VARIABLE($one_table) ) { T_VARIABLE($exist_rel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($one_table) , , ) ; T_IF ( T_VARIABLE($exist_rel) ) { T_VARIABLE($seen_a_relation) = T_STRING ; T_FOREACH ( T_VARIABLE($exist_rel) T_AS T_VARIABLE($master_field) T_DOUBLE_ARROW T_VARIABLE($rel) ) { T_IF ( T_STRING ( T_VARIABLE($rel) [ ] , T_VARIABLE($alltables) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($one_table) , T_VARIABLE($master_field) , T_VARIABLE($rel) [ ] , T_VARIABLE($rel) [ ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } } } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($seen_a_relation) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($visio) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($visio) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_EXIT ( ) ; } T_PRIVATE T_STRING ( T_VARIABLE($masterTable) , T_VARIABLE($masterField) , T_VARIABLE($foreignTable) , T_VARIABLE($foreignField) , T_VARIABLE($showKeys) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] = T_NEW T_STRING ( T_VARIABLE($masterTable) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($showKeys) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] = T_NEW T_STRING ( T_VARIABLE($foreignTable) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($showKeys) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_NEW T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($masterTable) ] , T_VARIABLE($masterField) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($foreignTable) ] , T_VARIABLE($foreignField) ) ; } T_PRIVATE T_STRING ( T_VARIABLE($changeColor) ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($relation) ) { T_VARIABLE($relation) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($changeColor) ) ; } } T_PRIVATE T_STRING ( T_VARIABLE($changeColor) ) { T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($table) ) { T_VARIABLE($table) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($changeColor) ) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PRIVATE T_VARIABLE($_files) ; T_PRIVATE T_VARIABLE($_code) ; T_PRIVATE T_VARIABLE($_events) ; T_PRIVATE T_STRING ( T_VARIABLE($files) ) { T_VARIABLE($dynamic_scripts) = ; T_VARIABLE($params) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($files) T_AS T_VARIABLE($value) ) { T_IF ( T_STRING ( T_VARIABLE($value) [ ] , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($include) = T_STRING ; T_IF ( T_VARIABLE($value) [ ] T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_STRING T_IS_IDENTICAL ) { T_IF ( T_VARIABLE($value) [ ] T_IS_IDENTICAL T_STRING ) { T_VARIABLE($include) = T_STRING ; } T_ELSE T_IF ( T_VARIABLE($value) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($include) = T_STRING ; } T_ELSE { T_VARIABLE($include) = T_STRING ; } } T_IF ( T_VARIABLE($include) ) { T_VARIABLE($params) [ ] = . T_VARIABLE($value) [ ] ; } } T_ELSE { T_VARIABLE($dynamic_scripts) T_CONCAT_EQUAL . T_VARIABLE($value) [ ] . ; } } T_VARIABLE($static_scripts) = T_STRING ( , T_STRING ( , T_VARIABLE($params) ) ) ; T_RETURN T_VARIABLE($static_scripts) . T_VARIABLE($dynamic_scripts) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; } T_PUBLIC T_STRING ( T_VARIABLE($filename) , T_VARIABLE($conditional_ie) = T_STRING ) { T_VARIABLE($hash) = T_STRING ( T_VARIABLE($filename) ) ; T_IF ( T_EMPTY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($hash) ] ) ) { T_VARIABLE($has_onload) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($filename) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($hash) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($has_onload) , T_DOUBLE_ARROW T_VARIABLE($filename) , T_DOUBLE_ARROW T_VARIABLE($conditional_ie) ) ; } } T_PRIVATE T_STRING ( T_VARIABLE($filename) ) { T_IF ( T_STRING ( T_VARIABLE($filename) , ) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_OR T_STRING ( T_VARIABLE($filename) , ) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_OR T_STRING ( T_VARIABLE($filename) , ) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_OR T_STRING ( T_VARIABLE($filename) , ) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_OR T_STRING ( T_VARIABLE($filename) , ) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_OR T_STRING ( T_VARIABLE($filename) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN T_LNUMBER ; } T_ELSE { T_RETURN T_LNUMBER ; } } T_PUBLIC T_STRING ( T_VARIABLE($code) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL T_VARIABLE($code) T_ENCAPSED_AND_WHITESPACE ; } T_PUBLIC T_STRING ( T_VARIABLE($event) , T_VARIABLE($function) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($event) , T_DOUBLE_ARROW T_VARIABLE($function) ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($file) ) { T_IF ( T_STRING ( T_VARIABLE($file) [ ] , ) T_IS_IDENTICAL T_STRING ) { T_IF ( ! T_VARIABLE($file) [ ] T_BOOLEAN_OR T_STRING T_IS_EQUAL ) { T_VARIABLE($retval) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($file) [ ] , T_DOUBLE_ARROW T_VARIABLE($file) [ ] ) ; } } } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = ; T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) > T_LNUMBER ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($code) = ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($file) ) { T_VARIABLE($code) T_CONCAT_EQUAL T_STRING ( , T_STRING ( T_VARIABLE($file) [ ] ) , T_VARIABLE($file) [ ] ? T_LNUMBER : T_LNUMBER ) ; } T_VARIABLE($code) T_CONCAT_EQUAL ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($code) ) ; T_VARIABLE($code) = ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($file) ) { T_IF ( T_VARIABLE($file) [ ] ) { T_VARIABLE($code) T_CONCAT_EQUAL ; T_VARIABLE($code) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($file) [ ] ) ; T_VARIABLE($code) T_CONCAT_EQUAL ; } } T_VARIABLE($code) T_CONCAT_EQUAL ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($code) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($js_event) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($js_event) [ ] , T_VARIABLE($js_event) [ ] ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_langName) ( T_VARIABLE($tmplang) ) { T_VARIABLE($lang_name) = T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($tmplang) [ T_LNUMBER ] , ) , T_LNUMBER ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($tmplang) [ T_LNUMBER ] ) ) { T_VARIABLE($lang_name) = T_VARIABLE($tmplang) [ T_LNUMBER ] . . T_VARIABLE($lang_name) ; } T_RETURN T_VARIABLE($lang_name) ; } T_FUNCTION(PMA_langCheck) ( ) { T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_RETURN T_STRING ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($GLOBALS) [ ] [ ] ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($_POST) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($_POST) [ ] ) ) { T_RETURN T_STRING ; } T_ELSEIF ( ! T_STRING ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_POST) [ ] ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($_GET) [ ] ) ) { T_RETURN T_STRING ; } T_ELSEIF ( ! T_STRING ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_GET) [ ] ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($_COOKIE) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($_COOKIE) [ ] ) ) { T_RETURN T_STRING ; } T_ELSEIF ( ! T_STRING ( T_VARIABLE($_COOKIE) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_COOKIE) [ ] ; } } T_VARIABLE($accepted_languages) = T_STRING ( ) ; T_IF ( T_VARIABLE($accepted_languages) T_BOOLEAN_AND T_STRING T_IS_IDENTICAL T_STRING ( T_VARIABLE($accepted_languages) , ) ) { T_FOREACH ( T_STRING ( , T_VARIABLE($accepted_languages) ) T_AS T_VARIABLE($lang) ) { T_IF ( T_STRING ( T_VARIABLE($lang) , T_LNUMBER ) ) { T_RETURN T_STRING ; } } } T_UNSET ( T_VARIABLE($accepted_languages) ) ; T_IF ( T_STRING ( T_STRING ( ) , T_LNUMBER ) ) { T_RETURN T_STRING ; } T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_FUNCTION(PMA_langSet) ( & T_VARIABLE($lang) ) { T_VARIABLE($lang) = T_STRING ( , , T_VARIABLE($lang) ) ; T_IF ( ! T_STRING ( T_VARIABLE($lang) ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($lang) ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($lang) ] ) ) { T_RETURN T_STRING ; } T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($lang) ; T_RETURN T_STRING ; } T_FUNCTION(PMA_langDetect) ( T_VARIABLE($str) , T_VARIABLE($envType) ) { T_IF ( T_EMPTY ( T_VARIABLE($str) ) ) { T_RETURN T_STRING ; } T_IF ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_RETURN T_STRING ; } T_FOREACH ( T_VARIABLE($GLOBALS) [ ] T_AS T_VARIABLE($lang) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($expr) = T_VARIABLE($value) [ T_LNUMBER ] ; T_IF ( T_STRING ( T_VARIABLE($expr) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($expr) = T_STRING ( , , T_VARIABLE($expr) ) ; } T_IF ( ( T_VARIABLE($envType) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING ( . T_STRING ( T_VARIABLE($expr) , ) . , T_VARIABLE($str) ) ) T_BOOLEAN_OR ( T_VARIABLE($envType) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING ( . T_STRING ( T_VARIABLE($expr) , ) . , T_VARIABLE($str) ) ) ) { T_IF ( T_STRING ( T_VARIABLE($lang) ) ) { T_RETURN T_STRING ; } } } T_RETURN T_STRING ; } T_FUNCTION(PMA_langDetails) ( T_VARIABLE($lang) ) { T_SWITCH ( T_VARIABLE($lang) ) { T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; T_CASE : T_RETURN T_ARRAY ( , , ) ; } T_RETURN T_ARRAY ( T_VARIABLE($lang) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($lang) , T_VARIABLE($lang) , T_VARIABLE($lang) ) ; } T_FUNCTION(PMA_langList) ( ) { T_VARIABLE($result) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ; T_IF ( ! T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_RETURN T_VARIABLE($result) ; } T_VARIABLE($handle) = @ T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_VARIABLE($handle) T_IS_IDENTICAL T_STRING ) { T_RETURN T_VARIABLE($result) ; } T_WHILE ( T_STRING T_IS_NOT_IDENTICAL ( T_VARIABLE($file) = T_STRING ( T_VARIABLE($handle) ) ) ) { T_IF ( T_VARIABLE($file) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($file) T_IS_NOT_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($file) . ) ) { T_VARIABLE($result) [ T_VARIABLE($file) ] = T_STRING ( T_VARIABLE($file) ) ; } } T_STRING ( T_VARIABLE($handle) ) ; T_RETURN T_VARIABLE($result) ; } T_VARIABLE($GLOBALS) [ ] = ; T_REQUIRE_ONCE T_STRING ; T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($GLOBALS) [ ] = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($new_lang) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($GLOBALS) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_IF ( T_STRING ( . T_VARIABLE($GLOBALS) [ ] [ ] . , T_VARIABLE($key) ) ) { T_VARIABLE($new_lang) [ T_VARIABLE($key) ] = T_VARIABLE($val) ; } } T_IF ( T_STRING ( T_VARIABLE($new_lang) ) > T_LNUMBER ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($new_lang) ; } T_UNSET ( T_VARIABLE($key) , T_VARIABLE($val) , T_VARIABLE($new_lang) ) ; } T_VARIABLE($GLOBALS) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_IF ( ! T_STRING ( ) ) { T_VARIABLE($fall_back_lang) = ; T_VARIABLE($line) = T_LINE ; T_IF ( ! T_STRING ( T_VARIABLE($fall_back_lang) ) ) { T_STRING ( . T_FILE . . T_VARIABLE($line) . , T_STRING ) ; T_STRING ( ) ; } } T_STRING ( T_STRING , T_VARIABLE($GLOBALS) [ ] ) ; T_STRING ( , T_VARIABLE($GLOBALS) [ ] ) ; T_STRING ( , ) ; T_STRING ( ) ; T_IF ( ! T_STRING ( ) ) { T_STRING ( ) ; } T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_ARRAY ( , , , ) ) ) { T_VARIABLE($GLOBALS) [ ] = ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] = ; } T_VARIABLE($GLOBALS) [ ] = T_ARRAY ( ) ; T_VARIABLE($GLOBALS) [ ] [ ] = ; T_VARIABLE($GLOBALS) [ ] [ ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($GLOBALS) [ ] [ ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($GLOBALS) [ ] [ ] = T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) , T_STRING ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) , T_STRING ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) , T_STRING ) ; } T_UNSET ( T_VARIABLE($line) , T_VARIABLE($fall_back_lang) , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_selectServer) ( T_VARIABLE($not_only_options) , T_VARIABLE($ommit_fieldset) ) { T_VARIABLE($retval) = ; T_IF ( T_VARIABLE($not_only_options) ) { T_VARIABLE($list) = T_VARIABLE($GLOBALS) [ ] [ ] ; T_VARIABLE($not_only_options) = ! T_VARIABLE($list) ; } T_ELSE { T_VARIABLE($list) = T_STRING ; } T_IF ( T_VARIABLE($not_only_options) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_IF ( ! T_VARIABLE($ommit_fieldset) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . . ; } T_ELSEIF ( T_VARIABLE($list) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_FOREACH ( T_VARIABLE($GLOBALS) [ ] [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($server) ) { T_IF ( T_EMPTY ( T_VARIABLE($server) [ ] ) ) { T_CONTINUE ; } T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_INT_CAST T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL T_INT_CAST T_VARIABLE($key) ) { T_VARIABLE($selected) = T_LNUMBER ; } T_ELSE { T_VARIABLE($selected) = T_LNUMBER ; } T_IF ( ! T_EMPTY ( T_VARIABLE($server) [ ] ) ) { T_VARIABLE($label) = T_VARIABLE($server) [ ] ; } T_ELSE { T_VARIABLE($label) = T_VARIABLE($server) [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($server) [ ] ) ) { T_VARIABLE($label) T_CONCAT_EQUAL . T_VARIABLE($server) [ ] ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($server) [ ] ) ) { T_IF ( ! T_STRING ( T_VARIABLE($server) [ ] ) ) { T_VARIABLE($label) T_CONCAT_EQUAL . T_VARIABLE($server) [ ] ; } T_ELSEIF ( T_STRING ( T_VARIABLE($server) [ ] ) < T_LNUMBER ) { T_VARIABLE($label) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($server) [ ] ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($server) [ ] ) T_BOOLEAN_AND T_VARIABLE($server) [ ] T_IS_EQUAL ) { T_VARIABLE($label) T_CONCAT_EQUAL . T_VARIABLE($server) [ ] . ; } T_IF ( T_VARIABLE($list) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($selected) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($label) ) . ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] [ ] . T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($key) ) ) . . T_STRING ( T_VARIABLE($label) ) . ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($key) . . ( T_VARIABLE($selected) ? : ) . . T_STRING ( T_VARIABLE($label) ) . . ; } } T_IF ( T_VARIABLE($not_only_options) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( ! T_VARIABLE($ommit_fieldset) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSEIF ( T_VARIABLE($list) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($retval) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_IF ( T_EMPTY ( T_VARIABLE($viewing_mode) ) ) { T_VARIABLE($db) = T_VARIABLE($table) = ; } T_VARIABLE($url_query) = T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($err_url) = . T_VARIABLE($url_query) ; T_VARIABLE($is_superuser) = T_STRING ( ) ; T_IF ( T_VARIABLE($is_superuser) T_BOOLEAN_AND ! T_STRING ) { T_STRING ( , T_VARIABLE($userlink) ) ; } T_VARIABLE($binary_logs) = T_STRING ? T_STRING : T_STRING ( , , T_STRING , T_STRING , T_STRING ) ; T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( , ) , T_STRING ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_wildcardEscapeForGrant) ( T_VARIABLE($dbname) , T_VARIABLE($tablename) ) { T_IF ( ! T_STRING ( T_VARIABLE($dbname) ) ) { T_VARIABLE($db_and_table) = ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($tablename) ) ) { T_VARIABLE($db_and_table) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) ) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tablename) ) ; } T_ELSE { T_VARIABLE($db_and_table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) ) . ; } } T_RETURN T_VARIABLE($db_and_table) ; } T_FUNCTION(PMA_rangeOfUsers) ( T_VARIABLE($initial) = ) { T_IF ( ! T_EMPTY ( T_VARIABLE($initial) ) ) { T_VARIABLE($ret) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($initial) , T_STRING ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($initial) ) , T_STRING ) . ; } T_ELSE { T_VARIABLE($ret) = ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(PMA_extractPrivInfo) ( T_VARIABLE($row) = , T_VARIABLE($enableHTML) = T_STRING ) { T_VARIABLE($grants) = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($row) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($row1) = T_STRING ( , , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($av_grants) = T_STRING ( , T_STRING ( T_VARIABLE($row1) [ ] , T_LNUMBER , T_STRING ( T_VARIABLE($row1) [ ] ) - T_LNUMBER ) ) ; T_UNSET ( T_VARIABLE($row1) ) ; T_VARIABLE($users_grants) = T_STRING ( , T_VARIABLE($row) [ ] ) ; T_FOREACH ( T_VARIABLE($av_grants) T_AS T_VARIABLE($current_grant) ) { T_VARIABLE($row) [ T_VARIABLE($current_grant) . ] = T_STRING ( T_VARIABLE($current_grant) , T_VARIABLE($users_grants) ) ? : ; } T_UNSET ( T_VARIABLE($current_grant) ) ; } T_VARIABLE($privs) = T_ARRAY ( ) ; T_VARIABLE($allPrivileges) = T_STRING ; T_FOREACH ( T_VARIABLE($grants) T_AS T_VARIABLE($current_grant) ) { T_IF ( ( ! T_EMPTY ( T_VARIABLE($row) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($row) [ T_VARIABLE($current_grant) [ T_LNUMBER ] ] ) ) T_BOOLEAN_OR ( T_EMPTY ( T_VARIABLE($row) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ T_VARIABLE($current_grant) [ T_LNUMBER ] ] ) ) ) { T_IF ( ( ! T_EMPTY ( T_VARIABLE($row) ) T_BOOLEAN_AND T_VARIABLE($row) [ T_VARIABLE($current_grant) [ T_LNUMBER ] ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_EMPTY ( T_VARIABLE($row) ) T_BOOLEAN_AND ( T_VARIABLE($GLOBALS) [ T_VARIABLE($current_grant) [ T_LNUMBER ] ] T_IS_EQUAL T_BOOLEAN_OR ( T_STRING ( T_VARIABLE($GLOBALS) [ T_VARIABLE($current_grant) [ T_LNUMBER ] ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ T_VARIABLE($current_grant) [ T_LNUMBER ] ] ) T_IS_EQUAL T_VARIABLE($_REQUEST) [ ] T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($GLOBALS) [ T_VARIABLE($current_grant) [ T_LNUMBER ] . ] ) ) ) ) ) { T_IF ( T_VARIABLE($enableHTML) ) { T_VARIABLE($privs) [ ] = . T_VARIABLE($current_grant) [ T_LNUMBER ] . . T_VARIABLE($current_grant) [ T_LNUMBER ] . ; } T_ELSE { T_VARIABLE($privs) [ ] = T_VARIABLE($current_grant) [ T_LNUMBER ] ; } } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ T_VARIABLE($current_grant) [ T_LNUMBER ] ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ T_VARIABLE($current_grant) [ T_LNUMBER ] ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($GLOBALS) [ T_VARIABLE($current_grant) [ T_LNUMBER ] . ] ) ) { T_IF ( T_VARIABLE($enableHTML) ) { T_VARIABLE($priv_string) = . T_VARIABLE($current_grant) [ T_LNUMBER ] . . T_VARIABLE($current_grant) [ T_LNUMBER ] . ; } T_ELSE { T_VARIABLE($priv_string) = T_VARIABLE($current_grant) [ T_LNUMBER ] ; } T_VARIABLE($privs) [ ] = T_VARIABLE($priv_string) . . T_STRING ( , T_VARIABLE($GLOBALS) [ T_VARIABLE($current_grant) [ T_LNUMBER ] ] ) . ; } T_ELSE { T_VARIABLE($allPrivileges) = T_STRING ; } } } T_IF ( T_EMPTY ( T_VARIABLE($privs) ) ) { T_IF ( T_VARIABLE($enableHTML) ) { T_VARIABLE($privs) [ ] = . T_STRING ( ) . ; } T_ELSE { T_VARIABLE($privs) [ ] = ; } } T_ELSEIF ( T_VARIABLE($allPrivileges) T_BOOLEAN_AND ( ! T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($privs) ) T_IS_EQUAL T_VARIABLE($_POST) [ ] ) ) { T_IF ( T_VARIABLE($enableHTML) ) { T_VARIABLE($privs) = T_ARRAY ( . T_STRING ( ) . ) ; } T_ELSE { T_VARIABLE($privs) = T_ARRAY ( ) ; } } T_RETURN T_VARIABLE($privs) ; } T_FUNCTION(PMA_getGrantsArray) ( ) {} T_FUNCTION(PMA_getHtmlForDisplayColumnPrivileges) ( T_VARIABLE($columns) , T_VARIABLE($row) , T_VARIABLE($name_for_select) , T_VARIABLE($priv_for_header) , T_VARIABLE($name) , T_VARIABLE($name_for_dfn) , T_VARIABLE($name_for_current) ) { T_VARIABLE($html_output) = . T_VARIABLE($name) . . . . T_VARIABLE($name) . . . . T_VARIABLE($name_for_dfn) . . T_VARIABLE($priv_for_header) . . . . . . T_VARIABLE($name) . . T_VARIABLE($name_for_select) . . ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($current_column) T_DOUBLE_ARROW T_VARIABLE($current_column_privileges) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($current_column) ) . ; T_IF ( T_VARIABLE($row) [ T_VARIABLE($name_for_select) ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($current_column_privileges) [ T_VARIABLE($name_for_current) ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($current_column) ) . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . . . . T_VARIABLE($name_for_select) . . . T_VARIABLE($name_for_select) . . T_VARIABLE($name_for_select) . . T_STRING ( , ) . . T_STRING ( , ) . . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getSqlQueryForDisplayPrivTable) ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($username) , T_VARIABLE($hostname) ) { T_IF ( T_VARIABLE($db) T_IS_EQUAL ) { T_RETURN . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . ; } T_ELSEIF ( T_VARIABLE($table) T_IS_EQUAL ) { T_RETURN . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . ; } T_RETURN . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; } T_FUNCTION(PMA_getHtmlToDisplayPrivilegesTable) ( T_VARIABLE($db) = , T_VARIABLE($table) = , T_VARIABLE($submit) = T_STRING ) { T_VARIABLE($html_output) = ; T_IF ( T_VARIABLE($db) T_IS_EQUAL ) { T_VARIABLE($table) = ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($username) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($hostname) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($sql_query) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($username) , T_VARIABLE($hostname) ) ; T_VARIABLE($row) = T_STRING ( T_VARIABLE($sql_query) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($row) ) ) { T_IF ( T_VARIABLE($table) T_IS_EQUAL ) { T_IF ( T_VARIABLE($db) T_IS_EQUAL ) { T_VARIABLE($sql_query) = ; } T_ELSEIF ( T_VARIABLE($table) T_IS_EQUAL ) { T_VARIABLE($sql_query) = ; } T_VARIABLE($res) = T_STRING ( T_VARIABLE($sql_query) ) ; T_WHILE ( T_VARIABLE($row1) = T_STRING ( T_VARIABLE($res) ) ) { T_IF ( T_STRING ( T_VARIABLE($row1) [ T_LNUMBER ] , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($row) [ T_VARIABLE($row1) [ T_LNUMBER ] ] = T_LNUMBER ; } T_ELSE { T_VARIABLE($row) [ T_VARIABLE($row1) [ T_LNUMBER ] ] = ; } } T_STRING ( T_VARIABLE($res) ) ; } T_ELSE { T_VARIABLE($row) = T_ARRAY ( T_DOUBLE_ARROW ) ; } } T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($row1) = T_STRING ( , , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($av_grants) = T_STRING ( , T_STRING ( T_VARIABLE($row1) [ ] , T_STRING ( T_VARIABLE($row1) [ ] , ) + T_LNUMBER , T_STRING ( T_VARIABLE($row1) [ ] , ) - T_STRING ( T_VARIABLE($row1) [ ] , ) - T_LNUMBER ) ) ; T_UNSET ( T_VARIABLE($row1) ) ; T_VARIABLE($users_grants) = T_STRING ( , T_VARIABLE($row) [ ] ) ; T_FOREACH ( T_VARIABLE($av_grants) T_AS T_VARIABLE($current_grant) ) { T_VARIABLE($row) [ T_VARIABLE($current_grant) . ] = T_STRING ( T_VARIABLE($current_grant) , T_VARIABLE($users_grants) ) ? : ; } T_UNSET ( T_VARIABLE($row) [ ] , T_VARIABLE($current_grant) , T_VARIABLE($av_grants) , T_VARIABLE($users_grants) ) ; T_VARIABLE($res) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ) ; T_VARIABLE($columns) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($res) ) { T_WHILE ( T_VARIABLE($row1) = T_STRING ( T_VARIABLE($res) ) ) { T_VARIABLE($columns) [ T_VARIABLE($row1) [ T_LNUMBER ] ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) ; } T_STRING ( T_VARIABLE($res) ) ; } T_UNSET ( T_VARIABLE($res) , T_VARIABLE($row1) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($columns) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($username) , T_VARIABLE($hostname) , T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($columns) , T_VARIABLE($row) ) ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($row) ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_IF ( T_VARIABLE($submit) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . . T_STRING ( ) . . . . ; } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForDisplayResourceLimits) ( T_VARIABLE($row) ) { T_VARIABLE($html_output) = . . . T_STRING ( ) . . . . . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . T_STRING ( ) . . . . . . . T_VARIABLE($row) [ ] . . . . T_STRING ( ) . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . T_STRING ( ) . . . . . . . T_VARIABLE($row) [ ] . . . T_STRING ( ) . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . T_STRING ( ) . . . . . . . T_VARIABLE($row) [ ] . . . T_STRING ( ) . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . T_STRING ( ) . . . . . . . . T_VARIABLE($row) [ ] . . . T_STRING ( ) . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForTableSpecificPrivileges) ( T_VARIABLE($username) , T_VARIABLE($hostname) , T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($columns) , T_VARIABLE($row) ) { T_VARIABLE($res) = T_STRING ( . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ) ; T_WHILE ( T_VARIABLE($row1) = T_STRING ( T_VARIABLE($res) ) ) { T_VARIABLE($row1) [ T_LNUMBER ] = T_STRING ( , T_VARIABLE($row1) [ T_LNUMBER ] ) ; T_FOREACH ( T_VARIABLE($row1) [ T_LNUMBER ] T_AS T_VARIABLE($current) ) { T_VARIABLE($columns) [ T_VARIABLE($row1) [ T_LNUMBER ] ] [ T_VARIABLE($current) ] = T_STRING ; } } T_STRING ( T_VARIABLE($res) ) ; T_UNSET ( T_VARIABLE($res) , T_VARIABLE($row1) , T_VARIABLE($current) ) ; T_VARIABLE($html_output) = . . T_STRING ( T_VARIABLE($row) ) . . . . . T_STRING ( T_VARIABLE($columns) ) . . . . . . T_STRING ( ) . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($columns) , T_VARIABLE($row) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($row) ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForAttachedPrivilegesToTableSpecificColumn) ( T_VARIABLE($columns) , T_VARIABLE($row) ) { T_VARIABLE($html_output) = T_STRING ( T_VARIABLE($columns) , T_VARIABLE($row) , , , , T_STRING ( ) , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($columns) , T_VARIABLE($row) , , , , T_STRING ( ) , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($columns) , T_VARIABLE($row) , , , , T_STRING ( ) , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($columns) , T_VARIABLE($row) , , , , T_STRING ( ) , ) ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForNotAttachedPrivilegesToTableSpecificColumn) ( T_VARIABLE($row) ) { T_VARIABLE($html_output) = ; T_FOREACH ( T_VARIABLE($row) T_AS T_VARIABLE($current_grant) T_DOUBLE_ARROW T_VARIABLE($current_grant_value) ) { T_VARIABLE($grant_type) = T_STRING ( T_VARIABLE($current_grant) , T_LNUMBER , ( T_STRING ( T_VARIABLE($current_grant) ) - T_LNUMBER ) ) ; T_IF ( T_STRING ( T_VARIABLE($grant_type) , T_ARRAY ( , , , ) ) ) { T_CONTINUE ; } T_IF ( T_VARIABLE($current_grant) T_IS_EQUAL ) { T_VARIABLE($tmp_current_grant) = ; T_VARIABLE($current_grant) = ; } T_ELSEIF ( T_VARIABLE($current_grant) T_IS_EQUAL ) { T_VARIABLE($tmp_current_grant) = ; T_VARIABLE($current_grant) = ; } T_ELSE { T_VARIABLE($tmp_current_grant) = T_VARIABLE($current_grant) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . T_VARIABLE($current_grant) . . T_VARIABLE($current_grant) . . ( T_VARIABLE($current_grant_value) T_IS_EQUAL ? : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ( T_ISSET ( T_VARIABLE($GLOBALS) [ . T_STRING ( T_VARIABLE($tmp_current_grant) , T_LNUMBER , ( T_STRING ( T_VARIABLE($tmp_current_grant) ) - T_LNUMBER ) ) ] ) ? T_VARIABLE($GLOBALS) [ . T_STRING ( T_VARIABLE($tmp_current_grant) , T_LNUMBER , ( T_STRING ( T_VARIABLE($tmp_current_grant) ) - T_LNUMBER ) ) ] : T_VARIABLE($GLOBALS) [ . T_STRING ( T_VARIABLE($tmp_current_grant) , T_LNUMBER , ( T_STRING ( T_VARIABLE($tmp_current_grant) ) - T_LNUMBER ) ) . ] ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($current_grant) . . ( T_ISSET ( T_VARIABLE($GLOBALS) [ . T_STRING ( T_VARIABLE($tmp_current_grant) , T_LNUMBER , ( T_STRING ( T_VARIABLE($tmp_current_grant) ) - T_LNUMBER ) ) ] ) ? T_VARIABLE($GLOBALS) [ . T_STRING ( T_VARIABLE($tmp_current_grant) , T_LNUMBER , ( T_STRING ( T_VARIABLE($tmp_current_grant) ) - T_LNUMBER ) ) ] : T_VARIABLE($GLOBALS) [ . T_STRING ( T_VARIABLE($tmp_current_grant) , T_LNUMBER , ( T_STRING ( T_VARIABLE($tmp_current_grant) ) - T_LNUMBER ) ) . ] ) . . T_STRING ( T_STRING ( T_VARIABLE($current_grant) , T_LNUMBER , T_STRING ( T_VARIABLE($current_grant) ) - T_LNUMBER ) ) . . . . ; } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForGlobalOrDbSpecificPrivs) ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($row) ) { T_VARIABLE($privTable_names) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($privTable) = T_ARRAY ( ) ; T_VARIABLE($privTable) [ T_LNUMBER ] = T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($privTable) [ T_LNUMBER ] = T_STRING ( T_VARIABLE($table) , T_VARIABLE($row) ) ; T_VARIABLE($privTable) [ T_LNUMBER ] = T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($html_output) = . ( T_STRING ( T_VARIABLE($privTable) [ T_LNUMBER ] ) + T_STRING ( T_VARIABLE($privTable) [ T_LNUMBER ] ) + T_STRING ( T_VARIABLE($privTable) [ T_LNUMBER ] ) - ( T_ISSET ( T_VARIABLE($row) [ ] ) ? T_LNUMBER : T_LNUMBER ) ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($db) T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; } T_ELSE T_IF ( T_VARIABLE($table) T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . . . . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($privTable) , T_VARIABLE($privTable_names) , T_VARIABLE($row) ) ; T_IF ( T_VARIABLE($db) T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($row) ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getDataPrivilegeTable) ( T_VARIABLE($db) ) { T_VARIABLE($data_privTable) = T_ARRAY ( T_ARRAY ( , , T_STRING ( ) ) , T_ARRAY ( , , T_STRING ( ) ) , T_ARRAY ( , , T_STRING ( ) ) , T_ARRAY ( , , T_STRING ( ) ) ) ; T_IF ( T_VARIABLE($db) T_IS_EQUAL ) { T_VARIABLE($data_privTable) [ ] = T_ARRAY ( , , T_STRING ( ) ) ; } T_RETURN T_VARIABLE($data_privTable) ; } T_FUNCTION(PMA_getStructurePrivilegeTable) ( T_VARIABLE($table) , T_VARIABLE($row) ) { T_VARIABLE($structure_privTable) = T_ARRAY ( T_ARRAY ( , , ( T_VARIABLE($table) T_IS_EQUAL ? T_STRING ( ) : T_STRING ( ) ) ) , T_ARRAY ( , , T_STRING ( ) ) , T_ARRAY ( , , T_STRING ( ) ) , T_ARRAY ( , , ( T_VARIABLE($table) T_IS_EQUAL ? T_STRING ( ) : T_STRING ( ) ) ) , T_ARRAY ( , , T_STRING ( ) ) , T_ARRAY ( , , T_STRING ( ) ) , T_ARRAY ( , , T_STRING ( ) ) , T_ARRAY ( , , T_STRING ( ) ) , T_ARRAY ( , , T_STRING ( ) ) , ) ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($structure_privTable) [ ] = T_ARRAY ( , , T_STRING ( ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($structure_privTable) [ ] = T_ARRAY ( , , T_STRING ( ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($structure_privTable) [ ] = T_ARRAY ( , , T_STRING ( ) ) ; T_VARIABLE($structure_privTable) [ ] = T_ARRAY ( , , T_STRING ( ) ) ; } T_RETURN T_VARIABLE($structure_privTable) ; } T_FUNCTION(PMA_getAdministrationPrivilegeTable) ( T_VARIABLE($db) ) { T_VARIABLE($administration_privTable) = T_ARRAY ( T_ARRAY ( , , T_STRING ( ) ) , ) ; T_IF ( T_VARIABLE($db) T_IS_EQUAL ) { T_VARIABLE($administration_privTable) [ ] = T_ARRAY ( , , T_STRING ( ) ) ; T_VARIABLE($administration_privTable) [ ] = T_ARRAY ( , , T_STRING ( ) ) ; T_VARIABLE($administration_privTable) [ ] = T_ARRAY ( , , T_STRING ( ) ) ; T_VARIABLE($administration_privTable) [ ] = T_ARRAY ( , , T_STRING ( ) ) ; T_VARIABLE($administration_privTable) [ ] = T_ARRAY ( , , T_STRING ( ) ) ; } T_VARIABLE($administration_privTable) [ ] = T_ARRAY ( , , T_STRING ( ) ) ; T_VARIABLE($administration_privTable) [ ] = T_ARRAY ( , , T_STRING ( ) ) ; T_IF ( T_VARIABLE($db) T_IS_EQUAL ) { T_VARIABLE($administration_privTable) [ ] = T_ARRAY ( , , T_STRING ( ) ) ; T_VARIABLE($administration_privTable) [ ] = T_ARRAY ( , , T_STRING ( ) ) ; T_VARIABLE($administration_privTable) [ ] = T_ARRAY ( , , T_STRING ( ) ) ; } T_RETURN T_VARIABLE($administration_privTable) ; } T_FUNCTION(PMA_getHtmlForGlobalPrivTableWithCheckboxes) ( T_VARIABLE($privTable) , T_VARIABLE($privTable_names) , T_VARIABLE($row) ) { T_VARIABLE($html_output) = ; T_FOREACH ( T_VARIABLE($privTable) T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($table) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_VARIABLE($privTable_names) [ T_VARIABLE($i) ] . . ; T_FOREACH ( T_VARIABLE($table) T_AS T_VARIABLE($priv) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . T_VARIABLE($priv) [ T_LNUMBER ] . . . T_VARIABLE($priv) [ T_LNUMBER ] . . . T_VARIABLE($priv) [ T_LNUMBER ] . . ( ( T_VARIABLE($row) [ T_VARIABLE($priv) [ T_LNUMBER ] . ] T_IS_EQUAL ) ? : ) . . . . T_VARIABLE($priv) [ T_LNUMBER ] . . . T_VARIABLE($priv) [ T_LNUMBER ] . . T_VARIABLE($priv) [ T_LNUMBER ] . . . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForDisplayLoginInformationFields) ( T_VARIABLE($mode) = ) { T_LIST ( T_VARIABLE($username_length) , T_VARIABLE($hostname_length) ) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] ) T_IS_IDENTICAL T_LNUMBER ) { T_VARIABLE($GLOBALS) [ ] = ; } T_VARIABLE($html_output) = . . . T_STRING ( ) . . . . . . . . T_STRING ( ) . . . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) ? : ) . . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) ? : ) . . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($username_length) . . T_STRING ( ) . . ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ? : . T_STRING ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : T_VARIABLE($GLOBALS) [ ] ) . ) . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . . T_STRING ( ) . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . T_STRING ( ) . . ; T_VARIABLE($_current_user) = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_current_user) ) ) { T_VARIABLE($thishost) = T_STRING ( , , T_STRING ( T_VARIABLE($_current_user) , ( T_STRING ( T_VARIABLE($_current_user) , ) + T_LNUMBER ) ) ) ; T_IF ( T_VARIABLE($thishost) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($thishost) T_IS_EQUAL ) { T_UNSET ( T_VARIABLE($thishost) ) ; } } T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . . . ( T_EMPTY ( T_VARIABLE($thishost) ) ? : . . T_STRING ( T_STRING ( T_VARIABLE($thishost) ) ) . . ) . . . . . . ; T_UNSET ( T_VARIABLE($_current_user) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_SWITCH ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_CASE : T_CASE : T_VARIABLE($GLOBALS) [ ] = ; T_BREAK ; T_CASE : T_VARIABLE($GLOBALS) [ ] = ; T_BREAK ; T_DEFAULT : T_VARIABLE($GLOBALS) [ ] = ; T_BREAK ; } } T_VARIABLE($html_output) T_CONCAT_EQUAL . ( ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) ? : ) . . T_STRING ( ) . . . . ( ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) ? : ) . . T_STRING ( ) . . ; T_IF ( ! T_EMPTY ( T_VARIABLE($thishost) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . ( ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) ? : ) . . T_STRING ( ) . . ; } T_UNSET ( T_VARIABLE($thishost) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) ? : ) . . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) ? : ) . . T_STRING ( ) . . . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($hostname_length) . . T_STRING ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : ) . . T_STRING ( ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . . T_STRING ( ) . . . . . . . . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . . . . ( T_VARIABLE($mode) T_IS_EQUAL ? . T_STRING ( ) . . : ) . ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($mode) T_IS_NOT_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . . . ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? : ) . . T_STRING ( ) . . . . . . . . . T_STRING ( ) . . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . . . T_STRING ( ) . . . . . . . . . T_STRING ( ) . . . . . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getUsernameAndHostnameLength) ( ) { T_VARIABLE($fields_info) = T_STRING ( , , T_STRING , T_STRING ) ; T_VARIABLE($username_length) = T_LNUMBER ; T_VARIABLE($hostname_length) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($fields_info) T_AS T_VARIABLE($val) ) { T_IF ( T_VARIABLE($val) [ ] T_IS_EQUAL ) { T_STRING ( T_VARIABLE($val) [ ] , ) ; T_VARIABLE($value) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_VARIABLE($username_length) = T_VARIABLE($value) ; } } T_ELSEIF ( T_VARIABLE($val) [ ] T_IS_EQUAL ) { T_STRING ( T_VARIABLE($val) [ ] , ) ; T_VARIABLE($value) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_VARIABLE($hostname_length) = T_VARIABLE($value) ; } } } T_RETURN T_ARRAY ( T_VARIABLE($username_length) , T_VARIABLE($hostname_length) ) ; } T_FUNCTION(PMA_getGrants) ( T_VARIABLE($user) , T_VARIABLE($host) ) { T_VARIABLE($grants) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($user) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($host) ) . ) ; T_VARIABLE($response) = ; T_FOREACH ( T_VARIABLE($grants) T_AS T_VARIABLE($one_grant) ) { T_VARIABLE($response) T_CONCAT_EQUAL T_VARIABLE($one_grant) . ; } T_RETURN T_VARIABLE($response) ; } T_FUNCTION(PMA_getMessageForUpdatePassword) ( T_VARIABLE($err_url) , T_VARIABLE($username) , T_VARIABLE($hostname) ) { T_VARIABLE($message) = ; T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_IF ( T_VARIABLE($_POST) [ ] T_IS_NOT_EQUAL T_VARIABLE($_POST) [ ] ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSEIF ( T_EMPTY ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } } T_IF ( T_EMPTY ( T_VARIABLE($message) ) ) { T_VARIABLE($hashing_function) = ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ? : ) . ; T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . . ( ( T_VARIABLE($_POST) [ ] T_IS_EQUAL ) ? : T_VARIABLE($hashing_function) . . T_STRING ( , , T_VARIABLE($_POST) [ ] ) . ) ; T_VARIABLE($local_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . . ( ( T_VARIABLE($_POST) [ ] T_IS_EQUAL ) ? : T_VARIABLE($hashing_function) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_POST) [ ] ) . ) ; T_STRING ( T_VARIABLE($local_query) ) T_LOGICAL_OR T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , T_VARIABLE($sql_query) , T_STRING , T_VARIABLE($err_url) ) ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( . T_STRING ( T_VARIABLE($username) ) . . T_STRING ( T_VARIABLE($hostname) ) . ) ; } T_RETURN T_VARIABLE($message) ; } T_FUNCTION(PMA_getMessageAndSqlQueryForPrivilegesRevoke) ( T_VARIABLE($db_and_table) , T_VARIABLE($dbname) , T_VARIABLE($tablename) , T_VARIABLE($username) , T_VARIABLE($hostname) ) { T_VARIABLE($db_and_table) = T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) ) ; T_VARIABLE($sql_query0) = . T_VARIABLE($db_and_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . ; T_VARIABLE($sql_query1) = . T_VARIABLE($db_and_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . ; T_STRING ( T_VARIABLE($sql_query0) ) ; T_IF ( ! T_STRING ( T_VARIABLE($sql_query1) ) ) { T_VARIABLE($sql_query1) = ; } T_VARIABLE($sql_query) = T_VARIABLE($sql_query0) . . T_VARIABLE($sql_query1) ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( . T_STRING ( T_VARIABLE($username) ) . . T_STRING ( T_VARIABLE($hostname) ) . ) ; T_RETURN T_ARRAY ( T_VARIABLE($message) , T_VARIABLE($sql_query) ) ; } T_FUNCTION(PMA_getWithClauseForAddUserAndUpdatePrivs) ( ) { T_VARIABLE($sql_query) = ; T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_POST) [ ] T_IS_EQUAL ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL ; } T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($max_questions) = T_STRING ( T_LNUMBER , T_INT_CAST T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($max_questions) ; } T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($max_connections) = T_STRING ( T_LNUMBER , T_INT_CAST T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($max_connections) ; } T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($max_updates) = T_STRING ( T_LNUMBER , T_INT_CAST T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($max_updates) ; } T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($max_user_connections) = T_STRING ( T_LNUMBER , T_INT_CAST T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($max_user_connections) ; } T_RETURN ( ( ! T_EMPTY ( T_VARIABLE($sql_query) ) ) ? . T_VARIABLE($sql_query) : ) ; } T_FUNCTION(PMA_getHtmlForAddUser) ( T_VARIABLE($dbname) ) { T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL ; T_VARIABLE($html_output) = . . T_STRING T_DOUBLE_COLON T_STRING ( ) . T_STRING ( ) . . . . . . . T_STRING ( , ) . T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_IF ( ! T_EMPTY ( T_VARIABLE($dbname) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($dbname) ) ) , T_STRING , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($dbname) ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( , , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . T_STRING ( ) . . . . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getListOfPrivilegesAndComparedPrivileges) ( ) { T_VARIABLE($list_of_privileges) = . . . . . . . . . . . . . . . . . . ; T_VARIABLE($list_of_compared_privileges) = . . . . . . . . . . . . . . ; T_IF ( T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($list_of_privileges) T_CONCAT_EQUAL . ; T_VARIABLE($list_of_compared_privileges) T_CONCAT_EQUAL . ; } T_RETURN T_ARRAY ( T_VARIABLE($list_of_privileges) , T_VARIABLE($list_of_compared_privileges) ) ; } T_FUNCTION(PMA_getHtmlForSpecificDbPrivileges) ( T_VARIABLE($link_edit) , T_VARIABLE($conditional_class) ) { T_VARIABLE($html_output) = . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( T_STRING ( ) , . T_VARIABLE($GLOBALS) [ ] [ ] . . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ) . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . . T_STRING ( ) . . . . T_STRING ( ) . . . . T_STRING ( ) . . . . T_STRING ( ) . . . . T_STRING ( ) . . . . T_STRING ( ) . . . . . . ; T_VARIABLE($odd_row) = T_STRING ; T_LIST ( T_VARIABLE($list_of_privileges) , T_VARIABLE($list_of_compared_privileges) ) = T_STRING ( ) ; T_VARIABLE($sql_query) = . T_VARIABLE($list_of_privileges) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . . . . T_VARIABLE($list_of_compared_privileges) . . . . T_VARIABLE($list_of_privileges) . . . . T_VARIABLE($list_of_compared_privileges) . . . . ; T_VARIABLE($res) = T_STRING ( T_VARIABLE($sql_query) ) ; T_VARIABLE($row) = T_STRING ( T_VARIABLE($res) ) ; T_IF ( T_VARIABLE($row) ) { T_VARIABLE($found) = T_STRING ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($found) , T_VARIABLE($row) , T_VARIABLE($odd_row) , T_VARIABLE($link_edit) , T_VARIABLE($res) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($html_output) ) ; T_EXIT ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( , ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] . . . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . . . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($conditional_class) . . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlTableBodyForSpecificDbPrivs) ( T_VARIABLE($found) , T_VARIABLE($row) , T_VARIABLE($odd_row) , T_VARIABLE($link_edit) , T_VARIABLE($res) ) { T_VARIABLE($html_output) = . ; T_IF ( T_VARIABLE($found) ) { T_WHILE ( T_STRING ) { T_VARIABLE($current_privileges) = T_ARRAY ( ) ; T_VARIABLE($current_user) = T_VARIABLE($row) [ ] ; T_VARIABLE($current_host) = T_VARIABLE($row) [ ] ; T_WHILE ( T_VARIABLE($row) T_BOOLEAN_AND T_VARIABLE($current_user) T_IS_EQUAL T_VARIABLE($row) [ ] T_BOOLEAN_AND T_VARIABLE($current_host) T_IS_EQUAL T_VARIABLE($row) [ ] ) { T_VARIABLE($current_privileges) [ ] = T_VARIABLE($row) ; T_VARIABLE($row) = T_STRING ( T_VARIABLE($res) ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . ( T_VARIABLE($odd_row) ? : ) . . . ; T_IF ( T_STRING ( T_VARIABLE($current_privileges) ) > T_LNUMBER ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($current_privileges) ) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_EMPTY ( T_VARIABLE($current_user) ) ? . T_STRING ( ) . : T_STRING ( T_VARIABLE($current_user) ) ) . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_STRING ( T_VARIABLE($current_privileges) ) > T_LNUMBER ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($current_privileges) ) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($current_host) ) . . ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($current_privileges) ) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($current) = T_VARIABLE($current_privileges) [ T_VARIABLE($i) ] ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . ; T_IF ( ! T_ISSET ( T_VARIABLE($current) [ ] ) T_BOOLEAN_OR T_VARIABLE($current) [ ] T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($current) [ ] T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) . . . T_STRING ( T_VARIABLE($current) [ ] ) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . . T_STRING ( . . , T_STRING ( T_VARIABLE($current) , T_STRING ) ) . . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ( T_VARIABLE($current) [ ] T_IS_EQUAL ? T_STRING ( ) : T_STRING ( ) ) . . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($link_edit) , T_STRING ( T_VARIABLE($current_user) ) , T_STRING ( T_VARIABLE($current_host) ) , T_STRING ( ! ( T_ISSET ( T_VARIABLE($current) [ ] ) T_BOOLEAN_OR T_VARIABLE($current) [ ] T_IS_EQUAL ) ? : T_VARIABLE($current) [ ] ) , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ; T_IF ( ( T_VARIABLE($i) + T_LNUMBER ) < T_STRING ( T_VARIABLE($current_privileges) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . ( T_VARIABLE($odd_row) ? : ) . . ; } } T_IF ( T_EMPTY ( T_VARIABLE($row) ) ) { T_BREAK ; } T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . . T_STRING ( ) . . . . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getStandardLinks) ( T_VARIABLE($conditional_class) ) { T_VARIABLE($link_edit) = . T_VARIABLE($conditional_class) . . . T_STRING ( , , T_VARIABLE($GLOBALS) [ ] ) . . . . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . ; T_VARIABLE($link_revoke) = . . T_STRING ( , , T_VARIABLE($GLOBALS) [ ] ) . . . . . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . ; T_VARIABLE($link_export) = . T_VARIABLE($conditional_class) . . . T_STRING ( , , T_VARIABLE($GLOBALS) [ ] ) . . . . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . ; T_RETURN T_ARRAY ( T_VARIABLE($link_edit) , T_VARIABLE($link_revoke) , T_VARIABLE($link_export) ) ; } T_FUNCTION(PMA_getExtraDataForAjaxBehavior) ( T_VARIABLE($password) , T_VARIABLE($link_export) , T_VARIABLE($sql_query) , T_VARIABLE($link_edit) , T_VARIABLE($hostname) , T_VARIABLE($username) ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_IF ( T_STRING ( , T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($dbname_is_wildcard) = T_STRING ; } T_ELSE { T_VARIABLE($dbname_is_wildcard) = T_STRING ; } } T_VARIABLE($extra_data) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($sql_query) ) ) { T_VARIABLE($extra_data) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING , T_VARIABLE($sql_query) ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($new_user_string) = . . . . . T_STRING ( T_VARIABLE($username) ) . . T_STRING ( T_VARIABLE($hostname) ) . . . . . ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ? . T_STRING ( ) . : T_STRING ( T_VARIABLE($username) ) ) . . . . T_STRING ( T_VARIABLE($hostname) ) . . ; T_VARIABLE($new_user_string) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($password) ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($new_user_string) T_CONCAT_EQUAL T_STRING ( ) ; } T_ELSE { T_VARIABLE($new_user_string) T_CONCAT_EQUAL . T_STRING ( ) . ; } ; T_VARIABLE($new_user_string) T_CONCAT_EQUAL . ; T_VARIABLE($new_user_string) T_CONCAT_EQUAL . . T_STRING ( , T_STRING ( , T_STRING ) ) . . ; T_VARIABLE($new_user_string) T_CONCAT_EQUAL ; T_IF ( ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_POST) [ ] T_IS_EQUAL ) ) { T_VARIABLE($new_user_string) T_CONCAT_EQUAL T_STRING ( ) ; } T_ELSE { T_VARIABLE($new_user_string) T_CONCAT_EQUAL T_STRING ( ) ; } T_VARIABLE($new_user_string) T_CONCAT_EQUAL ; T_VARIABLE($new_user_string) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($link_edit) , T_STRING ( T_VARIABLE($username) ) , T_STRING ( T_VARIABLE($hostname) ) , , ) . . ; T_VARIABLE($new_user_string) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($link_export) , T_STRING ( T_VARIABLE($username) ) , T_STRING ( T_VARIABLE($hostname) ) , ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ? T_VARIABLE($_GET) [ ] : ) ) . . ; T_VARIABLE($new_user_string) T_CONCAT_EQUAL ; T_VARIABLE($extra_data) [ ] = T_VARIABLE($new_user_string) ; T_VARIABLE($new_user_initial) = T_STRING ( T_STRING ( T_VARIABLE($username) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($new_user_initial_string) = . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($new_user_initial) . . T_VARIABLE($new_user_initial) . ; T_VARIABLE($extra_data) [ ] = T_VARIABLE($new_user_initial) ; T_VARIABLE($extra_data) [ ] = T_VARIABLE($new_user_initial_string) ; } T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($extra_data) [ ] = T_STRING ; T_VARIABLE($extra_data) [ ] = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($dbname_is_wildcard) ) ) { T_VARIABLE($extra_data) [ ] = ! T_VARIABLE($dbname_is_wildcard) ; T_VARIABLE($extra_data) [ ] = T_VARIABLE($dbname_is_wildcard) ; } T_VARIABLE($new_privileges) = T_STRING ( , T_STRING ( , T_STRING ) ) ; T_VARIABLE($extra_data) [ ] = T_VARIABLE($new_privileges) ; } T_RETURN T_VARIABLE($extra_data) ; } T_FUNCTION(PMA_getChangeLoginInformationHtmlForm) ( T_VARIABLE($username) , T_VARIABLE($hostname) ) { T_VARIABLE($choices) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($class) = ; T_VARIABLE($html_output) = . . T_VARIABLE($class) . . . T_STRING ( , ) . . . T_STRING ( T_VARIABLE($username) ) . . . . . T_STRING ( T_VARIABLE($hostname) ) . . . . . . T_STRING ( ) . . . T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($choices) , , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . . T_STRING ( ) . . . . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getLinkToDbAndTable) ( T_VARIABLE($url_dbname) , T_VARIABLE($dbname) , T_VARIABLE($tablename) ) { T_VARIABLE($html_output) = . T_STRING ( ) . . T_VARIABLE($GLOBALS) [ ] [ ] . . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($url_dbname) . . T_STRING ( T_VARIABLE($dbname) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . ; T_IF ( T_STRING ( T_VARIABLE($tablename) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . T_VARIABLE($GLOBALS) [ ] [ ] . . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($url_dbname) . . T_STRING ( T_STRING ( T_VARIABLE($tablename) ) ) . . T_STRING ( T_VARIABLE($tablename) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . ; } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getUserSpecificRights) ( T_VARIABLE($tables) , T_VARIABLE($user_host_condition) , T_VARIABLE($dbname) ) { T_IF ( ! T_STRING ( T_VARIABLE($dbname) ) ) { T_VARIABLE($tables_to_search_for_users) = T_ARRAY ( , , ) ; T_VARIABLE($dbOrTableName) = ; } T_ELSE { T_VARIABLE($user_host_condition) T_CONCAT_EQUAL . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) , T_STRING ) . ; T_VARIABLE($tables_to_search_for_users) = T_ARRAY ( , ) ; T_VARIABLE($dbOrTableName) = ; } T_VARIABLE($db_rights_sqls) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tables_to_search_for_users) T_AS T_VARIABLE($table_search_in) ) { T_IF ( T_STRING ( T_VARIABLE($table_search_in) , T_VARIABLE($tables) ) ) { T_VARIABLE($db_rights_sqls) [ ] = . T_VARIABLE($dbOrTableName) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table_search_in) ) . T_VARIABLE($user_host_condition) ; } } T_VARIABLE($user_defaults) = T_ARRAY ( T_VARIABLE($dbOrTableName) T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($db_rights) = T_ARRAY ( ) ; T_VARIABLE($db_rights_sql) = . T_STRING ( , T_VARIABLE($db_rights_sqls) ) . . . T_VARIABLE($dbOrTableName) . ; T_VARIABLE($db_rights_result) = T_STRING ( T_VARIABLE($db_rights_sql) ) ; T_WHILE ( T_VARIABLE($db_rights_row) = T_STRING ( T_VARIABLE($db_rights_result) ) ) { T_VARIABLE($db_rights_row) = T_STRING ( T_VARIABLE($user_defaults) , T_VARIABLE($db_rights_row) ) ; T_IF ( ! T_STRING ( T_VARIABLE($dbname) ) ) { T_VARIABLE($db_rights_row) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db_rights_row) [ ] ) ; } T_VARIABLE($db_rights) [ T_VARIABLE($db_rights_row) [ T_VARIABLE($dbOrTableName) ] ] = T_VARIABLE($db_rights_row) ; } T_STRING ( T_VARIABLE($db_rights_result) ) ; T_IF ( ! T_STRING ( T_VARIABLE($dbname) ) ) { T_VARIABLE($sql_query) = . T_VARIABLE($user_host_condition) . ; } T_ELSE { T_VARIABLE($sql_query) = . . . . . T_VARIABLE($user_host_condition) . ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_VARIABLE($sql_query) = ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_ISSET ( T_VARIABLE($db_rights) [ T_VARIABLE($row) [ T_VARIABLE($dbOrTableName) ] ] ) ) { T_VARIABLE($db_rights) [ T_VARIABLE($row) [ T_VARIABLE($dbOrTableName) ] ] = T_STRING ( T_VARIABLE($db_rights) [ T_VARIABLE($row) [ T_VARIABLE($dbOrTableName) ] ] , T_VARIABLE($row) ) ; } T_ELSE { T_VARIABLE($db_rights) [ T_VARIABLE($row) [ T_VARIABLE($dbOrTableName) ] ] = T_VARIABLE($row) ; } T_IF ( ! T_STRING ( T_VARIABLE($dbname) ) ) { T_VARIABLE($db_rights) [ T_VARIABLE($row) [ ] ] [ ] = T_STRING ; } } T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_VARIABLE($db_rights) ; } T_FUNCTION(PMA_getHtmlForDisplayUserRightsInRows) ( T_VARIABLE($db_rights) , T_VARIABLE($link_edit) , T_VARIABLE($dbname) , T_VARIABLE($link_revoke) , T_VARIABLE($hostname) , T_VARIABLE($username) ) { T_VARIABLE($html_output) = ; T_VARIABLE($found_rows) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($db_rights) ) < T_LNUMBER ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . . . . ; } T_ELSE { T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($db_rights) T_AS T_VARIABLE($row) ) { T_VARIABLE($found_rows) [ ] = ( ! T_STRING ( T_VARIABLE($dbname) ) ) ? T_VARIABLE($row) [ ] : T_VARIABLE($row) [ ] ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . . . . T_STRING ( ( ! T_STRING ( T_VARIABLE($dbname) ) ) ? T_VARIABLE($row) [ ] : T_VARIABLE($row) [ ] ) . . . . . . T_STRING ( . . , T_STRING ( T_VARIABLE($row) , T_STRING ) ) . . . . . ( ( ( ( ! T_STRING ( T_VARIABLE($dbname) ) ) T_BOOLEAN_AND T_VARIABLE($row) [ ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_STRING ( T_VARIABLE($dbname) ) T_BOOLEAN_AND T_STRING ( , T_STRING ( , T_VARIABLE($row) [ ] ) ) ) ) ? T_STRING ( ) : T_STRING ( ) ) . . . ; T_IF ( ! T_EMPTY ( T_VARIABLE($row) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($link_edit) , T_STRING ( T_STRING ( T_VARIABLE($username) ) ) , T_STRING ( T_STRING ( T_VARIABLE($hostname) ) ) , T_STRING ( ( ! T_STRING ( T_VARIABLE($dbname) ) ) ? T_VARIABLE($row) [ ] : T_STRING ( T_VARIABLE($dbname) ) ) , T_STRING ( ( ! T_STRING ( T_VARIABLE($dbname) ) ) ? : T_VARIABLE($row) [ ] ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . ; T_IF ( ! T_EMPTY ( T_VARIABLE($row) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($link_revoke) , T_STRING ( T_STRING ( T_VARIABLE($username) ) ) , T_STRING ( T_STRING ( T_VARIABLE($hostname) ) ) , T_STRING ( ( ! T_STRING ( T_VARIABLE($dbname) ) ) ? T_VARIABLE($row) [ ] : T_STRING ( T_VARIABLE($dbname) ) ) , T_STRING ( ( ! T_STRING ( T_VARIABLE($dbname) ) ) ? : T_VARIABLE($row) [ ] ) ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } } T_RETURN T_ARRAY ( T_VARIABLE($found_rows) , T_VARIABLE($html_output) ) ; } T_FUNCTION(PMA_getTableForDisplayAllTableSpecificRights) ( T_VARIABLE($username) , T_VARIABLE($hostname) , T_VARIABLE($link_edit) , T_VARIABLE($link_revoke) , T_VARIABLE($dbname) ) { T_VARIABLE($html_output) = T_STRING ( , ) . . . T_STRING ( T_VARIABLE($username) ) . . . . . T_STRING ( T_VARIABLE($hostname) ) . . . . . . ( ! T_STRING ( T_VARIABLE($dbname) ) ? T_STRING ( ) : T_STRING ( ) ) . . . . . . . . ( ! T_STRING ( T_VARIABLE($dbname) ) ? T_STRING ( ) : T_STRING ( ) ) . . . . T_STRING ( ) . . . . T_STRING ( ) . . . . ( ! T_STRING ( T_VARIABLE($dbname) ) ? T_STRING ( ) : T_STRING ( ) ) . . . . T_STRING ( ) . . . . . . ; T_VARIABLE($user_host_condition) = . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . ; T_VARIABLE($tables) = T_STRING ( ) ; T_VARIABLE($db_rights) = T_STRING ( T_VARIABLE($tables) , T_VARIABLE($user_host_condition) , T_VARIABLE($dbname) ) ; T_STRING ( T_VARIABLE($db_rights) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_LIST ( T_VARIABLE($found_rows) , T_VARIABLE($html_out) ) = T_STRING ( T_VARIABLE($db_rights) , T_VARIABLE($link_edit) , T_VARIABLE($dbname) , T_VARIABLE($link_revoke) , T_VARIABLE($hostname) , T_VARIABLE($username) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($html_out) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_RETURN T_ARRAY ( T_VARIABLE($html_output) , T_VARIABLE($found_rows) ) ; } T_FUNCTION(PMA_getHTmlForDisplaySelectDbInEditPrivs) ( T_VARIABLE($found_rows) ) { T_VARIABLE($pred_db_array) = T_STRING ( ) ; T_VARIABLE($html_output) = . T_STRING ( ) . . ; T_IF ( ! T_EMPTY ( T_VARIABLE($pred_db_array) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . . ; T_FOREACH ( T_VARIABLE($pred_db_array) T_AS T_VARIABLE($current_db) ) { T_VARIABLE($current_db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_db) ) ; T_IF ( T_EMPTY ( T_VARIABLE($found_rows) ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($current_db) , T_VARIABLE($found_rows) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($current_db) ) . . T_STRING ( T_VARIABLE($current_db) ) . . ; } } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_displayTablesInEditPrivs) ( T_VARIABLE($dbname) , T_VARIABLE($found_rows) ) { T_VARIABLE($html_output) = . . T_STRING ( T_VARIABLE($dbname) ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_VARIABLE($result) = @ T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) ) ) . , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($result) ) { T_VARIABLE($pred_tbl_array) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($found_rows) ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($row) [ T_LNUMBER ] , T_VARIABLE($found_rows) ) ) { T_VARIABLE($pred_tbl_array) [ ] = T_VARIABLE($row) [ T_LNUMBER ] ; } } T_STRING ( T_VARIABLE($result) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($pred_tbl_array) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . . T_STRING ( ) . . ; T_FOREACH ( T_VARIABLE($pred_tbl_array) T_AS T_VARIABLE($current_table) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($current_table) ) . . T_STRING ( T_VARIABLE($current_table) ) . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; } } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getUsersOverview) ( T_VARIABLE($result) , T_VARIABLE($db_rights) , T_VARIABLE($link_edit) , T_VARIABLE($pmaThemeImage) , T_VARIABLE($text_dir) , T_VARIABLE($conditional_class) , T_VARIABLE($link_export) ) { T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($row) , T_STRING ) ; T_VARIABLE($db_rights) [ T_VARIABLE($row) [ ] ] [ T_VARIABLE($row) [ ] ] = T_VARIABLE($row) ; } @ T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($html_output) = . . . T_STRING ( , ) . . . . . . . . T_STRING ( ) . . . . T_STRING ( ) . . . . T_STRING ( ) . . . . T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) . . . . T_STRING ( ) . . . . T_STRING ( ) . . . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($db_rights) , T_VARIABLE($link_edit) , T_VARIABLE($link_export) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_VARIABLE($pmaThemeImage) . . T_VARIABLE($text_dir) . . . . T_STRING ( ) . . . . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , , T_STRING ( ) , , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ? T_VARIABLE($_GET) [ ] : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($conditional_class) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getTableBodyForUserRightsTable) ( T_VARIABLE($db_rights) , T_VARIABLE($link_edit) , T_VARIABLE($link_export) ) { T_VARIABLE($odd_row) = T_STRING ; T_VARIABLE($index_checkbox) = - T_LNUMBER ; T_VARIABLE($html_output) = ; T_FOREACH ( T_VARIABLE($db_rights) T_AS T_VARIABLE($user) ) { T_VARIABLE($index_checkbox) T_INC ; T_STRING ( T_VARIABLE($user) ) ; T_FOREACH ( T_VARIABLE($user) T_AS T_VARIABLE($host) ) { T_VARIABLE($index_checkbox) T_INC ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_VARIABLE($index_checkbox) . . T_STRING ( T_VARIABLE($host) [ ] . . T_VARIABLE($host) [ ] ) . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($index_checkbox) . . ( T_EMPTY ( T_VARIABLE($host) [ ] ) ? . T_STRING ( ) . : T_STRING ( T_VARIABLE($host) [ ] ) ) . . . . T_STRING ( T_VARIABLE($host) [ ] ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_SWITCH ( T_VARIABLE($host) [ ] ) { T_CASE : T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_BREAK ; T_DEFAULT : T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_BREAK ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( . . , T_VARIABLE($host) [ ] ) . . . . . ( T_VARIABLE($host) [ ] T_IS_EQUAL ? T_STRING ( ) : T_STRING ( ) ) . . . . T_STRING ( T_VARIABLE($link_edit) , T_STRING ( T_VARIABLE($host) [ ] ) , T_STRING ( T_VARIABLE($host) [ ] ) , , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($link_export) , T_STRING ( T_VARIABLE($host) [ ] ) , T_STRING ( T_VARIABLE($host) [ ] ) , ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ? T_VARIABLE($_GET) [ ] : ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getFieldsetForAddDeleteUser) ( T_VARIABLE($conditional_class) ) { T_VARIABLE($html_output) = . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($conditional_class) . . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( ) . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . . . T_STRING ( ) . . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . . T_VARIABLE($conditional_class) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForDisplayTheInitials) ( T_VARIABLE($array_initials) , T_VARIABLE($conditional_class) ) { T_FOR ( T_VARIABLE($letter_counter) = T_LNUMBER ; T_VARIABLE($letter_counter) < T_LNUMBER ; T_VARIABLE($letter_counter) T_INC ) { T_IF ( ! T_ISSET ( T_VARIABLE($array_initials) [ T_STRING ( T_VARIABLE($letter_counter) + T_LNUMBER ) ] ) ) { T_VARIABLE($array_initials) [ T_STRING ( T_VARIABLE($letter_counter) + T_LNUMBER ) ] = T_STRING ; } } T_VARIABLE($initials) = T_STRING ( , T_STRING , T_STRING ) ; T_WHILE ( T_LIST ( T_VARIABLE($tmp_initial) ) = T_STRING ( T_VARIABLE($initials) ) ) { T_VARIABLE($array_initials) [ T_VARIABLE($tmp_initial) ] = T_STRING ; } T_STRING ( T_VARIABLE($array_initials) , ) ; T_VARIABLE($html_output) = . ; T_FOREACH ( T_VARIABLE($array_initials) T_AS T_VARIABLE($tmp_initial) T_DOUBLE_ARROW T_VARIABLE($initial_was_found) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($tmp_initial) ) ) { T_IF ( T_VARIABLE($initial_was_found) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($conditional_class) . . . T_VARIABLE($GLOBALS) [ ] . . . T_STRING ( T_VARIABLE($tmp_initial) ) . . T_VARIABLE($tmp_initial) . . . ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($tmp_initial) . ; } } } T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($GLOBALS) [ ] . . . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getDbRightsForUserOverview) ( ) { T_VARIABLE($tables) = T_STRING ( ) ; T_VARIABLE($tables_to_search_for_users) = T_ARRAY ( , , , , , ) ; T_VARIABLE($db_rights_sqls) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tables_to_search_for_users) T_AS T_VARIABLE($table_search_in) ) { T_IF ( T_STRING ( T_VARIABLE($table_search_in) , T_VARIABLE($tables) ) ) { T_VARIABLE($db_rights_sqls) [ ] = . T_VARIABLE($table_search_in) . . ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ? T_STRING ( T_VARIABLE($_GET) [ ] ) : ) ; } } T_VARIABLE($user_defaults) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($db_rights) = T_ARRAY ( ) ; T_VARIABLE($db_rights_sql) = . T_STRING ( , T_VARIABLE($db_rights_sqls) ) . . ; T_VARIABLE($db_rights_result) = T_STRING ( T_VARIABLE($db_rights_sql) ) ; T_WHILE ( T_VARIABLE($db_rights_row) = T_STRING ( T_VARIABLE($db_rights_result) ) ) { T_VARIABLE($db_rights_row) = T_STRING ( T_VARIABLE($user_defaults) , T_VARIABLE($db_rights_row) ) ; T_VARIABLE($db_rights) [ T_VARIABLE($db_rights_row) [ ] ] [ T_VARIABLE($db_rights_row) [ ] ] = T_VARIABLE($db_rights_row) ; } T_STRING ( T_VARIABLE($db_rights_result) ) ; T_STRING ( T_VARIABLE($db_rights) ) ; T_RETURN T_VARIABLE($db_rights) ; } T_FUNCTION(PMA_deleteUser) ( T_VARIABLE($queries) ) { T_IF ( T_EMPTY ( T_VARIABLE($queries) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($queries) [ ] = . T_STRING ( ) . ; T_VARIABLE($queries) [ ] = ; } T_VARIABLE($drop_user_error) = ; T_FOREACH ( T_VARIABLE($queries) T_AS T_VARIABLE($sql_query) ) { T_IF ( T_VARIABLE($sql_query) { T_LNUMBER } T_IS_NOT_EQUAL ) { T_IF ( ! T_STRING ( T_VARIABLE($sql_query) , T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($drop_user_error) T_CONCAT_EQUAL T_STRING ( ) . ; } } } T_UNSET ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($sql_query) = T_STRING ( , T_VARIABLE($queries) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($drop_user_error) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($drop_user_error) ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } } T_RETURN T_ARRAY ( T_VARIABLE($sql_query) , T_VARIABLE($message) ) ; } T_FUNCTION(PMA_updatePrivileges) ( T_VARIABLE($username) , T_VARIABLE($hostname) , T_VARIABLE($tablename) , T_VARIABLE($dbname) ) { T_VARIABLE($db_and_table) = T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) ) ; T_VARIABLE($sql_query0) = . T_VARIABLE($db_and_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . ; T_IF ( ! T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_OR T_VARIABLE($_POST) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($sql_query1) = . T_VARIABLE($db_and_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . ; } T_ELSE { T_VARIABLE($sql_query1) = ; } T_IF ( ! ( T_STRING ( T_VARIABLE($tablename) ) T_BOOLEAN_AND T_IS_EQUAL T_STRING ( , T_STRING ( ) ) ) ) { T_VARIABLE($sql_query2) = . T_STRING ( , T_STRING ( ) ) . . T_VARIABLE($db_and_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . ; T_IF ( ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_POST) [ ] T_IS_EQUAL ) T_BOOLEAN_OR ( ! T_STRING ( T_VARIABLE($dbname) ) T_BOOLEAN_AND ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ) ) { T_VARIABLE($sql_query2) T_CONCAT_EQUAL T_STRING ( ) ; } T_VARIABLE($sql_query2) T_CONCAT_EQUAL ; } T_IF ( ! T_STRING ( T_VARIABLE($sql_query0) ) ) { T_VARIABLE($sql_query0) = ; } T_IF ( T_ISSET ( T_VARIABLE($sql_query1) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($sql_query1) ) ) { T_VARIABLE($sql_query1) = ; } T_IF ( T_ISSET ( T_VARIABLE($sql_query2) ) ) { T_STRING ( T_VARIABLE($sql_query2) ) ; } T_ELSE { T_VARIABLE($sql_query2) = ; } T_VARIABLE($sql_query) = T_VARIABLE($sql_query0) . . T_VARIABLE($sql_query1) . . T_VARIABLE($sql_query2) ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( . T_STRING ( T_VARIABLE($username) ) . . T_STRING ( T_VARIABLE($hostname) ) . ) ; T_RETURN T_ARRAY ( T_VARIABLE($sql_query) , T_VARIABLE($message) ) ; } T_FUNCTION(PMA_getHtmlForExportUserDefinition) ( T_VARIABLE($username) , T_VARIABLE($hostname) ) { T_VARIABLE($export) = . T_VARIABLE($GLOBALS) [ ] [ ] . . T_VARIABLE($GLOBALS) [ ] [ ] . ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($title) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($_REQUEST) [ ] T_AS T_VARIABLE($export_user) ) { T_VARIABLE($export_username) = T_STRING ( T_VARIABLE($export_user) , T_LNUMBER , T_STRING ( T_VARIABLE($export_user) , ) ) ; T_VARIABLE($export_hostname) = T_STRING ( T_VARIABLE($export_user) , T_STRING ( T_VARIABLE($export_user) , ) + T_LNUMBER ) ; T_VARIABLE($export) T_CONCAT_EQUAL . T_STRING ( T_STRING ( ) , . T_STRING ( T_VARIABLE($export_username) ) . . T_STRING ( T_VARIABLE($export_hostname) ) . ) . ; T_VARIABLE($export) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($export_username) , T_VARIABLE($export_hostname) ) . ; } } T_ELSE { T_VARIABLE($title) = T_STRING ( ) . . T_STRING ( T_VARIABLE($username) ) . . T_STRING ( T_VARIABLE($hostname) ) . ; T_VARIABLE($export) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($username) , T_VARIABLE($hostname) ) ; } T_VARIABLE($export) = T_STRING ( T_VARIABLE($export) ) ; T_VARIABLE($export) T_CONCAT_EQUAL ; T_RETURN T_ARRAY ( T_VARIABLE($title) , T_VARIABLE($export) ) ; } T_FUNCTION(PMA_getAddUserHtmlFieldset) ( T_VARIABLE($conditional_class) ) { T_RETURN . . . T_VARIABLE($GLOBALS) [ ] . . . T_VARIABLE($conditional_class) . . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( ) . . . . ; } T_FUNCTION(PMA_getHtmlHeaderForDisplayUserProperties) ( T_VARIABLE($dbname_is_wildcard) , T_VARIABLE($url_dbname) , T_VARIABLE($dbname) , T_VARIABLE($username) , T_VARIABLE($hostname) , T_VARIABLE($tablename) ) { T_VARIABLE($html_output) = . . T_STRING T_DOUBLE_COLON T_STRING ( ) . T_STRING ( ) . . T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($dbname) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] . . T_STRING ( T_STRING ( T_VARIABLE($username) ) ) . . T_STRING ( T_STRING ( T_VARIABLE($hostname) ) ) . . T_STRING ( T_VARIABLE($username) ) . . T_STRING ( T_VARIABLE($hostname) ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($dbname_is_wildcard) ? T_STRING ( ) : T_STRING ( ) ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] . . T_STRING ( T_STRING ( T_VARIABLE($username) ) ) . . T_STRING ( T_STRING ( T_VARIABLE($hostname) ) ) . . T_STRING ( T_VARIABLE($url_dbname) ) . . T_STRING ( T_VARIABLE($dbname) ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . T_STRING ( T_VARIABLE($tablename) ) . ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($dbname) ) . ; } } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($username) ) . . T_STRING ( T_VARIABLE($hostname) ) . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForDisplayUserOverviewPage) ( T_VARIABLE($link_edit) , T_VARIABLE($pmaThemeImage) , T_VARIABLE($text_dir) , T_VARIABLE($conditional_class) , T_VARIABLE($link_export) ) { T_VARIABLE($html_output) = . . T_STRING T_DOUBLE_COLON T_STRING ( ) . T_STRING ( ) . . . ; T_VARIABLE($sql_query) = . . ; T_VARIABLE($sql_query) T_CONCAT_EQUAL ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_STRING ( T_VARIABLE($_REQUEST) [ ] ) : ) ; T_VARIABLE($sql_query) T_CONCAT_EQUAL ; T_VARIABLE($res) = T_STRING ( T_VARIABLE($sql_query) , T_STRING , T_STRING ) ; T_IF ( ! T_VARIABLE($res) ) { T_VARIABLE($sql_query) = ; T_VARIABLE($res) = T_STRING ( T_VARIABLE($sql_query) , T_STRING , T_STRING ) ; T_IF ( ! T_VARIABLE($res) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( T_VARIABLE($res) ) ; T_UNSET ( T_VARIABLE($res) ) ; } T_ELSE { T_VARIABLE($raw) = . . . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($raw) ) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_ELSE { T_VARIABLE($db_rights) = T_STRING ( ) ; T_VARIABLE($array_initials) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($res) ) > T_LNUMBER ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($array_initials) , T_VARIABLE($conditional_class) ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($res) ) < T_LNUMBER ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($res) , T_VARIABLE($db_rights) , T_VARIABLE($link_edit) , T_VARIABLE($pmaThemeImage) , T_VARIABLE($text_dir) , T_VARIABLE($conditional_class) , T_VARIABLE($link_export) ) ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($conditional_class) ) ; } T_IF ( ! T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($flushnote) = T_NEW T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ) ; T_VARIABLE($flushLink) = . T_VARIABLE($GLOBALS) [ ] . . . . T_VARIABLE($conditional_class) . ; T_VARIABLE($flushnote) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($flushLink) , T_STRING ) ; T_VARIABLE($flushnote) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($flushnote) T_OBJECT_OPERATOR T_STRING ( ) ; } T_RETURN T_VARIABLE($html_output) ; } } T_FUNCTION(PMA_getHtmlForDisplayUserProperties) ( T_VARIABLE($dbname_is_wildcard) , T_VARIABLE($url_dbname) , T_VARIABLE($username) , T_VARIABLE($hostname) , T_VARIABLE($link_edit) , T_VARIABLE($link_revoke) , T_VARIABLE($dbname) , T_VARIABLE($tablename) ) { T_VARIABLE($html_output) = T_STRING ( T_VARIABLE($dbname_is_wildcard) , T_VARIABLE($url_dbname) , T_VARIABLE($dbname) , T_VARIABLE($username) , T_VARIABLE($hostname) , T_VARIABLE($tablename) ) ; T_VARIABLE($sql) = . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . ; T_VARIABLE($user_does_not_exists) = T_BOOL_CAST ! T_STRING ( T_VARIABLE($sql) ) ; T_IF ( T_VARIABLE($user_does_not_exists) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; } T_VARIABLE($class) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($class) . . . ; T_VARIABLE($_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($username) , T_DOUBLE_ARROW T_VARIABLE($hostname) , ) ; T_IF ( T_STRING ( T_VARIABLE($dbname) ) ) { T_VARIABLE($_params) [ ] = T_VARIABLE($dbname) ; T_IF ( T_STRING ( T_VARIABLE($tablename) ) ) { T_VARIABLE($_params) [ ] = T_VARIABLE($tablename) ; } } T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($_params) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_VARIABLE($dbname) , , ) , T_STRING ( T_VARIABLE($tablename) , , ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_IF ( ! T_STRING ( T_VARIABLE($tablename) ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($dbname_is_wildcard) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . ; T_LIST ( T_VARIABLE($html_rightsTable) , T_VARIABLE($found_rows) ) = T_STRING ( T_VARIABLE($username) , T_VARIABLE($hostname) , T_VARIABLE($link_edit) , T_VARIABLE($link_revoke) , T_VARIABLE($dbname) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($html_rightsTable) ; T_IF ( ! T_STRING ( T_VARIABLE($dbname) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($found_rows) ) ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($found_rows) ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . . . . . ; } T_IF ( T_STRING ( T_VARIABLE($dbname) ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($dbname_is_wildcard) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($url_dbname) , T_VARIABLE($dbname) , T_VARIABLE($tablename) ) ; } T_IF ( ! T_STRING ( T_VARIABLE($dbname) ) T_BOOLEAN_AND ! T_VARIABLE($user_does_not_exists) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($username) , T_VARIABLE($hostname) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($username) , T_VARIABLE($hostname) ) ; } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getTablePrivsQueriesForChangeOrCopyUser) ( T_VARIABLE($user_host_condition) , T_VARIABLE($queries) , T_VARIABLE($username) , T_VARIABLE($hostname) ) { T_VARIABLE($res) = T_STRING ( . T_VARIABLE($user_host_condition) , T_VARIABLE($GLOBALS) [ ] , T_STRING ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($res) ) ) { T_VARIABLE($res2) = T_STRING ( . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) . . , T_STRING , T_STRING ) ; T_VARIABLE($tmp_privs1) = T_STRING ( T_VARIABLE($row) ) ; T_VARIABLE($tmp_privs2) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_WHILE ( T_VARIABLE($row2) = T_STRING ( T_VARIABLE($res2) ) ) { T_VARIABLE($tmp_array) = T_STRING ( , T_VARIABLE($row2) [ ] ) ; T_IF ( T_STRING ( , T_VARIABLE($tmp_array) ) ) { T_VARIABLE($tmp_privs2) [ ] [ ] = T_VARIABLE($row2) [ ] ; } T_IF ( T_STRING ( , T_VARIABLE($tmp_array) ) ) { T_VARIABLE($tmp_privs2) [ ] [ ] = T_VARIABLE($row2) [ ] ; } T_IF ( T_STRING ( , T_VARIABLE($tmp_array) ) ) { T_VARIABLE($tmp_privs2) [ ] [ ] = T_VARIABLE($row2) [ ] ; } T_IF ( T_STRING ( , T_VARIABLE($tmp_array) ) ) { T_VARIABLE($tmp_privs2) [ ] [ ] = T_VARIABLE($row2) [ ] ; } } T_IF ( T_STRING ( T_VARIABLE($tmp_privs2) [ ] ) > T_LNUMBER T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($tmp_privs1) ) ) { T_VARIABLE($tmp_privs1) [ ] = . T_STRING ( , T_VARIABLE($tmp_privs2) [ ] ) . ; } T_IF ( T_STRING ( T_VARIABLE($tmp_privs2) [ ] ) > T_LNUMBER T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($tmp_privs1) ) ) { T_VARIABLE($tmp_privs1) [ ] = . T_STRING ( , T_VARIABLE($tmp_privs2) [ ] ) . ; } T_IF ( T_STRING ( T_VARIABLE($tmp_privs2) [ ] ) > T_LNUMBER T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($tmp_privs1) ) ) { T_VARIABLE($tmp_privs1) [ ] = . T_STRING ( , T_VARIABLE($tmp_privs2) [ ] ) . ; } T_IF ( T_STRING ( T_VARIABLE($tmp_privs2) [ ] ) > T_LNUMBER T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($tmp_privs1) ) ) { T_VARIABLE($tmp_privs1) [ ] = . T_STRING ( , T_VARIABLE($tmp_privs2) [ ] ) . ; } T_VARIABLE($queries) [ ] = . T_STRING ( , T_VARIABLE($tmp_privs1) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . . ( T_STRING ( , T_STRING ( , T_VARIABLE($row) [ ] ) ) ? : ) ; } T_RETURN T_VARIABLE($queries) ; } T_FUNCTION(PMA_getDbSpecificPrivsQueriesForChangeOrCopyUser) ( T_VARIABLE($queries) , T_VARIABLE($username) , T_VARIABLE($hostname) ) { T_VARIABLE($user_host_condition) = . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_VARIABLE($res) = T_STRING ( . T_VARIABLE($user_host_condition) ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($res) ) ) { T_VARIABLE($queries) [ ] = . T_STRING ( , T_STRING ( T_VARIABLE($row) ) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . . ( T_VARIABLE($row) [ ] T_IS_EQUAL ? : ) ; } T_STRING ( T_VARIABLE($res) ) ; T_VARIABLE($queries) = T_STRING ( T_VARIABLE($user_host_condition) , T_VARIABLE($queries) , T_VARIABLE($username) , T_VARIABLE($hostname) ) ; T_RETURN T_VARIABLE($queries) ; } T_FUNCTION(PMA_addUserAndCreateDatabase) ( T_VARIABLE($_error) , T_VARIABLE($real_sql_query) , T_VARIABLE($sql_query) , T_VARIABLE($username) , T_VARIABLE($hostname) , T_VARIABLE($dbname) ) { T_IF ( T_VARIABLE($_error) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($real_sql_query) ) ) { T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($_REQUEST) [ ] = T_STRING ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($q) = . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) ) . ; T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($q) ; T_IF ( ! T_STRING ( T_VARIABLE($q) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($username) ; T_VARIABLE($q) = . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) ) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . ; T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($q) ; T_IF ( ! T_STRING ( T_VARIABLE($q) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($q) = . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . ; T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($q) ; T_IF ( ! T_STRING ( T_VARIABLE($q) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($q) = . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) ) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . ; T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($q) ; T_IF ( ! T_STRING ( T_VARIABLE($q) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } } T_RETURN T_ARRAY ( T_VARIABLE($sql_query) , T_VARIABLE($message) ) ; } T_FUNCTION(PMA_getSqlQueriesForDisplayAndAddUser) ( T_VARIABLE($username) , T_VARIABLE($hostname) , T_VARIABLE($password) ) { T_VARIABLE($sql_query) = ; T_VARIABLE($create_user_real) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . ; T_VARIABLE($real_sql_query) = . T_STRING ( , T_STRING ( ) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . ; T_IF ( T_VARIABLE($_POST) [ ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($_POST) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($sql_query) = T_VARIABLE($real_sql_query) . ; T_VARIABLE($real_sql_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_POST) [ ] ) . ; T_IF ( T_ISSET ( T_VARIABLE($create_user_real) ) ) { T_VARIABLE($create_user_show) = T_VARIABLE($create_user_real) . ; T_VARIABLE($create_user_real) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_POST) [ ] ) . ; } } T_ELSE { T_IF ( T_VARIABLE($_POST) [ ] T_IS_EQUAL T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($password) ) ) { T_VARIABLE($real_sql_query) T_CONCAT_EQUAL . T_VARIABLE($password) . ; T_IF ( T_ISSET ( T_VARIABLE($create_user_real) ) ) { T_VARIABLE($create_user_real) T_CONCAT_EQUAL . T_VARIABLE($password) . ; } } T_VARIABLE($sql_query) = T_VARIABLE($real_sql_query) ; T_IF ( T_ISSET ( T_VARIABLE($create_user_real) ) ) { T_VARIABLE($create_user_show) = T_VARIABLE($create_user_real) ; } } T_IF ( ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_POST) [ ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ) { T_VARIABLE($with_clause) = T_STRING ( ) ; T_VARIABLE($real_sql_query) T_CONCAT_EQUAL . T_VARIABLE($with_clause) ; T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($with_clause) ; } T_IF ( T_ISSET ( T_VARIABLE($create_user_real) ) ) { T_VARIABLE($create_user_real) T_CONCAT_EQUAL ; T_VARIABLE($create_user_show) T_CONCAT_EQUAL ; } T_VARIABLE($real_sql_query) T_CONCAT_EQUAL ; T_VARIABLE($sql_query) T_CONCAT_EQUAL ; T_RETURN T_ARRAY ( T_VARIABLE($create_user_real) , T_VARIABLE($create_user_show) , T_VARIABLE($real_sql_query) , T_VARIABLE($sql_query) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_STRING { T_PUBLIC T_VARIABLE($status) ; T_PUBLIC T_VARIABLE($sections) ; T_PUBLIC T_VARIABLE($variables) ; T_PUBLIC T_VARIABLE($used_queries) ; T_PUBLIC T_VARIABLE($allocationMap) ; T_PUBLIC T_VARIABLE($links) ; T_PUBLIC T_VARIABLE($db_isLocal) ; T_PUBLIC T_VARIABLE($section) ; T_PUBLIC T_VARIABLE($categoryUsed) ; T_PUBLIC T_VARIABLE($selfUrl) ; T_PUBLIC T_STRING ( T_VARIABLE($a) , T_VARIABLE($b) ) { } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($server_status) = T_STRING ( , T_LNUMBER , T_LNUMBER ) ; T_IF ( T_STRING ) { T_VARIABLE($sql) = ; T_VARIABLE($statements) = T_STRING ( T_VARIABLE($sql) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($server_status) = T_STRING ( T_VARIABLE($server_status) , T_VARIABLE($statements) ) ; } T_VARIABLE($server_variables) = T_STRING ( , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($server_status) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($server_status) ) ; T_IF ( T_ISSET ( T_VARIABLE($server_status) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($server_variables) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($server_variables) [ ] ) ) { T_VARIABLE($server_status) [ ] = T_LNUMBER - T_VARIABLE($server_status) [ ] * T_VARIABLE($server_variables) [ ] / T_VARIABLE($server_variables) [ ] * T_LNUMBER ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($server_status) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($server_variables) [ ] ) ) { T_VARIABLE($server_status) [ ] = T_VARIABLE($server_status) [ ] * T_LNUMBER / T_VARIABLE($server_variables) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($server_status) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($server_status) [ ] ) T_BOOLEAN_AND T_VARIABLE($server_status) [ ] > T_LNUMBER ) { T_VARIABLE($server_status) [ ] = T_LNUMBER * T_VARIABLE($server_status) [ ] / T_VARIABLE($server_status) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($server_status) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($server_status) [ ] ) T_BOOLEAN_AND T_VARIABLE($server_status) [ ] > T_LNUMBER ) { T_VARIABLE($server_status) [ ] = T_LNUMBER * T_VARIABLE($server_status) [ ] / T_VARIABLE($server_status) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($server_status) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($server_status) [ ] ) T_BOOLEAN_AND T_VARIABLE($server_status) [ ] > T_LNUMBER ) { T_VARIABLE($server_status) [ ] = T_LNUMBER - T_VARIABLE($server_status) [ ] / T_VARIABLE($server_status) [ ] * T_LNUMBER ; } T_VARIABLE($allocationssections) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($links) = T_ARRAY ( ) ; T_VARIABLE($links) [ ] [ T_STRING ( ) ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . T_STRING ( ) ; T_VARIABLE($links) [ ] [ T_STRING ( ) ] = . T_STRING ( ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($links) [ ] [ T_STRING ( ) ] = . T_STRING ( ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . T_STRING ( ) ; T_VARIABLE($links) [ ] [ T_STRING ( ) ] = ; } T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($links) [ ] [ T_STRING ( ) ] = ; } T_VARIABLE($links) [ ] [ ] = ; T_VARIABLE($links) [ ] [ T_STRING ( ) ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . T_STRING ( ) . . T_STRING ( ) ; T_VARIABLE($links) [ ] [ ] = ; T_VARIABLE($links) [ ] [ ] = ; T_VARIABLE($links) [ ] [ ] = ; T_VARIABLE($links) [ ] [ ] = ; T_VARIABLE($links) [ ] [ ] = ; T_VARIABLE($links) [ ] [ T_STRING ( ) ] = . T_STRING ( ) ; T_VARIABLE($links) [ ] [ T_STRING ( ) ] = . T_STRING ( ) ; T_VARIABLE($links) [ ] [ ] = ; T_VARIABLE($used_queries) = T_ARRAY ( ) ; T_VARIABLE($allocationMap) = T_ARRAY ( ) ; T_VARIABLE($categoryUsed) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($server_status) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($section_found) = T_STRING ; T_FOREACH ( T_VARIABLE($allocations) T_AS T_VARIABLE($filter) T_DOUBLE_ARROW T_VARIABLE($section) ) { T_IF ( T_STRING ( T_VARIABLE($name) , T_VARIABLE($filter) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($allocationMap) [ T_VARIABLE($name) ] = T_VARIABLE($section) ; T_VARIABLE($categoryUsed) [ T_VARIABLE($section) ] = T_STRING ; T_VARIABLE($section_found) = T_STRING ; T_IF ( T_VARIABLE($section) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($value) > T_LNUMBER ) { T_VARIABLE($used_queries) [ T_VARIABLE($name) ] = T_VARIABLE($value) ; } T_BREAK ; } } T_IF ( ! T_VARIABLE($section_found) ) { T_VARIABLE($allocationMap) [ T_VARIABLE($name) ] = ; T_VARIABLE($categoryUsed) [ ] = T_STRING ; } } T_IF ( T_STRING ) { T_VARIABLE($used_queries) = T_STRING ( , T_LNUMBER , T_LNUMBER ) ; T_UNSET ( T_VARIABLE($used_queries) [ ] ) ; } T_ELSE { T_UNSET ( T_VARIABLE($used_queries) [ ] ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) T_IS_IDENTICAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] [ ] [ ] T_IS_IDENTICAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] [ ] [ ] T_IS_IDENTICAL ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($server_status) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($sections) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($server_variables) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($used_queries) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($allocationMap) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($links) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($categoryUsed) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($server_status) ) { T_VARIABLE($deprecated) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_FOREACH ( T_VARIABLE($deprecated) T_AS T_VARIABLE($old) T_DOUBLE_ARROW T_VARIABLE($new) ) { T_IF ( T_ISSET ( T_VARIABLE($server_status) [ T_VARIABLE($old) ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($server_status) [ T_VARIABLE($new) ] ) ) { T_UNSET ( T_VARIABLE($server_status) [ T_VARIABLE($old) ] ) ; } } T_RETURN T_VARIABLE($server_status) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($url_params) = T_STRING ( ) ; T_VARIABLE($items) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) ; T_VARIABLE($retval) = ; T_FOREACH ( T_VARIABLE($items) T_AS T_VARIABLE($item) ) { T_VARIABLE($class) = ; T_IF ( T_VARIABLE($item) [ ] T_IS_IDENTICAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($class) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($class) ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($item) [ ] . . T_VARIABLE($url_params) . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($item) [ ] ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; }no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_IF ( ! @ T_STRING ( ) ) { T_STRING ( , T_STRING ) ; } T_ELSEIF ( T_STRING ( ) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_STRING ( ) T_IS_NOT_EQUAL ) { T_STRING ( ) ; } T_STRING ( T_LNUMBER , T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) , , T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) , T_STRING ) ; @ T_STRING ( , T_STRING ) ; T_VARIABLE($path) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($path) ) ) { T_STRING ( T_VARIABLE($path) ) ; } @ T_STRING ( , T_STRING ) ; @ T_STRING ( , ) ; @ T_STRING ( , T_LNUMBER ) ; @ T_STRING ( , T_STRING ) ; @ T_STRING ( , T_STRING ) ; @ T_STRING ( , T_LNUMBER ) ; T_STRING ( ) ; T_VARIABLE($session_name) = ; @ T_STRING ( T_VARIABLE($session_name) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_COOKIE) [ T_VARIABLE($session_name) ] ) ) { T_VARIABLE($orig_error_count) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($r) = T_STRING ( ) ; T_IF ( T_VARIABLE($r) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_OR T_VARIABLE($orig_error_count) T_IS_NOT_EQUAL T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) { T_STRING ( T_VARIABLE($session_name) , , T_LNUMBER ) ; T_STRING ( ) ; } T_UNSET ( T_VARIABLE($orig_error_count) ) ; } T_ELSE { T_STRING ( ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ) ) ; } T_FUNCTION(PMA_secureSession) ( ) { T_STRING ( T_STRING ) ; T_VARIABLE($_SESSION) [ ] = T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_VARIABLE($GLOBALS) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , ) , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , ) , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , ) , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , ) , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW ) ) ) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_IF ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = ; } T_VARIABLE($PMA_SQPdata_function_namedata_column_attrib) = T_ARRAY ( , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ) ; T_VARIABLE($PMA_SQPdata_reserved_worddata_forbidden_worddata_column_type) = T_ARRAY ( , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ) ; T_VARIABLE($PMA_SQPdata_operators_docs) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ) ; T_VARIABLE($PMA_SQPdata_functions_docs) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_IF ( ! T_STRING ( ) ) { T_INCLUDE_ONCE ; } T_IF ( ! T_ISSET ( T_VARIABLE($mysql_charsets) ) ) { T_VARIABLE($mysql_charsets) = T_ARRAY ( ) ; T_VARIABLE($mysql_collations_flat) = T_ARRAY ( ) ; } T_FUNCTION(PMA_SQP_arrayAdd) ( & T_VARIABLE($arr) , T_VARIABLE($type) , T_VARIABLE($data) , & T_VARIABLE($arrsize) , T_VARIABLE($pos) = T_LNUMBER ) { T_VARIABLE($arr) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($type) , T_DOUBLE_ARROW T_VARIABLE($data) , T_DOUBLE_ARROW T_VARIABLE($pos) ) ; T_VARIABLE($arrsize) T_INC ; } T_FUNCTION(PMA_SQP_resetError) ( ) { T_GLOBAL T_VARIABLE($SQP_errorString) ; T_VARIABLE($SQP_errorString) = ; T_UNSET ( T_VARIABLE($SQP_errorString) ) ; } T_FUNCTION(PMA_SQP_getErrorString) ( ) { T_GLOBAL T_VARIABLE($SQP_errorString) ; T_RETURN T_ISSET ( T_VARIABLE($SQP_errorString) ) ? T_VARIABLE($SQP_errorString) : ; } T_FUNCTION(PMA_SQP_isError) ( ) { T_GLOBAL T_VARIABLE($SQP_errorString) ; T_RETURN T_ISSET ( T_VARIABLE($SQP_errorString) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($SQP_errorString) ) ; } T_FUNCTION(PMA_SQP_throwError) ( T_VARIABLE($message) , T_VARIABLE($sql) ) { T_GLOBAL T_VARIABLE($SQP_errorString) ; T_VARIABLE($SQP_errorString) = . T_STRING ( ) . . . . . . T_VARIABLE($message) . . . T_STRING ( T_VARIABLE($sql) ) . . . ; } T_FUNCTION(PMA_SQP_bug) ( T_VARIABLE($message) , T_VARIABLE($sql) ) { T_GLOBAL T_VARIABLE($SQP_errorString) ; T_VARIABLE($debugstr) = . T_VARIABLE($message) . ; T_VARIABLE($debugstr) T_CONCAT_EQUAL . T_STRING . ; T_VARIABLE($debugstr) T_CONCAT_EQUAL . T_STRING . ; T_VARIABLE($debugstr) T_CONCAT_EQUAL T_STRING . . T_STRING . ; T_VARIABLE($debugstr) T_CONCAT_EQUAL . T_STRING . ; T_VARIABLE($debugstr) T_CONCAT_EQUAL . T_STRING . . T_STRING . ; T_VARIABLE($debugstr) T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] . ; T_VARIABLE($debugstr) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($sql) ) ; T_VARIABLE($encodedstr) = T_VARIABLE($debugstr) ; T_IF ( @ T_STRING ( ) ) { T_VARIABLE($encodedstr) = T_STRING ( T_VARIABLE($debugstr) , T_LNUMBER ) ; } T_VARIABLE($encodedstr) = T_STRING ( , . , T_STRING ( T_STRING ( T_VARIABLE($encodedstr) ) ) ) ; T_VARIABLE($SQP_errorString) T_CONCAT_EQUAL T_STRING ( ) . . . . T_STRING ( ) . . . . T_VARIABLE($encodedstr) . . . T_STRING ( ) . . . ; T_VARIABLE($SQP_errorString) T_CONCAT_EQUAL . T_STRING ( ) . . . . . T_VARIABLE($debugstr) . . . . T_STRING ( ) . . ; } T_FUNCTION(PMA_SQP_parse) ( T_VARIABLE($sql) ) { T_STATIC T_VARIABLE($PMA_SQPdata_column_attrib) , T_VARIABLE($PMA_SQPdata_reserved_word) ; T_STATIC T_VARIABLE($PMA_SQPdata_column_type) ; T_STATIC T_VARIABLE($PMA_SQPdata_function_name) , T_VARIABLE($PMA_SQPdata_forbidden_word) ; T_GLOBAL T_VARIABLE($mysql_charsets) , T_VARIABLE($mysql_collations_flat) ; T_VARIABLE($sql) = T_STRING ( , , T_VARIABLE($sql) ) ; T_VARIABLE($sql) = T_STRING ( , , T_VARIABLE($sql) ) ; T_VARIABLE($len) = T_STRING ( T_VARIABLE($sql) ) ; T_IF ( T_VARIABLE($len) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_ARRAY ( ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($PMA_SQPdata_column_attrib) ) ) { T_VARIABLE($PMA_SQPdata_column_attrib) = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($PMA_SQPdata_function_name) = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($PMA_SQPdata_reserved_word) = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($PMA_SQPdata_forbidden_word) = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($PMA_SQPdata_column_type) = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; } T_VARIABLE($sql_array) = T_ARRAY ( ) ; T_VARIABLE($sql_array) [ ] = T_VARIABLE($sql) ; T_VARIABLE($count1) = T_LNUMBER ; T_VARIABLE($count2) = T_LNUMBER ; T_VARIABLE($punct_queryend) = ; T_VARIABLE($punct_qualifier) = ; T_VARIABLE($punct_listsep) = ; T_VARIABLE($punct_level_plus) = ; T_VARIABLE($punct_level_minus) = ; T_VARIABLE($punct_user) = ; T_VARIABLE($digit_floatdecimal) = ; T_VARIABLE($digit_hexset) = ; T_VARIABLE($bracket_list) = ; T_VARIABLE($allpunct_list) = ; T_VARIABLE($allpunct_list_pair) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($quote_list) = ; T_VARIABLE($arraysize) = T_LNUMBER ; T_VARIABLE($previous_was_space) = T_STRING ; T_VARIABLE($this_was_space) = T_STRING ; T_VARIABLE($previous_was_bracket) = T_STRING ; T_VARIABLE($this_was_bracket) = T_STRING ; T_VARIABLE($previous_was_punct) = T_STRING ; T_VARIABLE($this_was_punct) = T_STRING ; T_VARIABLE($previous_was_listsep) = T_STRING ; T_VARIABLE($this_was_listsep) = T_STRING ; T_VARIABLE($previous_was_quote) = T_STRING ; T_VARIABLE($this_was_quote) = T_STRING ; T_WHILE ( T_VARIABLE($count2) < T_VARIABLE($len) ) { T_VARIABLE($c) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count2) , T_LNUMBER ) ; T_VARIABLE($count1) = T_VARIABLE($count2) ; T_VARIABLE($previous_was_space) = T_VARIABLE($this_was_space) ; T_VARIABLE($this_was_space) = T_STRING ; T_VARIABLE($previous_was_bracket) = T_VARIABLE($this_was_bracket) ; T_VARIABLE($this_was_bracket) = T_STRING ; T_VARIABLE($previous_was_punct) = T_VARIABLE($this_was_punct) ; T_VARIABLE($this_was_punct) = T_STRING ; T_VARIABLE($previous_was_listsep) = T_VARIABLE($this_was_listsep) ; T_VARIABLE($this_was_listsep) = T_STRING ; T_VARIABLE($previous_was_quote) = T_VARIABLE($this_was_quote) ; T_VARIABLE($this_was_quote) = T_STRING ; T_IF ( ( T_VARIABLE($c) T_IS_EQUAL ) ) { T_VARIABLE($this_was_space) = T_STRING ; T_VARIABLE($count2) T_INC ; T_STRING ( T_VARIABLE($sql_array) , , , T_VARIABLE($arraysize) ) ; T_CONTINUE ; } T_IF ( T_STRING ( T_VARIABLE($c) ) ) { T_VARIABLE($this_was_space) = T_STRING ; T_VARIABLE($count2) T_INC ; T_CONTINUE ; } T_VARIABLE($next_c) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count2) + T_LNUMBER , T_LNUMBER ) ; T_IF ( ( T_VARIABLE($c) T_IS_EQUAL ) T_BOOLEAN_OR ( ( T_VARIABLE($count2) + T_LNUMBER < T_VARIABLE($len) ) T_BOOLEAN_AND ( T_VARIABLE($c) T_IS_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($next_c) T_IS_EQUAL ) ) T_BOOLEAN_OR ( ( T_VARIABLE($count2) + T_LNUMBER T_IS_EQUAL T_VARIABLE($len) ) T_BOOLEAN_AND ( T_VARIABLE($c) T_IS_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($next_c) T_IS_EQUAL ) ) T_BOOLEAN_OR ( ( T_VARIABLE($count2) + T_LNUMBER < T_VARIABLE($len) ) T_BOOLEAN_AND ( T_VARIABLE($c) T_IS_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($next_c) T_IS_EQUAL ) T_BOOLEAN_AND ( ( T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count2) + T_LNUMBER , T_LNUMBER ) T_IS_SMALLER_OR_EQUAL ) ) ) ) { T_VARIABLE($count2) T_INC ; T_VARIABLE($pos) = T_LNUMBER ; T_VARIABLE($type) = ; T_SWITCH ( T_VARIABLE($c) ) { T_CASE : T_VARIABLE($type) = ; T_CASE : T_VARIABLE($type) = ; T_VARIABLE($pos) = T_STRING ( T_VARIABLE($sql) , , T_VARIABLE($count2) ) ; T_BREAK ; T_CASE : T_VARIABLE($type) = ; T_VARIABLE($pos) = T_STRING ( T_VARIABLE($sql) , , T_VARIABLE($count2) ) ; T_VARIABLE($pos) T_PLUS_EQUAL T_LNUMBER ; T_BREAK ; T_DEFAULT : T_BREAK ; } T_VARIABLE($count2) = ( T_VARIABLE($pos) < T_VARIABLE($count2) ) ? T_VARIABLE($len) : T_VARIABLE($pos) ; T_VARIABLE($str) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count1) , T_VARIABLE($count2) - T_VARIABLE($count1) ) ; T_STRING ( T_VARIABLE($sql_array) , . T_VARIABLE($type) , T_VARIABLE($str) , T_VARIABLE($arraysize) ) ; T_CONTINUE ; } T_IF ( T_STRING ( T_VARIABLE($quote_list) , T_VARIABLE($c) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($startquotepos) = T_VARIABLE($count2) ; T_VARIABLE($quotetype) = T_VARIABLE($c) ; T_VARIABLE($count2) T_INC ; T_VARIABLE($pos) = T_VARIABLE($count2) ; T_VARIABLE($oldpos) = T_LNUMBER ; T_DO { T_VARIABLE($oldpos) = T_VARIABLE($pos) ; T_VARIABLE($pos) = T_STRING ( . T_VARIABLE($sql) , T_VARIABLE($quotetype) , T_VARIABLE($oldpos) + T_LNUMBER ) - T_LNUMBER ; T_IF ( T_VARIABLE($pos) < T_LNUMBER ) { T_IF ( T_VARIABLE($c) T_IS_EQUAL ) { T_VARIABLE($pos_quote_separator) = T_STRING ( . T_VARIABLE($sql) , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($oldpos) + T_LNUMBER ) - T_LNUMBER ; T_IF ( T_VARIABLE($pos_quote_separator) < T_LNUMBER ) { T_VARIABLE($len) T_PLUS_EQUAL T_LNUMBER ; T_VARIABLE($sql) T_CONCAT_EQUAL ; T_VARIABLE($sql_array) [ ] T_CONCAT_EQUAL ; T_VARIABLE($pos) = T_VARIABLE($len) ; } T_ELSE { T_VARIABLE($len) T_PLUS_EQUAL T_LNUMBER ; T_VARIABLE($sql) = T_STRING ( T_VARIABLE($sql) , T_LNUMBER , T_VARIABLE($pos_quote_separator) ) . . T_STRING ( T_VARIABLE($sql) , T_VARIABLE($pos_quote_separator) ) ; T_VARIABLE($sql_array) [ ] = T_VARIABLE($sql) ; T_VARIABLE($pos) = T_VARIABLE($pos_quote_separator) ; } T_IF ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_ELSE { T_VARIABLE($debugstr) = T_STRING ( ) . . T_VARIABLE($startquotepos) . . . T_STRING ( T_VARIABLE($quotetype) ) ; T_STRING ( T_VARIABLE($debugstr) , T_VARIABLE($sql) ) ; T_RETURN T_VARIABLE($sql_array) ; } } T_IF ( T_VARIABLE($pos) T_IS_EQUAL T_LNUMBER ) { T_BREAK ; } T_IF ( ( T_VARIABLE($pos) < T_VARIABLE($len) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($sql) , T_VARIABLE($pos) ) T_BOOLEAN_AND T_VARIABLE($c) T_IS_NOT_EQUAL ) { T_VARIABLE($pos) T_INC ; T_CONTINUE ; } T_ELSEIF ( ( T_VARIABLE($pos) + T_LNUMBER < T_VARIABLE($len) ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($sql) , T_VARIABLE($pos) , T_LNUMBER ) T_IS_EQUAL T_VARIABLE($quotetype) ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($sql) , T_VARIABLE($pos) + T_LNUMBER , T_LNUMBER ) T_IS_EQUAL T_VARIABLE($quotetype) ) ) { T_VARIABLE($pos) = T_VARIABLE($pos) + T_LNUMBER ; T_CONTINUE ; } T_ELSE { T_BREAK ; } } T_WHILE ( T_VARIABLE($len) > T_VARIABLE($pos) ) ; T_VARIABLE($count2) = T_VARIABLE($pos) ; T_VARIABLE($count2) T_INC ; T_VARIABLE($type) = ; T_SWITCH ( T_VARIABLE($quotetype) ) { T_CASE : T_VARIABLE($type) T_CONCAT_EQUAL ; T_VARIABLE($this_was_quote) = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($type) T_CONCAT_EQUAL ; T_VARIABLE($this_was_quote) = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($type) T_CONCAT_EQUAL ; T_VARIABLE($this_was_quote) = T_STRING ; T_BREAK ; T_DEFAULT : T_BREAK ; } T_VARIABLE($data) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count1) , T_VARIABLE($count2) - T_VARIABLE($count1) ) ; T_STRING ( T_VARIABLE($sql_array) , T_VARIABLE($type) , T_VARIABLE($data) , T_VARIABLE($arraysize) ) ; T_CONTINUE ; } T_IF ( T_STRING ( T_VARIABLE($bracket_list) , T_VARIABLE($c) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($this_was_bracket) = T_STRING ; T_VARIABLE($count2) T_INC ; T_VARIABLE($type_type) = ; T_IF ( T_STRING ( , T_VARIABLE($c) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($type_type) = ; } T_ELSE { T_VARIABLE($type_type) = ; } T_VARIABLE($type_style) = ; T_IF ( T_STRING ( , T_VARIABLE($c) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($type_style) = ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($c) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($type_style) = ; } T_ELSE { T_VARIABLE($type_style) = ; } T_VARIABLE($type) = . T_VARIABLE($type_type) . . T_VARIABLE($type_style) ; T_STRING ( T_VARIABLE($sql_array) , T_VARIABLE($type) , T_VARIABLE($c) , T_VARIABLE($arraysize) ) ; T_CONTINUE ; } T_IF ( T_STRING ( T_VARIABLE($c) , T_STRING ) T_BOOLEAN_OR T_VARIABLE($c) T_IS_EQUAL T_BOOLEAN_OR ( T_VARIABLE($c) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count2) + T_LNUMBER , T_LNUMBER ) ) T_BOOLEAN_AND ( T_VARIABLE($previous_was_space) T_BOOLEAN_OR T_VARIABLE($previous_was_bracket) T_BOOLEAN_OR T_VARIABLE($previous_was_listsep) ) ) ) { T_VARIABLE($count2) T_INC ; T_VARIABLE($is_identifier) = T_VARIABLE($previous_was_punct) ; T_VARIABLE($is_sql_variable) = T_VARIABLE($c) T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($previous_was_quote) ; T_VARIABLE($is_user) = T_VARIABLE($c) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($previous_was_quote) ; T_VARIABLE($is_digit) = ! T_VARIABLE($is_identifier) T_BOOLEAN_AND ! T_VARIABLE($is_sql_variable) T_BOOLEAN_AND T_STRING ( T_VARIABLE($c) ) ; T_VARIABLE($is_hex_digit) = T_VARIABLE($is_digit) T_BOOLEAN_AND T_VARIABLE($c) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($count2) < T_VARIABLE($len) T_BOOLEAN_AND T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count2) , T_LNUMBER ) T_IS_EQUAL ; T_VARIABLE($is_float_digit) = T_VARIABLE($c) T_IS_EQUAL ; T_VARIABLE($is_float_digit_exponent) = T_STRING ; T_IF ( T_VARIABLE($is_hex_digit) ) { T_VARIABLE($count2) T_INC ; T_VARIABLE($pos) = T_STRING ( T_VARIABLE($sql) , , T_VARIABLE($count2) ) ; T_IF ( T_VARIABLE($pos) > T_VARIABLE($count2) ) { T_VARIABLE($count2) = T_VARIABLE($pos) ; } T_UNSET ( T_VARIABLE($pos) ) ; } T_ELSEIF ( T_VARIABLE($is_digit) ) { T_VARIABLE($pos) = T_STRING ( T_VARIABLE($sql) , , T_VARIABLE($count2) ) ; T_IF ( T_VARIABLE($pos) > T_VARIABLE($count2) ) { T_VARIABLE($count2) = T_VARIABLE($pos) ; } T_UNSET ( T_VARIABLE($pos) ) ; } T_WHILE ( ( T_VARIABLE($count2) < T_VARIABLE($len) ) T_BOOLEAN_AND T_STRING ( T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count2) , T_LNUMBER ) , ( T_VARIABLE($is_sql_variable) T_BOOLEAN_OR T_VARIABLE($is_digit) ) ) ) { T_VARIABLE($c2) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count2) , T_LNUMBER ) ; T_IF ( T_VARIABLE($is_sql_variable) T_BOOLEAN_AND ( T_VARIABLE($c2) T_IS_EQUAL ) ) { T_VARIABLE($count2) T_INC ; T_CONTINUE ; } T_IF ( T_VARIABLE($is_digit) T_BOOLEAN_AND ( ! T_VARIABLE($is_hex_digit) ) T_BOOLEAN_AND ( T_VARIABLE($c2) T_IS_EQUAL ) ) { T_VARIABLE($count2) T_INC ; T_IF ( ! T_VARIABLE($is_float_digit) ) { T_VARIABLE($is_float_digit) = T_STRING ; T_CONTINUE ; } T_ELSE { T_VARIABLE($debugstr) = T_STRING ( ) . . ( T_VARIABLE($count1) + T_LNUMBER ) . . . T_STRING ( T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count1) , T_VARIABLE($count2) - T_VARIABLE($count1) ) ) ; T_STRING ( T_VARIABLE($debugstr) , T_VARIABLE($sql) ) ; T_RETURN T_VARIABLE($sql_array) ; } } T_IF ( T_VARIABLE($is_digit) T_BOOLEAN_AND ( ! T_VARIABLE($is_hex_digit) ) T_BOOLEAN_AND ( ( T_VARIABLE($c2) T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($c2) T_IS_EQUAL ) ) ) { T_IF ( ! T_VARIABLE($is_float_digit_exponent) ) { T_VARIABLE($is_float_digit_exponent) = T_STRING ; T_VARIABLE($is_float_digit) = T_STRING ; T_VARIABLE($count2) T_INC ; T_CONTINUE ; } T_ELSE { T_VARIABLE($is_digit) = T_STRING ; T_VARIABLE($is_float_digit) = T_STRING ; } } T_IF ( ( T_VARIABLE($is_hex_digit) T_BOOLEAN_AND T_STRING ( T_VARIABLE($c2) ) ) T_BOOLEAN_OR ( T_VARIABLE($is_digit) T_BOOLEAN_AND T_STRING ( T_VARIABLE($c2) ) ) ) { T_VARIABLE($count2) T_INC ; T_CONTINUE ; } T_ELSE { T_VARIABLE($is_digit) = T_STRING ; T_VARIABLE($is_hex_digit) = T_STRING ; } T_VARIABLE($count2) T_INC ; } T_VARIABLE($l) = T_VARIABLE($count2) - T_VARIABLE($count1) ; T_VARIABLE($str) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count1) , T_VARIABLE($l) ) ; T_VARIABLE($type) = ; T_IF ( T_VARIABLE($is_digit) T_BOOLEAN_OR T_VARIABLE($is_float_digit) T_BOOLEAN_OR T_VARIABLE($is_hex_digit) ) { T_VARIABLE($type) = ; T_IF ( T_VARIABLE($is_float_digit) ) { T_VARIABLE($type) T_CONCAT_EQUAL ; } T_ELSEIF ( T_VARIABLE($is_hex_digit) ) { T_VARIABLE($type) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($type) T_CONCAT_EQUAL ; } } T_ELSEIF ( T_VARIABLE($is_user) ) { T_VARIABLE($type) = ; } T_ELSEIF ( T_VARIABLE($is_sql_variable) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($type) = ; } T_ELSE { T_VARIABLE($type) = ; } T_STRING ( T_VARIABLE($sql_array) , T_VARIABLE($type) , T_VARIABLE($str) , T_VARIABLE($arraysize) , T_VARIABLE($count2) ) ; T_CONTINUE ; } T_IF ( T_STRING ( T_VARIABLE($allpunct_list) , T_VARIABLE($c) ) T_IS_NOT_IDENTICAL T_STRING ) { T_WHILE ( ( T_VARIABLE($count2) < T_VARIABLE($len) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($allpunct_list) , T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count2) , T_LNUMBER ) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($count2) T_INC ; } T_VARIABLE($l) = T_VARIABLE($count2) - T_VARIABLE($count1) ; T_IF ( T_VARIABLE($l) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($punct_data) = T_VARIABLE($c) ; } T_ELSE { T_VARIABLE($punct_data) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count1) , T_VARIABLE($l) ) ; } T_IF ( T_VARIABLE($l) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($t_suffix) = ; T_SWITCH ( T_VARIABLE($punct_data) ) { T_CASE T_VARIABLE($punct_queryend) : T_VARIABLE($t_suffix) = ; T_BREAK ; T_CASE T_VARIABLE($punct_qualifier) : T_VARIABLE($t_suffix) = ; T_VARIABLE($this_was_punct) = T_STRING ; T_BREAK ; T_CASE T_VARIABLE($punct_listsep) : T_VARIABLE($this_was_listsep) = T_STRING ; T_VARIABLE($t_suffix) = ; T_BREAK ; T_DEFAULT : T_BREAK ; } T_STRING ( T_VARIABLE($sql_array) , . T_VARIABLE($t_suffix) , T_VARIABLE($punct_data) , T_VARIABLE($arraysize) ) ; } T_ELSEIF ( T_VARIABLE($punct_data) T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_OR T_ISSET ( T_VARIABLE($allpunct_list_pair) [ T_VARIABLE($punct_data) ] ) ) { T_STRING ( T_VARIABLE($sql_array) , , T_VARIABLE($punct_data) , T_VARIABLE($arraysize) ) ; } T_ELSE { T_VARIABLE($first) = T_VARIABLE($punct_data) [ T_LNUMBER ] ; T_VARIABLE($last2) = T_VARIABLE($punct_data) [ T_VARIABLE($l) - T_LNUMBER ] . T_VARIABLE($punct_data) [ T_VARIABLE($l) - T_LNUMBER ] ; T_VARIABLE($last) = T_VARIABLE($punct_data) [ T_VARIABLE($l) - T_LNUMBER ] ; T_IF ( ( T_VARIABLE($first) T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($first) T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($first) T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($first) T_IS_EQUAL ) ) { T_VARIABLE($count2) = T_VARIABLE($count1) + T_LNUMBER ; T_VARIABLE($punct_data) = T_VARIABLE($first) ; } T_ELSEIF ( ( T_VARIABLE($last2) T_IS_EQUAL ) T_BOOLEAN_OR ( ( T_VARIABLE($last2) T_IS_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($count2) T_IS_EQUAL T_VARIABLE($len) T_BOOLEAN_OR T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count2) , T_LNUMBER ) T_IS_SMALLER_OR_EQUAL ) ) ) { T_VARIABLE($count2) T_MINUS_EQUAL T_LNUMBER ; T_VARIABLE($punct_data) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count1) , T_VARIABLE($count2) - T_VARIABLE($count1) ) ; } T_ELSEIF ( ( T_VARIABLE($last) T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($last) T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($last) T_IS_EQUAL ) ) { T_VARIABLE($count2) T_DEC ; T_VARIABLE($punct_data) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count1) , T_VARIABLE($count2) - T_VARIABLE($count1) ) ; } T_ELSEIF ( T_VARIABLE($last) T_IS_NOT_EQUAL ) { T_VARIABLE($debugstr) = T_STRING ( ) . . ( T_VARIABLE($count1) + T_LNUMBER ) . . . T_STRING ( T_VARIABLE($punct_data) ) ; T_STRING ( T_VARIABLE($debugstr) , T_VARIABLE($sql) ) ; T_RETURN T_VARIABLE($sql_array) ; } T_STRING ( T_VARIABLE($sql_array) , , T_VARIABLE($punct_data) , T_VARIABLE($arraysize) ) ; T_CONTINUE ; } T_CONTINUE ; } T_VARIABLE($count2) T_INC ; T_VARIABLE($debugstr) = . T_VARIABLE($count1) . . T_VARIABLE($count2) . . T_VARIABLE($len) . . . T_STRING ( T_VARIABLE($sql) , T_VARIABLE($count1) , T_VARIABLE($count2) - T_VARIABLE($count1) ) . ; T_STRING ( T_VARIABLE($debugstr) , T_VARIABLE($sql) ) ; T_RETURN T_VARIABLE($sql_array) ; } T_IF ( T_VARIABLE($arraysize) > T_LNUMBER ) { T_VARIABLE($t_next) = T_VARIABLE($sql_array) [ T_LNUMBER ] [ ] ; T_VARIABLE($t_prev) = ; T_VARIABLE($t_bef_prev) = ; T_VARIABLE($t_cur) = ; T_VARIABLE($d_next) = T_VARIABLE($sql_array) [ T_LNUMBER ] [ ] ; T_VARIABLE($d_prev) = ; T_VARIABLE($d_bef_prev) = ; T_VARIABLE($d_cur) = ; T_VARIABLE($d_next_upper) = T_VARIABLE($t_next) T_IS_EQUAL ? T_STRING ( T_VARIABLE($d_next) ) : T_VARIABLE($d_next) ; T_VARIABLE($d_prev_upper) = ; T_VARIABLE($d_bef_prev_upper) = ; T_VARIABLE($d_cur_upper) = ; } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($arraysize) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($t_bef_prev) = T_VARIABLE($t_prev) ; T_VARIABLE($t_prev) = T_VARIABLE($t_cur) ; T_VARIABLE($t_cur) = T_VARIABLE($t_next) ; T_VARIABLE($d_bef_prev) = T_VARIABLE($d_prev) ; T_VARIABLE($d_prev) = T_VARIABLE($d_cur) ; T_VARIABLE($d_cur) = T_VARIABLE($d_next) ; T_VARIABLE($d_bef_prev_upper) = T_VARIABLE($d_prev_upper) ; T_VARIABLE($d_prev_upper) = T_VARIABLE($d_cur_upper) ; T_VARIABLE($d_cur_upper) = T_VARIABLE($d_next_upper) ; T_IF ( ( T_VARIABLE($i) + T_LNUMBER ) < T_VARIABLE($arraysize) ) { T_VARIABLE($t_next) = T_VARIABLE($sql_array) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ; T_VARIABLE($d_next) = T_VARIABLE($sql_array) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ; T_VARIABLE($d_next_upper) = T_VARIABLE($t_next) T_IS_EQUAL ? T_STRING ( T_VARIABLE($d_next) ) : T_VARIABLE($d_next) ; } T_ELSE { T_VARIABLE($t_next) = ; T_VARIABLE($d_next) = ; T_VARIABLE($d_next_upper) = ; } T_IF ( T_VARIABLE($t_cur) T_IS_EQUAL ) { T_VARIABLE($t_suffix) = ; T_IF ( T_VARIABLE($t_prev) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($d_prev) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($d_cur) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($t_next) T_IS_EQUAL ) { T_VARIABLE($t_suffix) = ; } T_ELSEIF ( ( T_VARIABLE($t_next) T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($t_prev) T_IS_EQUAL ) ) { T_VARIABLE($t_suffix) = ; } T_ELSEIF ( ( T_VARIABLE($t_next) T_IS_EQUAL ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($PMA_SQPdata_function_name) [ T_VARIABLE($d_cur_upper) ] ) ) { T_VARIABLE($t_suffix) = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($PMA_SQPdata_column_type) [ T_VARIABLE($d_cur_upper) ] ) ) { T_VARIABLE($t_suffix) = ; T_IF ( ( T_VARIABLE($d_cur_upper) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($d_cur_upper) T_IS_EQUAL ) T_BOOLEAN_AND T_VARIABLE($t_next) T_IS_NOT_EQUAL ) { T_VARIABLE($t_suffix) = ; } T_IF ( T_VARIABLE($d_cur_upper) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($d_next_upper) T_IS_EQUAL ) { T_VARIABLE($t_suffix) = ; } } T_ELSEIF ( T_ISSET ( T_VARIABLE($PMA_SQPdata_reserved_word) [ T_VARIABLE($d_cur_upper) ] ) ) { T_VARIABLE($t_suffix) = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($PMA_SQPdata_column_attrib) [ T_VARIABLE($d_cur_upper) ] ) ) { T_VARIABLE($t_suffix) = ; T_IF ( T_VARIABLE($d_cur_upper) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($d_prev_upper) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($d_next_upper) T_IS_EQUAL ) { T_VARIABLE($t_suffix) = ; } T_IF ( T_VARIABLE($d_cur_upper) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($d_next_upper) T_IS_EQUAL ) { T_VARIABLE($t_suffix) = ; } T_IF ( T_VARIABLE($d_cur_upper) T_IS_EQUAL T_BOOLEAN_AND ( ( T_VARIABLE($d_bef_prev_upper) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($d_prev_upper) T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($d_bef_prev_upper) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($d_prev_upper) T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($d_bef_prev_upper) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($d_prev_upper) T_IS_EQUAL ) T_BOOLEAN_OR T_VARIABLE($d_prev_upper) T_IS_EQUAL ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($d_cur) , T_VARIABLE($mysql_charsets) ) ) { T_VARIABLE($t_suffix) = ; } } T_ELSEIF ( T_STRING ( T_VARIABLE($d_cur) , T_VARIABLE($mysql_charsets) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($d_cur) , T_VARIABLE($mysql_collations_flat) ) T_BOOLEAN_OR ( T_VARIABLE($d_cur) { T_LNUMBER } T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_STRING ( T_VARIABLE($d_cur) , T_LNUMBER ) , T_VARIABLE($mysql_charsets) ) ) ) { T_VARIABLE($t_suffix) = ; } T_ELSE { } T_IF ( T_VARIABLE($t_suffix) T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($PMA_SQPdata_forbidden_word) [ T_VARIABLE($d_cur_upper) ] ) ) { T_VARIABLE($sql_array) [ T_VARIABLE($i) ] [ ] = T_STRING ; } T_ELSE { T_VARIABLE($sql_array) [ T_VARIABLE($i) ] [ ] = T_STRING ; } T_VARIABLE($sql_array) [ T_VARIABLE($i) ] [ ] T_CONCAT_EQUAL T_VARIABLE($t_suffix) ; } } T_VARIABLE($sql_array) [ ] = T_VARIABLE($arraysize) ; T_RETURN T_VARIABLE($sql_array) ; } T_FUNCTION(PMA_SQP_typeCheck) ( T_VARIABLE($toCheck) , T_VARIABLE($whatWeWant) ) { T_VARIABLE($typeSeparator) = ; T_IF ( T_STRING ( T_VARIABLE($whatWeWant) , T_VARIABLE($toCheck) ) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($whatWeWant) , T_VARIABLE($typeSeparator) ) T_IS_IDENTICAL T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($whatWeWant) , T_VARIABLE($toCheck) , T_STRING ( T_VARIABLE($toCheck) , T_VARIABLE($typeSeparator) ) ) T_IS_EQUAL T_LNUMBER ; } T_ELSE { T_RETURN T_STRING ; } } } T_FUNCTION(PMA_SQP_analyze) ( T_VARIABLE($arr) ) { T_IF ( T_VARIABLE($arr) T_IS_EQUAL T_ARRAY ( ) T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($arr) [ ] ) ) { T_RETURN T_ARRAY ( ) ; } T_VARIABLE($result) = T_ARRAY ( ) ; T_VARIABLE($size) = T_VARIABLE($arr) [ ] ; T_VARIABLE($subresult) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($subresult_empty) = T_VARIABLE($subresult) ; T_VARIABLE($seek_queryend) = T_STRING ; T_VARIABLE($seen_end_of_table_ref) = T_STRING ; T_VARIABLE($number_of_brackets_in_extract) = T_LNUMBER ; T_VARIABLE($number_of_brackets_in_group_concat) = T_LNUMBER ; T_VARIABLE($number_of_brackets) = T_LNUMBER ; T_VARIABLE($in_subquery) = T_STRING ; T_VARIABLE($seen_subquery) = T_STRING ; T_VARIABLE($seen_from) = T_STRING ; T_VARIABLE($in_extract) = T_STRING ; T_VARIABLE($in_group_concat) = T_STRING ; T_VARIABLE($words_ending_table_ref) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($words_ending_clauses) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($supported_query_types) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($size) ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($seek_queryend) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($seek_queryend) = T_STRING ; } T_ELSE { T_CONTINUE ; } } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND ( T_VARIABLE($i) + T_LNUMBER T_IS_NOT_EQUAL T_VARIABLE($size) ) ) { T_VARIABLE($result) [ ] = T_VARIABLE($subresult) ; T_VARIABLE($subresult) = T_VARIABLE($subresult_empty) ; T_CONTINUE ; } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($number_of_brackets) T_INC ; T_IF ( T_VARIABLE($in_extract) ) { T_VARIABLE($number_of_brackets_in_extract) T_INC ; } T_IF ( T_VARIABLE($in_group_concat) ) { T_VARIABLE($number_of_brackets_in_group_concat) T_INC ; } } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($number_of_brackets) T_DEC ; T_IF ( T_VARIABLE($number_of_brackets) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($in_subquery) = T_STRING ; } T_IF ( T_VARIABLE($in_extract) ) { T_VARIABLE($number_of_brackets_in_extract) T_DEC ; T_IF ( T_VARIABLE($number_of_brackets_in_extract) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($in_extract) = T_STRING ; } } T_IF ( T_VARIABLE($in_group_concat) ) { T_VARIABLE($number_of_brackets_in_group_concat) T_DEC ; T_IF ( T_VARIABLE($number_of_brackets_in_group_concat) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($in_group_concat) = T_STRING ; } } } T_IF ( T_VARIABLE($in_subquery) ) { T_CONTINUE ; } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($upper_data) = T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) ; T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($in_extract) = T_STRING ; T_VARIABLE($number_of_brackets_in_extract) = T_LNUMBER ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($in_group_concat) = T_STRING ; T_VARIABLE($number_of_brackets_in_group_concat) = T_LNUMBER ; } } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_IF ( T_VARIABLE($subresult) [ ] T_IS_EQUAL ) { T_VARIABLE($subresult) [ ] = T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($supported_query_types) [ T_VARIABLE($subresult) [ ] ] ) ) { T_VARIABLE($seek_queryend) = T_STRING ; T_CONTINUE ; } T_VARIABLE($upper_data) = T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) ; T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_IF ( T_VARIABLE($number_of_brackets) > T_LNUMBER ) { T_VARIABLE($in_subquery) = T_STRING ; T_VARIABLE($seen_subquery) = T_STRING ; T_CONTINUE ; } T_VARIABLE($seen_from) = T_STRING ; T_VARIABLE($previous_was_identifier) = T_STRING ; T_VARIABLE($current_select_expr) = - T_LNUMBER ; T_VARIABLE($seen_end_of_table_ref) = T_STRING ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($in_extract) ) { T_VARIABLE($current_table_ref) = - T_LNUMBER ; T_VARIABLE($seen_from) = T_STRING ; T_VARIABLE($previous_was_identifier) = T_STRING ; T_VARIABLE($save_table_ref) = T_STRING ; } } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_OR ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_STRING ) ) { T_SWITCH ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) { T_CASE : T_CASE : T_VARIABLE($identifier) = T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_VARIABLE($identifier) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) ; T_BREAK ; } T_IF ( T_VARIABLE($subresult) [ ] T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($in_group_concat) T_BOOLEAN_AND ! ( T_VARIABLE($seen_subquery) T_BOOLEAN_AND T_VARIABLE($arr) [ T_VARIABLE($i) - T_LNUMBER ] [ ] T_IS_EQUAL ) ) { T_IF ( ! T_VARIABLE($seen_from) ) { T_IF ( T_VARIABLE($previous_was_identifier) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($chain) ) ) { T_VARIABLE($alias_for_select_expr) = T_VARIABLE($identifier) ; } T_ELSE { T_VARIABLE($chain) [ ] = T_VARIABLE($identifier) ; T_VARIABLE($previous_was_identifier) = T_STRING ; } } T_ELSE { T_IF ( T_VARIABLE($save_table_ref) T_BOOLEAN_AND ! T_VARIABLE($seen_end_of_table_ref) ) { T_IF ( T_VARIABLE($previous_was_identifier) ) { T_VARIABLE($alias_for_table_ref) = T_VARIABLE($identifier) ; } T_ELSE { T_VARIABLE($chain) [ ] = T_VARIABLE($identifier) ; T_VARIABLE($previous_was_identifier) = T_STRING ; } } } } } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($previous_was_identifier) = T_STRING ; T_CONTINUE ; } T_IF ( T_ISSET ( T_VARIABLE($chain) ) T_BOOLEAN_AND ! T_VARIABLE($seen_end_of_table_ref) T_BOOLEAN_AND ( ( ! T_VARIABLE($seen_from) T_BOOLEAN_AND T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($upper_data) T_IS_EQUAL ) ) ) { T_VARIABLE($size_chain) = T_STRING ( T_VARIABLE($chain) ) ; T_VARIABLE($current_select_expr) T_INC ; T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_select_expr) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_IF ( T_ISSET ( T_VARIABLE($alias_for_select_expr) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($alias_for_select_expr) ) ) { T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_select_expr) ] [ ] = T_VARIABLE($alias_for_select_expr) ; T_UNSET ( T_VARIABLE($alias_for_select_expr) ) ; } T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_select_expr) ] [ ] = T_VARIABLE($chain) [ T_VARIABLE($size_chain) - T_LNUMBER ] ; T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_select_expr) ] [ ] = T_VARIABLE($chain) [ T_VARIABLE($size_chain) - T_LNUMBER ] ; T_IF ( T_VARIABLE($size_chain) > T_LNUMBER ) { T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_select_expr) ] [ ] = T_VARIABLE($chain) [ T_VARIABLE($size_chain) - T_LNUMBER ] ; T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_select_expr) ] [ ] = T_VARIABLE($chain) [ T_VARIABLE($size_chain) - T_LNUMBER ] ; T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_select_expr) ] [ ] = T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_select_expr) ] [ ] . . T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_select_expr) ] [ ] ; } T_IF ( T_VARIABLE($size_chain) > T_LNUMBER ) { T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_select_expr) ] [ ] = T_VARIABLE($chain) [ T_VARIABLE($size_chain) - T_LNUMBER ] ; T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_select_expr) ] [ ] = T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_select_expr) ] [ ] . . T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_select_expr) ] [ ] ; } T_UNSET ( T_VARIABLE($chain) ) ; T_IF ( ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($upper_data) T_IS_NOT_EQUAL ) ) { T_VARIABLE($previous_was_identifier) = T_STRING ; } } T_IF ( T_ISSET ( T_VARIABLE($chain) ) T_BOOLEAN_AND T_VARIABLE($seen_from) T_BOOLEAN_AND T_VARIABLE($save_table_ref) T_BOOLEAN_AND ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_OR ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($upper_data) T_IS_NOT_EQUAL ) T_BOOLEAN_OR T_VARIABLE($seen_end_of_table_ref) T_BOOLEAN_OR T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($size) - T_LNUMBER ) ) { T_VARIABLE($size_chain) = T_STRING ( T_VARIABLE($chain) ) ; T_VARIABLE($current_table_ref) T_INC ; T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_table_ref) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_IF ( T_ISSET ( T_VARIABLE($alias_for_table_ref) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($alias_for_table_ref) ) ) { T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_table_ref) ] [ ] = T_VARIABLE($alias_for_table_ref) ; T_UNSET ( T_VARIABLE($alias_for_table_ref) ) ; } T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_table_ref) ] [ ] = T_VARIABLE($chain) [ T_VARIABLE($size_chain) - T_LNUMBER ] ; T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_table_ref) ] [ ] = T_VARIABLE($chain) [ T_VARIABLE($size_chain) - T_LNUMBER ] ; T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_table_ref) ] [ ] = T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_table_ref) ] [ ] ; T_IF ( T_VARIABLE($size_chain) > T_LNUMBER ) { T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_table_ref) ] [ ] = T_VARIABLE($chain) [ T_VARIABLE($size_chain) - T_LNUMBER ] ; T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_table_ref) ] [ ] = T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_table_ref) ] [ ] . . T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_table_ref) ] [ ] ; } T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_table_ref) ] [ ] T_CONCAT_EQUAL . T_VARIABLE($subresult) [ ] [ T_VARIABLE($current_table_ref) ] [ ] ; T_UNSET ( T_VARIABLE($chain) ) ; T_VARIABLE($previous_was_identifier) = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($current_table_ref) ) T_BOOLEAN_AND ( T_VARIABLE($seen_end_of_table_ref) T_BOOLEAN_OR T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($size) - T_LNUMBER ) T_BOOLEAN_AND T_VARIABLE($subresult) T_IS_NOT_EQUAL T_VARIABLE($subresult_empty) ) { T_FOR ( T_VARIABLE($tr) = T_LNUMBER ; T_VARIABLE($tr) T_IS_SMALLER_OR_EQUAL T_VARIABLE($current_table_ref) ; T_VARIABLE($tr) T_INC ) { T_VARIABLE($alias) = T_VARIABLE($subresult) [ ] [ T_VARIABLE($tr) ] [ ] ; T_VARIABLE($truename) = T_VARIABLE($subresult) [ ] [ T_VARIABLE($tr) ] [ ] ; T_FOR ( T_VARIABLE($se) = T_LNUMBER ; T_VARIABLE($se) T_IS_SMALLER_OR_EQUAL T_VARIABLE($current_select_expr) ; T_VARIABLE($se) T_INC ) { T_IF ( T_ISSET ( T_VARIABLE($alias) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($alias) ) T_BOOLEAN_AND T_VARIABLE($subresult) [ ] [ T_VARIABLE($se) ] [ ] T_IS_EQUAL T_VARIABLE($alias) ) { T_VARIABLE($subresult) [ ] [ T_VARIABLE($se) ] [ ] = T_VARIABLE($truename) ; } } } } T_IF ( ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_NOT_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_NOT_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_NOT_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_NOT_EQUAL ) ) { T_VARIABLE($previous_was_identifier) = T_STRING ; } T_IF ( ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($upper_data) T_IS_EQUAL ) ) { T_VARIABLE($previous_was_identifier) = T_STRING ; } T_IF ( ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($upper_data) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($upper_data) T_IS_EQUAL ) ) { T_VARIABLE($save_table_ref) = T_STRING ; } T_IF ( ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($upper_data) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($upper_data) T_IS_EQUAL ) ) { T_VARIABLE($save_table_ref) = T_STRING ; } T_IF ( ! T_VARIABLE($seen_end_of_table_ref) ) { T_IF ( ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($size) - T_LNUMBER ) T_BOOLEAN_OR ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($in_group_concat) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($words_ending_table_ref) [ T_VARIABLE($upper_data) ] ) ) ) { T_VARIABLE($seen_end_of_table_ref) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($save_table_ref) ) T_BOOLEAN_AND T_VARIABLE($save_table_ref) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($save_table_ref) = T_STRING ; } } } T_IF ( T_VARIABLE($seen_end_of_table_ref) ) { T_VARIABLE($save_table_ref) = T_STRING ; } } T_IF ( T_ISSET ( T_VARIABLE($current_table_ref) ) T_BOOLEAN_AND T_VARIABLE($current_table_ref) > - T_LNUMBER ) { T_VARIABLE($subresult) [ ] [ ] = T_LNUMBER ; } T_VARIABLE($section_before_limit) = ; T_VARIABLE($section_after_limit) = ; T_VARIABLE($seen_reserved_word) = T_STRING ; T_VARIABLE($seen_group) = T_STRING ; T_VARIABLE($seen_order) = T_STRING ; T_VARIABLE($seen_order_by) = T_STRING ; T_VARIABLE($in_group_by) = T_STRING ; T_VARIABLE($in_order_by) = T_STRING ; T_VARIABLE($in_having) = T_STRING ; T_VARIABLE($in_select_expr) = T_STRING ; T_VARIABLE($in_where) = T_STRING ; T_VARIABLE($seen_limit) = T_STRING ; T_VARIABLE($in_limit) = T_STRING ; T_VARIABLE($after_limit) = T_STRING ; T_VARIABLE($in_from) = T_STRING ; T_VARIABLE($in_group_concat) = T_STRING ; T_VARIABLE($first_reserved_word) = ; T_VARIABLE($current_identifier) = ; T_VARIABLE($unsorted_query) = T_VARIABLE($arr) [ ] ; T_VARIABLE($number_of_brackets) = T_LNUMBER ; T_VARIABLE($in_subquery) = T_STRING ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($size) ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($number_of_brackets) T_INC ; } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($number_of_brackets) T_DEC ; T_IF ( T_VARIABLE($number_of_brackets) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($in_subquery) = T_STRING ; } } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($upper_data) = T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) ; T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($number_of_brackets) > T_LNUMBER ) { T_VARIABLE($in_subquery) = T_STRING ; } T_IF ( ! T_VARIABLE($seen_reserved_word) ) { T_VARIABLE($first_reserved_word) = T_VARIABLE($upper_data) ; T_VARIABLE($subresult) [ ] = T_VARIABLE($upper_data) ; T_VARIABLE($seen_reserved_word) = T_STRING ; T_IF ( T_VARIABLE($first_reserved_word) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($first_reserved_word) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($first_reserved_word) T_IS_EQUAL ) { T_VARIABLE($subresult) [ ] [ ] = T_LNUMBER ; } T_IF ( T_VARIABLE($first_reserved_word) T_IS_EQUAL ) { T_VARIABLE($position_of_first_select) = T_VARIABLE($i) ; } } T_ELSE { T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($first_reserved_word) T_IS_EQUAL ) { T_VARIABLE($subresult) [ ] [ ] = T_LNUMBER ; } } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($in_subquery) ) { T_VARIABLE($section_before_limit) = T_STRING ( T_VARIABLE($arr) [ ] , T_LNUMBER , T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] - T_LNUMBER ) ; T_VARIABLE($in_limit) = T_STRING ; T_VARIABLE($seen_limit) = T_STRING ; T_VARIABLE($limit_clause) = ; T_VARIABLE($in_order_by) = T_STRING ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($subresult) [ ] [ ] = T_LNUMBER ; T_VARIABLE($in_limit) = T_STRING ; T_VARIABLE($after_limit) = T_STRING ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($in_select_expr) = T_STRING ; T_VARIABLE($select_expr_clause) = ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($in_group_concat) ) { T_VARIABLE($subresult) [ ] [ ] = T_LNUMBER ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($subresult) [ ] [ ] = T_LNUMBER ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($subresult) [ ] [ ] = T_LNUMBER ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($subresult) [ ] [ ] = T_LNUMBER ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($subresult) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($subresult) [ ] [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($in_from) = T_STRING ; T_VARIABLE($from_clause) = ; T_VARIABLE($in_select_expr) = T_STRING ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($seen_group) = T_STRING ; T_VARIABLE($seen_order) = T_STRING ; T_VARIABLE($in_having) = T_STRING ; T_VARIABLE($in_order_by) = T_STRING ; T_VARIABLE($in_where) = T_STRING ; T_VARIABLE($in_select_expr) = T_STRING ; T_VARIABLE($in_from) = T_STRING ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($in_group_concat) ) { T_VARIABLE($seen_order) = T_STRING ; T_VARIABLE($seen_group) = T_STRING ; T_VARIABLE($in_having) = T_STRING ; T_VARIABLE($in_group_by) = T_STRING ; T_VARIABLE($in_where) = T_STRING ; T_VARIABLE($in_select_expr) = T_STRING ; T_VARIABLE($in_from) = T_STRING ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($in_having) = T_STRING ; T_VARIABLE($having_clause) = ; T_VARIABLE($seen_group) = T_STRING ; T_VARIABLE($seen_order) = T_STRING ; T_VARIABLE($in_group_by) = T_STRING ; T_VARIABLE($in_order_by) = T_STRING ; T_VARIABLE($in_where) = T_STRING ; T_VARIABLE($in_select_expr) = T_STRING ; T_VARIABLE($in_from) = T_STRING ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($in_where) = T_STRING ; T_VARIABLE($where_clause) = ; T_VARIABLE($where_clause_identifiers) = T_ARRAY ( ) ; T_VARIABLE($seen_group) = T_STRING ; T_VARIABLE($seen_order) = T_STRING ; T_VARIABLE($in_group_by) = T_STRING ; T_VARIABLE($in_order_by) = T_STRING ; T_VARIABLE($in_having) = T_STRING ; T_VARIABLE($in_select_expr) = T_STRING ; T_VARIABLE($in_from) = T_STRING ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_IF ( T_VARIABLE($seen_group) ) { T_VARIABLE($in_group_by) = T_STRING ; T_VARIABLE($group_by_clause) = ; } T_IF ( T_VARIABLE($seen_order) ) { T_VARIABLE($seen_order_by) = T_STRING ; T_VARIABLE($unsorted_query) = T_STRING ( T_VARIABLE($arr) [ ] , T_LNUMBER , T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] - T_LNUMBER ) ; T_VARIABLE($in_order_by) = T_STRING ; T_VARIABLE($order_by_clause) = ; } } T_IF ( T_ISSET ( T_VARIABLE($words_ending_clauses) [ T_VARIABLE($upper_data) ] ) ) { T_VARIABLE($in_group_by) = T_STRING ; T_VARIABLE($in_order_by) = T_STRING ; T_VARIABLE($in_having) = T_STRING ; T_VARIABLE($in_where) = T_STRING ; T_VARIABLE($in_select_expr) = T_STRING ; T_VARIABLE($in_from) = T_STRING ; } } T_VARIABLE($sep) = ; T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($sep) = ; T_VARIABLE($upper_data) = T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) ; T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($in_group_concat) = T_STRING ; T_VARIABLE($number_of_brackets_in_group_concat) = T_LNUMBER ; } } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_IF ( T_VARIABLE($in_group_concat) ) { T_VARIABLE($number_of_brackets_in_group_concat) T_INC ; } } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_IF ( T_VARIABLE($in_group_concat) ) { T_VARIABLE($number_of_brackets_in_group_concat) T_DEC ; T_IF ( T_VARIABLE($number_of_brackets_in_group_concat) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($in_group_concat) = T_STRING ; } } } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($i) < T_VARIABLE($size) - T_LNUMBER T_BOOLEAN_AND T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] T_IS_EQUAL ) { T_VARIABLE($sep) = ; } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($i) < T_VARIABLE($size) - T_LNUMBER T_BOOLEAN_AND T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] T_IS_EQUAL ) { T_VARIABLE($sep) = ; } T_IF ( T_VARIABLE($in_select_expr) T_BOOLEAN_AND T_VARIABLE($upper_data) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($upper_data) T_IS_NOT_EQUAL ) { T_VARIABLE($select_expr_clause) T_CONCAT_EQUAL T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] . T_VARIABLE($sep) ; } T_IF ( T_VARIABLE($in_from) T_BOOLEAN_AND T_VARIABLE($upper_data) T_IS_NOT_EQUAL ) { T_VARIABLE($from_clause) T_CONCAT_EQUAL T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] . T_VARIABLE($sep) ; } T_IF ( T_VARIABLE($in_group_by) T_BOOLEAN_AND T_VARIABLE($upper_data) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($upper_data) T_IS_NOT_EQUAL ) { T_VARIABLE($group_by_clause) T_CONCAT_EQUAL T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] . T_VARIABLE($sep) ; } T_IF ( T_VARIABLE($in_order_by) T_BOOLEAN_AND T_VARIABLE($upper_data) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($upper_data) T_IS_NOT_EQUAL ) { T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($order_by_clause) T_CONCAT_EQUAL T_VARIABLE($sep) ; } T_VARIABLE($order_by_clause) T_CONCAT_EQUAL T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ; } T_IF ( T_VARIABLE($in_having) T_BOOLEAN_AND T_VARIABLE($upper_data) T_IS_NOT_EQUAL ) { T_VARIABLE($having_clause) T_CONCAT_EQUAL T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] . T_VARIABLE($sep) ; } T_IF ( T_VARIABLE($in_where) T_BOOLEAN_AND T_VARIABLE($upper_data) T_IS_NOT_EQUAL ) { T_VARIABLE($where_clause) T_CONCAT_EQUAL T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] . T_VARIABLE($sep) ; T_IF ( ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) ) { T_VARIABLE($where_clause_identifiers) [ ] = T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ; } } T_IF ( T_ISSET ( T_VARIABLE($subresult) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($subresult) [ ] [ ] T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND ! T_VARIABLE($in_order_by) T_BOOLEAN_AND T_VARIABLE($seen_order_by) T_BOOLEAN_AND T_VARIABLE($upper_data) T_IS_NOT_EQUAL ) { T_VARIABLE($unsorted_query) T_CONCAT_EQUAL T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ; T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($unsorted_query) T_CONCAT_EQUAL T_VARIABLE($sep) ; } } T_IF ( T_VARIABLE($in_limit) ) { T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($limit_clause) T_CONCAT_EQUAL T_VARIABLE($sep) ; } T_VARIABLE($limit_clause) T_CONCAT_EQUAL T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ; T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($limit_clause) T_CONCAT_EQUAL T_VARIABLE($sep) ; } } T_IF ( T_VARIABLE($after_limit) T_BOOLEAN_AND T_VARIABLE($seen_limit) ) { T_VARIABLE($section_after_limit) T_CONCAT_EQUAL T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] . T_VARIABLE($sep) ; } T_VARIABLE($upper_data) = ; } T_IF ( T_EMPTY ( T_VARIABLE($section_before_limit) ) ) { T_VARIABLE($section_before_limit) = T_VARIABLE($arr) [ ] ; } T_VARIABLE($seen_foreign) = T_STRING ; T_VARIABLE($seen_references) = T_STRING ; T_VARIABLE($seen_constraint) = T_STRING ; T_VARIABLE($foreign_key_number) = - T_LNUMBER ; T_VARIABLE($seen_create_table) = T_STRING ; T_VARIABLE($seen_create) = T_STRING ; T_VARIABLE($seen_alter) = T_STRING ; T_VARIABLE($in_create_table_fields) = T_STRING ; T_VARIABLE($brackets_level) = T_LNUMBER ; T_VARIABLE($in_timestamp_options) = T_STRING ; T_VARIABLE($seen_default) = T_STRING ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($size) ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($upper_data) = T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) ; T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($in_timestamp_options) ) { T_VARIABLE($create_table_fields) [ T_VARIABLE($current_identifier) ] [ ] = T_STRING ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($seen_create) = T_STRING ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($seen_alter) = T_STRING ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($seen_create) ) { T_VARIABLE($seen_create_table) = T_STRING ; T_VARIABLE($create_table_fields) = T_ARRAY ( ) ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_IF ( T_VARIABLE($in_timestamp_options) ) { T_IF ( T_VARIABLE($seen_default) ) { T_VARIABLE($create_table_fields) [ T_VARIABLE($current_identifier) ] [ ] = T_STRING ; } } } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($foreign_key_number) T_INC ; T_VARIABLE($seen_foreign) = T_STRING ; T_VARIABLE($seen_references) = T_STRING ; T_VARIABLE($seen_constraint) = T_STRING ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($seen_foreign) = T_STRING ; T_VARIABLE($seen_references) = T_STRING ; T_VARIABLE($seen_constraint) = T_STRING ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($seen_foreign) = T_STRING ; T_VARIABLE($seen_references) = T_STRING ; T_VARIABLE($seen_constraint) = T_STRING ; } T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_IF ( T_ISSET ( T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] ) T_BOOLEAN_AND T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] T_IS_EQUAL ) { T_VARIABLE($second_upper_data) = T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ) ; T_IF ( T_VARIABLE($second_upper_data) T_IS_EQUAL ) { T_VARIABLE($clause) = ; } T_IF ( T_VARIABLE($second_upper_data) T_IS_EQUAL ) { T_VARIABLE($clause) = ; } T_IF ( T_ISSET ( T_VARIABLE($clause) ) T_BOOLEAN_AND ( T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] T_IS_EQUAL T_BOOLEAN_OR ( T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ) T_IS_EQUAL ) ) ) { T_VARIABLE($third_upper_data) = T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ) ; T_IF ( T_VARIABLE($third_upper_data) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($third_upper_data) T_IS_EQUAL ) { T_VARIABLE($value) = T_VARIABLE($third_upper_data) ; } T_ELSEIF ( T_VARIABLE($third_upper_data) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($third_upper_data) T_IS_EQUAL ) { T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] T_IS_EQUAL ) { T_VARIABLE($value) = T_VARIABLE($third_upper_data) . . T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ) ; } } T_ELSEIF ( T_VARIABLE($third_upper_data) T_IS_EQUAL ) { T_IF ( T_VARIABLE($clause) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($in_timestamp_options) ) { T_VARIABLE($create_table_fields) [ T_VARIABLE($current_identifier) ] [ ] = T_STRING ; T_VARIABLE($seen_default) = T_STRING ; } } T_ELSE { T_VARIABLE($value) = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($value) ) ) { T_VARIABLE($foreign) [ T_VARIABLE($foreign_key_number) ] [ T_VARIABLE($clause) ] = T_VARIABLE($value) ; } T_UNSET ( T_VARIABLE($clause) ) ; } } } } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($brackets_level) T_INC ; T_IF ( T_VARIABLE($seen_create_table) T_BOOLEAN_AND T_VARIABLE($brackets_level) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($in_create_table_fields) = T_STRING ; } } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($brackets_level) T_DEC ; T_IF ( T_VARIABLE($seen_references) ) { T_VARIABLE($seen_references) = T_STRING ; } T_IF ( T_VARIABLE($seen_create_table) T_BOOLEAN_AND T_VARIABLE($brackets_level) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($in_create_table_fields) = T_STRING ; } } T_IF ( ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) ) { T_VARIABLE($upper_data) = T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) ; T_IF ( T_VARIABLE($seen_create_table) T_BOOLEAN_AND T_VARIABLE($in_create_table_fields) ) { T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($seen_default) = T_STRING ; T_VARIABLE($create_table_fields) [ T_VARIABLE($current_identifier) ] [ ] = T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ; } } } T_IF ( ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($seen_create_table) ) ) { T_VARIABLE($upper_data) = T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) ; T_IF ( T_VARIABLE($seen_create_table) T_BOOLEAN_AND T_VARIABLE($in_create_table_fields) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($current_identifier) ) ) { T_VARIABLE($create_table_fields) [ T_VARIABLE($current_identifier) ] [ ] = T_VARIABLE($upper_data) ; T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] = ; T_VARIABLE($in_timestamp_options) = T_STRING ; } T_ELSE { T_VARIABLE($in_timestamp_options) = T_STRING ; T_IF ( T_VARIABLE($upper_data) T_IS_EQUAL ) { T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] = ; } } } } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_VARIABLE($identifier) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) ; } T_ELSE { T_VARIABLE($identifier) = T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ; } T_IF ( T_VARIABLE($seen_create_table) T_BOOLEAN_AND T_VARIABLE($in_create_table_fields) ) { T_VARIABLE($current_identifier) = T_VARIABLE($identifier) ; T_VARIABLE($create_table_fields) [ T_VARIABLE($current_identifier) ] [ ] = T_STRING ; } T_IF ( T_VARIABLE($seen_constraint) ) { T_VARIABLE($foreign) [ T_VARIABLE($foreign_key_number) ] [ ] = T_VARIABLE($identifier) ; } T_IF ( T_VARIABLE($seen_foreign) T_BOOLEAN_AND T_VARIABLE($brackets_level) > T_LNUMBER ) { T_VARIABLE($foreign) [ T_VARIABLE($foreign_key_number) ] [ ] [ ] = T_VARIABLE($identifier) ; } T_IF ( T_VARIABLE($seen_references) ) { T_IF ( T_VARIABLE($seen_alter) T_BOOLEAN_AND T_VARIABLE($brackets_level) > T_LNUMBER ) { T_VARIABLE($foreign) [ T_VARIABLE($foreign_key_number) ] [ ] [ ] = T_VARIABLE($identifier) ; } T_ELSEIF ( T_VARIABLE($brackets_level) > T_LNUMBER ) { T_VARIABLE($foreign) [ T_VARIABLE($foreign_key_number) ] [ ] [ ] = T_VARIABLE($identifier) ; } T_ELSEIF ( T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] T_IS_EQUAL ) { T_VARIABLE($foreign) [ T_VARIABLE($foreign_key_number) ] [ ] = T_VARIABLE($identifier) ; } T_ELSE { T_VARIABLE($foreign) [ T_VARIABLE($foreign_key_number) ] [ ] = T_VARIABLE($identifier) ; } } } } T_IF ( T_ISSET ( T_VARIABLE($create_table_fields) ) ) { T_VARIABLE($subresult) [ ] = T_VARIABLE($create_table_fields) ; } T_IF ( T_ISSET ( T_VARIABLE($foreign) ) ) { T_VARIABLE($subresult) [ ] = T_VARIABLE($foreign) ; } T_IF ( T_ISSET ( T_VARIABLE($select_expr_clause) ) ) { T_VARIABLE($subresult) [ ] = T_VARIABLE($select_expr_clause) ; } T_IF ( T_ISSET ( T_VARIABLE($from_clause) ) ) { T_VARIABLE($subresult) [ ] = T_VARIABLE($from_clause) ; } T_IF ( T_ISSET ( T_VARIABLE($group_by_clause) ) ) { T_VARIABLE($subresult) [ ] = T_VARIABLE($group_by_clause) ; } T_IF ( T_ISSET ( T_VARIABLE($order_by_clause) ) ) { T_VARIABLE($subresult) [ ] = T_VARIABLE($order_by_clause) ; } T_IF ( T_ISSET ( T_VARIABLE($having_clause) ) ) { T_VARIABLE($subresult) [ ] = T_VARIABLE($having_clause) ; } T_IF ( T_ISSET ( T_VARIABLE($limit_clause) ) ) { T_VARIABLE($subresult) [ ] = T_VARIABLE($limit_clause) ; } T_IF ( T_ISSET ( T_VARIABLE($where_clause) ) ) { T_VARIABLE($subresult) [ ] = T_VARIABLE($where_clause) ; } T_IF ( T_ISSET ( T_VARIABLE($unsorted_query) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($unsorted_query) ) ) { T_VARIABLE($subresult) [ ] = T_VARIABLE($unsorted_query) ; } T_IF ( T_ISSET ( T_VARIABLE($where_clause_identifiers) ) ) { T_VARIABLE($subresult) [ ] = T_VARIABLE($where_clause_identifiers) ; } T_IF ( T_ISSET ( T_VARIABLE($position_of_first_select) ) ) { T_VARIABLE($subresult) [ ] = T_VARIABLE($position_of_first_select) ; T_VARIABLE($subresult) [ ] = T_VARIABLE($section_before_limit) ; T_VARIABLE($subresult) [ ] = T_VARIABLE($section_after_limit) ; } T_IF ( T_VARIABLE($subresult) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($result) [ ] = T_VARIABLE($subresult) ; } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(PMA_SQP_formatHtml_colorize) ( T_VARIABLE($arr) ) { T_VARIABLE($i) = T_STRING ( T_VARIABLE($arr) [ ] , ) ; T_VARIABLE($class) = ; T_IF ( T_VARIABLE($i) > T_LNUMBER ) { T_VARIABLE($class) = . T_STRING ( T_VARIABLE($arr) [ ] , T_LNUMBER , T_VARIABLE($i) ) . ; } T_VARIABLE($class) T_CONCAT_EQUAL . T_VARIABLE($arr) [ ] ; T_RETURN . T_VARIABLE($class) . . T_STRING ( T_VARIABLE($arr) [ ] ) . ; } T_FUNCTION(PMA_SQP_formatHtml) ( T_VARIABLE($arr) , T_VARIABLE($mode) = , T_VARIABLE($start_token) = T_LNUMBER , T_VARIABLE($number_of_tokens) = - T_LNUMBER ) { T_GLOBAL T_VARIABLE($PMA_SQPdata_operators_docs) , T_VARIABLE($PMA_SQPdata_functions_docs) ; T_IF ( ! T_STRING ( T_VARIABLE($arr) ) ) { T_RETURN T_STRING ( T_VARIABLE($arr) ) ; } T_IF ( T_STRING ( ) ) { T_RETURN T_STRING ( T_VARIABLE($arr) [ ] ) ; } T_SWITCH ( T_VARIABLE($mode) ) { T_CASE : T_VARIABLE($str) = ; T_VARIABLE($html_line_break) = ; T_VARIABLE($docu) = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($str) = ; T_VARIABLE($html_line_break) = ; T_VARIABLE($docu) = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($str) = ; T_VARIABLE($html_line_break) = ; T_VARIABLE($docu) = T_STRING ; T_BREAK ; } T_IF ( T_VARIABLE($mode) T_IS_NOT_EQUAL ) { T_VARIABLE($str) T_CONCAT_EQUAL ; } T_VARIABLE($close_docu_link) = T_STRING ; T_VARIABLE($indent) = T_LNUMBER ; T_VARIABLE($bracketlevel) = T_LNUMBER ; T_VARIABLE($functionlevel) = T_LNUMBER ; T_VARIABLE($infunction) = T_STRING ; T_VARIABLE($space_punct_listsep) = ; T_VARIABLE($space_punct_listsep_function_name) = ; T_VARIABLE($space_alpha_reserved_word) = ; T_VARIABLE($keywords_with_brackets_1before) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($keywords_with_brackets_2before) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($keywords_no_newline) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($keywords_priv_list) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_IF ( T_VARIABLE($number_of_tokens) T_IS_EQUAL - T_LNUMBER ) { T_VARIABLE($number_of_tokens) = T_VARIABLE($arr) [ ] ; } T_VARIABLE($typearr) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($number_of_tokens) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($typearr) [ T_LNUMBER ] = ; T_VARIABLE($typearr) [ T_LNUMBER ] = ; T_VARIABLE($typearr) [ T_LNUMBER ] = ; T_VARIABLE($typearr) [ T_LNUMBER ] = T_VARIABLE($arr) [ T_VARIABLE($start_token) ] [ ] ; } T_VARIABLE($in_priv_list) = T_STRING ; T_FOR ( T_VARIABLE($i) = T_VARIABLE($start_token) ; T_VARIABLE($i) < T_VARIABLE($number_of_tokens) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($before) = ; T_VARIABLE($after) = ; T_IF ( ( T_VARIABLE($i) + T_LNUMBER ) < T_VARIABLE($number_of_tokens) ) { T_VARIABLE($typearr) [ T_LNUMBER ] = T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ; } T_ELSE { T_VARIABLE($typearr) [ T_LNUMBER ] = ; } T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_LNUMBER ; T_VARIABLE($j) T_INC ) { T_VARIABLE($typearr) [ T_VARIABLE($j) ] = T_VARIABLE($typearr) [ T_VARIABLE($j) + T_LNUMBER ] ; } T_SWITCH ( T_VARIABLE($typearr) [ T_LNUMBER ] ) { T_CASE : T_VARIABLE($before) = ; T_VARIABLE($after) = ; T_BREAK ; T_CASE : T_VARIABLE($before) = ; T_BREAK ; T_CASE : T_VARIABLE($bracketlevel) T_INC ; T_VARIABLE($infunction) = T_STRING ; T_VARIABLE($keyword_brackets_2before) = T_ISSET ( T_VARIABLE($keywords_with_brackets_2before) [ T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) - T_LNUMBER ] [ ] ) ] ) ; T_VARIABLE($keyword_brackets_1before) = T_ISSET ( T_VARIABLE($keywords_with_brackets_1before) [ T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) - T_LNUMBER ] [ ] ) ] ) ; T_IF ( ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($keyword_brackets_2before) ) T_BOOLEAN_OR ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($keyword_brackets_1before) ) ) { T_VARIABLE($functionlevel) T_INC ; T_VARIABLE($infunction) = T_STRING ; T_VARIABLE($after) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($indent) T_INC ; T_IF ( T_VARIABLE($mode) T_IS_NOT_EQUAL ) { T_VARIABLE($after) T_CONCAT_EQUAL . T_VARIABLE($indent) . ; } T_ELSE { T_VARIABLE($after) T_CONCAT_EQUAL ; } } T_BREAK ; T_CASE : T_IF ( ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) ) { T_VARIABLE($after) = ; T_VARIABLE($before) = ; } T_IF ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($before) = ; } T_IF ( ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) ) { T_VARIABLE($after) T_CONCAT_EQUAL ; } T_BREAK ; T_CASE : T_CASE : T_VARIABLE($before) = ; T_VARIABLE($after) = ; T_BREAK ; T_CASE : T_IF ( T_VARIABLE($infunction) T_IS_EQUAL T_STRING ) { T_VARIABLE($after) T_CONCAT_EQUAL T_VARIABLE($space_punct_listsep_function_name) ; } T_ELSE { T_VARIABLE($after) T_CONCAT_EQUAL T_VARIABLE($space_punct_listsep) ; } T_BREAK ; T_CASE : T_IF ( ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_NOT_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_NOT_EQUAL ) T_BOOLEAN_AND T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($after) T_CONCAT_EQUAL T_VARIABLE($html_line_break) ; T_VARIABLE($after) T_CONCAT_EQUAL T_VARIABLE($html_line_break) ; } T_VARIABLE($space_punct_listsep) = ; T_VARIABLE($space_punct_listsep_function_name) = ; T_VARIABLE($space_alpha_reserved_word) = ; T_VARIABLE($in_priv_list) = T_STRING ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($after) T_CONCAT_EQUAL T_VARIABLE($html_line_break) ; T_BREAK ; T_CASE : T_VARIABLE($before) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($docu) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($PMA_SQPdata_operators_docs) [ T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ] ) T_BOOLEAN_AND ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] T_IS_NOT_EQUAL T_BOOLEAN_OR T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] , T_ARRAY ( , , ) ) ) ) { T_VARIABLE($before) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($PMA_SQPdata_operators_docs) [ T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ] [ ] , T_STRING , T_VARIABLE($PMA_SQPdata_operators_docs) [ T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ] [ ] , T_STRING ) ; T_VARIABLE($after) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($after) T_CONCAT_EQUAL ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($bracketlevel) > T_LNUMBER ) { T_VARIABLE($bracketlevel) T_DEC ; T_IF ( T_VARIABLE($infunction) T_IS_EQUAL T_STRING ) { T_VARIABLE($functionlevel) T_DEC ; T_VARIABLE($after) T_CONCAT_EQUAL ; T_VARIABLE($before) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($indent) T_DEC ; T_VARIABLE($before) T_CONCAT_EQUAL ( T_VARIABLE($mode) T_IS_NOT_EQUAL ? : ) ; } T_VARIABLE($infunction) = ( T_VARIABLE($functionlevel) > T_LNUMBER ) ? T_STRING : T_STRING ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($docu) ) { T_SWITCH ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) { T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_VARIABLE($before) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , T_STRING , , T_STRING ) ; T_VARIABLE($after) = . T_VARIABLE($after) ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_VARIABLE($before) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , T_STRING , , T_STRING ) ; T_VARIABLE($after) = . T_VARIABLE($after) ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_VARIABLE($before) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , T_STRING , , T_STRING ) ; T_VARIABLE($after) = . T_VARIABLE($after) ; T_BREAK ; } } T_IF ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($after) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($before) T_CONCAT_EQUAL ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($before) T_CONCAT_EQUAL ; } T_IF ( ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) ) { T_VARIABLE($after) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($before) T_CONCAT_EQUAL ; } T_IF ( T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($after) T_CONCAT_EQUAL ; } T_BREAK ; T_CASE : T_VARIABLE($funcname) = T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) ; T_IF ( T_VARIABLE($docu) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($PMA_SQPdata_functions_docs) [ T_VARIABLE($funcname) ] ) ) { T_VARIABLE($before) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($PMA_SQPdata_functions_docs) [ T_VARIABLE($funcname) ] [ ] , T_STRING , T_VARIABLE($PMA_SQPdata_functions_docs) [ T_VARIABLE($funcname) ] [ ] , T_STRING ) ; T_VARIABLE($after) T_CONCAT_EQUAL ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($mode) T_IS_NOT_EQUAL ) { T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] = T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) ; } T_IF ( ( ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_NOT_EQUAL ) T_BOOLEAN_OR ( ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($keywords_no_newline) [ T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) - T_LNUMBER ] [ ] ) ] ) ) ) T_BOOLEAN_AND ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_NOT_EQUAL ) T_BOOLEAN_AND ( ! T_ISSET ( T_VARIABLE($keywords_no_newline) [ T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ] ) ) ) { T_IF ( T_VARIABLE($i) > T_LNUMBER ) { T_IF ( ! T_VARIABLE($in_priv_list) T_BOOLEAN_OR T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($before) T_CONCAT_EQUAL T_VARIABLE($space_alpha_reserved_word) ; } } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($keywords_priv_list) [ T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ] ) ) { T_VARIABLE($in_priv_list) = T_STRING ; } } } T_ELSE { T_VARIABLE($before) T_CONCAT_EQUAL ; } T_SWITCH ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) { T_CASE : T_CASE : T_CASE : T_CASE ; T_CASE : T_CASE : T_CASE : T_CASE : T_IF ( T_VARIABLE($docu) ) { T_SWITCH ( T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ) { T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_VARIABLE($before) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] . . T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] , T_STRING , , T_STRING ) ; T_VARIABLE($close_docu_link) = T_STRING ; T_BREAK ; } T_IF ( T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] T_IS_EQUAL ) { T_VARIABLE($before) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] . , T_STRING , , T_STRING ) ; T_VARIABLE($close_docu_link) = T_STRING ; } } T_IF ( ! T_VARIABLE($in_priv_list) ) { T_VARIABLE($space_punct_listsep) = T_VARIABLE($html_line_break) ; T_VARIABLE($space_alpha_reserved_word) = ; } T_BREAK ; T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_IF ( T_VARIABLE($close_docu_link) ) { T_VARIABLE($after) = . T_VARIABLE($after) ; T_VARIABLE($close_docu_link) = T_STRING ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($docu) T_BOOLEAN_AND ( T_VARIABLE($i) T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR T_VARIABLE($arr) [ T_VARIABLE($i) - T_LNUMBER ] [ ] T_IS_NOT_EQUAL ) ) { T_VARIABLE($before) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] , T_STRING , , T_STRING ) ; T_VARIABLE($after) = . T_VARIABLE($after) ; } T_IF ( ! T_VARIABLE($in_priv_list) ) { T_VARIABLE($space_punct_listsep) = T_VARIABLE($html_line_break) ; T_VARIABLE($space_alpha_reserved_word) = ; } T_BREAK ; T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_IF ( T_VARIABLE($docu) ) { T_VARIABLE($before) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] , T_STRING , , T_STRING ) ; T_VARIABLE($after) = . T_VARIABLE($after) ; } T_IF ( ! T_VARIABLE($in_priv_list) ) { T_VARIABLE($space_punct_listsep) = T_VARIABLE($html_line_break) ; T_VARIABLE($space_alpha_reserved_word) = ; } T_BREAK ; T_CASE : T_CASE : T_IF ( T_VARIABLE($docu) ) { T_VARIABLE($before) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] , T_STRING , , T_STRING ) ; T_VARIABLE($after) = . T_VARIABLE($after) ; } T_IF ( ! T_VARIABLE($in_priv_list) ) { T_VARIABLE($space_punct_listsep) = T_VARIABLE($html_line_break) ; T_VARIABLE($space_alpha_reserved_word) = T_VARIABLE($html_line_break) ; } T_BREAK ; T_CASE : T_VARIABLE($space_punct_listsep) = ; T_VARIABLE($space_alpha_reserved_word) = T_VARIABLE($html_line_break) ; T_BREAK ; T_CASE : T_IF ( T_VARIABLE($docu) ) { T_VARIABLE($before) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , T_STRING , , T_STRING ) ; T_VARIABLE($after) = . T_VARIABLE($after) ; } T_VARIABLE($space_punct_listsep) = ; T_VARIABLE($space_alpha_reserved_word) = T_VARIABLE($html_line_break) ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_IF ( T_VARIABLE($docu) ) { T_VARIABLE($before) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] , T_STRING , , T_STRING ) ; T_VARIABLE($after) = . T_VARIABLE($after) ; } T_BREAK ; T_DEFAULT : T_IF ( T_VARIABLE($close_docu_link) T_BOOLEAN_AND T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] , T_ARRAY ( , , , , ) ) ) { T_VARIABLE($after) T_CONCAT_EQUAL ; T_VARIABLE($close_docu_link) = T_STRING ; } T_ELSE T_IF ( T_VARIABLE($docu) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($PMA_SQPdata_functions_docs) [ T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ] ) ) { T_IF ( T_ISSET ( T_VARIABLE($typearr) [ T_LNUMBER ] ) T_BOOLEAN_AND T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($PMA_SQPdata_functions_docs) [ T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] . . T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] . . T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ) ] ) ) { T_VARIABLE($tempname) = T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] . . T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] . . T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ) ; T_VARIABLE($before) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($PMA_SQPdata_functions_docs) [ T_VARIABLE($tempname) ] [ ] , T_STRING , T_VARIABLE($PMA_SQPdata_functions_docs) [ T_VARIABLE($tempname) ] [ ] , T_STRING ) ; T_VARIABLE($close_docu_link) = T_STRING ; } T_ELSE T_IF ( T_ISSET ( T_VARIABLE($typearr) [ T_LNUMBER ] ) T_BOOLEAN_AND T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($PMA_SQPdata_functions_docs) [ T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] . . T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ) ] ) ) { T_VARIABLE($tempname) = T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] . . T_VARIABLE($arr) [ T_VARIABLE($i) + T_LNUMBER ] [ ] ) ; T_VARIABLE($before) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($PMA_SQPdata_functions_docs) [ T_VARIABLE($tempname) ] [ ] , T_STRING , T_VARIABLE($PMA_SQPdata_functions_docs) [ T_VARIABLE($tempname) ] [ ] , T_STRING ) ; T_VARIABLE($close_docu_link) = T_STRING ; } T_ELSE { T_VARIABLE($before) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($PMA_SQPdata_functions_docs) [ T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ] [ ] , T_STRING , T_VARIABLE($PMA_SQPdata_functions_docs) [ T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ] [ ] , T_STRING ) ; T_VARIABLE($after) T_CONCAT_EQUAL ; } } T_BREAK ; } T_VARIABLE($after) T_CONCAT_EQUAL ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_IF ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($after) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($infunction) T_BOOLEAN_AND T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($after) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($before) T_CONCAT_EQUAL ; } T_BREAK ; T_CASE : T_VARIABLE($after) = ; T_BREAK ; T_CASE : T_CASE : T_IF ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($before) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($infunction) T_BOOLEAN_AND T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($after) T_CONCAT_EQUAL ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($after) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($typearr) [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($before) T_CONCAT_EQUAL ; } T_BREAK ; T_DEFAULT : T_BREAK ; } T_VARIABLE($str) T_CONCAT_EQUAL T_VARIABLE($before) ; T_IF ( T_VARIABLE($mode) T_IS_EQUAL ) { T_VARIABLE($str) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] ) ; } T_ELSEIF ( T_VARIABLE($mode) T_IS_EQUAL ) { T_VARIABLE($str) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ) ; } T_ELSE { T_VARIABLE($str) T_CONCAT_EQUAL T_VARIABLE($arr) [ T_VARIABLE($i) ] [ ] ; } T_VARIABLE($str) T_CONCAT_EQUAL T_VARIABLE($after) ; } T_WHILE ( T_VARIABLE($indent) > T_LNUMBER ) { T_VARIABLE($indent) T_DEC ; T_VARIABLE($str) T_CONCAT_EQUAL ( T_VARIABLE($mode) T_IS_NOT_EQUAL ? : ) ; } T_IF ( T_VARIABLE($close_docu_link) ) { T_VARIABLE($str) T_CONCAT_EQUAL ; T_VARIABLE($close_docu_link) = T_STRING ; } T_IF ( T_VARIABLE($mode) T_IS_NOT_EQUAL ) { T_VARIABLE($str) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($mode) T_IS_EQUAL ) { T_VARIABLE($str) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($str) ; } T_FUNCTION(PMA_SQP_formatNone) ( T_VARIABLE($arr) ) { T_VARIABLE($formatted_sql) = T_STRING ( T_VARIABLE($arr) [ ] ) ; T_VARIABLE($formatted_sql) = T_STRING ( , , T_VARIABLE($formatted_sql) ) ; T_RETURN T_VARIABLE($formatted_sql) ; } T_FUNCTION(PMA_SQP_isKeyWord) ( T_VARIABLE($column) ) { T_GLOBAL T_VARIABLE($PMA_SQPdata_forbidden_word) ; T_RETURN T_STRING ( T_STRING ( T_VARIABLE($column) ) , T_VARIABLE($PMA_SQPdata_forbidden_word) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_FUNCTION(PMA_sqlQueryForm) ( T_VARIABLE($query) = T_STRING , T_VARIABLE($display_tab) = T_STRING , T_VARIABLE($delimiter) = ) { T_IF ( ! T_VARIABLE($display_tab) ) { T_VARIABLE($display_tab) = ; T_VARIABLE($is_querywindow) = T_STRING ; } T_ELSE { T_VARIABLE($is_querywindow) = T_STRING ; } T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($query) ) { T_VARIABLE($query) = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($enctype) = ; } T_ELSE { T_VARIABLE($enctype) = ; } T_VARIABLE($table) = ; T_VARIABLE($db) = ; T_IF ( ! T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($goto) = T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ? : T_VARIABLE($GLOBALS) [ ] ; } T_ELSEIF ( ! T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($db) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($goto) = T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ? : T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_VARIABLE($table) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($db) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($goto) = T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ? : T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_VARIABLE($is_querywindow) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($enctype) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSE { T_ECHO . T_VARIABLE($enctype) ; T_ECHO ; T_ECHO . ; } T_IF ( T_VARIABLE($is_querywindow) ) { T_ECHO . ; T_IF ( T_VARIABLE($display_tab) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($display_tab) T_IS_NOT_EQUAL ) { T_ECHO . ; T_ECHO . ; } } T_ECHO . . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) . . . . . T_STRING ( T_VARIABLE($goto) ) . . . . T_STRING ( ) . . . . T_STRING ( T_VARIABLE($query) ) . . ; T_IF ( T_VARIABLE($display_tab) T_IS_IDENTICAL T_BOOLEAN_OR T_VARIABLE($display_tab) T_IS_IDENTICAL ) { T_STRING ( T_VARIABLE($query) , T_VARIABLE($is_querywindow) , T_VARIABLE($delimiter) ) ; } T_IF ( T_VARIABLE($display_tab) T_IS_IDENTICAL T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_STRING ( ) ; } T_IF ( T_VARIABLE($display_tab) T_IS_IDENTICAL T_BOOLEAN_OR T_VARIABLE($display_tab) T_IS_IDENTICAL ) { T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_STRING ( ) ; } } T_IF ( T_STRING ( ) ) { T_ECHO T_STRING ( ) ; } T_ECHO . ; T_ECHO ; } T_FUNCTION(PMA_sqlQueryFormInsert) ( T_VARIABLE($query) = , T_VARIABLE($is_querywindow) = T_STRING , T_VARIABLE($delimiter) = ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($auto_sel) = ; } T_ELSE { T_VARIABLE($auto_sel) = ; } T_IF ( T_VARIABLE($is_querywindow) ) { T_VARIABLE($locking) = . ; T_VARIABLE($height) = T_VARIABLE($GLOBALS) [ ] [ ] * T_DNUMBER ; } T_ELSE { T_VARIABLE($locking) = ; T_VARIABLE($height) = T_VARIABLE($GLOBALS) [ ] [ ] * T_LNUMBER ; } T_VARIABLE($table) = ; T_VARIABLE($db) = ; T_VARIABLE($fields_list) = T_ARRAY ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($legend) = T_STRING ( T_STRING ( ) , . T_STRING ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) ? T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] : T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($GLOBALS) [ ] ] [ ] ) . ) ; } T_ELSEIF ( ! T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($db) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($tmp_db_link) = . T_VARIABLE($GLOBALS) [ ] [ ] . . T_STRING ( T_VARIABLE($db) ) . ; T_IF ( T_VARIABLE($is_querywindow) ) { T_VARIABLE($tmp_db_link) T_CONCAT_EQUAL . ; } T_VARIABLE($tmp_db_link) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($db) ) . ; T_VARIABLE($legend) = T_STRING ( T_STRING ( ) , T_VARIABLE($tmp_db_link) ) ; T_IF ( T_EMPTY ( T_VARIABLE($query) ) ) { T_VARIABLE($query) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] , ) ; } } T_ELSE { T_VARIABLE($table) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($db) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($fields_list) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($GLOBALS) [ ] , T_STRING , T_STRING ) ; T_VARIABLE($tmp_db_link) = . T_VARIABLE($GLOBALS) [ ] [ ] . . T_STRING ( T_VARIABLE($db) ) . ; T_IF ( T_VARIABLE($is_querywindow) ) { T_VARIABLE($tmp_db_link) T_CONCAT_EQUAL . ; } T_VARIABLE($tmp_db_link) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($db) ) . ; T_VARIABLE($legend) = T_STRING ( T_STRING ( ) , T_VARIABLE($tmp_db_link) ) ; T_IF ( T_EMPTY ( T_VARIABLE($query) ) ) { T_VARIABLE($query) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] , ) ; } } T_VARIABLE($legend) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_IF ( T_STRING ( T_VARIABLE($fields_list) ) ) { T_VARIABLE($sqlquerycontainer_id) = ; } T_ELSE { T_VARIABLE($sqlquerycontainer_id) = ; } T_ECHO . . . . . ; T_ECHO . T_VARIABLE($legend) . . ; T_ECHO . ; T_ECHO . T_VARIABLE($sqlquerycontainer_id) . . . . . T_VARIABLE($GLOBALS) [ ] [ ] . . . T_VARIABLE($height) . . . T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($auto_sel) . T_VARIABLE($locking) . . T_STRING ( T_VARIABLE($query) ) . . ; T_IF ( T_STRING ( T_VARIABLE($fields_list) ) ) { T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; } T_ECHO . T_STRING ( ) . ; T_ECHO . ; T_IF ( T_STRING ( T_VARIABLE($fields_list) ) ) { T_ECHO . . . T_STRING ( ) . . . . . ( T_VARIABLE($GLOBALS) [ ] [ ] - T_LNUMBER ) . . . ; T_FOREACH ( T_VARIABLE($fields_list) T_AS T_VARIABLE($field) ) { T_ECHO . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($field) [ ] ) ) . ; T_IF ( T_ISSET ( T_VARIABLE($field) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($field) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($field) [ ] ) ) { T_ECHO . T_STRING ( T_VARIABLE($field) [ ] ) . ; } T_ECHO . T_STRING ( T_VARIABLE($field) [ ] ) . . ; } T_ECHO . . . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_ECHO . . . T_STRING ( ) . . ; } T_ELSE { T_ECHO . . T_STRING ( ) . . . ; } T_ECHO . . . ; } T_ECHO . ; T_ECHO . ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ECHO . ; T_ECHO . . . ; T_ECHO . ; T_ECHO . ; T_IF ( T_VARIABLE($is_querywindow) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ECHO . ; T_ECHO . ; T_ECHO . T_STRING ( ) . . ; T_ECHO . . T_VARIABLE($delimiter) . . . ; T_ECHO . . . . T_STRING ( ) . . ; T_IF ( ! T_VARIABLE($is_querywindow) ) { T_ECHO . . ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_IDENTICAL T_STRING ? : ) . . . T_STRING ( ) . ; } T_ECHO . ; T_ECHO . T_STRING ( ) . . ; T_ECHO . ; T_ECHO . ; } T_FUNCTION(PMA_sqlQueryFormBookmark) ( ) { T_VARIABLE($bookmark_list) = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( ! T_VARIABLE($bookmark_list) T_BOOLEAN_OR T_STRING ( T_VARIABLE($bookmark_list) ) < T_LNUMBER ) { T_RETURN ; } T_ECHO ; T_ECHO ; T_ECHO T_STRING ( ) . . ; T_ECHO ; T_ECHO . ; T_ECHO . ; T_FOREACH ( T_VARIABLE($bookmark_list) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_ECHO . T_STRING ( T_VARIABLE($key) ) . . T_STRING ( T_VARIABLE($value) ) . . ; } T_ECHO . ; T_ECHO . ; T_ECHO . ; T_ECHO T_STRING ( ) ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_ECHO . . ; T_ECHO . ; T_ECHO . ; T_ECHO . . . T_STRING ( ) . . ; T_ECHO . . . T_STRING ( ) . . ; T_ECHO . . . T_STRING ( ) . . ; T_ECHO . ; T_ECHO . ; T_ECHO . ; T_ECHO . ; T_ECHO . T_STRING ( ) . ; T_ECHO . ; T_ECHO . ; } T_FUNCTION(PMA_sqlQueryFormUpload) ( ) { T_VARIABLE($errors) = T_ARRAY ( ) ; T_VARIABLE($matcher) = . T_STRING ( ) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($files) = T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) , T_VARIABLE($matcher) , ( T_ISSET ( T_VARIABLE($timeout_passed) ) T_BOOLEAN_AND T_VARIABLE($timeout_passed) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($local_import_file) ) ) ? T_VARIABLE($local_import_file) : ) ; } T_ELSE { T_VARIABLE($files) = ; } T_ECHO ; T_ECHO ; T_ECHO T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . ; T_ECHO ; T_IF ( T_VARIABLE($files) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($errors) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($files) ) ) { T_ECHO ; T_ECHO . T_STRING ( ) . . ; T_ECHO . ; T_ECHO . ; T_ECHO T_VARIABLE($files) ; T_ECHO . ; T_ECHO ; } T_ECHO . ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( ) . ; T_ECHO T_STRING ( T_STRING , , T_STRING , , T_STRING ) ; T_ECHO . T_STRING ( ) . . ; T_ECHO . ; T_ECHO ; T_FOREACH ( T_VARIABLE($errors) T_AS T_VARIABLE($error) ) { T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_VARIABLE($GLOBALS) [ ] = ; } T_ELSE { @ T_INCLUDE_ONCE ; T_IF ( T_STRING ( ) ) { T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; T_STRING ( ) ; } } T_IF ( ! T_VARIABLE($GLOBALS) [ ] ) { T_STRING { T_VAR T_VARIABLE($url) ; T_VAR T_VARIABLE($service_name) ; T_VAR T_VARIABLE($wsdl) ; T_VAR T_VARIABLE($output_type) ; T_VAR T_VARIABLE($username) ; T_VAR T_VARIABLE($password) ; T_VAR T_VARIABLE($calling_program) ; T_VAR T_VARIABLE($calling_program_version) ; T_VAR T_VARIABLE($target_dbms) ; T_VAR T_VARIABLE($target_dbms_version) ; T_VAR T_VARIABLE($connectionTechnology) ; T_VAR T_VARIABLE($connection_technology_version) ; T_VAR T_VARIABLE($interactive) ; T_VAR T_VARIABLE($service_link) = T_STRING ; T_VAR T_VARIABLE($session_data) = T_STRING ; T_STRING ( T_VARIABLE($url) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) { T_VARIABLE($obj) = T_NEW T_STRING ( T_VARIABLE($url) ) ; } T_ELSE { T_VARIABLE($obj) = T_NEW T_STRING ( T_VARIABLE($url) , T_STRING ) ; } T_RETURN T_VARIABLE($obj) ; } T_STRING ( T_VARIABLE($obj) , T_VARIABLE($username) , T_VARIABLE($password) , T_VARIABLE($calling_program) , T_VARIABLE($calling_program_version) , T_VARIABLE($target_dbms) , T_VARIABLE($target_dbms_version) , T_VARIABLE($connection_technology) , T_VARIABLE($connection_technology_version) , T_VARIABLE($interactive) ) { T_VARIABLE($use_array) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($username) , T_DOUBLE_ARROW T_VARIABLE($password) , T_DOUBLE_ARROW T_VARIABLE($calling_program) , T_DOUBLE_ARROW T_VARIABLE($calling_program_version) , T_DOUBLE_ARROW T_VARIABLE($target_dbms) , T_DOUBLE_ARROW T_VARIABLE($target_dbms_version) , T_DOUBLE_ARROW T_VARIABLE($connection_technology) , T_DOUBLE_ARROW T_VARIABLE($connection_technology_version) , T_DOUBLE_ARROW T_VARIABLE($interactive) , ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) { T_VARIABLE($ret) = T_VARIABLE($obj) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($use_array) ) ; } T_ELSE { T_VARIABLE($ret) = T_VARIABLE($obj) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($use_array) ) ; } T_RETURN T_VARIABLE($ret) ; } T_STRING ( T_VARIABLE($obj) , T_VARIABLE($session) , T_VARIABLE($sql) , T_VARIABLE($method) ) { T_VARIABLE($use_array) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($session) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($session) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($sql) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) { T_VARIABLE($res) = T_VARIABLE($obj) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($use_array) ) ; } T_ELSE { T_VARIABLE($res) = T_VARIABLE($obj) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($use_array) ) ; } T_RETURN T_VARIABLE($res) ; } T_STRING ( T_VARIABLE($sql) ) { T_VARIABLE($ret) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($sql) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_VARIABLE($ret) ; } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_STRING ( T_VARIABLE($username) , T_VARIABLE($password) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($username) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($password) ; } T_STRING ( T_VARIABLE($calling_program) , T_VARIABLE($calling_program_version) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($calling_program) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($calling_program_version) ; } T_STRING ( T_VARIABLE($calling_program) , T_VARIABLE($calling_program_version) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($calling_program) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($calling_program_version) ; } T_STRING ( T_VARIABLE($target_dbms) , T_VARIABLE($target_dbms_version) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($target_dbms) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($target_dbms_version) ; } T_STRING ( T_VARIABLE($target_dbms) , T_VARIABLE($target_dbms_version) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($target_dbms) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($target_dbms_version) ; } T_STRING ( T_VARIABLE($connection_technology) , T_VARIABLE($connection_technology_version) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($connection_technology) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($connection_technology_version) ; } T_STRING ( T_VARIABLE($connection_technology) , T_VARIABLE($connection_technology_version) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($connection_technology) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL . T_VARIABLE($connection_technology_version) ; } T_STRING ( T_VARIABLE($interactive) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($interactive) ; } T_STRING ( T_VARIABLE($output_type) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($output_type) ; } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($url) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_STRING ( T_VARIABLE($sql) ) { T_VARIABLE($res) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($sql) ) ; T_RETURN T_VARIABLE($res) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( T_VARIABLE($sql) ) { T_VARIABLE($res) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($sql) ) ; T_RETURN T_VARIABLE($res) T_OBJECT_OPERATOR T_STRING ; } } T_IF ( ! T_STRING ( ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_IF ( T_VARIABLE($cfg) [ ] [ ] T_IS_EQUAL T_STRING ) { T_INCLUDE_ONCE ; } T_FUNCTION(PMA_validateSQL) ( T_VARIABLE($sql) ) { T_GLOBAL T_VARIABLE($cfg) ; T_VARIABLE($str) = ; T_IF ( T_VARIABLE($cfg) [ ] [ ] ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($str) = T_STRING ( T_STRING ( ) , . T_STRING T_DOUBLE_COLON T_STRING ( , ) . , ) ; } T_ELSE { T_VARIABLE($srv) = T_NEW T_STRING ( ) ; T_IF ( T_VARIABLE($cfg) [ ] [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($srv) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($cfg) [ ] [ ] , T_VARIABLE($cfg) [ ] [ ] ) ; } T_VARIABLE($srv) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_VARIABLE($srv) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_VARIABLE($srv) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($str) = T_VARIABLE($srv) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($sql) ) ; } } T_RETURN T_VARIABLE($str) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING { T_VAR T_VARIABLE($engine) = ; T_VAR T_VARIABLE($title) = ; T_VAR T_VARIABLE($comment) = ; T_VAR T_VARIABLE($support) = T_STRING ; T_STATIC T_PUBLIC T_STRING ( ) { T_STATIC T_VARIABLE($storage_engines) = T_STRING ; T_IF ( T_STRING T_IS_EQUAL T_VARIABLE($storage_engines) ) { T_IF ( T_STRING ) { T_VARIABLE($sql) = ; T_VARIABLE($storage_engines) = T_STRING ( T_VARIABLE($sql) , ) ; } T_ELSE { T_VARIABLE($storage_engines) = T_STRING ( , ) ; } } T_RETURN T_VARIABLE($storage_engines) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($name) = , T_VARIABLE($id) = T_STRING , T_VARIABLE($selected) = T_STRING , T_VARIABLE($offerUnavailableEngines) = T_STRING ) { T_VARIABLE($selected) = T_STRING ( T_VARIABLE($selected) ) ; T_VARIABLE($output) = . T_VARIABLE($name) . . ( T_EMPTY ( T_VARIABLE($id) ) ? : . T_VARIABLE($id) . ) . . ; T_FOREACH ( T_STRING T_DOUBLE_COLON T_STRING ( ) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($details) ) { T_IF ( ! T_VARIABLE($offerUnavailableEngines) T_BOOLEAN_AND ( T_VARIABLE($details) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($details) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($details) [ ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_STRING T_BOOLEAN_AND T_VARIABLE($details) [ ] T_IS_EQUAL ) ) { T_CONTINUE ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($key) ) . . ( T_EMPTY ( T_VARIABLE($details) [ ] ) ? : . T_STRING ( T_VARIABLE($details) [ ] ) . ) . ( T_STRING ( T_VARIABLE($key) ) T_IS_EQUAL T_VARIABLE($selected) T_BOOLEAN_OR ( T_EMPTY ( T_VARIABLE($selected) ) T_BOOLEAN_AND T_VARIABLE($details) [ ] T_IS_EQUAL ) ? : ) . . . . T_STRING ( T_VARIABLE($details) [ ] ) . . . ; } T_VARIABLE($output) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($output) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($engine) ) { T_VARIABLE($engine) = T_STRING ( , , T_STRING ( , , T_VARIABLE($engine) ) ) ; T_VARIABLE($filename) = . T_STRING ( T_VARIABLE($engine) ) . ; T_IF ( T_STRING ( T_VARIABLE($filename) ) T_BOOLEAN_AND T_INCLUDE_ONCE T_VARIABLE($filename) ) { T_VARIABLE($class_name) = . T_VARIABLE($engine) ; T_VARIABLE($engine_object) = T_NEW T_VARIABLE($class_name) ( T_VARIABLE($engine) ) ; } T_ELSE { T_VARIABLE($engine_object) = T_NEW T_STRING ( T_VARIABLE($engine) ) ; } T_RETURN T_VARIABLE($engine_object) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($engine) ) { T_IF ( T_VARIABLE($engine) T_IS_EQUAL ) { T_RETURN T_STRING ; } T_VARIABLE($storage_engines) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_RETURN T_ISSET ( T_VARIABLE($storage_engines) [ T_VARIABLE($engine) ] ) ; } T_STRING ( ) { T_VARIABLE($odd_row) = T_STRING ; T_VARIABLE($ret) = ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($details) ) { T_VARIABLE($ret) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . . . . ; T_IF ( ! T_EMPTY ( T_VARIABLE($details) [ ] ) ) { T_VARIABLE($ret) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($details) [ ] ) . ; } T_VARIABLE($ret) T_CONCAT_EQUAL . . . T_STRING ( T_VARIABLE($details) [ ] ) . . . ; T_SWITCH ( T_VARIABLE($details) [ ] ) { T_CASE T_STRING : T_VARIABLE($parsed_size) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($details) [ ] ) ; T_VARIABLE($ret) T_CONCAT_EQUAL T_VARIABLE($parsed_size) [ T_LNUMBER ] . . T_VARIABLE($parsed_size) [ T_LNUMBER ] ; T_UNSET ( T_VARIABLE($parsed_size) ) ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($ret) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($details) [ ] ) . ; T_BREAK ; T_DEFAULT : T_VARIABLE($ret) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($details) [ ] ) . ; } T_VARIABLE($ret) T_CONCAT_EQUAL . . . ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_IF ( ! T_VARIABLE($ret) ) { T_VARIABLE($ret) = . . . T_STRING ( ) . . . ; } T_ELSE { T_VARIABLE($ret) = . . T_VARIABLE($ret) . . ; } T_RETURN T_VARIABLE($ret) ; } T_STRING ( T_VARIABLE($value) ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) ) ; } T_STRING ( ) { T_VARIABLE($variables) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($like) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($like) ) { T_VARIABLE($like) = . T_VARIABLE($like) . ; } T_ELSE { T_VARIABLE($like) = ; } T_VARIABLE($mysql_vars) = T_ARRAY ( ) ; T_VARIABLE($sql_query) = . T_VARIABLE($like) . ; T_VARIABLE($res) = T_STRING ( T_VARIABLE($sql_query) ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($res) ) ) { T_IF ( T_ISSET ( T_VARIABLE($variables) [ T_VARIABLE($row) [ ] ] ) ) { T_VARIABLE($mysql_vars) [ T_VARIABLE($row) [ ] ] = T_VARIABLE($variables) [ T_VARIABLE($row) [ ] ] ; } T_ELSEIF ( ! T_VARIABLE($like) T_BOOLEAN_AND T_STRING ( T_STRING ( T_VARIABLE($row) [ ] ) , T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_CONTINUE ; } T_VARIABLE($mysql_vars) [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) [ ] ; T_IF ( T_EMPTY ( T_VARIABLE($mysql_vars) [ T_VARIABLE($row) [ ] ] [ ] ) ) { T_VARIABLE($mysql_vars) [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($mysql_vars) [ T_VARIABLE($row) [ ] ] [ ] ) ) { T_VARIABLE($mysql_vars) [ T_VARIABLE($row) [ ] ] [ ] = T_STRING ; } } T_STRING ( T_VARIABLE($res) ) ; T_RETURN T_VARIABLE($mysql_vars) ; } T_STRING ( T_VARIABLE($engine) ) { T_VARIABLE($storage_engines) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($storage_engines) [ T_VARIABLE($engine) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($engine) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($storage_engines) [ T_VARIABLE($engine) ] [ ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ( T_ISSET ( T_VARIABLE($storage_engines) [ T_VARIABLE($engine) ] [ ] ) ? T_VARIABLE($storage_engines) [ T_VARIABLE($engine) ] [ ] : ) ; T_SWITCH ( T_VARIABLE($storage_engines) [ T_VARIABLE($engine) ] [ ] ) { T_CASE : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_BREAK ; T_CASE : T_DEFAULT : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } } } T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( ) { T_SWITCH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_CASE T_STRING : T_VARIABLE($message) = T_STRING ( ) ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($message) = T_STRING ( ) ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($message) = T_STRING ( ) ; T_BREAK ; T_CASE T_STRING : T_DEFAULT : T_VARIABLE($message) = T_STRING ( ) ; } T_RETURN T_STRING ( T_VARIABLE($message) , T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) ; } T_STRING ( ) { T_RETURN T_ARRAY ( ) ; } T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . ; } T_STRING ( ) { T_RETURN T_STRING ; } T_STRING ( ) { T_RETURN T_ARRAY ( ) ; } T_STRING ( T_VARIABLE($id) ) { T_RETURN T_STRING ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_IF ( @ T_STRING ( ) ) { T_STRING ( ) ; T_INCLUDE ; } T_ELSE { T_INCLUDE ; } T_IF ( @ T_STRING ( ) ) { T_INCLUDE ; } T_ELSE { T_INCLUDE ; } T_FUNCTION(PMA_STR_charIsEscaped) ( T_VARIABLE($string) , T_VARIABLE($pos) , T_VARIABLE($start) = T_LNUMBER ) { T_VARIABLE($pos) = T_STRING ( T_STRING ( T_VARIABLE($pos) ) , T_LNUMBER ) ; T_VARIABLE($start) = T_STRING ( T_STRING ( T_VARIABLE($start) ) , T_LNUMBER ) ; T_VARIABLE($len) = T_STRING ( T_VARIABLE($string) ) ; T_IF ( T_VARIABLE($pos) T_IS_SMALLER_OR_EQUAL T_VARIABLE($start) T_BOOLEAN_OR T_VARIABLE($len) T_IS_SMALLER_OR_EQUAL T_STRING ( T_VARIABLE($pos) , T_VARIABLE($start) ) ) { T_RETURN T_STRING ; } T_VARIABLE($pos) T_DEC ; T_VARIABLE($escaped) = T_STRING ; T_WHILE ( T_VARIABLE($pos) T_IS_GREATER_OR_EQUAL T_VARIABLE($start) T_BOOLEAN_AND T_STRING ( T_VARIABLE($string) , T_VARIABLE($pos) , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($escaped) = ! T_VARIABLE($escaped) ; T_VARIABLE($pos) T_DEC ; } T_RETURN T_VARIABLE($escaped) ; } T_FUNCTION(PMA_STR_numberInRangeInclusive) ( T_VARIABLE($num) , T_VARIABLE($lower) , T_VARIABLE($upper) ) { T_RETURN ( T_VARIABLE($num) T_IS_GREATER_OR_EQUAL T_VARIABLE($lower) T_BOOLEAN_AND T_VARIABLE($num) T_IS_SMALLER_OR_EQUAL T_VARIABLE($upper) ) ; } T_FUNCTION(PMA_STR_isSqlIdentifier) ( T_VARIABLE($c) , T_VARIABLE($dot_is_valid) = T_STRING ) { T_RETURN ( T_STRING ( T_VARIABLE($c) ) T_BOOLEAN_OR ( T_VARIABLE($ord_c) = T_STRING ( T_VARIABLE($c) ) ) T_BOOLEAN_AND T_VARIABLE($ord_c) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($ord_c) T_IS_NOT_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($ord_c) T_IS_NOT_EQUAL T_LNUMBER T_BOOLEAN_OR T_VARIABLE($c) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($c) T_IS_EQUAL T_BOOLEAN_OR ( T_VARIABLE($dot_is_valid) T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($c) T_IS_EQUAL ) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_strlen) ( T_VARIABLE($string) ) { T_RETURN T_STRING ( T_VARIABLE($string) ) ; } T_FUNCTION(PMA_substr) ( T_VARIABLE($string) , T_VARIABLE($start) , T_VARIABLE($length) = T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($string) , T_VARIABLE($start) , T_VARIABLE($length) ) ; } T_FUNCTION(PMA_strpos) ( T_VARIABLE($haystack) , T_VARIABLE($needle) , T_VARIABLE($offset) = T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($haystack) , T_VARIABLE($needle) , T_VARIABLE($offset) ) ; } T_FUNCTION(PMA_strtolower) ( T_VARIABLE($string) ) { T_RETURN T_STRING ( T_VARIABLE($string) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_strlen) ( T_VARIABLE($string) ) { T_RETURN T_STRING ( T_VARIABLE($string) ) ; } T_FUNCTION(PMA_substr) ( T_VARIABLE($string) , T_VARIABLE($start) , T_VARIABLE($length) = T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($string) , T_VARIABLE($start) , T_VARIABLE($length) ) ; } T_FUNCTION(PMA_strpos) ( T_VARIABLE($haystack) , T_VARIABLE($needle) , T_VARIABLE($offset) = T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($haystack) , T_VARIABLE($needle) , T_VARIABLE($offset) ) ; } T_FUNCTION(PMA_strtolower) ( T_VARIABLE($string) ) { T_RETURN T_STRING ( T_VARIABLE($string) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_STR_isAlnum) ( T_VARIABLE($c) ) { T_RETURN T_STRING ( T_VARIABLE($c) ) ; } T_FUNCTION(PMA_STR_isAlpha) ( T_VARIABLE($c) ) { T_RETURN T_STRING ( T_VARIABLE($c) ) ; } T_FUNCTION(PMA_STR_isDigit) ( T_VARIABLE($c) ) { T_RETURN T_STRING ( T_VARIABLE($c) ) ; } T_FUNCTION(PMA_STR_isUpper) ( T_VARIABLE($c) ) { T_RETURN T_STRING ( T_VARIABLE($c) ) ; } T_FUNCTION(PMA_STR_isLower) ( T_VARIABLE($c) ) { T_RETURN T_STRING ( T_VARIABLE($c) ) ; } T_FUNCTION(PMA_STR_isSpace) ( T_VARIABLE($c) ) { T_RETURN T_STRING ( T_VARIABLE($c) ) ; } T_FUNCTION(PMA_STR_isHexDigit) ( T_VARIABLE($c) ) { T_RETURN T_STRING ( T_VARIABLE($c) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_STR_isAlnum) ( T_VARIABLE($c) ) { T_RETURN ( T_STRING ( T_VARIABLE($c) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($c) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($c) ) ) ; } T_FUNCTION(PMA_STR_isAlpha) ( T_VARIABLE($c) ) { T_RETURN ( T_STRING ( T_VARIABLE($c) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($c) ) ) ; } T_FUNCTION(PMA_STR_isDigit) ( T_VARIABLE($c) ) { T_VARIABLE($ord_zero) = T_LNUMBER ; T_VARIABLE($ord_nine) = T_LNUMBER ; T_VARIABLE($ord_c) = T_STRING ( T_VARIABLE($c) ) ; T_RETURN T_STRING ( T_VARIABLE($ord_c) , T_VARIABLE($ord_zero) , T_VARIABLE($ord_nine) ) ; } T_FUNCTION(PMA_STR_isUpper) ( T_VARIABLE($c) ) { T_VARIABLE($ord_zero) = T_LNUMBER ; T_VARIABLE($ord_nine) = T_LNUMBER ; T_VARIABLE($ord_c) = T_STRING ( T_VARIABLE($c) ) ; T_RETURN T_STRING ( T_VARIABLE($ord_c) , T_VARIABLE($ord_zero) , T_VARIABLE($ord_nine) ) ; } T_FUNCTION(PMA_STR_isLower) ( T_VARIABLE($c) ) { T_VARIABLE($ord_zero) = T_LNUMBER ; T_VARIABLE($ord_nine) = T_LNUMBER ; T_VARIABLE($ord_c) = T_STRING ( T_VARIABLE($c) ) ; T_RETURN T_STRING ( T_VARIABLE($ord_c) , T_VARIABLE($ord_zero) , T_VARIABLE($ord_nine) ) ; } T_FUNCTION(PMA_STR_isSpace) ( T_VARIABLE($c) ) { T_VARIABLE($ord_space) = T_LNUMBER ; T_VARIABLE($ord_tab) = T_LNUMBER ; T_VARIABLE($ord_CR) = T_LNUMBER ; T_VARIABLE($ord_NOBR) = T_LNUMBER ; T_VARIABLE($ord_c) = T_STRING ( T_VARIABLE($c) ) ; T_RETURN ( T_VARIABLE($ord_c) T_IS_EQUAL T_VARIABLE($ord_space) T_BOOLEAN_OR T_VARIABLE($ord_c) T_IS_EQUAL T_VARIABLE($ord_NOBR) T_BOOLEAN_OR T_STRING ( T_VARIABLE($ord_c) , T_VARIABLE($ord_tab) , T_VARIABLE($ord_CR) ) ) ; } T_FUNCTION(PMA_STR_isHexDigit) ( T_VARIABLE($c) ) { T_VARIABLE($ord_Aupper) = T_LNUMBER ; T_VARIABLE($ord_Fupper) = T_LNUMBER ; T_VARIABLE($ord_Alower) = T_LNUMBER ; T_VARIABLE($ord_Flower) = T_LNUMBER ; T_VARIABLE($ord_zero) = T_LNUMBER ; T_VARIABLE($ord_nine) = T_LNUMBER ; T_VARIABLE($ord_c) = T_STRING ( T_VARIABLE($c) ) ; T_RETURN ( T_STRING ( T_VARIABLE($ord_c) , T_VARIABLE($ord_zero) , T_VARIABLE($ord_nine) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($ord_c) , T_VARIABLE($ord_Aupper) , T_VARIABLE($ord_Fupper) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($ord_c) , T_VARIABLE($ord_Alower) , T_VARIABLE($ord_Flower) ) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_getHtmlForActionLinks) ( T_VARIABLE($current_table) , T_VARIABLE($table_is_view) , T_VARIABLE($tbl_url_query) , T_VARIABLE($titles) , T_VARIABLE($truename) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($url_query) ) { T_VARIABLE($empty_table) = ; T_IF ( T_VARIABLE($current_table) [ ] > T_LNUMBER T_BOOLEAN_OR T_VARIABLE($table_is_view) ) { T_VARIABLE($may_have_rows) = T_STRING ; } T_ELSE { T_VARIABLE($may_have_rows) = T_STRING ; } T_VARIABLE($browse_table) = . T_VARIABLE($tbl_url_query) . ; T_IF ( T_VARIABLE($may_have_rows) ) { T_VARIABLE($browse_table) T_CONCAT_EQUAL T_VARIABLE($titles) [ ] ; } T_ELSE { T_VARIABLE($browse_table) T_CONCAT_EQUAL T_VARIABLE($titles) [ ] ; } T_VARIABLE($browse_table) T_CONCAT_EQUAL ; T_VARIABLE($search_table) = . T_VARIABLE($tbl_url_query) . ; T_IF ( T_VARIABLE($may_have_rows) ) { T_VARIABLE($search_table) T_CONCAT_EQUAL T_VARIABLE($titles) [ ] ; } T_ELSE { T_VARIABLE($search_table) T_CONCAT_EQUAL T_VARIABLE($titles) [ ] ; } T_VARIABLE($search_table) T_CONCAT_EQUAL ; T_VARIABLE($browse_table_label) = . T_VARIABLE($tbl_url_query) . . T_VARIABLE($truename) . ; T_IF ( ! T_VARIABLE($db_is_information_schema) ) { T_VARIABLE($empty_table) = ; T_VARIABLE($empty_table) T_CONCAT_EQUAL . T_VARIABLE($tbl_url_query) . ; T_VARIABLE($empty_table) T_CONCAT_EQUAL T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_table) [ ] ) ) ; T_VARIABLE($empty_table) T_CONCAT_EQUAL . T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($current_table) [ ] ) ) ) . ; T_IF ( T_VARIABLE($may_have_rows) ) { T_VARIABLE($empty_table) T_CONCAT_EQUAL T_VARIABLE($titles) [ ] ; } T_ELSE { T_VARIABLE($empty_table) T_CONCAT_EQUAL T_VARIABLE($titles) [ ] ; } T_VARIABLE($empty_table) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($table_is_view) ) { T_VARIABLE($empty_table) = ; } } T_VARIABLE($tracking_icon) = ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( ) ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($truename) ) ) { T_VARIABLE($tracking_icon) = . T_VARIABLE($url_query) . . T_VARIABLE($truename) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . ; } T_ELSEIF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($truename) ) > T_LNUMBER ) { T_VARIABLE($tracking_icon) = . T_VARIABLE($url_query) . . T_VARIABLE($truename) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . ; } } T_RETURN T_ARRAY ( T_VARIABLE($browse_table) , T_VARIABLE($search_table) , T_VARIABLE($browse_table_label) , T_VARIABLE($empty_table) , T_VARIABLE($tracking_icon) ) ; } T_FUNCTION(PMA_getTableDropQueryAndMessage) ( T_VARIABLE($table_is_view) , T_VARIABLE($current_table) ) { T_VARIABLE($drop_query) = . ( ( T_VARIABLE($table_is_view) T_BOOLEAN_OR T_VARIABLE($current_table) [ ] T_IS_EQUAL T_STRING ) ? : ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_table) [ ] ) ; T_VARIABLE($drop_message) = T_STRING ( ( ( T_VARIABLE($table_is_view) T_BOOLEAN_OR T_VARIABLE($current_table) [ ] T_IS_EQUAL T_STRING ) ? T_STRING ( ) : T_STRING ( ) ) , T_STRING ( , , T_STRING ( T_VARIABLE($current_table) [ ] ) ) ) ; T_RETURN T_ARRAY ( T_VARIABLE($drop_query) , T_VARIABLE($drop_message) ) ; } T_FUNCTION(PMA_getHtmlBodyForTableSummary) ( T_VARIABLE($num_tables) , T_VARIABLE($server_slave_status) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($sum_entries) , T_VARIABLE($db_collation) , T_VARIABLE($is_show_stats) , T_VARIABLE($sum_size) , T_VARIABLE($overhead_size) , T_VARIABLE($create_time_all) , T_VARIABLE($update_time_all) , T_VARIABLE($check_time_all) , T_VARIABLE($sum_row_count_pre) ) { T_IF ( T_VARIABLE($is_show_stats) ) { T_LIST ( T_VARIABLE($sum_formatted) , T_VARIABLE($unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($sum_size) , T_LNUMBER , T_LNUMBER ) ; T_LIST ( T_VARIABLE($overhead_formatted) , T_VARIABLE($overhead_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($overhead_size) , T_LNUMBER , T_LNUMBER ) ; } T_VARIABLE($html_output) = . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_STRING ( , , T_VARIABLE($num_tables) ) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($num_tables) , T_LNUMBER ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($server_slave_status) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($db_is_information_schema) ? T_LNUMBER : T_LNUMBER ) . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($sum_row_count_pre) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($sum_entries) , T_LNUMBER ) . ; T_IF ( ! ( T_VARIABLE($GLOBALS) [ ] [ ] > T_LNUMBER ) ) { T_VARIABLE($default_engine) = T_STRING ( , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( T_STRING ( ) , T_VARIABLE($default_engine) ) . . T_VARIABLE($default_engine) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_IF ( ! T_EMPTY ( T_VARIABLE($db_collation) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($db_collation) ) . . T_STRING ( ) . . T_VARIABLE($db_collation) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($is_show_stats) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($sum_formatted) . . T_VARIABLE($unit) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($overhead_formatted) . . T_VARIABLE($overhead_unit) . ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ( T_VARIABLE($create_time_all) ? T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($create_time_all) ) ) : ) . ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ( T_VARIABLE($update_time_all) ? T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($update_time_all) ) ) : ) . ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ( T_VARIABLE($check_time_all) ? T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($check_time_all) ) ) : ) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForCheckAllTables) ( T_VARIABLE($pmaThemeImage) , T_VARIABLE($text_dir) , T_VARIABLE($overhead_check) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($hidden_fields) ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($pmaThemeImage) . . T_VARIABLE($text_dir) . . . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_IF ( T_VARIABLE($overhead_check) T_IS_NOT_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($overhead_check) ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_IF ( ! T_VARIABLE($db_is_information_schema) T_BOOLEAN_AND ! T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_IF ( ! T_STRING ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($hidden_fields) ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForCheckTablesHavingOverheadlink) ( T_VARIABLE($overhead_check) ) { T_RETURN . . T_VARIABLE($overhead_check) . . T_STRING ( ) . ; } T_FUNCTION(PMA_getHtmlForTablePrintViewLink) ( T_VARIABLE($url_query) ) { T_RETURN . . T_VARIABLE($url_query) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) . ; } T_FUNCTION(PMA_getHtmlForDataDictionaryLink) ( T_VARIABLE($url_query) ) { T_RETURN . T_VARIABLE($url_query) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) . . ; } T_FUNCTION(PMA_getTimeForCreateUpdateCheck) ( T_VARIABLE($current_table) , T_VARIABLE($time_label) , T_VARIABLE($time_all) ) { T_VARIABLE($showtable) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($current_table) [ ] , T_STRING , T_STRING ) ; T_VARIABLE($time) = T_ISSET ( T_VARIABLE($showtable) [ T_VARIABLE($time_label) ] ) ? T_VARIABLE($showtable) [ T_VARIABLE($time_label) ] : T_STRING ; T_IF ( T_VARIABLE($time) T_BOOLEAN_AND ( ! T_VARIABLE($time_all) T_BOOLEAN_OR T_VARIABLE($time) < T_VARIABLE($time_all) ) ) { T_VARIABLE($time_all) = T_VARIABLE($time) ; } T_RETURN T_ARRAY ( T_VARIABLE($time) , T_VARIABLE($time_all) ) ; } T_FUNCTION(PMA_getHtmlForStructureTableRow) ( T_VARIABLE($curr) , T_VARIABLE($odd_row) , T_VARIABLE($table_is_view) , T_VARIABLE($current_table) , T_VARIABLE($browse_table_label) , T_VARIABLE($tracking_icon) , T_VARIABLE($server_slave_status) , T_VARIABLE($browse_table) , T_VARIABLE($tbl_url_query) , T_VARIABLE($search_table) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($titles) , T_VARIABLE($empty_table) , T_VARIABLE($drop_query) , T_VARIABLE($drop_message) , T_VARIABLE($collation) , T_VARIABLE($formatted_size) , T_VARIABLE($unit) , T_VARIABLE($overhead) , T_VARIABLE($create_time) , T_VARIABLE($update_time) , T_VARIABLE($check_time) , T_VARIABLE($is_show_stats) , T_VARIABLE($ignored) , T_VARIABLE($do) , T_VARIABLE($colspan_for_structure) ) { T_VARIABLE($html_output) = . ( T_VARIABLE($odd_row) ? : ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ( T_VARIABLE($table_is_view) ? : ) . . T_VARIABLE($curr) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( T_VARIABLE($current_table) [ ] ) . . . T_VARIABLE($curr) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($browse_table_label) . ( ! T_EMPTY ( T_VARIABLE($tracking_icon) ) ? T_VARIABLE($tracking_icon) : ) . ; T_IF ( T_VARIABLE($server_slave_status) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($ignored) ? T_STRING T_DOUBLE_COLON T_STRING ( , ) : ) . ( T_VARIABLE($do) ? T_STRING T_DOUBLE_COLON T_STRING ( , ) : ) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($browse_table) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($tbl_url_query) . . T_VARIABLE($titles) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($search_table) . ; T_IF ( ! T_VARIABLE($db_is_information_schema) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($tbl_url_query) , T_VARIABLE($table_is_view) , T_VARIABLE($titles) , T_VARIABLE($empty_table) , T_VARIABLE($current_table) , T_VARIABLE($drop_query) , T_VARIABLE($drop_message) ) ; } T_IF ( T_ISSET ( T_VARIABLE($current_table) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($current_table) [ ] T_IS_NOT_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($table_is_view) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($table_is_view) , T_VARIABLE($current_table) , T_VARIABLE($collation) , T_VARIABLE($is_show_stats) , T_VARIABLE($tbl_url_query) , T_VARIABLE($formatted_size) , T_VARIABLE($unit) , T_VARIABLE($overhead) , T_VARIABLE($create_time) , T_VARIABLE($update_time) , T_VARIABLE($check_time) ) ; } T_ELSEIF ( T_VARIABLE($table_is_view) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($is_show_stats) ) ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($colspan_for_structure) , T_VARIABLE($db_is_information_schema) ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_ARRAY ( T_VARIABLE($html_output) , T_VARIABLE($odd_row) ) ; } T_FUNCTION(PMA_getHtmlForInsertEmptyDropActionLinks) ( T_VARIABLE($tbl_url_query) , T_VARIABLE($table_is_view) , T_VARIABLE($titles) , T_VARIABLE($empty_table) , T_VARIABLE($current_table) , T_VARIABLE($drop_query) , T_VARIABLE($drop_message) ) { T_VARIABLE($html_output) = . . T_VARIABLE($tbl_url_query) . . T_VARIABLE($titles) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($empty_table) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($table_is_view) T_BOOLEAN_OR T_VARIABLE($current_table) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($tbl_url_query) . . T_STRING ( T_VARIABLE($drop_query) ) . . T_STRING ( T_VARIABLE($drop_message) ) . . T_VARIABLE($titles) [ ] . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForShowStats) ( T_VARIABLE($tbl_url_query) , T_VARIABLE($formatted_size) , T_VARIABLE($unit) , T_VARIABLE($overhead) ) { T_VARIABLE($html_output) = . . T_VARIABLE($tbl_url_query) . . . T_VARIABLE($formatted_size) . . . T_VARIABLE($unit) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($overhead) . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForStructureTimes) ( T_VARIABLE($create_time) , T_VARIABLE($update_time) , T_VARIABLE($check_time) ) { T_VARIABLE($html_output) = ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($create_time) ? T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($create_time) ) ) : ) . ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($update_time) ? T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($update_time) ) ) : ) . ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($check_time) ? T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($check_time) ) ) : ) . ; } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForNotNullEngineViewTable) ( T_VARIABLE($table_is_view) , T_VARIABLE($current_table) , T_VARIABLE($collation) , T_VARIABLE($is_show_stats) , T_VARIABLE($tbl_url_query) , T_VARIABLE($formatted_size) , T_VARIABLE($unit) , T_VARIABLE($overhead) , T_VARIABLE($create_time) , T_VARIABLE($update_time) , T_VARIABLE($check_time) ) { T_VARIABLE($html_output) = ; T_VARIABLE($row_count_pre) = ; T_VARIABLE($show_superscript) = ; T_IF ( T_VARIABLE($table_is_view) ) { T_IF ( T_VARIABLE($current_table) [ ] T_IS_GREATER_OR_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($current_table) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($row_count_pre) = ; T_VARIABLE($sum_row_count_pre) = ; T_VARIABLE($show_superscript) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( T_STRING ( ) , , ) ) ) ; } } T_ELSEIF ( T_VARIABLE($current_table) [ ] T_IS_EQUAL T_BOOLEAN_AND ( ! T_VARIABLE($current_table) [ ] ) ) { T_VARIABLE($row_count_pre) = ; T_VARIABLE($sum_row_count_pre) = ; T_VARIABLE($show_superscript) = ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($row_count_pre) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_table) [ ] , T_LNUMBER ) . T_VARIABLE($show_superscript) . ; T_IF ( ! ( T_VARIABLE($GLOBALS) [ ] [ ] > T_LNUMBER ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($table_is_view) ? T_STRING ( ) : T_VARIABLE($current_table) [ ] ) . ; T_IF ( T_STRING ( T_VARIABLE($collation) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($collation) . ; } } T_IF ( T_VARIABLE($is_show_stats) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($tbl_url_query) , T_VARIABLE($formatted_size) , T_VARIABLE($unit) , T_VARIABLE($overhead) ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($create_time) , T_VARIABLE($update_time) , T_VARIABLE($check_time) ) ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForViewTable) ( T_VARIABLE($is_show_stats) ) { T_VARIABLE($html_output) = . . T_STRING ( ) . . ; T_IF ( T_VARIABLE($is_show_stats) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . ; } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForRepairtable) ( T_VARIABLE($colspan_for_structure) , T_VARIABLE($db_is_information_schema) ) { T_RETURN . ( T_VARIABLE($colspan_for_structure) - ( T_VARIABLE($db_is_information_schema) ? T_LNUMBER : T_LNUMBER ) ) . . . T_STRING ( ) . ; } T_FUNCTION(PMA_TableHeader) ( T_VARIABLE($db_is_information_schema) = T_STRING , T_VARIABLE($replication) = T_STRING ) { T_VARIABLE($cnt) = T_LNUMBER ; T_IF ( T_VARIABLE($db_is_information_schema) ) { T_VARIABLE($action_colspan) = T_LNUMBER ; } T_ELSE { T_VARIABLE($action_colspan) = T_LNUMBER ; } T_VARIABLE($html_output) = . . . . . . . T_STRING ( T_STRING ( ) , ) . . ; T_IF ( T_VARIABLE($replication) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($action_colspan) . . . . T_STRING ( ) . . . . T_STRING ( T_STRING ( ) , , ) . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) ) ) . . . ; T_IF ( ! ( T_VARIABLE($GLOBALS) [ ] [ ] > T_LNUMBER ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( ) , ) . . ; T_VARIABLE($cnt) T_INC ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( ) , ) . . ; T_VARIABLE($cnt) T_INC ; } T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( ) , , ) . . . . T_STRING ( T_STRING ( ) , , ) . . ; T_VARIABLE($cnt) T_PLUS_EQUAL T_LNUMBER ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( ) , , ) . . ; T_VARIABLE($cnt) T_PLUS_EQUAL T_LNUMBER ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( ) , , ) . . ; T_VARIABLE($cnt) T_PLUS_EQUAL T_LNUMBER ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( ) , , ) . . ; T_VARIABLE($cnt) T_PLUS_EQUAL T_LNUMBER ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($cnt) + T_VARIABLE($action_colspan) + T_LNUMBER ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_sortableTableHeader) ( T_VARIABLE($title) , T_VARIABLE($sort) , T_VARIABLE($initial_sort_order) = ) { T_VARIABLE($requested_sort) = ; T_VARIABLE($requested_sort_order) = T_VARIABLE($future_sort_order) = T_VARIABLE($initial_sort_order) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($requested_sort) = T_VARIABLE($_REQUEST) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($requested_sort_order) = T_VARIABLE($_REQUEST) [ ] ; } } T_VARIABLE($order_img) = ; T_VARIABLE($order_link_params) = T_ARRAY ( ) ; T_VARIABLE($order_link_params) [ ] = T_STRING ( ) ; T_IF ( T_VARIABLE($requested_sort) T_IS_EQUAL T_VARIABLE($sort) ) { T_IF ( T_VARIABLE($requested_sort_order) T_IS_EQUAL ) { T_VARIABLE($future_sort_order) = ; T_VARIABLE($order_img) = . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; T_VARIABLE($order_img) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; T_VARIABLE($order_link_params) [ ] = ; T_VARIABLE($order_link_params) [ ] = ; } T_ELSE { T_VARIABLE($future_sort_order) = ; T_VARIABLE($order_img) = . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; T_VARIABLE($order_img) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; T_VARIABLE($order_link_params) [ ] = ; T_VARIABLE($order_link_params) [ ] = ; } } T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($_REQUEST) [ ] , ) ; T_VARIABLE($url) = . T_STRING ( T_VARIABLE($_url_params) ) ; T_VARIABLE($url) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($sort) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($future_sort_order) ; T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($url) , T_VARIABLE($title) . T_VARIABLE($order_img) , T_VARIABLE($order_link_params) ) ; } T_FUNCTION(PMA_getAliasAndTrueName) ( T_VARIABLE($tooltip_aliasname) , T_VARIABLE($current_table) , T_VARIABLE($tooltip_truename) ) { T_VARIABLE($alias) = ( ! T_EMPTY ( T_VARIABLE($tooltip_aliasname) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($tooltip_aliasname) [ T_VARIABLE($current_table) [ ] ] ) ) ? T_STRING ( , , T_STRING ( T_VARIABLE($tooltip_truename) [ T_VARIABLE($current_table) [ ] ] ) ) : T_STRING ( , , T_STRING ( T_VARIABLE($current_table) [ ] ) ) ; T_VARIABLE($truename) = ( ! T_EMPTY ( T_VARIABLE($tooltip_truename) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($tooltip_truename) [ T_VARIABLE($current_table) [ ] ] ) ) ? T_STRING ( , , T_STRING ( T_VARIABLE($tooltip_truename) [ T_VARIABLE($current_table) [ ] ] ) ) : T_STRING ( , , T_STRING ( T_VARIABLE($current_table) [ ] ) ) ; T_RETURN T_ARRAY ( T_VARIABLE($alias) , T_VARIABLE($truename) ) ; } T_FUNCTION(PMA_getServerSlaveStatus) ( T_VARIABLE($server_slave_status) , T_VARIABLE($truename) ) { T_VARIABLE($ignored) = T_STRING ; T_VARIABLE($do) = T_STRING ; T_INCLUDE_ONCE ; T_IF ( T_VARIABLE($server_slave_status) ) { T_IF ( ( T_STRING ( T_STRING ( T_VARIABLE($truename) , T_VARIABLE($server_slave_Do_Table) ) ) > T_LNUMBER ) T_BOOLEAN_OR ( T_STRING ( T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($server_slave_Do_DB) ) ) > T_LNUMBER ) T_BOOLEAN_OR ( T_STRING ( T_VARIABLE($server_slave_Do_DB) ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($server_slave_Ignore_DB) ) T_IS_EQUAL T_LNUMBER ) ) { T_VARIABLE($do) = T_STRING ; } T_FOREACH ( T_VARIABLE($server_slave_Wild_Do_Table) T_AS T_VARIABLE($db_table) ) { T_VARIABLE($table_part) = T_STRING ( T_VARIABLE($db_table) , ) ; T_IF ( ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ( T_VARIABLE($db_table) , ) ) T_BOOLEAN_AND ( T_STRING ( . T_STRING ( T_VARIABLE($table_part) , T_LNUMBER , T_STRING ( T_VARIABLE($table_part) ) - T_LNUMBER ) . , T_VARIABLE($truename) ) ) ) { T_VARIABLE($do) = T_STRING ; } } T_IF ( ( T_STRING ( T_STRING ( T_VARIABLE($truename) , T_VARIABLE($server_slave_Ignore_Table) ) ) > T_LNUMBER ) T_BOOLEAN_OR ( T_STRING ( T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($server_slave_Ignore_DB) ) ) > T_LNUMBER ) ) { T_VARIABLE($ignored) = T_STRING ; } T_FOREACH ( T_VARIABLE($server_slave_Wild_Ignore_Table) T_AS T_VARIABLE($db_table) ) { T_VARIABLE($table_part) = T_STRING ( T_VARIABLE($db_table) , ) ; T_IF ( ( T_VARIABLE($db) T_IS_EQUAL T_STRING ( T_VARIABLE($db_table) ) ) T_BOOLEAN_AND ( T_STRING ( . T_STRING ( T_VARIABLE($table_part) , T_LNUMBER , T_STRING ( T_VARIABLE($table_part) ) - T_LNUMBER ) . , T_VARIABLE($truename) ) ) ) { T_VARIABLE($ignored) = T_STRING ; } } } T_RETURN T_ARRAY ( T_VARIABLE($do) , T_VARIABLE($ignored) ) ; } T_FUNCTION(PMA_getStuffForEngineTypeTable) ( T_VARIABLE($current_table) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($is_show_stats) , T_VARIABLE($table_is_view) , T_VARIABLE($sum_size) , T_VARIABLE($overhead_size) ) { T_VARIABLE($formatted_size) = ; T_VARIABLE($unit) = ; T_VARIABLE($formatted_overhead) = ; T_VARIABLE($overhead_unit) = ; T_SWITCH ( T_VARIABLE($current_table) [ ] ) { T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_LIST ( T_VARIABLE($current_table) , T_VARIABLE($formatted_size) , T_VARIABLE($unit) , T_VARIABLE($formatted_overhead) , T_VARIABLE($overhead_unit) , T_VARIABLE($overhead_size) , T_VARIABLE($sum_size) ) = T_STRING ( T_VARIABLE($db_is_information_schema) , T_VARIABLE($current_table) , T_VARIABLE($is_show_stats) , T_VARIABLE($sum_size) , T_VARIABLE($overhead_size) , T_VARIABLE($formatted_size) , T_VARIABLE($unit) , T_VARIABLE($formatted_overhead) , T_VARIABLE($overhead_unit) ) ; T_BREAK ; T_CASE : T_CASE : T_LIST ( T_VARIABLE($current_table) , T_VARIABLE($formatted_size) , T_VARIABLE($unit) , T_VARIABLE($sum_size) ) = T_STRING ( T_VARIABLE($current_table) , T_VARIABLE($is_show_stats) , T_VARIABLE($sum_size) ) ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_CASE : T_IF ( T_VARIABLE($is_show_stats) ) { T_VARIABLE($formatted_size) = ; T_VARIABLE($unit) = ; } T_BREAK ; T_CASE T_STRING : T_CASE : T_CASE : T_IF ( T_VARIABLE($current_table) [ ] T_IS_EQUAL ) { T_VARIABLE($current_table) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($current_table) [ ] , T_VARIABLE($force_exact) = T_STRING , T_VARIABLE($is_view) = T_STRING ) ; T_VARIABLE($table_is_view) = T_STRING ; } T_BREAK ; T_DEFAULT : T_IF ( T_VARIABLE($is_show_stats) ) { T_VARIABLE($formatted_size) = T_STRING ( ) ; T_VARIABLE($unit) = ; } } T_RETURN T_ARRAY ( T_VARIABLE($current_table) , T_VARIABLE($formatted_size) , T_VARIABLE($unit) , T_VARIABLE($formatted_overhead) , T_VARIABLE($overhead_unit) , T_VARIABLE($overhead_size) , T_VARIABLE($table_is_view) , T_VARIABLE($sum_size) ) ; } T_FUNCTION(PMA_getValuesForAriaTable) ( T_VARIABLE($db_is_information_schema) , T_VARIABLE($current_table) , T_VARIABLE($is_show_stats) , T_VARIABLE($sum_size) , T_VARIABLE($overhead_size) , T_VARIABLE($formatted_size) , T_VARIABLE($unit) , T_VARIABLE($formatted_overhead) , T_VARIABLE($overhead_unit) ) { T_IF ( T_VARIABLE($db_is_information_schema) ) { T_VARIABLE($current_table) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($current_table) [ ] ) ; } T_IF ( T_VARIABLE($is_show_stats) ) { T_VARIABLE($tblsize) = T_STRING ( T_VARIABLE($current_table) [ ] ) + T_STRING ( T_VARIABLE($current_table) [ ] ) ; T_VARIABLE($sum_size) T_PLUS_EQUAL T_VARIABLE($tblsize) ; T_LIST ( T_VARIABLE($formatted_size) , T_VARIABLE($unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tblsize) , T_LNUMBER , ( T_VARIABLE($tblsize) > T_LNUMBER ) ? T_LNUMBER : T_LNUMBER ) ; T_IF ( T_ISSET ( T_VARIABLE($current_table) [ ] ) T_BOOLEAN_AND T_VARIABLE($current_table) [ ] > T_LNUMBER ) { T_LIST ( T_VARIABLE($formatted_overhead) , T_VARIABLE($overhead_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($current_table) [ ] , T_LNUMBER , ( ( T_VARIABLE($current_table) [ ] > T_LNUMBER ) ? T_LNUMBER : T_LNUMBER ) ) ; T_VARIABLE($overhead_size) T_PLUS_EQUAL T_VARIABLE($current_table) [ ] ; } } T_RETURN T_ARRAY ( T_VARIABLE($current_table) , T_VARIABLE($formatted_size) , T_VARIABLE($unit) , T_VARIABLE($formatted_overhead) , T_VARIABLE($overhead_unit) , T_VARIABLE($overhead_size) , T_VARIABLE($sum_size) ) ; } T_FUNCTION(PMA_getValuesForPbmsTable) ( T_VARIABLE($current_table) , T_VARIABLE($is_show_stats) , T_VARIABLE($sum_size) ) { T_IF ( ( T_VARIABLE($current_table) [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($current_table) [ ] < T_VARIABLE($GLOBALS) [ ] [ ] ) T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($current_table) [ ] ) ) { T_VARIABLE($current_table) [ ] = T_STRING ; T_VARIABLE($current_table) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($current_table) [ ] , T_VARIABLE($force_exact) = T_STRING , T_VARIABLE($is_view) = T_STRING ) ; } T_ELSE { T_VARIABLE($current_table) [ ] = T_STRING ; } T_IF ( T_VARIABLE($is_show_stats) T_BOOLEAN_AND T_VARIABLE($current_table) [ ] T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($tblsize) = T_VARIABLE($current_table) [ ] + T_VARIABLE($current_table) [ ] ; T_VARIABLE($sum_size) T_PLUS_EQUAL T_VARIABLE($tblsize) ; T_LIST ( T_VARIABLE($formatted_size) , T_VARIABLE($unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tblsize) , T_LNUMBER , ( ( T_VARIABLE($tblsize) > T_LNUMBER ) ? T_LNUMBER : T_LNUMBER ) ) ; } T_RETURN T_ARRAY ( T_VARIABLE($current_table) , T_VARIABLE($formatted_size) , T_VARIABLE($unit) , T_VARIABLE($sum_size) ) ; } T_FUNCTION(PMA_getHtmlForTableStructureHeader) ( T_VARIABLE($db_is_information_schema) , T_VARIABLE($tbl_is_view) ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . ; T_IF ( T_VARIABLE($db_is_information_schema) T_BOOLEAN_OR T_VARIABLE($tbl_is_view) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_ELSE { T_VARIABLE($colspan) = T_LNUMBER ; T_IF ( T_STRING ) { T_VARIABLE($colspan) T_MINUS_EQUAL T_LNUMBER ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($colspan) T_DEC ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($colspan) . . . T_STRING ( ) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlTableStructureRow) ( T_VARIABLE($row) , T_VARIABLE($rownum) , T_VARIABLE($displayed_field_name) , T_VARIABLE($type_nowrap) , T_VARIABLE($extracted_columnspec) , T_VARIABLE($type_mime) , T_VARIABLE($field_charset) , T_VARIABLE($attribute) , T_VARIABLE($tbl_is_view) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($url_query) , T_VARIABLE($field_encoded) , T_VARIABLE($titles) , T_VARIABLE($table) ) { T_VARIABLE($html_output) = . . . T_STRING ( T_VARIABLE($row) [ ] ) . . . T_VARIABLE($rownum) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($rownum) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($rownum) . . T_VARIABLE($displayed_field_name) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($type_nowrap) . . . T_VARIABLE($extracted_columnspec) [ ] . T_VARIABLE($type_mime) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_EMPTY ( T_VARIABLE($field_charset) ) ? : . T_STRING ( T_VARIABLE($field_charset) ) . . T_VARIABLE($field_charset) . ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($attribute) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( ( T_VARIABLE($row) [ ] T_IS_EQUAL ) ? T_STRING ( ) : T_STRING ( ) ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_IF ( T_VARIABLE($extracted_columnspec) [ ] T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($row) [ ] ; } } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( , ) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($row) [ ] ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($tbl_is_view) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($url_query) , T_VARIABLE($field_encoded) , T_VARIABLE($titles) , T_VARIABLE($table) , T_VARIABLE($row) ) ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForDropColumn) ( T_VARIABLE($tbl_is_view) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($url_query) , T_VARIABLE($field_encoded) , T_VARIABLE($titles) , T_VARIABLE($table) , T_VARIABLE($row) ) { T_VARIABLE($html_output) = ; T_IF ( ! T_VARIABLE($tbl_is_view) T_BOOLEAN_AND ! T_VARIABLE($db_is_information_schema) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_VARIABLE($url_query) . . T_VARIABLE($field_encoded) . . T_VARIABLE($titles) [ ] . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_VARIABLE($url_query) . . T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) . ) . . T_STRING ( T_VARIABLE($row) [ ] ) . . T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($row) [ ] ) ) ) . . T_VARIABLE($titles) [ ] . . ; } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForCheckAllTableColumn) ( T_VARIABLE($pmaThemeImage) , T_VARIABLE($text_dir) , T_VARIABLE($tbl_is_view) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($tbl_storage_engine) ) { T_VARIABLE($html_output) = . . T_VARIABLE($pmaThemeImage) . . T_VARIABLE($text_dir) . . . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , , T_STRING ( ) , , ) ; T_IF ( ! T_VARIABLE($tbl_is_view) T_BOOLEAN_AND ! T_VARIABLE($db_is_information_schema) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , , T_STRING ( ) , , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , , T_STRING ( ) , , ) ; T_IF ( T_IS_NOT_EQUAL T_VARIABLE($tbl_storage_engine) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , , T_STRING ( ) , , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , , T_STRING ( ) , , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , , T_STRING ( ) , , ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($tbl_storage_engine) ) T_BOOLEAN_AND T_VARIABLE($tbl_storage_engine) T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , , T_STRING ( ) , , ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($tbl_storage_engine) ) T_BOOLEAN_AND ( T_VARIABLE($tbl_storage_engine) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($tbl_storage_engine) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($tbl_storage_engine) T_IS_EQUAL ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , , T_STRING ( ) , , ) ; } } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlDivForMoveColumnsDialog) ( ) { T_VARIABLE($html_output) = . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) . . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForEditView) ( T_VARIABLE($url_params) ) { T_VARIABLE($create_view) = T_STRING ( T_VARIABLE($GLOBALS) [ ] , , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($create_view) = T_STRING ( , , T_VARIABLE($create_view) ) ; T_VARIABLE($html_output) = T_STRING T_DOUBLE_COLON T_STRING ( . T_STRING ( T_VARIABLE($url_params) + T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($create_view) , T_DOUBLE_ARROW , ) ) , T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) ) ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForOptionalActionLinks) ( T_VARIABLE($url_query) , T_VARIABLE($tbl_is_view) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($tbl_storage_engine) , T_VARIABLE($cfgRelation) ) { T_VARIABLE($html_output) = . T_VARIABLE($url_query) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) . ; T_IF ( ! T_VARIABLE($tbl_is_view) T_BOOLEAN_AND ! T_VARIABLE($db_is_information_schema) ) { T_IF ( T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_OR T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tbl_storage_engine) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($url_query) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) . ; } T_IF ( ! T_STRING ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($url_query) . . T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . ) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , ) . ; } T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($url_query) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) . ; } T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForAddColumn) ( T_VARIABLE($columns_list) ) { T_VARIABLE($html_output) = . . . . T_STRING ( , , T_STRING ( ) ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; } T_VARIABLE($num_fields) = . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_VARIABLE($num_fields) ) ; T_VARIABLE($column_selector) = . . ; T_FOREACH ( T_VARIABLE($columns_list) T_AS T_VARIABLE($one_column_name) ) { T_VARIABLE($column_selector) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($one_column_name) ) . . T_STRING ( T_VARIABLE($one_column_name) ) . ; } T_VARIABLE($column_selector) T_CONCAT_EQUAL ; T_VARIABLE($choices) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($choices) , , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($column_selector) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForSpaceUsageTableRow) ( T_VARIABLE($odd_row) , T_VARIABLE($name) , T_VARIABLE($value) , T_VARIABLE($unit) ) { T_VARIABLE($html_output) = . ( ( T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ) ? : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($name) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($value) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($unit) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForOptimizeLink) ( T_VARIABLE($url_query) ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($url_query) . . T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForRowStatsTableRow) ( T_VARIABLE($odd_row) , T_VARIABLE($name) , T_VARIABLE($value) ) { T_VARIABLE($html_output) = . ( ( T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ) ? : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($name) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($value) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(getHtmlForRowStatsTable) ( T_VARIABLE($showtable) , T_VARIABLE($tbl_collation) , T_VARIABLE($is_innodb) , T_VARIABLE($mergetable) , T_VARIABLE($avg_size) , T_VARIABLE($avg_unit) ) { T_VARIABLE($odd_row) = T_STRING ; T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) ) { T_IF ( T_VARIABLE($showtable) [ ] T_IS_EQUAL ) { T_VARIABLE($value) = T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($showtable) [ ] T_IS_EQUAL ) { T_VARIABLE($value) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($value) = T_VARIABLE($showtable) [ ] ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($odd_row) , T_STRING ( ) , T_VARIABLE($value) ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($showtable) [ ] ) ) { T_IF ( T_VARIABLE($showtable) [ ] T_IS_EQUAL ) { T_VARIABLE($value) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($value) = T_VARIABLE($showtable) [ ] ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($odd_row) , T_STRING ( ) , T_VARIABLE($value) ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($tbl_collation) ) ) { T_VARIABLE($value) = . T_STRING ( T_VARIABLE($tbl_collation) ) . . T_VARIABLE($tbl_collation) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($odd_row) , T_STRING ( ) , T_VARIABLE($value) ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_IF ( ! T_VARIABLE($is_innodb) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($showtable) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($odd_row) , T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] , T_LNUMBER ) ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_IF ( ! T_VARIABLE($is_innodb) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($showtable) [ ] ) T_BOOLEAN_AND T_VARIABLE($showtable) [ ] > T_LNUMBER ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($odd_row) , T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] , T_LNUMBER ) ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_IF ( ! T_VARIABLE($is_innodb) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($showtable) [ ] ) T_BOOLEAN_AND T_VARIABLE($showtable) [ ] > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($mergetable) T_IS_EQUAL T_STRING ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($odd_row) , T_STRING ( ) , ( T_VARIABLE($avg_size) . . T_VARIABLE($avg_unit) ) ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($odd_row) , T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] , T_LNUMBER ) ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($odd_row) , T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($showtable) [ ] ) ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($odd_row) , T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($showtable) [ ] ) ) ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($odd_row) , T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($showtable) [ ] ) ) ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForActionRowInStructureTable) ( T_VARIABLE($type) , T_VARIABLE($tbl_storage_engine) , T_VARIABLE($class) , T_VARIABLE($hasField) , T_VARIABLE($hasLinkClass) , T_VARIABLE($url_query) , T_VARIABLE($primary) , T_VARIABLE($syntax) , T_VARIABLE($message) , T_VARIABLE($action) , T_VARIABLE($titles) , T_VARIABLE($row) , T_VARIABLE($isPrimary) ) { T_VARIABLE($html_output) = . T_VARIABLE($class) . ; T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_OR T_IS_EQUAL T_VARIABLE($tbl_storage_engine) T_BOOLEAN_OR T_VARIABLE($hasField) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($titles) [ . T_VARIABLE($action) ] ; T_VARIABLE($action_enabled) = T_STRING ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($hasLinkClass) ? : ) . . T_VARIABLE($url_query) . . T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . ( T_VARIABLE($isPrimary) ? ( T_VARIABLE($primary) ? : ) : ) . . T_VARIABLE($syntax) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) . ) . . T_STRING ( T_STRING ( T_VARIABLE($message) , T_STRING ( T_VARIABLE($row) [ ] ) ) ) . . T_VARIABLE($titles) [ T_VARIABLE($action) ] . ; T_VARIABLE($action_enabled) = T_STRING ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_ARRAY ( T_VARIABLE($html_output) , T_VARIABLE($action_enabled) ) ; } T_FUNCTION(PMA_getHtmlForFullTextAction) ( T_VARIABLE($tbl_storage_engine) , T_VARIABLE($type) , T_VARIABLE($url_query) , T_VARIABLE($row) , T_VARIABLE($titles) ) { T_VARIABLE($html_output) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($tbl_storage_engine) ) T_BOOLEAN_AND ( T_VARIABLE($tbl_storage_engine) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($tbl_storage_engine) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($tbl_storage_engine) T_IS_EQUAL T_BOOLEAN_OR ( T_VARIABLE($tbl_storage_engine) T_IS_EQUAL T_BOOLEAN_AND T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER ) ) T_BOOLEAN_AND ( T_STRING ( . T_VARIABLE($type) , ) T_BOOLEAN_OR T_STRING ( . T_VARIABLE($type) , ) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($url_query) . . T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) . ) . . T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($row) [ ] ) ) ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($titles) [ ] . ; T_VARIABLE($fulltext_enabled) = T_STRING ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($titles) [ ] ; T_VARIABLE($fulltext_enabled) = T_STRING ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_ARRAY ( T_VARIABLE($html_output) , T_VARIABLE($fulltext_enabled) ) ; } T_FUNCTION(PMA_getHtmlForDistinctValueAction) ( T_VARIABLE($url_query) , T_VARIABLE($row) , T_VARIABLE($titles) ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($url_query) . . T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) ) . . T_VARIABLE($titles) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHtmlForActionsInTableStructure) ( T_VARIABLE($type) , T_VARIABLE($tbl_storage_engine) , T_VARIABLE($primary) , T_VARIABLE($field_name) , T_VARIABLE($url_query) , T_VARIABLE($titles) , T_VARIABLE($row) , T_VARIABLE($rownum) , T_VARIABLE($hidden_titles) , T_VARIABLE($columns_with_unique_index) ) { T_VARIABLE($html_output) = ; T_LIST ( T_VARIABLE($primary) , T_VARIABLE($primary_enabled) ) = T_STRING ( T_VARIABLE($type) , T_VARIABLE($tbl_storage_engine) , , ( T_VARIABLE($primary) T_BOOLEAN_AND T_VARIABLE($primary) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($field_name) ) ) , T_STRING , T_VARIABLE($url_query) , T_VARIABLE($primary) , , T_STRING ( ) , , T_VARIABLE($titles) , T_VARIABLE($row) , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($primary) ; T_LIST ( T_VARIABLE($unique) , T_VARIABLE($unique_enabled) ) = T_STRING ( T_VARIABLE($type) , T_VARIABLE($tbl_storage_engine) , , T_ISSET ( T_VARIABLE($columns_with_unique_index) [ T_VARIABLE($field_name) ] ) , T_STRING , T_VARIABLE($url_query) , T_VARIABLE($primary) , , T_STRING ( ) , , T_VARIABLE($titles) , T_VARIABLE($row) , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($unique) ; T_LIST ( T_VARIABLE($index) , T_VARIABLE($index_enabled) ) = T_STRING ( T_VARIABLE($type) , T_VARIABLE($tbl_storage_engine) , , T_STRING , T_STRING , T_VARIABLE($url_query) , T_VARIABLE($primary) , , T_STRING ( ) , , T_VARIABLE($titles) , T_VARIABLE($row) , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($index) ; T_IF ( ! T_STRING ) { T_VARIABLE($spatial_types) = T_ARRAY ( , , , , , , , ) ; T_LIST ( T_VARIABLE($spatial) , T_VARIABLE($spatial_enabled) ) = T_STRING ( T_VARIABLE($type) , T_VARIABLE($tbl_storage_engine) , , ( ! T_STRING ( T_VARIABLE($type) , T_VARIABLE($spatial_types) ) T_BOOLEAN_OR T_IS_NOT_EQUAL T_VARIABLE($tbl_storage_engine) ) , T_STRING , T_VARIABLE($url_query) , T_VARIABLE($primary) , , T_STRING ( ) , , T_VARIABLE($titles) , T_VARIABLE($row) , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($spatial) ; T_LIST ( T_VARIABLE($fulltext) , T_VARIABLE($fulltext_enabled) ) = T_STRING ( T_VARIABLE($tbl_storage_engine) , T_VARIABLE($type) , T_VARIABLE($url_query) , T_VARIABLE($row) , T_VARIABLE($titles) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($fulltext) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($url_query) , T_VARIABLE($row) , T_VARIABLE($titles) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_getHiddenTitlesArray) ( ) { T_VARIABLE($hidden_titles) = T_ARRAY ( ) ; T_VARIABLE($hidden_titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) ; T_VARIABLE($hidden_titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) ; T_VARIABLE($hidden_titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) ; T_VARIABLE($hidden_titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) ; T_VARIABLE($hidden_titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) ; T_VARIABLE($hidden_titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) ; T_VARIABLE($hidden_titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) ; T_VARIABLE($hidden_titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) ; T_VARIABLE($hidden_titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) ; T_VARIABLE($hidden_titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) ; T_VARIABLE($hidden_titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) ; T_RETURN T_VARIABLE($hidden_titles) ; } T_FUNCTION(PMA_getActionTitlesArray) ( ) { T_VARIABLE($titles) = T_ARRAY ( ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_RETURN T_VARIABLE($titles) ; } T_FUNCTION(PMA_getHtmlForDisplayTableStats) ( T_VARIABLE($showtable) , T_VARIABLE($table_info_num_rows) , T_VARIABLE($tbl_is_view) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($tbl_storage_engine) , T_VARIABLE($url_query) , T_VARIABLE($tbl_collation) ) { T_VARIABLE($html_output) = ; T_IF ( T_EMPTY ( T_VARIABLE($showtable) ) ) { T_VARIABLE($showtable) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] , T_STRING , T_STRING ) ; } T_VARIABLE($nonisam) = T_STRING ; T_VARIABLE($is_innodb) = ( T_ISSET ( T_VARIABLE($showtable) [ ] ) T_BOOLEAN_AND T_VARIABLE($showtable) [ ] T_IS_EQUAL ) ; T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($showtable) [ ] ) ) { T_VARIABLE($nonisam) = T_STRING ; } T_VARIABLE($mergetable) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($max_digits) = T_LNUMBER ; T_VARIABLE($decimals) = T_LNUMBER ; T_LIST ( T_VARIABLE($data_size) , T_VARIABLE($data_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] , T_VARIABLE($max_digits) , T_VARIABLE($decimals) ) ; T_IF ( T_VARIABLE($mergetable) T_IS_EQUAL T_STRING ) { T_LIST ( T_VARIABLE($index_size) , T_VARIABLE($index_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] , T_VARIABLE($max_digits) , T_VARIABLE($decimals) ) ; } T_IF ( ! T_VARIABLE($is_innodb) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($showtable) [ ] ) T_BOOLEAN_AND T_VARIABLE($showtable) [ ] > T_LNUMBER ) { T_LIST ( T_VARIABLE($free_size) , T_VARIABLE($free_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] , T_VARIABLE($max_digits) , T_VARIABLE($decimals) ) ; T_LIST ( T_VARIABLE($effect_size) , T_VARIABLE($effect_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] + T_VARIABLE($showtable) [ ] - T_VARIABLE($showtable) [ ] , T_VARIABLE($max_digits) , T_VARIABLE($decimals) ) ; } T_ELSE { T_LIST ( T_VARIABLE($effect_size) , T_VARIABLE($effect_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] + T_VARIABLE($showtable) [ ] , T_VARIABLE($max_digits) , T_VARIABLE($decimals) ) ; } T_LIST ( T_VARIABLE($tot_size) , T_VARIABLE($tot_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] + T_VARIABLE($showtable) [ ] , T_VARIABLE($max_digits) , T_VARIABLE($decimals) ) ; T_IF ( T_VARIABLE($table_info_num_rows) > T_LNUMBER ) { T_LIST ( T_VARIABLE($avg_size) , T_VARIABLE($avg_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( ( T_VARIABLE($showtable) [ ] + T_VARIABLE($showtable) [ ] ) / T_VARIABLE($showtable) [ ] , T_LNUMBER , T_LNUMBER ) ; } T_VARIABLE($odd_row) = T_STRING ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . ; T_IF ( ! T_VARIABLE($tbl_is_view) T_BOOLEAN_AND ! T_VARIABLE($db_is_information_schema) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($odd_row) , T_STRING ( ) , T_VARIABLE($data_size) , T_VARIABLE($data_unit) ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_IF ( T_ISSET ( T_VARIABLE($index_size) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($odd_row) , T_STRING ( ) , T_VARIABLE($index_size) , T_VARIABLE($index_unit) ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_IF ( T_ISSET ( T_VARIABLE($free_size) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($odd_row) , T_STRING ( ) , T_VARIABLE($free_size) , T_VARIABLE($free_unit) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($odd_row) , T_STRING ( ) , T_VARIABLE($effect_size) , T_VARIABLE($effect_unit) ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_IF ( T_ISSET ( T_VARIABLE($tot_size) ) T_BOOLEAN_AND T_VARIABLE($mergetable) T_IS_EQUAL T_STRING ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($odd_row) , T_STRING ( ) , T_VARIABLE($tot_size) , T_VARIABLE($tot_unit) ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_IF ( T_ISSET ( T_VARIABLE($free_size) ) T_BOOLEAN_AND ! T_STRING T_BOOLEAN_AND ( T_VARIABLE($tbl_storage_engine) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($tbl_storage_engine) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($tbl_storage_engine) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($tbl_storage_engine) T_IS_EQUAL ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($url_query) ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($showtable) , T_VARIABLE($tbl_collation) , T_VARIABLE($is_innodb) , T_VARIABLE($mergetable) , ( T_ISSET ( T_VARIABLE($avg_size) ) ? T_VARIABLE($avg_size) : ) , ( T_ISSET ( T_VARIABLE($avg_unit) ) ? T_VARIABLE($avg_unit) : ) ) ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_displayHtmlForColumnChange) ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($selected) , T_VARIABLE($action) ) { T_IF ( T_EMPTY ( T_VARIABLE($selected) ) ) { T_VARIABLE($selected) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($selected_cnt) = T_LNUMBER ; } T_ELSE { T_VARIABLE($selected_cnt) = T_STRING ( T_VARIABLE($selected) ) ; } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($selected_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($fields_meta) [ ] = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($selected) [ T_VARIABLE($i) ] , T_STRING ) ; } T_VARIABLE($num_fields) = T_STRING ( T_VARIABLE($fields_meta) ) ; T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($num_fields) ; T_VARIABLE($show_create_table) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($analyzed_sql) = T_STRING ( T_STRING ( T_VARIABLE($show_create_table) ) ) ; T_UNSET ( T_VARIABLE($show_create_table) ) ; T_INCLUDE ; } T_FUNCTION(PMA_updateColumns) ( T_VARIABLE($db) , T_VARIABLE($table) ) { T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($regenerate) = T_STRING ; T_VARIABLE($field_cnt) = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($key_fields) = T_ARRAY ( ) ; T_VARIABLE($changes) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($field_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($changes) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : , T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : T_STRING , T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : , T_VARIABLE($key_fields) , T_VARIABLE($i) , T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : ) ; } T_VARIABLE($key_query) = ; T_IF ( ! T_STRING ( T_VARIABLE($db) ) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . , , T_VARIABLE($err_url) ) ; } T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($sql_query) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($changes) ) . T_VARIABLE($key_query) ; T_VARIABLE($sql_query) T_CONCAT_EQUAL ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_VARIABLE($result) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($table) ) ; T_INCLUDE_ONCE ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_FOREACH ( T_VARIABLE($_REQUEST) [ ] T_AS T_VARIABLE($fieldindex) T_DOUBLE_ARROW T_VARIABLE($fieldcontent) ) { T_IF ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] T_IS_NOT_EQUAL T_VARIABLE($fieldcontent) ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($fieldcontent) , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] ) ; } } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] ) { T_FOREACH ( T_VARIABLE($_REQUEST) [ ] T_AS T_VARIABLE($fieldindex) T_DOUBLE_ARROW T_VARIABLE($mimetype) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] ) ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] , T_VARIABLE($mimetype) , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] ) ; } } } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) , T_VARIABLE($sql_query) , ) ) ; } T_ELSE { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) . . T_STRING ( ) ) ) ; T_VARIABLE($regenerate) = T_STRING ; } T_RETURN T_VARIABLE($regenerate) ; } T_FUNCTION(PMA_moveColumns) ( T_VARIABLE($db) , T_VARIABLE($table) ) { T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($columns) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($column_names) = T_STRING ( T_VARIABLE($columns) ) ; T_VARIABLE($changes) = T_ARRAY ( ) ; T_VARIABLE($we_dont_change_keys) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER , T_VARIABLE($l) = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($i) < T_VARIABLE($l) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($column) = T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ; T_IF ( T_VARIABLE($column_names) [ T_VARIABLE($i) ] T_IS_EQUAL T_VARIABLE($column) ) { T_CONTINUE ; } T_VARIABLE($data) = T_VARIABLE($columns) [ T_VARIABLE($column) ] ; T_VARIABLE($extracted_columnspec) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($data) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($data) [ ] ) T_BOOLEAN_AND T_VARIABLE($data) [ ] T_IS_EQUAL ) { T_VARIABLE($extracted_columnspec) [ ] = T_VARIABLE($data) [ ] ; T_UNSET ( T_VARIABLE($data) [ ] ) ; } T_VARIABLE($current_timestamp) = T_STRING ; T_IF ( T_VARIABLE($data) [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($data) [ ] T_IS_EQUAL ) { T_VARIABLE($current_timestamp) = T_STRING ; } T_VARIABLE($default_type) = T_VARIABLE($data) [ ] T_IS_IDENTICAL T_BOOLEAN_AND T_VARIABLE($data) [ ] T_IS_IDENTICAL T_STRING ? : ( T_VARIABLE($current_timestamp) ? : ( T_VARIABLE($data) [ ] T_IS_EQUAL ? : ) ) ; T_VARIABLE($changes) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) , T_VARIABLE($column) , T_STRING ( T_VARIABLE($extracted_columnspec) [ ] ) , T_VARIABLE($extracted_columnspec) [ ] , T_VARIABLE($extracted_columnspec) [ ] , T_ISSET ( T_VARIABLE($data) [ ] ) ? T_VARIABLE($data) [ ] : , T_VARIABLE($data) [ ] T_IS_IDENTICAL ? : , T_VARIABLE($default_type) , T_VARIABLE($current_timestamp) ? : T_VARIABLE($data) [ ] , T_ISSET ( T_VARIABLE($data) [ ] ) T_BOOLEAN_AND T_VARIABLE($data) [ ] T_IS_NOT_IDENTICAL ? T_VARIABLE($data) [ ] : T_STRING , T_ISSET ( T_VARIABLE($data) [ ] ) T_BOOLEAN_AND T_VARIABLE($data) [ ] T_IS_NOT_IDENTICAL ? T_VARIABLE($data) [ ] : T_STRING , T_VARIABLE($we_dont_change_keys) , T_VARIABLE($i) , T_VARIABLE($i) T_IS_IDENTICAL T_LNUMBER ? : T_VARIABLE($column_names) [ T_VARIABLE($i) - T_LNUMBER ] ) ; T_FOR ( T_VARIABLE($j) = T_LNUMBER , T_VARIABLE($ll) = T_STRING ( T_VARIABLE($column_names) ) ; T_VARIABLE($j) < T_VARIABLE($ll) ; T_VARIABLE($j) T_INC ) { T_IF ( T_VARIABLE($column_names) [ T_VARIABLE($j) ] T_IS_EQUAL T_VARIABLE($column) ) { T_UNSET ( T_VARIABLE($column_names) [ T_VARIABLE($j) ] ) ; } } T_STRING ( T_VARIABLE($column_names) , T_VARIABLE($i) , T_LNUMBER , T_VARIABLE($column) ) ; } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($changes) ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_EXIT ; } T_VARIABLE($move_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($move_query) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($changes) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($move_query) ) ; T_VARIABLE($tmp_error) = T_STRING ( ) ; T_IF ( T_VARIABLE($tmp_error) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tmp_error) ) ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($column_names) ) ; } T_EXIT ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING ( , . ) ; T_FUNCTION(PMA_getSysInfoOs) ( T_VARIABLE($php_os) = T_STRING ) { T_VARIABLE($unix_like) = T_ARRAY ( , ) ; T_IF ( T_STRING ( T_VARIABLE($php_os) , T_VARIABLE($unix_like) ) ) { T_VARIABLE($php_os) = ; } T_RETURN T_STRING ( T_VARIABLE($php_os) ) ; } T_FUNCTION(PMA_getSysInfo) ( ) { T_VARIABLE($php_os) = T_STRING ( ) ; T_VARIABLE($supported) = T_ARRAY ( , , ) ; T_VARIABLE($sysinfo) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($php_os) , T_VARIABLE($supported) ) ) { T_VARIABLE($ret) = T_EVAL ( . T_VARIABLE($php_os) . ) ; T_IF ( T_VARIABLE($ret) T_OBJECT_OPERATOR T_STRING ( ) ) { T_RETURN T_VARIABLE($ret) ; } } T_RETURN T_NEW T_STRING ; } T_STRING { T_PUBLIC T_VARIABLE($os) = T_STRING ; T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ; } } T_STRING T_EXTENDS T_STRING { T_PRIVATE T_VARIABLE($_wmi) ; T_PUBLIC T_VARIABLE($os) = ; T_PUBLIC T_STRING ( ) { T_IF ( ! T_STRING ( ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_ELSE { T_VARIABLE($objLocator) = T_NEW T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($objLocator) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_STRING ( ) { T_VARIABLE($loadavg) = ; T_VARIABLE($sum) = T_LNUMBER ; T_VARIABLE($buffer) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_ARRAY ( ) ) ; T_FOREACH ( T_VARIABLE($buffer) T_AS T_VARIABLE($load) ) { T_VARIABLE($value) = T_VARIABLE($load) [ ] ; T_VARIABLE($loadavg) T_CONCAT_EQUAL T_VARIABLE($value) . ; T_VARIABLE($sum) T_PLUS_EQUAL T_VARIABLE($value) ; } T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($sum) / T_STRING ( T_VARIABLE($buffer) ) ) ; } T_PUBLIC T_STRING ( ) { T_RETURN ! T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_PRIVATE T_STRING ( T_VARIABLE($strClass) , T_VARIABLE($strValue) = T_ARRAY ( ) ) { T_VARIABLE($arrData) = T_ARRAY ( ) ; T_VARIABLE($value) = ; T_VARIABLE($objWEBM) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($strClass) ) ; T_VARIABLE($arrProp) = T_VARIABLE($objWEBM) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($arrWEBMCol) = T_VARIABLE($objWEBM) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($arrWEBMCol) T_AS T_VARIABLE($objItem) ) { T_IF ( T_STRING ( T_VARIABLE($arrProp) ) ) { T_STRING ( T_VARIABLE($arrProp) ) ; } T_VARIABLE($arrInstance) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($arrProp) T_AS T_VARIABLE($propItem) ) { T_IF ( T_EMPTY ( T_VARIABLE($strValue) ) ) { T_EVAL ( . T_VARIABLE($propItem) T_OBJECT_OPERATOR T_STRING . ) ; T_VARIABLE($arrInstance) [ T_VARIABLE($propItem) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($value) ) ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($propItem) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($strValue) ) ) { T_EVAL ( . T_VARIABLE($propItem) T_OBJECT_OPERATOR T_STRING . ) ; T_VARIABLE($arrInstance) [ T_VARIABLE($propItem) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($value) ) ; } } } T_VARIABLE($arrData) [ ] = T_VARIABLE($arrInstance) ; } T_RETURN T_VARIABLE($arrData) ; } T_STRING ( ) { T_VARIABLE($buffer) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( , T_ARRAY ( , ) ) ; T_VARIABLE($mem) = T_ARRAY ( ) ; T_VARIABLE($mem) [ ] = T_VARIABLE($buffer) [ T_LNUMBER ] [ ] ; T_VARIABLE($mem) [ ] = T_VARIABLE($buffer) [ T_LNUMBER ] [ ] ; T_VARIABLE($mem) [ ] = T_VARIABLE($mem) [ ] - T_VARIABLE($mem) [ ] ; T_VARIABLE($buffer) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($mem) [ ] = T_LNUMBER ; T_VARIABLE($mem) [ ] = T_LNUMBER ; T_VARIABLE($mem) [ ] = T_LNUMBER ; T_FOREACH ( T_VARIABLE($buffer) T_AS T_VARIABLE($swapdevice) ) { T_VARIABLE($mem) [ ] T_PLUS_EQUAL T_VARIABLE($swapdevice) [ ] * T_LNUMBER ; T_VARIABLE($mem) [ ] T_PLUS_EQUAL T_VARIABLE($swapdevice) [ ] * T_LNUMBER ; T_VARIABLE($mem) [ ] T_PLUS_EQUAL T_VARIABLE($swapdevice) [ ] * T_LNUMBER ; } T_RETURN T_VARIABLE($mem) ; } } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_VARIABLE($os) = ; T_STRING ( ) { T_VARIABLE($buf) = T_STRING ( ) ; T_VARIABLE($nums) = T_STRING ( , T_STRING ( T_VARIABLE($buf) , T_LNUMBER , T_STRING ( T_VARIABLE($buf) , ) ) ) ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($nums) [ T_LNUMBER ] + T_VARIABLE($nums) [ T_LNUMBER ] + T_VARIABLE($nums) [ T_LNUMBER ] , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($nums) [ T_LNUMBER ] ) ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ( ) T_BOOLEAN_AND T_STRING ( ) ; } T_STRING ( ) { T_STRING ( T_STRING , T_STRING ( ) , T_VARIABLE($matches) ) ; T_VARIABLE($mem) = T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] , T_VARIABLE($matches) [ T_LNUMBER ] ) ; T_VARIABLE($mem) [ ] = T_VARIABLE($mem) [ ] - T_VARIABLE($mem) [ ] - T_VARIABLE($mem) [ ] - T_VARIABLE($mem) [ ] ; T_VARIABLE($mem) [ ] = T_VARIABLE($mem) [ ] - T_VARIABLE($mem) [ ] - T_VARIABLE($mem) [ ] ; T_FOREACH ( T_VARIABLE($mem) T_AS T_VARIABLE($idx) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($mem) [ T_VARIABLE($idx) ] = T_STRING ( T_VARIABLE($value) ) ; } T_RETURN T_VARIABLE($mem) ; } } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_VARIABLE($os) = ; T_PRIVATE T_STRING ( T_VARIABLE($key) ) { T_IF ( T_VARIABLE($m) = T_STRING ( . T_VARIABLE($key) ) ) { T_LIST ( T_VARIABLE($key) , T_VARIABLE($value) ) = T_STRING ( , T_STRING ( T_VARIABLE($m) ) , T_LNUMBER ) ; T_RETURN T_VARIABLE($value) ; } T_ELSE { T_RETURN ; } } T_PUBLIC T_STRING ( ) { T_VARIABLE($load1) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($load1) ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_STRING ( ) ; } T_PUBLIC T_STRING ( ) { T_STRING ( T_STRING , T_STRING ( ) , T_VARIABLE($matches) ) ; T_VARIABLE($pagesize) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($mem) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) * T_VARIABLE($pagesize) ; T_VARIABLE($mem) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) * T_VARIABLE($pagesize) ; T_VARIABLE($mem) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) * T_VARIABLE($pagesize) ; T_VARIABLE($mem) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) / T_LNUMBER ; T_VARIABLE($mem) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) / T_LNUMBER ; T_VARIABLE($mem) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) / T_LNUMBER ; T_RETURN T_VARIABLE($mem) ; } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_CONST T_STRING = ; T_CONST T_STRING = ; T_CONST T_STRING = ; T_STATIC T_VARIABLE($cache) = T_ARRAY ( ) ; T_VAR T_VARIABLE($name) = ; T_VAR T_VARIABLE($db_name) = ; T_VAR T_VARIABLE($engine) = ; T_VAR T_VARIABLE($type) = ; T_VAR T_VARIABLE($settings) = T_ARRAY ( ) ; T_VAR T_VARIABLE($uiprefs) ; T_VAR T_VARIABLE($errors) = T_ARRAY ( ) ; T_VAR T_VARIABLE($messages) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($table_name) , T_VARIABLE($db_name) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($table_name) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db_name) ) ; } T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_STRING ( ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( T_VARIABLE($table_name) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($table_name) ; } T_STRING ( T_VARIABLE($backquoted) = T_STRING ) { T_IF ( T_VARIABLE($backquoted) ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( T_VARIABLE($db_name) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($db_name) ; } T_STRING ( T_VARIABLE($backquoted) = T_STRING ) { T_IF ( T_VARIABLE($backquoted) ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( T_VARIABLE($backquoted) = T_STRING ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($backquoted) ) . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($backquoted) ) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($db) = T_STRING , T_VARIABLE($table) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($db) ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($table) ) ) { T_RETURN T_STRING ; } T_IF ( T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($db) ] [ T_VARIABLE($table) ] ) T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) { T_VARIABLE($type) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , ) ; T_RETURN T_VARIABLE($type) T_IS_EQUAL ; } T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ) ; T_RETURN T_VARIABLE($result) ? T_STRING : T_STRING ; } T_STRING ( T_VARIABLE($param) , T_VARIABLE($value) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($param) ] = T_VARIABLE($value) ; } T_STRING ( T_VARIABLE($param) ) { T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($param) ] ) ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($param) ] ; } T_RETURN T_STRING ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($db) = T_STRING , T_VARIABLE($table) = T_STRING ) { T_VARIABLE($engine) = T_STRING ; T_IF ( ! T_EMPTY ( T_VARIABLE($db) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($table) ) ) { T_VARIABLE($engine) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , , T_STRING , T_STRING ) ; } T_IF ( T_EMPTY ( T_VARIABLE($engine) ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ( T_STRING ( T_VARIABLE($engine) ) , T_ARRAY ( , ) ) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) . . T_STRING ( ) . ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($info) = T_STRING , T_VARIABLE($force_read) = T_STRING , T_VARIABLE($disable_error) = T_STRING ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($disable_error) = T_STRING ; } T_IF ( ! T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($db) ] [ T_VARIABLE($table) ] ) T_BOOLEAN_OR T_VARIABLE($force_read) ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_IF ( ! T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($db) ] [ T_VARIABLE($table) ] ) ) { T_RETURN ; } T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($info) ) { T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($db) ] [ T_VARIABLE($table) ] ; } T_IF ( ! T_STRING ( T_VARIABLE($info) , T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($db) ] [ T_VARIABLE($table) ] ) ) { T_IF ( ! T_VARIABLE($disable_error) ) { T_STRING ( T_STRING ( ) . T_VARIABLE($info) , T_STRING ) ; } T_RETURN T_STRING ; } T_RETURN T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($db) ] [ T_VARIABLE($table) ] [ T_VARIABLE($info) ] ; } T_STATIC T_STRING ( T_VARIABLE($name) , T_VARIABLE($type) , T_VARIABLE($index) , T_VARIABLE($length) = , T_VARIABLE($attribute) = , T_VARIABLE($collation) = , T_VARIABLE($null) = T_STRING , T_VARIABLE($default_type) = , T_VARIABLE($default_value) = , T_VARIABLE($extra) = , T_VARIABLE($comment) = , & T_VARIABLE($field_primary) = T_STRING , T_VARIABLE($move_to) = ) { T_VARIABLE($is_timestamp) = T_STRING ( T_STRING ( T_VARIABLE($type) ) , ) T_IS_NOT_IDENTICAL T_STRING ; T_VARIABLE($query) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name) ) . . T_VARIABLE($type) ; T_IF ( T_VARIABLE($length) T_IS_NOT_EQUAL T_BOOLEAN_AND ! T_STRING ( . , T_VARIABLE($type) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_VARIABLE($length) . ; } T_IF ( T_VARIABLE($attribute) T_IS_NOT_EQUAL ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_VARIABLE($attribute) ; } T_VARIABLE($matches) = T_STRING ( , T_VARIABLE($type) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($collation) ) T_BOOLEAN_AND T_VARIABLE($collation) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($matches) ) { T_VARIABLE($query) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($collation) ) ; } T_IF ( T_VARIABLE($null) T_IS_NOT_IDENTICAL T_STRING ) { T_IF ( T_VARIABLE($null) T_IS_EQUAL ) { T_VARIABLE($query) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($query) T_CONCAT_EQUAL ; } } T_SWITCH ( T_VARIABLE($default_type) ) { T_CASE : T_IF ( T_VARIABLE($is_timestamp) T_BOOLEAN_AND T_VARIABLE($default_value) T_IS_IDENTICAL ) { T_VARIABLE($query) T_CONCAT_EQUAL ; } T_ELSEIF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING ( , , T_VARIABLE($default_value) ) . ; } T_ELSEIF ( T_VARIABLE($type) T_IS_EQUAL ) { T_IF ( T_STRING ( , T_VARIABLE($default_value) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($default_value) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($default_value) ) . ; } } T_ELSE { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($default_value) ) . ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($null) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_VARIABLE($null) T_IS_NOT_EQUAL ) { T_BREAK ; } T_CASE : T_VARIABLE($query) T_CONCAT_EQUAL . T_VARIABLE($default_type) ; T_BREAK ; T_CASE : T_DEFAULT : T_BREAK ; } T_IF ( ! T_EMPTY ( T_VARIABLE($extra) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_VARIABLE($extra) ; T_IF ( T_VARIABLE($extra) T_IS_EQUAL ) { T_VARIABLE($primary_cnt) = T_STRING ( T_VARIABLE($field_primary) ) ; T_IF ( T_LNUMBER T_IS_EQUAL T_VARIABLE($primary_cnt) ) { T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($primary_cnt) ; T_VARIABLE($j) T_INC ) { T_IF ( T_VARIABLE($field_primary) [ T_VARIABLE($j) ] T_IS_EQUAL T_VARIABLE($index) ) { T_BREAK ; } } T_IF ( T_ISSET ( T_VARIABLE($field_primary) [ T_VARIABLE($j) ] ) T_BOOLEAN_AND T_VARIABLE($field_primary) [ T_VARIABLE($j) ] T_IS_EQUAL T_VARIABLE($index) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_UNSET ( T_VARIABLE($field_primary) [ T_VARIABLE($j) ] ) ; } } T_ELSE { T_VARIABLE($found_in_pk) = T_STRING ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($primary_cnt) ; T_VARIABLE($j) T_INC ) { T_IF ( T_VARIABLE($field_primary) [ T_VARIABLE($j) ] T_IS_EQUAL T_VARIABLE($index) ) { T_VARIABLE($found_in_pk) = T_STRING ; T_BREAK ; } } T_IF ( ! T_VARIABLE($found_in_pk) ) { T_VARIABLE($field_primary) [ ] = T_VARIABLE($index) ; } } } } T_IF ( ! T_EMPTY ( T_VARIABLE($comment) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($comment) ) . ; } T_IF ( T_VARIABLE($move_to) T_IS_EQUAL ) { T_VARIABLE($query) T_CONCAT_EQUAL ; } T_ELSEIF ( T_VARIABLE($move_to) T_IS_NOT_EQUAL ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($move_to) ) ; } T_RETURN T_VARIABLE($query) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($force_exact) = T_STRING , T_VARIABLE($is_view) = T_STRING ) { T_IF ( T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($db) ] [ T_VARIABLE($table) ] [ ] ) ) { T_VARIABLE($row_count) = T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($db) ] [ T_VARIABLE($table) ] [ ] ; } T_ELSE { T_VARIABLE($row_count) = T_STRING ; T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($is_view) ) { T_VARIABLE($is_view) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_IF ( ! T_VARIABLE($force_exact) ) { T_IF ( ! T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($db) ] [ T_VARIABLE($table) ] [ ] ) T_BOOLEAN_AND ! T_VARIABLE($is_view) ) { T_VARIABLE($tmp_tables) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_ISSET ( T_VARIABLE($tmp_tables) [ T_VARIABLE($table) ] ) ) { T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($db) ] [ T_VARIABLE($table) ] = T_VARIABLE($tmp_tables) [ T_VARIABLE($table) ] ; } } T_IF ( T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($db) ] [ T_VARIABLE($table) ] [ ] ) ) { T_VARIABLE($row_count) = T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($db) ] [ T_VARIABLE($table) ] [ ] ; } T_ELSE { T_VARIABLE($row_count) = T_STRING ; } } T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($row_count) T_BOOLEAN_OR T_VARIABLE($row_count) < T_VARIABLE($GLOBALS) [ ] [ ] ) { T_IF ( ! T_VARIABLE($is_view) T_BOOLEAN_OR ( T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($db) ) ) ) { T_VARIABLE($row_count) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ) ; } T_ELSE { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($row_count) = T_LNUMBER ; } T_ELSE { T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_VARIABLE($GLOBALS) [ ] [ ] , T_STRING , T_STRING ) ; T_IF ( ! T_STRING ( ) ) { T_VARIABLE($row_count) = T_STRING ( T_VARIABLE($result) ) ; T_STRING ( T_VARIABLE($result) ) ; } } } T_IF ( T_VARIABLE($row_count) ) { T_STRING T_DOUBLE_COLON T_VARIABLE($cache) [ T_VARIABLE($db) ] [ T_VARIABLE($table) ] [ ] = T_VARIABLE($row_count) ; } } } T_RETURN T_VARIABLE($row_count) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($oldcol) , T_VARIABLE($newcol) , T_VARIABLE($type) , T_VARIABLE($length) , T_VARIABLE($attribute) , T_VARIABLE($collation) , T_VARIABLE($null) , T_VARIABLE($default_type) , T_VARIABLE($default_value) , T_VARIABLE($extra) , T_VARIABLE($comment) , & T_VARIABLE($field_primary) , T_VARIABLE($index) , T_VARIABLE($move_to) ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($oldcol) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($newcol) , T_VARIABLE($type) , T_VARIABLE($index) , T_VARIABLE($length) , T_VARIABLE($attribute) , T_VARIABLE($collation) , T_VARIABLE($null) , T_VARIABLE($default_type) , T_VARIABLE($default_value) , T_VARIABLE($extra) , T_VARIABLE($comment) , T_VARIABLE($field_primary) , T_VARIABLE($move_to) ) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($work) , T_VARIABLE($pma_table) , T_VARIABLE($get_fields) , T_VARIABLE($where_fields) , T_VARIABLE($new_fields) ) { T_VARIABLE($last_id) = - T_LNUMBER ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($work) ] ) { T_VARIABLE($select_parts) = T_ARRAY ( ) ; T_VARIABLE($row_fields) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($get_fields) T_AS T_VARIABLE($get_field) ) { T_VARIABLE($select_parts) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($get_field) ) ; T_VARIABLE($row_fields) [ T_VARIABLE($get_field) ] = ; } T_VARIABLE($where_parts) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($where_fields) T_AS T_VARIABLE($_where) T_DOUBLE_ARROW T_VARIABLE($_value) ) { T_VARIABLE($where_parts) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_where) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_value) ) . ; } T_VARIABLE($new_parts) = T_ARRAY ( ) ; T_VARIABLE($new_value_parts) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($new_fields) T_AS T_VARIABLE($_where) T_DOUBLE_ARROW T_VARIABLE($_value) ) { T_VARIABLE($new_parts) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_where) ) ; T_VARIABLE($new_value_parts) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_value) ) ; } T_VARIABLE($table_copy_query) = . T_STRING ( , T_VARIABLE($select_parts) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($pma_table) ] ) . . T_STRING ( , T_VARIABLE($where_parts) ) ; T_VARIABLE($table_copy_rs) = T_STRING ( T_VARIABLE($table_copy_query) , T_STRING , T_STRING ) ; T_WHILE ( T_VARIABLE($table_copy_row) = @ T_STRING ( T_VARIABLE($table_copy_rs) ) ) { T_VARIABLE($value_parts) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($table_copy_row) T_AS T_VARIABLE($_key) T_DOUBLE_ARROW T_VARIABLE($_val) ) { T_IF ( T_ISSET ( T_VARIABLE($row_fields) [ T_VARIABLE($_key) ] ) T_BOOLEAN_AND T_VARIABLE($row_fields) [ T_VARIABLE($_key) ] T_IS_EQUAL ) { T_VARIABLE($value_parts) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_val) ) ; } } T_VARIABLE($new_table_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ T_VARIABLE($pma_table) ] ) . . T_STRING ( , T_VARIABLE($select_parts) ) . . T_STRING ( , T_VARIABLE($new_parts) ) . . T_STRING ( , T_VARIABLE($value_parts) ) . . T_STRING ( , T_VARIABLE($new_value_parts) ) . ; T_STRING ( T_VARIABLE($new_table_query) ) ; T_VARIABLE($last_id) = T_STRING ( ) ; } T_STRING ( T_VARIABLE($table_copy_rs) ) ; T_RETURN T_VARIABLE($last_id) ; } T_RETURN T_STRING ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($source_db) , T_VARIABLE($source_table) , T_VARIABLE($target_db) , T_VARIABLE($target_table) , T_VARIABLE($what) , T_VARIABLE($move) , T_VARIABLE($mode) ) { T_GLOBAL T_VARIABLE($err_url) ; T_IF ( T_VARIABLE($move) T_BOOLEAN_AND T_VARIABLE($what) T_IS_EQUAL ) { T_VARIABLE($tbl) = T_NEW T_STRING ( T_VARIABLE($source_table) , T_VARIABLE($source_db) ) ; T_VARIABLE($result) = T_VARIABLE($tbl) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($target_table) , T_VARIABLE($target_db) ) ; T_IF ( T_VARIABLE($result) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($tbl) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_STRING ; } } T_VARIABLE($GLOBALS) [ ] = T_LNUMBER ; T_VARIABLE($GLOBALS) [ ] = T_LNUMBER ; T_IF ( ! T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($source_db) , T_VARIABLE($target_db) ) ) { T_IF ( ! T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($source_db) ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($source_db) ) ) ) ; } T_IF ( ! T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($target_db) ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($target_db) ) ) ) ; } T_RETURN T_STRING ; } T_VARIABLE($source) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($source_db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($source_table) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($target_db) ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($target_db) ) ) { T_VARIABLE($target_db) = T_VARIABLE($source_db) ; } T_STRING ( T_VARIABLE($target_db) ) ; T_VARIABLE($target) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($target_db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($target_table) ) ; T_IF ( T_VARIABLE($what) T_IS_NOT_EQUAL ) { T_INCLUDE_ONCE ; T_VARIABLE($export_sql_plugin) = T_STRING ( , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($single_table) ) ) ) ; T_VARIABLE($no_constraints_comments) = T_STRING ; T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($sql_structure) = T_VARIABLE($export_sql_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($source_db) , T_VARIABLE($source_table) , , T_VARIABLE($err_url) , T_STRING , T_STRING ) ; T_UNSET ( T_VARIABLE($no_constraints_comments) ) ; T_VARIABLE($parsed_sql) = T_STRING ( T_VARIABLE($sql_structure) ) ; T_VARIABLE($analyzed_sql) = T_STRING ( T_VARIABLE($parsed_sql) ) ; T_VARIABLE($i) = T_LNUMBER ; T_IF ( T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($target_for_view) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($target_db) ) ; T_WHILE ( T_STRING ) { T_IF ( T_VARIABLE($parsed_sql) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($parsed_sql) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL ) { T_BREAK ; } T_VARIABLE($i) T_INC ; } } T_UNSET ( T_VARIABLE($analyzed_sql) ) ; T_IF ( T_STRING ) { T_VARIABLE($table_delimiter) = ; } T_ELSE { T_VARIABLE($server_sql_mode) = T_STRING ( , T_LNUMBER , T_LNUMBER ) ; T_IF ( T_STRING T_IS_NOT_IDENTICAL T_STRING ( T_VARIABLE($server_sql_mode) , ) ) { T_VARIABLE($table_delimiter) = ; } T_ELSE { T_VARIABLE($table_delimiter) = ; } T_UNSET ( T_VARIABLE($server_sql_mode) ) ; } T_WHILE ( T_VARIABLE($parsed_sql) [ T_VARIABLE($i) ] [ ] T_IS_NOT_EQUAL T_VARIABLE($table_delimiter) ) { T_VARIABLE($i) T_INC ; } T_IF ( T_ISSET ( T_VARIABLE($target_for_view) ) ) { T_VARIABLE($parsed_sql) [ T_VARIABLE($i) ] [ ] = T_VARIABLE($target_for_view) ; T_VARIABLE($last) = T_VARIABLE($parsed_sql) [ ] - T_LNUMBER ; T_VARIABLE($backquoted_source_db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($source_db) ) ; T_FOR ( T_INC T_VARIABLE($i) ; T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($last) ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($parsed_sql) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_VARIABLE($table_delimiter) T_BOOLEAN_AND T_VARIABLE($parsed_sql) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_VARIABLE($backquoted_source_db) T_BOOLEAN_AND T_VARIABLE($parsed_sql) [ T_VARIABLE($i) - T_LNUMBER ] [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($parsed_sql) [ T_VARIABLE($i) ] [ ] = T_VARIABLE($target_for_view) ; } } T_UNSET ( T_VARIABLE($last) , T_VARIABLE($backquoted_source_db) ) ; } T_ELSE { T_VARIABLE($parsed_sql) [ T_VARIABLE($i) ] [ ] = T_VARIABLE($target) ; } T_VARIABLE($sql_structure) = T_STRING ( T_VARIABLE($parsed_sql) , ) ; T_VARIABLE($drop_query) = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($target_db) , T_VARIABLE($target_table) ) ) { T_VARIABLE($drop_query) = ; } T_ELSE { T_VARIABLE($drop_query) = ; } T_VARIABLE($drop_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($target_db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($target_table) ) ; T_STRING ( T_VARIABLE($drop_query) ) ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . T_VARIABLE($drop_query) . ; T_VARIABLE($maintain_relations) = T_STRING ; } @ T_STRING ( T_VARIABLE($sql_structure) ) ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . T_VARIABLE($sql_structure) . ; T_IF ( ( T_VARIABLE($move) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($parsed_sql) = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($i) = T_LNUMBER ; T_WHILE ( T_VARIABLE($parsed_sql) [ T_VARIABLE($i) ] [ ] T_IS_NOT_EQUAL T_VARIABLE($table_delimiter) ) { T_VARIABLE($i) T_INC ; } T_VARIABLE($parsed_sql) [ T_VARIABLE($i) ] [ ] = T_VARIABLE($target) ; T_VARIABLE($cnt) = T_VARIABLE($parsed_sql) [ ] - T_LNUMBER ; T_FOR ( T_VARIABLE($j) = T_VARIABLE($i) ; T_VARIABLE($j) < T_VARIABLE($cnt) ; T_VARIABLE($j) T_INC ) { T_IF ( T_VARIABLE($parsed_sql) [ T_VARIABLE($j) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($parsed_sql) [ T_VARIABLE($j) ] [ ] ) T_IS_EQUAL ) { T_IF ( T_VARIABLE($parsed_sql) [ T_VARIABLE($j) + T_LNUMBER ] [ ] T_IS_EQUAL T_VARIABLE($table_delimiter) ) { T_VARIABLE($parsed_sql) [ T_VARIABLE($j) + T_LNUMBER ] [ ] = ; } } } T_VARIABLE($GLOBALS) [ ] = T_STRING ( T_VARIABLE($parsed_sql) , ) ; T_IF ( T_VARIABLE($mode) T_IS_EQUAL ) { T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; } T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . T_VARIABLE($GLOBALS) [ ] ; T_IF ( T_VARIABLE($mode) T_IS_EQUAL ) { T_UNSET ( T_VARIABLE($GLOBALS) [ ] ) ; } } } T_ELSE { T_VARIABLE($GLOBALS) [ ] = ; } T_IF ( ( T_VARIABLE($what) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($what) T_IS_EQUAL ) T_BOOLEAN_AND ! T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($target_db) , T_VARIABLE($target_table) ) ) { T_VARIABLE($sql_set_mode) = ; T_STRING ( T_VARIABLE($sql_set_mode) ) ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . T_VARIABLE($sql_set_mode) . ; T_VARIABLE($sql_insert_data) = . T_VARIABLE($target) . . T_VARIABLE($source) ; T_STRING ( T_VARIABLE($sql_insert_data) ) ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . T_VARIABLE($sql_insert_data) . ; } T_VARIABLE($GLOBALS) [ ] = T_STRING ( ) ; T_IF ( T_VARIABLE($move) ) { T_STRING ( T_VARIABLE($source_db) ) ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($source_db) , T_VARIABLE($source_table) ) ) { T_VARIABLE($sql_drop_query) = ; } T_ELSE { T_VARIABLE($sql_drop_query) = ; } T_VARIABLE($sql_drop_query) T_CONCAT_EQUAL . T_VARIABLE($source) ; T_STRING ( T_VARIABLE($sql_drop_query) ) ; T_STRING ( T_VARIABLE($source_db) , T_VARIABLE($target_db) , T_VARIABLE($source_table) , T_VARIABLE($target_table) ) ; T_VARIABLE($GLOBALS) [ ] T_CONCAT_EQUAL . T_VARIABLE($sql_drop_query) . ; } T_ELSE { T_IF ( T_VARIABLE($what) T_IS_NOT_EQUAL T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($maintain_relations) ) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($comments_copy_query) = . ( T_VARIABLE($GLOBALS) [ ] [ ] ? : ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($source_db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($source_table) ) . ; T_VARIABLE($comments_copy_rs) = T_STRING ( T_VARIABLE($comments_copy_query) ) ; T_WHILE ( T_VARIABLE($comments_copy_row) = T_STRING ( T_VARIABLE($comments_copy_rs) ) ) { T_VARIABLE($new_comment_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . ( T_VARIABLE($GLOBALS) [ ] [ ] ? : ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($target_db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($target_table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($comments_copy_row) [ ] ) . . ( T_VARIABLE($GLOBALS) [ ] [ ] ? . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($comments_copy_row) [ ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($comments_copy_row) [ ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($comments_copy_row) [ ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($comments_copy_row) [ ] ) . : ) . ; T_STRING ( T_VARIABLE($new_comment_query) ) ; } T_STRING ( T_VARIABLE($comments_copy_rs) ) ; T_UNSET ( T_VARIABLE($comments_copy_rs) ) ; } T_VARIABLE($get_fields) = T_ARRAY ( ) ; T_VARIABLE($where_fields) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($source_db) , T_DOUBLE_ARROW T_VARIABLE($source_table) ) ; T_VARIABLE($new_fields) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($target_db) , T_DOUBLE_ARROW T_VARIABLE($target_table) ) ; T_STRING T_DOUBLE_COLON T_STRING ( , , T_VARIABLE($get_fields) , T_VARIABLE($where_fields) , T_VARIABLE($new_fields) ) ; T_VARIABLE($get_fields) = T_ARRAY ( , , ) ; T_VARIABLE($where_fields) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($source_db) , T_DOUBLE_ARROW T_VARIABLE($source_table) ) ; T_VARIABLE($new_fields) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($target_db) , T_DOUBLE_ARROW T_VARIABLE($target_db) , T_DOUBLE_ARROW T_VARIABLE($target_table) ) ; T_STRING T_DOUBLE_COLON T_STRING ( , , T_VARIABLE($get_fields) , T_VARIABLE($where_fields) , T_VARIABLE($new_fields) ) ; T_VARIABLE($get_fields) = T_ARRAY ( , , ) ; T_VARIABLE($where_fields) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($source_db) , T_DOUBLE_ARROW T_VARIABLE($source_table) ) ; T_VARIABLE($new_fields) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($target_db) , T_DOUBLE_ARROW T_VARIABLE($target_db) , T_DOUBLE_ARROW T_VARIABLE($target_table) ) ; T_STRING T_DOUBLE_COLON T_STRING ( , , T_VARIABLE($get_fields) , T_VARIABLE($where_fields) , T_VARIABLE($new_fields) ) ; T_VARIABLE($get_fields) = T_ARRAY ( , , , ) ; T_VARIABLE($where_fields) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($source_db) , T_DOUBLE_ARROW T_VARIABLE($source_table) ) ; T_VARIABLE($new_fields) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($target_db) , T_DOUBLE_ARROW T_VARIABLE($target_table) ) ; T_STRING T_DOUBLE_COLON T_STRING ( , , T_VARIABLE($get_fields) , T_VARIABLE($where_fields) , T_VARIABLE($new_fields) ) ; } } T_RETURN T_STRING ; } T_STATIC T_STRING ( T_VARIABLE($table_name) ) { T_IF ( T_VARIABLE($table_name) T_IS_NOT_IDENTICAL T_STRING ( T_VARIABLE($table_name) ) ) { T_RETURN T_STRING ; } T_IF ( ! T_STRING ( T_VARIABLE($table_name) ) ) { T_RETURN T_STRING ; } T_IF ( T_STRING ( , T_VARIABLE($table_name) ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_STRING ( T_VARIABLE($new_name) , T_VARIABLE($new_db) = T_STRING ) { T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($new_db) T_BOOLEAN_AND T_VARIABLE($new_db) T_IS_NOT_IDENTICAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) { T_IF ( ! T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_db) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( ) . . T_VARIABLE($new_db) ; T_RETURN T_STRING ; } } T_ELSE { T_VARIABLE($new_db) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($new_table) = T_NEW T_STRING ( T_VARIABLE($new_name) , T_VARIABLE($new_db) ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_IDENTICAL T_VARIABLE($new_table) T_OBJECT_OPERATOR T_STRING ( ) ) { T_RETURN T_STRING ; } T_IF ( ! T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($new_name) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( ) . . T_VARIABLE($new_table) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_STRING ; } T_VARIABLE($triggers) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; T_VARIABLE($handle_triggers) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL T_VARIABLE($new_db) T_BOOLEAN_AND T_VARIABLE($triggers) ; T_IF ( T_VARIABLE($handle_triggers) ) { T_FOREACH ( T_VARIABLE($triggers) T_AS T_VARIABLE($trigger) ) { T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($trigger) [ ] ) . ; T_STRING ( T_VARIABLE($sql) ) ; } } T_VARIABLE($GLOBALS) [ ] = . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) . . T_VARIABLE($new_table) T_OBJECT_OPERATOR T_STRING ( T_STRING ) . ; T_IF ( ! T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_IF ( T_VARIABLE($handle_triggers) ) { T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_FOREACH ( T_VARIABLE($triggers) T_AS T_VARIABLE($trigger) ) { T_STRING ( T_VARIABLE($trigger) [ ] ) ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($new_table) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_RETURN T_STRING ; } T_VARIABLE($old_name) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($old_db) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_name) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new_db) ) ; T_STRING ( T_VARIABLE($old_db) , T_VARIABLE($new_db) , T_VARIABLE($old_name) , T_VARIABLE($new_name) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($old_name) ) , T_STRING ( T_VARIABLE($new_name) ) ) ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($backquoted) = T_STRING ) { T_VARIABLE($sql) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; T_VARIABLE($uniques) = T_STRING ( T_VARIABLE($sql) , T_ARRAY ( , T_STRING ) , ) ; T_VARIABLE($return) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($uniques) T_AS T_VARIABLE($index) ) { T_IF ( T_STRING ( T_VARIABLE($index) ) > T_LNUMBER ) { T_CONTINUE ; } T_VARIABLE($return) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($backquoted) ) . . ( T_VARIABLE($backquoted) ? T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($index) [ T_LNUMBER ] ) : T_VARIABLE($index) [ T_LNUMBER ] ) ; } T_RETURN T_VARIABLE($return) ; } T_PUBLIC T_STRING ( T_VARIABLE($backquoted) = T_STRING ) { T_VARIABLE($sql) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , ) ; T_VARIABLE($indexed) = T_STRING ( T_VARIABLE($sql) , , ) ; T_VARIABLE($return) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($indexed) T_AS T_VARIABLE($column) ) { T_VARIABLE($return) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($backquoted) ) . . ( T_VARIABLE($backquoted) ? T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) ) : T_VARIABLE($column) ) ; } T_RETURN T_VARIABLE($return) ; } T_PUBLIC T_STRING ( T_VARIABLE($backquoted) = T_STRING ) { T_VARIABLE($sql) = . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($indexed) = T_STRING ( T_VARIABLE($sql) , , ) ; T_VARIABLE($return) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($indexed) T_AS T_VARIABLE($column) ) { T_VARIABLE($return) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($backquoted) ) . . ( T_VARIABLE($backquoted) ? T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) ) : T_VARIABLE($column) ) ; } T_RETURN T_VARIABLE($return) ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($pma_table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; T_VARIABLE($sql_query) = . T_VARIABLE($pma_table) . . T_VARIABLE($GLOBALS) [ ] [ ] [ ] . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . ; T_VARIABLE($row) = T_STRING ( T_STRING ( T_VARIABLE($sql_query) ) ) ; T_IF ( T_ISSET ( T_VARIABLE($row) [ T_LNUMBER ] ) ) { T_RETURN T_STRING ( T_VARIABLE($row) [ T_LNUMBER ] , T_STRING ) ; } T_ELSE { T_RETURN T_ARRAY ( ) ; } } T_PROTECTED T_STRING ( ) { T_VARIABLE($pma_table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; T_VARIABLE($username) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_VARIABLE($sql_query) = . T_VARIABLE($pma_table) . . T_VARIABLE($username) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) . ; T_VARIABLE($success) = T_STRING ( T_VARIABLE($sql_query) , T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( ! T_VARIABLE($success) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) ) ; T_RETURN T_VARIABLE($message) ; } T_VARIABLE($sql_query) = . T_VARIABLE($pma_table) ; T_VARIABLE($rows_count) = T_STRING ( T_VARIABLE($sql_query) ) ; T_VARIABLE($max_rows) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_IF ( T_VARIABLE($rows_count) > T_VARIABLE($max_rows) ) { T_VARIABLE($num_rows_to_delete) = T_VARIABLE($rows_count) - T_VARIABLE($max_rows) ; T_VARIABLE($sql_query) = . T_VARIABLE($pma_table) . . . T_VARIABLE($num_rows_to_delete) ; T_VARIABLE($success) = T_STRING ( T_VARIABLE($sql_query) , T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( ! T_VARIABLE($success) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( , ) ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) ) ; T_STRING ( T_VARIABLE($message) ) ; T_RETURN T_VARIABLE($message) ; } } T_RETURN T_STRING ; } T_PROTECTED T_STRING ( ) { T_VARIABLE($server_id) = T_VARIABLE($GLOBALS) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($server_id) ] [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($server_id) ] [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] = ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) ? T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) : T_ARRAY ( ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = & T_VARIABLE($_SESSION) [ ] [ ] [ T_VARIABLE($server_id) ] [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ] ; } T_PUBLIC T_STRING ( T_VARIABLE($property) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_VARIABLE($property) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($property) ] ) ) { T_VARIABLE($tmp) = T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($property) ] ) ; T_VARIABLE($colname) = T_VARIABLE($tmp) [ T_LNUMBER ] ; T_VARIABLE($avail_columns) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($avail_columns) T_AS T_VARIABLE($each_col) ) { T_IF ( T_STRING ( T_VARIABLE($each_col) , T_VARIABLE($colname) , T_STRING ( T_VARIABLE($each_col) ) - T_STRING ( T_VARIABLE($colname) ) ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($property) ] ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ) ; T_RETURN T_STRING ; } T_ELSE { T_RETURN T_STRING ; } } T_ELSEIF ( T_VARIABLE($property) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING T_BOOLEAN_OR T_VARIABLE($property) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) { T_IF ( ! T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($property) ] ) ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) T_IS_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($property) ] ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ) ; T_RETURN T_STRING ; } } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($property) ] ) ? T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($property) ] : T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($property) , T_VARIABLE($value) , T_VARIABLE($table_create_time) = T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( ! T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($property) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING T_BOOLEAN_OR T_VARIABLE($property) T_IS_EQUAL T_STRING T_DOUBLE_COLON T_STRING ) ) { T_VARIABLE($curr_create_time) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) ; T_IF ( T_ISSET ( T_VARIABLE($table_create_time) ) T_BOOLEAN_AND T_VARIABLE($table_create_time) T_IS_EQUAL T_VARIABLE($curr_create_time) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($curr_create_time) ; } T_ELSE { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($property) ) ) ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($property) ] = T_VARIABLE($value) ; T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($property) ) { T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($property) ] ) ) { T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($property) ] ) ; T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($columns) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($backquoted) = T_STRING ) ; T_VARIABLE($return) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($column) ) { T_VARIABLE($temp) = T_STRING ( , T_VARIABLE($column) ) ; T_VARIABLE($column_name) = T_VARIABLE($temp) [ T_LNUMBER ] ; T_IF ( T_STRING ( T_VARIABLE($column_name) ) ) { T_VARIABLE($return) [ ] = T_VARIABLE($column_name) ; } } T_RETURN T_VARIABLE($return) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PRIVATE T_VARIABLE($_db) ; T_PRIVATE T_VARIABLE($_table) ; T_PRIVATE T_VARIABLE($_searchType) ; T_PRIVATE T_VARIABLE($_columnNames) ; T_PRIVATE T_VARIABLE($_columnTypes) ; T_PRIVATE T_VARIABLE($_columnCollations) ; T_PRIVATE T_VARIABLE($_columnNullFlags) ; T_PRIVATE T_VARIABLE($_geomColumnFlag) ; T_PRIVATE T_VARIABLE($_foreigners) ; T_PUBLIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($searchType) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($db) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($table) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($searchType) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($columns) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_STRING , T_STRING ) ; T_VARIABLE($geom_types) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($row) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($row) [ ] ; T_VARIABLE($type) = T_VARIABLE($row) [ ] ; T_IF ( T_STRING ( T_VARIABLE($type) , T_VARIABLE($geom_types) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_IF ( T_STRING ( T_VARIABLE($type) , , T_LNUMBER ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR T_STRING ( T_VARIABLE($type) , , T_LNUMBER ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($type) = T_STRING ( , , T_VARIABLE($type) ) ; } T_ELSE { T_IF ( ! T_STRING ( , T_VARIABLE($type) ) ) { T_VARIABLE($type) = T_STRING ( , , T_VARIABLE($type) ) ; } T_VARIABLE($type) = T_STRING ( , , T_VARIABLE($type) ) ; T_VARIABLE($type) = T_STRING ( , , T_VARIABLE($type) ) ; T_VARIABLE($type) = T_STRING ( T_VARIABLE($type) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($type) ) ) { T_VARIABLE($type) = ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($type) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($row) [ ] ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = ! T_EMPTY ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_VARIABLE($row) [ ] T_IS_NOT_EQUAL ? T_VARIABLE($row) [ ] : ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($func) = ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($func) = . T_STRING ( ) . ; } T_RETURN . T_VARIABLE($func) . . T_STRING ( ) . . T_STRING ( ) . . T_STRING ( ) . . T_STRING ( ) . . T_STRING ( ) . ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($subtabs) = T_ARRAY ( ) ; T_VARIABLE($subtabs) [ ] [ ] = ; T_VARIABLE($subtabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($subtabs) [ ] [ ] = ; T_VARIABLE($subtabs) [ ] [ ] = ; T_VARIABLE($subtabs) [ ] [ ] [ ] = T_LNUMBER ; T_VARIABLE($subtabs) [ ] [ ] = ; T_VARIABLE($subtabs) [ ] [ ] = ; T_VARIABLE($subtabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($subtabs) [ ] [ ] = ; T_RETURN T_VARIABLE($subtabs) ; } T_PRIVATE T_STRING ( T_VARIABLE($column_index) , T_VARIABLE($in_fbs) ) { T_VARIABLE($html_output) = . T_VARIABLE($column_index) . . . T_VARIABLE($column_index) . ; T_IF ( T_VARIABLE($in_fbs) ) { T_VARIABLE($edit_url) = . T_STRING ( ) ; T_VARIABLE($edit_str) = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($edit_url) , T_VARIABLE($edit_str) , T_ARRAY ( ) , T_STRING , T_STRING , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( T_VARIABLE($foreignData) , T_VARIABLE($column_name) , T_VARIABLE($column_index) , T_VARIABLE($titles) , T_VARIABLE($foreignMaxLimit) , T_VARIABLE($criteriaValues) , T_VARIABLE($column_id) , T_VARIABLE($in_zoom_search_edit) = T_STRING ) { T_VARIABLE($html_output) = ; T_IF ( T_STRING ( T_VARIABLE($foreignData) [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_index) . . . T_VARIABLE($column_id) . T_VARIABLE($column_index) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($foreignData) [ ] , T_VARIABLE($foreignData) [ ] , T_VARIABLE($foreignData) [ ] , , T_VARIABLE($foreignMaxLimit) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_ELSEIF ( T_VARIABLE($foreignData) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_id) . T_VARIABLE($column_index) . . . T_VARIABLE($column_index) . . T_STRING ( T_VARIABLE($column_name) ) . . T_VARIABLE($column_index) . . ( T_ISSET ( T_VARIABLE($criteriaValues) [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($criteriaValues) [ T_VARIABLE($column_index) ] ) ? ( . T_VARIABLE($criteriaValues) [ T_VARIABLE($column_index) ] . ) : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . . T_STRING ( T_VARIABLE($column_name) ) . . T_VARIABLE($column_index) . ; T_IF ( T_VARIABLE($in_zoom_search_edit) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( , , T_VARIABLE($titles) [ ] ) . ; } T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( T_VARIABLE($column_index) , T_VARIABLE($criteriaValues) , T_VARIABLE($column_type) , T_VARIABLE($column_id) , T_VARIABLE($in_zoom_search_edit) = T_STRING ) { T_VARIABLE($html_output) = ; T_VARIABLE($value) = T_STRING ( , T_STRING ( , , T_STRING ( T_VARIABLE($column_type) , T_LNUMBER , - T_LNUMBER ) ) ) ; T_VARIABLE($cnt_value) = T_STRING ( T_VARIABLE($value) ) ; T_IF ( ( T_STRING ( T_VARIABLE($column_type) , , T_LNUMBER ) T_BOOLEAN_AND ! T_VARIABLE($in_zoom_search_edit) ) T_BOOLEAN_OR ( T_STRING ( T_VARIABLE($column_type) , , T_LNUMBER ) T_BOOLEAN_AND T_VARIABLE($in_zoom_search_edit) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($column_index) ) . . T_VARIABLE($column_id) . T_VARIABLE($column_index) . ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_index) . . . T_VARIABLE($column_id) . T_VARIABLE($column_index) . . . T_STRING ( T_LNUMBER , T_VARIABLE($cnt_value) ) . ; } T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($cnt_value) ; T_VARIABLE($j) T_INC ) { T_IF ( T_ISSET ( T_VARIABLE($criteriaValues) [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($criteriaValues) [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($value) [ T_VARIABLE($j) ] , T_VARIABLE($criteriaValues) [ T_VARIABLE($column_index) ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($value) [ T_VARIABLE($j) ] . . T_VARIABLE($value) [ T_VARIABLE($j) ] . ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($value) [ T_VARIABLE($j) ] . . T_VARIABLE($value) [ T_VARIABLE($j) ] . ; } } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( T_VARIABLE($foreignData) , T_VARIABLE($column_name) , T_VARIABLE($column_type) , T_VARIABLE($column_index) , T_VARIABLE($titles) , T_VARIABLE($foreignMaxLimit) , T_VARIABLE($criteriaValues) , T_VARIABLE($in_fbs) = T_STRING , T_VARIABLE($in_zoom_search_edit) = T_STRING ) { T_VARIABLE($str) = ; T_VARIABLE($column_type) = T_STRING_CAST T_VARIABLE($column_type) ; T_VARIABLE($column_id) = ( T_VARIABLE($in_zoom_search_edit) ) ? : ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_name) ] ) ) { T_VARIABLE($str) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($foreignData) , T_VARIABLE($column_name) , T_VARIABLE($column_index) , T_VARIABLE($titles) , T_VARIABLE($foreignMaxLimit) , T_VARIABLE($criteriaValues) , T_VARIABLE($column_id) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($column_type) , T_STRING T_DOUBLE_COLON T_STRING ( ) ) ) { T_VARIABLE($str) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column_index) , T_VARIABLE($in_fbs) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($column_type) , , T_LNUMBER ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR ( T_STRING ( T_VARIABLE($column_type) , , T_LNUMBER ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($in_zoom_search_edit) ) ) { T_VARIABLE($str) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column_index) , T_VARIABLE($criteriaValues) , T_VARIABLE($column_type) , T_VARIABLE($column_id) , T_VARIABLE($in_zoom_search_edit) = T_STRING ) ; } T_ELSE { T_VARIABLE($the_class) = ; T_IF ( T_VARIABLE($column_type) T_IS_EQUAL ) { T_VARIABLE($the_class) T_CONCAT_EQUAL ; } T_ELSEIF ( T_VARIABLE($column_type) T_IS_EQUAL T_BOOLEAN_OR T_STRING ( T_VARIABLE($column_type) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($the_class) T_CONCAT_EQUAL ; } T_ELSEIF ( T_STRING ( T_VARIABLE($column_type) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($the_class) T_CONCAT_EQUAL ; } T_VARIABLE($str) T_CONCAT_EQUAL . T_VARIABLE($column_index) . . . T_VARIABLE($the_class) . . T_VARIABLE($column_id) . T_VARIABLE($column_index) . . ( T_ISSET ( T_VARIABLE($criteriaValues) [ T_VARIABLE($column_index) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($criteriaValues) [ T_VARIABLE($column_index) ] ) ? ( . T_VARIABLE($criteriaValues) [ T_VARIABLE($column_index) ] . ) : ) . ; } T_RETURN T_VARIABLE($str) ; } T_PRIVATE T_STRING ( T_VARIABLE($criteriaValues) , T_VARIABLE($func_type) ) { T_IF ( ! T_STRING ( T_VARIABLE($criteriaValues) ) ) { T_VARIABLE($criteriaValues) = T_STRING ( , T_VARIABLE($criteriaValues) ) ; } T_VARIABLE($enum_selected_count) = T_STRING ( T_VARIABLE($criteriaValues) ) ; T_IF ( T_VARIABLE($func_type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($enum_selected_count) > T_LNUMBER ) { T_VARIABLE($func_type) = ; T_VARIABLE($parens_open) = ; T_VARIABLE($parens_close) = ; } T_ELSEIF ( T_VARIABLE($func_type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($enum_selected_count) > T_LNUMBER ) { T_VARIABLE($func_type) = ; T_VARIABLE($parens_open) = ; T_VARIABLE($parens_close) = ; } T_ELSE { T_VARIABLE($parens_open) = ; T_VARIABLE($parens_close) = ; } T_VARIABLE($enum_where) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($criteriaValues) [ T_LNUMBER ] ) . ; T_FOR ( T_VARIABLE($e) = T_LNUMBER ; T_VARIABLE($e) < T_VARIABLE($enum_selected_count) ; T_VARIABLE($e) T_INC ) { T_VARIABLE($enum_where) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($criteriaValues) [ T_VARIABLE($e) ] ) . ; } T_RETURN . T_VARIABLE($func_type) . . T_VARIABLE($parens_open) . T_VARIABLE($enum_where) . T_VARIABLE($parens_close) ; } T_PRIVATE T_STRING ( T_VARIABLE($criteriaValues) , T_VARIABLE($names) , T_VARIABLE($func_type) , T_VARIABLE($geom_func) = T_STRING ) { T_VARIABLE($geom_unary_functions) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($where) = ; T_VARIABLE($geom_funcs) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($types) , T_STRING , T_STRING ) ; T_VARIABLE($types) = T_VARIABLE($geom_funcs) [ T_VARIABLE($geom_func) ] [ ] ; T_IF ( T_VARIABLE($geom_funcs) [ T_VARIABLE($geom_func) ] [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($backquoted_name) = T_VARIABLE($geom_func) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($names) ) . ; } T_ELSE { T_VARIABLE($gis_data) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($criteriaValues) ) ; T_VARIABLE($where) = T_VARIABLE($geom_func) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($names) ) . . T_VARIABLE($gis_data) . ; T_RETURN T_VARIABLE($where) ; } T_IF ( T_ISSET ( T_VARIABLE($geom_unary_functions) [ T_VARIABLE($geom_func) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($criteriaValues) ) T_IS_EQUAL ) { T_VARIABLE($where) = T_VARIABLE($backquoted_name) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($types) , T_STRING T_DOUBLE_COLON T_STRING ( ) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($criteriaValues) ) ) { T_VARIABLE($gis_data) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($criteriaValues) ) ; T_VARIABLE($where) = T_VARIABLE($backquoted_name) . . T_VARIABLE($func_type) . . T_VARIABLE($gis_data) ; } T_RETURN T_VARIABLE($where) ; } T_PRIVATE T_STRING ( T_VARIABLE($criteriaValues) , T_VARIABLE($names) , T_VARIABLE($types) , T_VARIABLE($collations) , T_VARIABLE($func_type) , T_VARIABLE($unaryFlag) , T_VARIABLE($geom_func) = T_STRING ) { T_IF ( T_VARIABLE($geom_func) T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($geom_func) ) T_IS_NOT_EQUAL ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($criteriaValues) , T_VARIABLE($names) , T_VARIABLE($func_type) , T_VARIABLE($geom_func) ) ; } T_VARIABLE($backquoted_name) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($names) ) ; T_VARIABLE($where) = ; T_IF ( T_VARIABLE($unaryFlag) ) { T_VARIABLE($criteriaValues) = ; T_VARIABLE($where) = T_VARIABLE($backquoted_name) . . T_VARIABLE($func_type) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($types) , , T_LNUMBER ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($criteriaValues) ) ) { T_VARIABLE($where) = T_VARIABLE($backquoted_name) ; T_VARIABLE($where) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($criteriaValues) , T_VARIABLE($func_type) ) ; } T_ELSEIF ( T_VARIABLE($criteriaValues) T_IS_NOT_EQUAL ) { T_IF ( T_STRING ( , T_VARIABLE($types) ) T_BOOLEAN_OR T_STRING ( . T_VARIABLE($func_type) , ) ) { T_VARIABLE($quot) = ; } T_ELSE { T_VARIABLE($quot) = ; } T_IF ( T_VARIABLE($func_type) T_IS_EQUAL ) { T_VARIABLE($func_type) = ; T_VARIABLE($criteriaValues) = . T_VARIABLE($criteriaValues) . ; } T_IF ( T_VARIABLE($func_type) T_IS_EQUAL ) { T_VARIABLE($func_type) = ; T_VARIABLE($criteriaValues) = . T_VARIABLE($criteriaValues) . ; } T_IF ( T_VARIABLE($func_type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($func_type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($func_type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($func_type) T_IS_EQUAL ) { T_VARIABLE($func_type) = T_STRING ( , , T_VARIABLE($func_type) ) ; T_VARIABLE($values) = T_STRING ( , T_VARIABLE($criteriaValues) ) ; T_FOREACH ( T_VARIABLE($values) T_AS & T_VARIABLE($value) ) { T_VARIABLE($value) = T_VARIABLE($quot) . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($value) ) ) . T_VARIABLE($quot) ; } T_IF ( T_VARIABLE($func_type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($func_type) T_IS_EQUAL ) { T_VARIABLE($where) = T_VARIABLE($backquoted_name) . . T_VARIABLE($func_type) . . ( T_ISSET ( T_VARIABLE($values) [ T_LNUMBER ] ) ? T_VARIABLE($values) [ T_LNUMBER ] : ) . . ( T_ISSET ( T_VARIABLE($values) [ T_LNUMBER ] ) ? T_VARIABLE($values) [ T_LNUMBER ] : ) ; } T_ELSE { T_VARIABLE($where) = T_VARIABLE($backquoted_name) . . T_VARIABLE($func_type) . . T_STRING ( , T_VARIABLE($values) ) . ; } } T_ELSE { T_IF ( T_VARIABLE($func_type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($func_type) T_IS_EQUAL ) { T_VARIABLE($where) = T_VARIABLE($backquoted_name) . . T_VARIABLE($func_type) . . T_VARIABLE($quot) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($criteriaValues) , T_STRING ) . T_VARIABLE($quot) ; } T_ELSE { T_VARIABLE($where) = T_VARIABLE($backquoted_name) . . T_VARIABLE($func_type) . . T_VARIABLE($quot) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($criteriaValues) ) . T_VARIABLE($quot) ; } } } T_RETURN T_VARIABLE($where) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($sql_query) = ; T_VARIABLE($is_distinct) = ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) ? : ; T_IF ( T_VARIABLE($is_distinct) T_IS_EQUAL ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL ; } T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($sql_query) T_CONCAT_EQUAL T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_POST) [ ] ) ) ; } T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($whereClause) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($whereClause) ; T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_POST) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_POST) [ ] ) . . T_VARIABLE($_POST) [ ] ; } T_RETURN T_VARIABLE($sql_query) ; } T_PRIVATE T_STRING ( ) { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_POST) [ ] ) T_IS_NOT_EQUAL ) { T_RETURN . T_VARIABLE($_POST) [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_RETURN ; } T_VARIABLE($fullWhereClause) = T_VARIABLE($charsets) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_WHILE ( T_LIST ( T_VARIABLE($column_index) , T_VARIABLE($operator) ) = T_STRING ( T_VARIABLE($_POST) [ ] ) ) { T_LIST ( T_VARIABLE($charsets) [ T_VARIABLE($column_index) ] ) = T_STRING ( , T_VARIABLE($_POST) [ ] [ T_VARIABLE($column_index) ] ) ; T_VARIABLE($unaryFlag) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($operator) ) ; T_VARIABLE($tmp_geom_func) = T_ISSET ( T_VARIABLE($geom_func) [ T_VARIABLE($column_index) ] ) ? T_VARIABLE($geom_func) [ T_VARIABLE($column_index) ] : T_STRING ; T_VARIABLE($whereClause) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_POST) [ ] [ T_VARIABLE($column_index) ] , T_VARIABLE($_POST) [ ] [ T_VARIABLE($column_index) ] , T_VARIABLE($_POST) [ ] [ T_VARIABLE($column_index) ] , T_VARIABLE($_POST) [ ] [ T_VARIABLE($column_index) ] , T_VARIABLE($operator) , T_VARIABLE($unaryFlag) , T_VARIABLE($tmp_geom_func) ) ; T_IF ( T_VARIABLE($whereClause) ) { T_VARIABLE($fullWhereClause) [ ] = T_VARIABLE($whereClause) ; } } T_IF ( T_VARIABLE($fullWhereClause) ) { T_RETURN . T_STRING ( , T_VARIABLE($fullWhereClause) ) ; } T_RETURN ; } T_PRIVATE T_STRING ( T_VARIABLE($column_index) ) { T_VARIABLE($html_output) = ; T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_VARIABLE($html_output) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($geom_types) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] , T_VARIABLE($geom_types) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column_index) . ; T_VARIABLE($funcs) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] , T_STRING , T_STRING ) ; T_FOREACH ( T_VARIABLE($funcs) T_AS T_VARIABLE($func_name) T_DOUBLE_ARROW T_VARIABLE($func) ) { T_VARIABLE($name) = T_ISSET ( T_VARIABLE($func) [ ] ) ? T_VARIABLE($func) [ ] : T_VARIABLE($func_name) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($name) ) . . T_STRING ( T_VARIABLE($name) ) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . . . T_STRING ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) , T_LNUMBER ) . . ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($each_field) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($each_field) ) . . . T_STRING ( T_VARIABLE($each_field) ) . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . . . T_VARIABLE($GLOBALS) [ ] [ ] . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($each_field) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($each_field) ) . . T_STRING ( T_VARIABLE($each_field) ) . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($choices) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($choices) , , T_STRING , T_STRING , ) ; T_UNSET ( T_VARIABLE($choices) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( T_VARIABLE($dataLabel) ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($j) T_INC ) { T_IF ( T_ISSET ( T_VARIABLE($dataLabel) ) T_BOOLEAN_AND T_VARIABLE($dataLabel) T_IS_EQUAL T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($j) ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($j) ] ) . . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($j) ] ) . ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($j) ] ) . . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($j) ] ) . ; } } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ( ( ! T_EMPTY ( T_VARIABLE($_POST) [ ] ) ) ? T_STRING ( T_VARIABLE($_POST) [ ] ) : T_VARIABLE($GLOBALS) [ ] [ ] ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PUBLIC T_STRING ( T_VARIABLE($search_index) , T_VARIABLE($column_index) ) { T_VARIABLE($selected_operator) = ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ? T_VARIABLE($_POST) [ ] [ T_VARIABLE($search_index) ] : ) ; T_VARIABLE($entered_value) = ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ? T_VARIABLE($_POST) [ ] : ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($type) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ; T_VARIABLE($collation) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ; T_VARIABLE($func) = . T_VARIABLE($search_index) . ; T_VARIABLE($func) T_CONCAT_EQUAL T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_STRING ( , , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] , T_VARIABLE($selected_operator) ) ; T_VARIABLE($func) T_CONCAT_EQUAL ; T_VARIABLE($foreignData) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] , T_STRING , , ) ; T_VARIABLE($value) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($foreignData) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] , T_VARIABLE($type) , T_VARIABLE($search_index) , T_VARIABLE($titles) , T_VARIABLE($GLOBALS) [ ] [ ] , T_VARIABLE($entered_value) ) ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($type) , T_DOUBLE_ARROW T_VARIABLE($collation) , T_DOUBLE_ARROW T_VARIABLE($func) , T_DOUBLE_ARROW T_VARIABLE($value) ) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($odd_row) = T_STRING ; T_VARIABLE($html_output) = ; T_FOR ( T_VARIABLE($column_index) = T_LNUMBER ; T_VARIABLE($column_index) < T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($column_index) T_INC ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column_index) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) . ; T_VARIABLE($properties) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column_index) , T_VARIABLE($column_index) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($properties) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($properties) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($properties) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($properties) [ ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($column_index) . . . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($column_index) . . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($column_index) . . . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($odd_row) = T_STRING ; T_VARIABLE($html_output) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_LNUMBER ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($i) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($i) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . T_STRING ( ) . ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($j) T_INC ) { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] [ T_VARIABLE($i) ] ) T_BOOLEAN_AND T_VARIABLE($_POST) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($j) ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($j) ] ) . . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($j) ] ) . ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($j) ] ) . . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($j) ] ) . ; } } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_POST) [ ] [ T_VARIABLE($i) ] T_IS_NOT_EQUAL ) { T_VARIABLE($key) = T_STRING ( T_VARIABLE($_POST) [ ] [ T_VARIABLE($i) ] , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($properties) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($i) , T_VARIABLE($key) ) ; T_VARIABLE($type) [ T_VARIABLE($i) ] = T_VARIABLE($properties) [ ] ; T_VARIABLE($collation) [ T_VARIABLE($i) ] = T_VARIABLE($properties) [ ] ; T_VARIABLE($func) [ T_VARIABLE($i) ] = T_VARIABLE($properties) [ ] ; T_VARIABLE($value) [ T_VARIABLE($i) ] = T_VARIABLE($properties) [ ] ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_ISSET ( T_VARIABLE($type) [ T_VARIABLE($i) ] ) ? T_VARIABLE($type) [ T_VARIABLE($i) ] : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_ISSET ( T_VARIABLE($collation) [ T_VARIABLE($i) ] ) ? T_VARIABLE($collation) [ T_VARIABLE($i) ] : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_ISSET ( T_VARIABLE($func) [ T_VARIABLE($i) ] ) ? T_VARIABLE($func) [ T_VARIABLE($i) ] : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_ISSET ( T_VARIABLE($value) [ T_VARIABLE($i) ] ) ? T_VARIABLE($value) [ T_VARIABLE($i) ] : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($i) . . . T_VARIABLE($i) . ; T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] [ T_VARIABLE($i) ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($_POST) [ ] [ T_VARIABLE($i) ] . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($i) . . T_VARIABLE($i) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( ) { T_VARIABLE($html_output) = ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ? : ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PRIVATE T_STRING ( T_VARIABLE($goto) ) { T_VARIABLE($html_output) = ; T_VARIABLE($scriptName) = ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ? : ) ; T_VARIABLE($formId) = ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ? : ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($scriptName) . . . T_VARIABLE($formId) . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($goto) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($scriptName) . ; T_RETURN T_VARIABLE($html_output) ; } T_PUBLIC T_STRING ( T_VARIABLE($goto) , T_VARIABLE($dataLabel) = T_STRING ) { T_VARIABLE($url_params) = T_ARRAY ( ) ; T_VARIABLE($url_params) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($url_params) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($html_output) = ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($tab) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tab) , T_VARIABLE($url_params) ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($goto) ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dataLabel) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ? : ) . ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ? : ) . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } T_PUBLIC T_STRING ( T_VARIABLE($goto) , T_VARIABLE($data) ) { T_VARIABLE($html_output) = ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($goto) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($data) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($data) ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($odd_row) = T_STRING ; T_FOR ( T_VARIABLE($column_index) = T_LNUMBER ; T_VARIABLE($column_index) < T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($column_index) T_INC ) { T_VARIABLE($fieldpopup) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ; T_VARIABLE($foreignData) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($fieldpopup) , T_STRING , , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] ) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] T_IS_EQUAL ) ? . . T_VARIABLE($column_index) . . . T_VARIABLE($column_index) . : ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($foreignData) , T_VARIABLE($fieldpopup) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($column_index) ] , T_VARIABLE($column_index) , T_VARIABLE($titles) , T_VARIABLE($GLOBALS) [ ] [ ] , , T_STRING , T_STRING ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($html_output) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( , , , ) ) ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($html) = ; T_VARIABLE($length_values_input_size) = T_LNUMBER ; T_VARIABLE($_form_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db) ) ; T_IF ( T_VARIABLE($action) T_IS_EQUAL ) { T_VARIABLE($_form_params) [ ] = T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($action) T_IS_EQUAL ) { T_VARIABLE($_form_params) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($_form_params) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($_form_params) [ ] = T_VARIABLE($table) ; } T_ELSE { T_VARIABLE($_form_params) [ ] = T_VARIABLE($table) ; } T_IF ( T_ISSET ( T_VARIABLE($num_fields) ) ) { T_VARIABLE($_form_params) [ ] = T_VARIABLE($num_fields) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_form_params) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_form_params) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($selected) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($selected) ) ) { T_FOREACH ( T_VARIABLE($selected) T_AS T_VARIABLE($o_fld_nr) T_DOUBLE_ARROW T_VARIABLE($o_fld_val) ) { T_VARIABLE($_form_params) [ . T_VARIABLE($o_fld_nr) . ] = T_VARIABLE($o_fld_val) ; T_IF ( ! T_ISSET ( T_VARIABLE($true_selected) ) ) { T_VARIABLE($_form_params) [ . T_VARIABLE($o_fld_nr) . ] = T_VARIABLE($o_fld_val) ; } } T_IF ( T_ISSET ( T_VARIABLE($true_selected) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($true_selected) ) ) { T_FOREACH ( T_VARIABLE($true_selected) T_AS T_VARIABLE($o_fld_nr) T_DOUBLE_ARROW T_VARIABLE($o_fld_val) ) { T_VARIABLE($_form_params) [ . T_VARIABLE($o_fld_nr) . ] = T_VARIABLE($o_fld_val) ; } } } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_form_params) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($orig_field) ) ) { T_VARIABLE($_form_params) [ ] = T_VARIABLE($orig_field) ; } T_ELSE { T_VARIABLE($_form_params) [ ] = T_VARIABLE($_REQUEST) [ ] ; } } T_VARIABLE($is_backup) = ( T_VARIABLE($action) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($action) T_IS_NOT_EQUAL ) ; T_VARIABLE($header_cells) = T_ARRAY ( ) ; T_VARIABLE($content_cells) = T_ARRAY ( ) ; T_VARIABLE($header_cells) [ ] = T_STRING ( ) ; T_VARIABLE($header_cells) [ ] = T_STRING ( ) . T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($header_cells) [ ] = T_STRING ( ) . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . . . ) ) ; T_VARIABLE($header_cells) [ ] = T_STRING ( ) . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . ) ) ; T_VARIABLE($header_cells) [ ] = T_STRING ( ) ; T_VARIABLE($header_cells) [ ] = T_STRING ( ) ; T_VARIABLE($header_cells) [ ] = T_STRING ( ) ; T_IF ( ! T_VARIABLE($is_backup) ) { T_VARIABLE($header_cells) [ ] = T_STRING ( ) ; } T_VARIABLE($header_cells) [ ] = ; T_REQUIRE_ONCE ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_VARIABLE($comments_map) = T_ARRAY ( ) ; T_VARIABLE($mime_map) = T_ARRAY ( ) ; T_VARIABLE($available_mime) = T_ARRAY ( ) ; T_VARIABLE($comments_map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($header_cells) [ ] = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($fields_meta) ) ) { T_VARIABLE($move_columns_sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_VARIABLE($move_columns_sql_result) = T_STRING ( T_VARIABLE($move_columns_sql_query) ) ; T_VARIABLE($move_columns) = T_STRING ( T_VARIABLE($move_columns_sql_result) ) ; T_UNSET ( T_VARIABLE($move_columns_sql_query) , T_VARIABLE($move_columns_sql_result) ) ; T_VARIABLE($header_cells) [ ] = T_STRING ( ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($mime_map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($available_mime) = T_STRING ( ) ; T_VARIABLE($hint) = . T_STRING ( T_STRING ( . ) , . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) . , ) ; T_VARIABLE($header_cells) [ ] = T_STRING ( ) ; T_VARIABLE($header_cells) [ ] = T_STRING ( ) ; T_VARIABLE($header_cells) [ ] = T_STRING ( ) . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . . . . ) . T_VARIABLE($hint) ) ; } T_IF ( T_ISSET ( T_VARIABLE($field_fulltext) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($field_fulltext) ) ) { T_FOREACH ( T_VARIABLE($field_fulltext) T_AS T_VARIABLE($fulltext_nr) T_DOUBLE_ARROW T_VARIABLE($fulltext_indexkey) ) { T_VARIABLE($submit_fulltext) [ T_VARIABLE($fulltext_indexkey) ] = T_VARIABLE($fulltext_indexkey) ; } } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($num_fields) ; T_VARIABLE($i) T_INC ) { T_IF ( ! T_EMPTY ( T_VARIABLE($regenerate) ) ) { T_VARIABLE($row) [ ] = T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : T_STRING ; T_VARIABLE($row) [ ] = T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : T_STRING ; T_VARIABLE($row) [ ] = T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : ; T_VARIABLE($row) [ ] = T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL . T_VARIABLE($i) ) { T_VARIABLE($row) [ ] = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL . T_VARIABLE($i) ) { T_VARIABLE($row) [ ] = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL . T_VARIABLE($i) ) { T_VARIABLE($row) [ ] = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL . T_VARIABLE($i) ) { T_VARIABLE($row) [ ] = ; } T_ELSE { T_VARIABLE($row) [ ] = ; } T_VARIABLE($row) [ ] = T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : ; T_VARIABLE($row) [ ] = T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : ; T_SWITCH ( T_VARIABLE($row) [ ] ) { T_CASE : T_VARIABLE($row) [ ] = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($row) [ ] = T_VARIABLE($row) [ ] ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($row) [ ] = T_VARIABLE($row) [ ] ; T_BREAK ; } T_VARIABLE($row) [ ] = ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : T_STRING ) ; T_VARIABLE($row) [ ] = ( T_ISSET ( T_VARIABLE($submit_fulltext) [ T_VARIABLE($i) ] ) T_BOOLEAN_AND ( T_VARIABLE($submit_fulltext) [ T_VARIABLE($i) ] T_IS_EQUAL T_VARIABLE($i) ) ? : T_STRING ) ; T_VARIABLE($submit_length) = ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : T_STRING ) ; T_VARIABLE($submit_attribute) = ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : T_STRING ) ; T_VARIABLE($submit_default_current_timestamp) = ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_STRING : T_STRING ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ) { T_VARIABLE($comments_map) [ T_VARIABLE($row) [ ] ] = T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ) { T_VARIABLE($mime_map) [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ) { T_VARIABLE($mime_map) [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ) { T_VARIABLE($mime_map) [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ; } } T_ELSEIF ( T_ISSET ( T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] ) ) { T_VARIABLE($row) = T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] ; T_SWITCH ( T_VARIABLE($row) [ ] ) { T_CASE T_STRING : T_IF ( T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($row) [ ] = ; T_VARIABLE($row) [ ] = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($row) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($row) [ ] ] [ ] ) ) { T_VARIABLE($row) [ ] = ; T_VARIABLE($row) [ ] = T_VARIABLE($row) [ ] ; } T_ELSE { T_VARIABLE($row) [ ] = ; T_VARIABLE($row) [ ] = ; } T_BREAK ; T_CASE : T_VARIABLE($row) [ ] = ; T_VARIABLE($row) [ ] = ; T_BREAK ; T_DEFAULT : T_VARIABLE($row) [ ] = ; T_VARIABLE($row) [ ] = T_VARIABLE($row) [ ] ; T_BREAK ; } } T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($extracted_columnspec) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) ; T_IF ( T_VARIABLE($extracted_columnspec) [ ] T_IS_EQUAL ) { T_VARIABLE($row) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) ; } } T_VARIABLE($ci) = T_LNUMBER ; T_VARIABLE($ci_offset) = - T_LNUMBER ; T_IF ( T_VARIABLE($is_backup) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($true_selected) [ T_VARIABLE($i) ] ) ) { T_VARIABLE($_form_params) [ . T_VARIABLE($i) . ] = T_VARIABLE($true_selected) [ T_VARIABLE($i) ] ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($_form_params) [ . T_VARIABLE($i) . ] = T_VARIABLE($row) [ ] ; } T_ELSE { T_VARIABLE($_form_params) [ . T_VARIABLE($i) . ] = ; } } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] = . T_VARIABLE($i) . . ( T_VARIABLE($ci) - T_VARIABLE($ci_offset) ) . . . T_VARIABLE($i) . . . T_STRING ( ) . . . . ( T_ISSET ( T_VARIABLE($row) [ ] ) ? T_STRING ( T_VARIABLE($row) [ ] ) : ) . . ; T_VARIABLE($ci) T_INC ; T_VARIABLE($select_id) = . T_VARIABLE($i) . . ( T_VARIABLE($ci) - T_VARIABLE($ci_offset) ) ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] = . T_VARIABLE($i) . . . T_VARIABLE($select_id) . ; T_IF ( T_EMPTY ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($row) [ ] = ; T_VARIABLE($type) = ; T_VARIABLE($length) = ; } T_ELSE { T_VARIABLE($type) = T_VARIABLE($extracted_columnspec) [ ] ; T_VARIABLE($length) = T_VARIABLE($extracted_columnspec) [ ] ; } T_VARIABLE($tmp) = T_STRING ( T_VARIABLE($type) , ) ; T_IF ( T_VARIABLE($tmp) ) { T_VARIABLE($type) = T_STRING ( T_VARIABLE($type) , T_LNUMBER , T_VARIABLE($tmp) - T_LNUMBER ) ; } T_IF ( T_ISSET ( T_VARIABLE($submit_length) ) T_BOOLEAN_AND T_VARIABLE($submit_length) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($length) = T_VARIABLE($submit_length) ; } T_VARIABLE($type) = T_STRING ( T_VARIABLE($type) ) ; T_VARIABLE($type_upper) = T_STRING ( T_VARIABLE($type) ) ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING , T_VARIABLE($type_upper) ) ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; T_VARIABLE($ci) T_INC ; T_IF ( T_VARIABLE($is_backup) ) { T_VARIABLE($_form_params) [ . T_VARIABLE($i) . ] = T_VARIABLE($length) ; } T_VARIABLE($length_to_display) = T_VARIABLE($length) ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] = . T_VARIABLE($i) . . ( T_VARIABLE($ci) - T_VARIABLE($ci_offset) ) . . . T_VARIABLE($i) . . T_VARIABLE($length_values_input_size) . . . T_STRING ( T_VARIABLE($length_to_display) ) . . . . T_VARIABLE($i) . . ( T_VARIABLE($ci) - T_VARIABLE($ci_offset) ) . ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL T_STRING ( ) . . T_STRING ( ) . . ; T_VARIABLE($ci) T_INC ; T_IF ( T_VARIABLE($is_backup) ) { T_VARIABLE($_form_params) [ . T_VARIABLE($i) . ] = ( T_ISSET ( T_VARIABLE($row) [ ] ) ? T_VARIABLE($row) [ ] : ) ; } T_VARIABLE($default_options) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_IF ( T_VARIABLE($type_upper) T_IS_EQUAL T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($default_current_timestamp) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($row) [ ] = ; } T_IF ( T_VARIABLE($type_upper) T_IS_EQUAL ) { T_VARIABLE($row) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) ; } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] = . T_VARIABLE($i) . . T_VARIABLE($i) . . ( T_VARIABLE($ci) - T_VARIABLE($ci_offset) ) . ; T_FOREACH ( T_VARIABLE($default_options) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL . T_VARIABLE($key) . ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_VARIABLE($row) [ ] T_IS_EQUAL T_VARIABLE($key) ) { T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL . T_VARIABLE($value) . ; } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL . . T_VARIABLE($i) . . . ( T_ISSET ( T_VARIABLE($row) [ ] ) ? T_STRING ( T_VARIABLE($row) [ ] ) : ) . . ; T_VARIABLE($ci) T_INC ; T_VARIABLE($tmp_collation) = T_EMPTY ( T_VARIABLE($row) [ ] ) ? T_STRING : T_VARIABLE($row) [ ] ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] = T_STRING ( T_STRING , . T_VARIABLE($i) . , . T_VARIABLE($i) . . ( T_VARIABLE($ci) - T_VARIABLE($ci_offset) ) , T_VARIABLE($tmp_collation) , T_STRING ) ; T_UNSET ( T_VARIABLE($tmp_collation) ) ; T_VARIABLE($ci) T_INC ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] = . . T_VARIABLE($i) . . . T_VARIABLE($i) . . ( T_VARIABLE($ci) - T_VARIABLE($ci_offset) ) . ; T_VARIABLE($attribute) = ; T_IF ( T_ISSET ( T_VARIABLE($extracted_columnspec) ) ) { T_VARIABLE($attribute) = T_VARIABLE($extracted_columnspec) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($attribute) = ; } T_IF ( T_ISSET ( T_VARIABLE($submit_attribute) ) T_BOOLEAN_AND T_VARIABLE($submit_attribute) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($attribute) = T_VARIABLE($submit_attribute) ; } T_IF ( T_STRING < T_LNUMBER T_BOOLEAN_AND T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($row) [ ] ] [ ] ) T_BOOLEAN_AND T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($row) [ ] ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($row) [ ] ] [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($row) [ ] = ; } T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($row) [ ] ] [ ] ) ) { T_VARIABLE($attribute) = ; } T_IF ( ( T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($row) [ ] ] [ ] ) ) T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($submit_default_current_timestamp) ) T_BOOLEAN_AND T_VARIABLE($submit_default_current_timestamp) ) ) { T_VARIABLE($default_current_timestamp) = T_STRING ; } T_ELSE { T_VARIABLE($default_current_timestamp) = T_STRING ; } T_VARIABLE($attribute_types) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($cnt_attribute_types) = T_STRING ( T_VARIABLE($attribute_types) ) ; T_FOR ( T_VARIABLE($j) = T_LNUMBER ; T_VARIABLE($j) < T_VARIABLE($cnt_attribute_types) ; T_VARIABLE($j) T_INC ) { T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL . T_VARIABLE($attribute_types) [ T_VARIABLE($j) ] . ; T_IF ( T_STRING ( T_VARIABLE($attribute) ) T_IS_EQUAL T_STRING ( T_VARIABLE($attribute_types) [ T_VARIABLE($j) ] ) ) { T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL . T_VARIABLE($attribute_types) [ T_VARIABLE($j) ] . ; } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; T_VARIABLE($ci) T_INC ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] = . T_VARIABLE($i) . . . T_VARIABLE($i) . . ( T_VARIABLE($ci) - T_VARIABLE($ci_offset) ) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_VARIABLE($row) [ ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($row) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; T_VARIABLE($ci) T_INC ; T_IF ( ! T_VARIABLE($is_backup) ) { T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] = . T_VARIABLE($i) . . . T_VARIABLE($i) . . ( T_VARIABLE($ci) - T_VARIABLE($ci_offset) ) . ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL . T_VARIABLE($i) . ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL . T_VARIABLE($i) . . T_STRING ( ) . ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL . T_VARIABLE($i) . . T_STRING ( ) . ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL . T_VARIABLE($i) . . T_STRING ( ) . ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; T_IF ( ! T_STRING ) { T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL . T_VARIABLE($i) . . T_STRING ( ) . ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; T_VARIABLE($ci) T_INC ; } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] = . T_VARIABLE($i) . . . T_VARIABLE($i) . . ( T_VARIABLE($ci) - T_VARIABLE($ci_offset) ) . ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($row) [ ] ) T_IS_EQUAL ) { T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; T_VARIABLE($ci) T_INC ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] = . T_VARIABLE($i) . . ( T_VARIABLE($ci) - T_VARIABLE($ci_offset) ) . . . T_VARIABLE($i) . . . ( T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($comments_map) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($comments_map) [ T_VARIABLE($row) [ ] ] ) ? T_STRING ( T_VARIABLE($comments_map) [ T_VARIABLE($row) [ ] ] ) : ) . . ; T_VARIABLE($ci) T_INC ; T_IF ( T_ISSET ( T_VARIABLE($fields_meta) ) ) { T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] = . T_VARIABLE($i) . . ( T_VARIABLE($ci) - T_VARIABLE($ci_offset) ) . . . T_VARIABLE($i) . . ; T_VARIABLE($current_index) = T_LNUMBER ; T_FOR ( T_VARIABLE($mi) = T_LNUMBER , T_VARIABLE($cols) = T_STRING ( T_VARIABLE($move_columns) ) ; T_VARIABLE($mi) < T_VARIABLE($cols) ; T_VARIABLE($mi) T_INC ) { T_IF ( T_VARIABLE($move_columns) [ T_VARIABLE($mi) ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($row) [ ] ) { T_VARIABLE($current_index) = T_VARIABLE($mi) ; T_BREAK ; } } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL . ( T_VARIABLE($current_index) T_IS_EQUAL T_LNUMBER ? : ) . . T_STRING ( ) . ; T_FOR ( T_VARIABLE($mi) = T_LNUMBER , T_VARIABLE($cols) = T_STRING ( T_VARIABLE($move_columns) ) ; T_VARIABLE($mi) < T_VARIABLE($cols) ; T_VARIABLE($mi) T_INC ) { T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($move_columns) [ T_VARIABLE($mi) ] T_OBJECT_OPERATOR T_STRING ) . . ( ( T_VARIABLE($current_index) T_IS_EQUAL T_VARIABLE($mi) T_BOOLEAN_OR T_VARIABLE($current_index) T_IS_EQUAL T_VARIABLE($mi) + T_LNUMBER ) ? : ) . . T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($move_columns) [ T_VARIABLE($mi) ] T_OBJECT_OPERATOR T_STRING ) ) ) . ; } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; T_VARIABLE($ci) T_INC ; } T_IF ( T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] = . T_VARIABLE($i) . . ( T_VARIABLE($ci) - T_VARIABLE($ci_offset) ) . . T_VARIABLE($i) . ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; T_IF ( T_STRING ( T_VARIABLE($available_mime) [ ] ) ) { T_FOREACH ( T_VARIABLE($available_mime) [ ] T_AS T_VARIABLE($mimekey) T_DOUBLE_ARROW T_VARIABLE($mimetype) ) { T_VARIABLE($checked) = ( T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($row) [ ] ] [ ] ) T_BOOLEAN_AND ( T_VARIABLE($mime_map) [ T_VARIABLE($row) [ ] ] [ ] T_IS_EQUAL T_STRING ( , , T_VARIABLE($mimetype) ) ) ? : ) ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL . T_STRING ( , , T_VARIABLE($mimetype) ) . . T_VARIABLE($checked) . . T_STRING ( T_VARIABLE($mimetype) ) . ; } } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; T_VARIABLE($ci) T_INC ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] = . T_VARIABLE($i) . . ( T_VARIABLE($ci) - T_VARIABLE($ci_offset) ) . . T_VARIABLE($i) . ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL . T_STRING ( ) . ; T_IF ( T_STRING ( T_VARIABLE($available_mime) [ ] ) ) { T_FOREACH ( T_VARIABLE($available_mime) [ ] T_AS T_VARIABLE($mimekey) T_DOUBLE_ARROW T_VARIABLE($transform) ) { T_VARIABLE($checked) = T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($row) [ ] ] [ ] ) T_BOOLEAN_AND T_STRING ( . T_STRING ( T_VARIABLE($available_mime) [ ] [ T_VARIABLE($mimekey) ] ) . , T_VARIABLE($mime_map) [ T_VARIABLE($row) [ ] ] [ ] ) ? : ; T_VARIABLE($tooltip) = T_STRING ( T_VARIABLE($available_mime) [ ] [ T_VARIABLE($mimekey) ] , T_STRING ) ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL . T_VARIABLE($available_mime) [ ] [ T_VARIABLE($mimekey) ] . . T_VARIABLE($checked) . . T_STRING ( T_VARIABLE($tooltip) ) . . T_STRING ( T_VARIABLE($transform) ) . ; } } T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] T_CONCAT_EQUAL ; T_VARIABLE($ci) T_INC ; T_VARIABLE($val) = T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($row) [ ] ] [ ] ) ? T_STRING ( T_VARIABLE($mime_map) [ T_VARIABLE($row) [ ] ] [ ] ) : ; T_VARIABLE($content_cells) [ T_VARIABLE($i) ] [ T_VARIABLE($ci) ] = . T_VARIABLE($i) . . ( T_VARIABLE($ci) - T_VARIABLE($ci_offset) ) . . . . T_VARIABLE($i) . . . . T_VARIABLE($val) . . ; } } T_VARIABLE($html) T_CONCAT_EQUAL . T_VARIABLE($action) . . ( T_VARIABLE($action) T_IS_EQUAL ? : ) . ; T_VARIABLE($html) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($_form_params) ) ; T_UNSET ( T_VARIABLE($_form_params) ) ; T_IF ( T_VARIABLE($action) T_IS_EQUAL ) { T_VARIABLE($html) T_CONCAT_EQUAL . . . T_STRING ( ) . . . ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_STRING ( T_VARIABLE($_REQUEST) [ ] ) : ) . . . ; T_IF ( T_VARIABLE($action) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($action) T_IS_EQUAL ) { T_VARIABLE($html) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , . . ) ; T_VARIABLE($html) T_CONCAT_EQUAL . . T_STRING ( ) . . . . T_STRING ( , , T_STRING ( ) ) . ; } T_VARIABLE($html) T_CONCAT_EQUAL . . ; } T_IF ( T_STRING ( T_VARIABLE($content_cells) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($header_cells) ) ) { T_VARIABLE($html) T_CONCAT_EQUAL ; T_VARIABLE($html) T_CONCAT_EQUAL . T_STRING ( ) . T_STRING T_DOUBLE_COLON T_STRING ( , ) . ; T_VARIABLE($html) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($header_cells) T_AS T_VARIABLE($header_val) ) { T_VARIABLE($html) T_CONCAT_EQUAL . T_VARIABLE($header_val) . ; } T_VARIABLE($html) T_CONCAT_EQUAL ; T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($content_cells) T_AS T_VARIABLE($content_row) ) { T_VARIABLE($html) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_IF ( T_STRING ( T_VARIABLE($content_row) ) ) { T_FOREACH ( T_VARIABLE($content_row) T_AS T_VARIABLE($content_row_val) ) { T_VARIABLE($html) T_CONCAT_EQUAL . T_VARIABLE($content_row_val) . ; } } T_VARIABLE($html) T_CONCAT_EQUAL ; } T_VARIABLE($html) T_CONCAT_EQUAL . ; } T_IF ( T_VARIABLE($action) T_IS_EQUAL ) { T_VARIABLE($html) T_CONCAT_EQUAL . . . T_STRING ( ) . . . . T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( , ) . . . . T_STRING ( ) . . . . . ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_STRING ( T_VARIABLE($_REQUEST) [ ] ) : ) . . . . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING , ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : T_STRING ) ) . . . . T_STRING ( T_STRING , , T_STRING , ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : T_STRING ) , T_STRING , T_LNUMBER ) . . ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( ) ) { T_VARIABLE($html) T_CONCAT_EQUAL . . T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( , ) . . . . . . . T_VARIABLE($GLOBALS) [ ] [ ] . . . T_VARIABLE($GLOBALS) [ ] [ ] . . . T_VARIABLE($GLOBALS) [ ] . . ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_STRING ( T_VARIABLE($_REQUEST) [ ] ) : ) . . . ; } T_VARIABLE($html) T_CONCAT_EQUAL . ; } T_VARIABLE($html) T_CONCAT_EQUAL . . T_STRING ( ) . . . . ; T_VARIABLE($html) T_CONCAT_EQUAL ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($html) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( , ) ) ; T_VARIABLE($db_is_information_schema) = T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($url_query) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($url_params) = T_ARRAY ( ) ; T_VARIABLE($url_params) [ ] = T_VARIABLE($db) ; T_VARIABLE($url_params) [ ] = T_VARIABLE($table) ; T_VARIABLE($err_url_0) = T_VARIABLE($cfg) [ ] . T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db) , ) ) ; T_VARIABLE($err_url) = T_VARIABLE($cfg) [ ] . T_STRING ( T_VARIABLE($url_params) ) ; T_REQUIRE_ONCE ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( ) T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($temp_msg) = . T_VARIABLE($url_query) . ; T_VARIABLE($temp_msg) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] ) ) ; T_VARIABLE($temp_msg) T_CONCAT_EQUAL ; T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($temp_msg) ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( , ) ) ; T_GLOBAL T_VARIABLE($showtable) , T_VARIABLE($tbl_is_view) , T_VARIABLE($tbl_storage_engine) , T_VARIABLE($show_comment) , T_VARIABLE($tbl_collation) , T_VARIABLE($table_info_num_rows) , T_VARIABLE($auto_increment) ; T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($GLOBALS) [ ] = T_ARRAY ( ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] , T_STRING , ( T_ISSET ( T_VARIABLE($reread_info) ) T_BOOLEAN_AND T_VARIABLE($reread_info) ? T_STRING : T_STRING ) ) ; T_IF ( T_VARIABLE($showtable) ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($tbl_is_view) = T_STRING ; T_VARIABLE($tbl_storage_engine) = T_STRING ( ) ; T_VARIABLE($show_comment) = T_STRING ; } T_ELSE { T_VARIABLE($tbl_is_view) = T_STRING ; T_VARIABLE($tbl_storage_engine) = T_ISSET ( T_VARIABLE($showtable) [ ] ) ? T_STRING ( T_VARIABLE($showtable) [ ] ) : ; T_VARIABLE($show_comment) = ; T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) ) { T_VARIABLE($show_comment) = T_VARIABLE($showtable) [ ] ; } } T_VARIABLE($tbl_collation) = T_EMPTY ( T_VARIABLE($showtable) [ ] ) ? : T_VARIABLE($showtable) [ ] ; T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($showtable) [ ] ) { T_VARIABLE($showtable) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($showtable) [ ] , T_STRING ) ; } T_VARIABLE($table_info_num_rows) = T_ISSET ( T_VARIABLE($showtable) [ ] ) ? T_VARIABLE($showtable) [ ] : T_LNUMBER ; T_VARIABLE($row_format) = T_ISSET ( T_VARIABLE($showtable) [ ] ) ? T_VARIABLE($showtable) [ ] : ; T_VARIABLE($auto_increment) = T_ISSET ( T_VARIABLE($showtable) [ ] ) ? T_VARIABLE($showtable) [ ] : ; T_VARIABLE($create_options) = T_ISSET ( T_VARIABLE($showtable) [ ] ) ? T_STRING ( , T_VARIABLE($showtable) [ ] ) : T_ARRAY ( ) ; T_UNSET ( T_VARIABLE($pack_keys) ) ; T_FOREACH ( T_VARIABLE($create_options) T_AS T_VARIABLE($each_create_option) ) { T_VARIABLE($each_create_option) = T_STRING ( , T_VARIABLE($each_create_option) ) ; T_IF ( T_ISSET ( T_VARIABLE($each_create_option) [ T_LNUMBER ] ) ) { $ T_VARIABLE($each_create_option) [ T_LNUMBER ] = T_VARIABLE($each_create_option) [ T_LNUMBER ] ; } } T_VARIABLE($pack_keys) = ( ! T_ISSET ( T_VARIABLE($pack_keys) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($pack_keys) ) T_IS_EQUAL T_LNUMBER ) ? : T_VARIABLE($pack_keys) ; T_UNSET ( T_VARIABLE($create_options) , T_VARIABLE($each_create_option) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_getColumnMap) ( T_VARIABLE($sql_query) , T_VARIABLE($view_columns) ) { T_VARIABLE($column_map) = T_ARRAY ( ) ; T_VARIABLE($real_source_result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_IF ( T_VARIABLE($real_source_result) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($real_source_fields_meta) = T_STRING ( T_VARIABLE($real_source_result) ) ; T_IF ( T_STRING ( T_VARIABLE($real_source_fields_meta) ) > T_LNUMBER ) { T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($real_source_fields_meta) ) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($map) = T_ARRAY ( ) ; T_VARIABLE($map) [ ] = T_VARIABLE($real_source_fields_meta) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($map) [ ] = T_VARIABLE($real_source_fields_meta) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ; T_IF ( T_STRING ( T_VARIABLE($view_columns) ) > T_LNUMBER ) { T_VARIABLE($map) [ ] = T_VARIABLE($view_columns) [ T_VARIABLE($i) ] ; } T_VARIABLE($column_map) [ ] = T_VARIABLE($map) ; } } } T_UNSET ( T_VARIABLE($real_source_result) ) ; T_RETURN T_VARIABLE($column_map) ; } T_FUNCTION(PMA_getExistingTranformationData) ( T_VARIABLE($db) ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_VARIABLE($pma_transformation_sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_RETURN T_STRING ( T_VARIABLE($pma_transformation_sql) ) ; } T_FUNCTION(PMA_getNewTransformationDataSql) ( T_VARIABLE($pma_tranformation_data) , T_VARIABLE($column_map) , T_VARIABLE($view_name) , T_VARIABLE($db) ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_VARIABLE($new_transformations_sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . . ; T_VARIABLE($column_count) = T_LNUMBER ; T_VARIABLE($add_comma) = T_STRING ; T_WHILE ( T_VARIABLE($data_row) = T_STRING ( T_VARIABLE($pma_tranformation_data) ) ) { T_FOREACH ( T_VARIABLE($column_map) T_AS T_VARIABLE($column) ) { T_IF ( T_VARIABLE($data_row) [ ] T_IS_EQUAL T_VARIABLE($column) [ ] T_BOOLEAN_AND T_VARIABLE($data_row) [ ] T_IS_EQUAL T_VARIABLE($column) [ ] ) { T_VARIABLE($new_transformations_sql) T_CONCAT_EQUAL T_VARIABLE($add_comma) ? : ; T_VARIABLE($new_transformations_sql) T_CONCAT_EQUAL . . T_VARIABLE($db) . . . T_VARIABLE($view_name) . . ; T_VARIABLE($new_transformations_sql) T_CONCAT_EQUAL ( T_ISSET ( T_VARIABLE($column) [ ] ) ) ? T_VARIABLE($column) [ ] : T_VARIABLE($column) [ ] ; T_VARIABLE($new_transformations_sql) T_CONCAT_EQUAL . . T_VARIABLE($data_row) [ ] . . . T_VARIABLE($data_row) [ ] . . . T_VARIABLE($data_row) [ ] . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($data_row) [ ] ) . ; T_VARIABLE($add_comma) = T_STRING ; T_VARIABLE($column_count) T_INC ; T_BREAK ; } } T_IF ( T_VARIABLE($column_count) T_IS_EQUAL T_STRING ( T_VARIABLE($column_map) ) ) { T_BREAK ; } } T_RETURN ( T_VARIABLE($column_count) > T_LNUMBER ) ? T_VARIABLE($new_transformations_sql) : ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_VAR T_VARIABLE($version) = ; T_VAR T_VARIABLE($name) = ; T_VAR T_VARIABLE($id) = ; T_VAR T_VARIABLE($path) = ; T_VAR T_VARIABLE($img_path) = ; T_VAR T_VARIABLE($mtime_info) = T_LNUMBER ; T_VAR T_VARIABLE($filesize_info) = T_LNUMBER ; T_PRIVATE T_VARIABLE($_cssFiles) = T_ARRAY ( , , , , , , , , ) ; T_STRING ( ) { T_IF ( ! T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . ) ) { T_RETURN T_STRING ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_IDENTICAL T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . ) ) { T_RETURN T_STRING ; } @ T_INCLUDE T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . ; T_IF ( ! T_ISSET ( T_VARIABLE($theme_name) ) ) { T_RETURN T_STRING ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . ) ; T_IF ( T_ISSET ( T_VARIABLE($theme_full_version) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($theme_full_version) ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($theme_generation) , T_VARIABLE($theme_version) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($theme_generation) . . T_VARIABLE($theme_version) ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($theme_name) ) ; T_RETURN T_STRING ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($folder) ) { T_VARIABLE($theme) = T_NEW T_STRING ( ) ; T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($folder) ) ; T_IF ( ! T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ( ) ) { T_RETURN T_STRING ; } T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_VARIABLE($theme) ; } T_PUBLIC T_STRING ( ) { T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . ) ; T_RETURN T_STRING ; } T_VARIABLE($fallback) = T_VARIABLE($GLOBALS) [ ] [ ] . . T_STRING T_DOUBLE_COLON T_STRING . ; T_IF ( T_STRING ( T_VARIABLE($fallback) ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($fallback) ) ; T_RETURN T_STRING ; } T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) , T_STRING ) ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . ; } T_PUBLIC T_STRING ( T_VARIABLE($path) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($path) ) ; } T_PUBLIC T_STRING ( T_VARIABLE($version) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($version) ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($version) ) { T_RETURN T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($version) , ) ; } T_PUBLIC T_STRING ( T_VARIABLE($name) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($name) ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($id) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($id) ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($path) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($path) ; } T_PUBLIC T_STRING ( T_VARIABLE($file) = T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($file) ) ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . T_VARIABLE($file) ) ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . T_VARIABLE($file) ; } T_ELSE { T_RETURN T_VARIABLE($GLOBALS) [ ] [ ] . . T_STRING T_DOUBLE_COLON T_STRING . . T_VARIABLE($file) ; } } } T_PUBLIC T_STRING ( T_VARIABLE($classname) , T_VARIABLE($property) , T_VARIABLE($value) ) { T_VARIABLE($str) = . T_VARIABLE($classname) . ; T_IF ( T_VARIABLE($value) T_IS_NOT_EQUAL ) { T_VARIABLE($str) T_CONCAT_EQUAL T_VARIABLE($property) . . T_VARIABLE($value) . ; } T_VARIABLE($str) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($str) ; } T_PUBLIC T_STRING ( ) { T_GLOBAL T_VARIABLE($cfg) ; T_VARIABLE($css_string) = ; T_FOREACH ( T_VARIABLE($cfg) [ ] [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($col) ) { T_VARIABLE($css_string) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($key) , , T_VARIABLE($col) ) ; } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_LNUMBER ; T_VARIABLE($i) T_INC ) { T_VARIABLE($css_string) T_CONCAT_EQUAL T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($i) , , ( T_VARIABLE($i) * T_VARIABLE($cfg) [ ] [ ] ) . T_VARIABLE($cfg) [ ] [ ] ) ; } T_RETURN T_VARIABLE($css_string) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($success) = T_STRING ; T_ECHO T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ) { T_VARIABLE($right) = ; T_VARIABLE($left) = ; } T_ELSE { T_VARIABLE($right) = ; T_VARIABLE($left) = ; } T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($file) ) { T_VARIABLE($path) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($file) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($fallback) = . T_STRING T_DOUBLE_COLON T_STRING . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($file) T_ENCAPSED_AND_WHITESPACE ; T_IF ( T_STRING ( T_VARIABLE($path) ) ) { T_ECHO T_ENCAPSED_AND_WHITESPACE T_VARIABLE($file) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE T_VARIABLE($path) ; } T_ELSE T_IF ( T_STRING ( T_VARIABLE($fallback) ) ) { T_ECHO T_ENCAPSED_AND_WHITESPACE T_VARIABLE($file) T_ENCAPSED_AND_WHITESPACE ; T_INCLUDE T_VARIABLE($fallback) ; } T_ELSE { T_VARIABLE($success) = T_STRING ; } } T_INCLUDE ; T_RETURN T_VARIABLE($success) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($url) = . T_STRING ( T_VARIABLE($url_params) ) ; T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($url) . ; T_IF ( @ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_STRING ( ) { T_RETURN T_STRING T_IS_EQUAL T_BOOLEAN_AND T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING T_IS_SMALLER_OR_EQUAL T_LNUMBER ? : ; } T_STRING ( ) { T_VARIABLE($fs) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($fs) ) ) { T_RETURN T_VARIABLE($fs) ; } T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) [ ] ) ) { T_RETURN T_VARIABLE($_COOKIE) [ ] ; } T_RETURN ; } T_STRING ( T_VARIABLE($start_color) , T_VARIABLE($end_color) ) { T_VARIABLE($result) = T_ARRAY ( ) ; T_VARIABLE($result) [ ] = . T_VARIABLE($start_color) . . T_VARIABLE($end_color) . ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = . . T_VARIABLE($start_color) . . T_VARIABLE($end_color) . ; T_VARIABLE($result) [ ] = . T_VARIABLE($start_color) . . T_VARIABLE($end_color) . ; T_VARIABLE($result) [ ] = . T_VARIABLE($start_color) . . T_VARIABLE($end_color) . ; T_VARIABLE($result) [ ] = . T_VARIABLE($start_color) . . T_VARIABLE($end_color) . ; T_VARIABLE($result) [ ] = . T_VARIABLE($start_color) . . T_VARIABLE($end_color) . ; T_IF ( T_STRING T_IS_EQUAL T_BOOLEAN_AND T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING T_IS_SMALLER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($result) [ ] = . . T_VARIABLE($start_color) . . T_VARIABLE($end_color) . ; } T_RETURN T_STRING ( , T_VARIABLE($result) ) ; } T_STRING ( ) { T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] ) { T_RETURN ; } T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = . T_VARIABLE($GLOBALS) [ ] [ ] [ ] [ ] . ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = . T_VARIABLE($GLOBALS) [ ] [ ] [ ] [ ] . ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = . T_VARIABLE($GLOBALS) [ ] [ ] [ ] [ ] . ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = . T_VARIABLE($GLOBALS) [ ] [ ] [ ] [ ] . ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = . T_VARIABLE($GLOBALS) [ ] [ ] [ ] [ ] . ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = . T_VARIABLE($GLOBALS) [ ] [ ] [ ] [ ] . ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = . T_VARIABLE($GLOBALS) [ ] [ ] [ ] [ ] . ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = . T_VARIABLE($GLOBALS) [ ] [ ] [ ] [ ] . ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = . T_VARIABLE($GLOBALS) [ ] [ ] [ ] [ ] . ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = . T_VARIABLE($GLOBALS) [ ] [ ] [ ] [ ] . ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = . T_VARIABLE($GLOBALS) [ ] [ ] [ ] [ ] . ; T_VARIABLE($result) [ ] = ; T_RETURN T_STRING ( , T_VARIABLE($result) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PRIVATE T_VARIABLE($_themes_path) ; T_VAR T_VARIABLE($themes) = T_ARRAY ( ) ; T_VAR T_VARIABLE($cookie_name) = ; T_VAR T_VARIABLE($per_server) = T_STRING ; T_VAR T_VARIABLE($active_theme) = ; T_VAR T_VARIABLE($theme) = T_STRING ; T_VAR T_VARIABLE($theme_default) ; T_CONST T_STRING = ; T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_PUBLIC T_STRING ( T_VARIABLE($path) ) { T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($path) ) ) { T_RETURN T_STRING ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($path) ) ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($per_server) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_BOOL_CAST T_VARIABLE($per_server) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING T_DOUBLE_COLON T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_RETURN T_STRING ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_NEW T_STRING ; T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) , T_STRING ) ; T_VARIABLE($GLOBALS) [ ] [ ] = T_STRING ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($GLOBALS) [ ] [ ] ; T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_OR ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ) ; } } } T_PUBLIC T_STRING ( ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) T_BOOLEAN_OR T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_PUBLIC T_STRING ( T_VARIABLE($theme) = T_STRING ) { T_IF ( ! T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($theme) ) ) { T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($theme) ) ) , T_STRING ) ; T_RETURN T_STRING ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($theme) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($theme) ] ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } } T_PUBLIC T_STRING ( ) { T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ] ) ) { T_RETURN T_VARIABLE($_COOKIE) [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ] ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_STRING ; } T_PRIVATE T_STRING ( T_VARIABLE($folder) ) { T_IF ( ! T_STRING ( T_VARIABLE($folder) ) ) { T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($folder) ) ) , T_STRING ) ; T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_IF ( T_VARIABLE($handleThemes) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_WHILE ( T_STRING T_IS_NOT_IDENTICAL ( T_VARIABLE($PMA_Theme) = T_STRING ( T_VARIABLE($handleThemes) ) ) ) { T_IF ( T_VARIABLE($PMA_Theme) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($PMA_Theme) T_IS_EQUAL T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . . T_VARIABLE($PMA_Theme) ) ) { T_CONTINUE ; } T_IF ( T_STRING ( T_VARIABLE($PMA_Theme) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_CONTINUE ; } T_VARIABLE($new_theme) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) . . T_VARIABLE($PMA_Theme) ) ; T_IF ( T_VARIABLE($new_theme) ) { T_VARIABLE($new_theme) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($PMA_Theme) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($PMA_Theme) ] = T_VARIABLE($new_theme) ; } } T_STRING ( T_VARIABLE($handleThemes) ) ; } T_ELSE { T_STRING ( . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_STRING ) ; T_RETURN T_STRING ; } T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($theme) ) { T_IF ( ! T_STRING ( T_VARIABLE($theme) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( T_VARIABLE($form) = T_STRING ) { T_VARIABLE($select_box) = ; T_IF ( T_VARIABLE($form) ) { T_VARIABLE($select_box) T_CONCAT_EQUAL ; T_VARIABLE($select_box) T_CONCAT_EQUAL ; T_VARIABLE($select_box) T_CONCAT_EQUAL T_STRING ( ) ; } T_VARIABLE($theme_preview_path) = ; T_VARIABLE($theme_preview_href) = . T_VARIABLE($theme_preview_path) . ; T_VARIABLE($select_box) T_CONCAT_EQUAL T_VARIABLE($theme_preview_href) . T_STRING ( ) . . ; T_VARIABLE($select_box) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($each_theme_id) T_DOUBLE_ARROW T_VARIABLE($each_theme) ) { T_VARIABLE($select_box) T_CONCAT_EQUAL . T_VARIABLE($each_theme_id) . ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_IDENTICAL T_VARIABLE($each_theme_id) ) { T_VARIABLE($select_box) T_CONCAT_EQUAL ; } T_VARIABLE($select_box) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($each_theme) T_OBJECT_OPERATOR T_STRING ( ) ) . ; } T_VARIABLE($select_box) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($form) ) { T_VARIABLE($select_box) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($select_box) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ) ) { T_INCLUDE T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; } } T_PUBLIC T_STRING ( ) { T_VARIABLE($retval) = ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($each_theme) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($each_theme) T_OBJECT_OPERATOR T_STRING ( ) ; } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STRING ( ) { T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_STRING T_DOUBLE_COLON T_STRING ] ) ) { T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_STRING T_DOUBLE_COLON T_STRING ] ; } T_RETURN T_STRING ; } T_PUBLIC T_STRING ( ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ) { T_RETURN T_STRING ; } T_VARIABLE($fallback_theme) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($fallback_theme) T_BOOLEAN_AND T_VARIABLE($fallback_theme) T_OBJECT_OPERATOR T_STRING ( ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_STATIC T_PROTECTED T_VARIABLE($enabled) = T_STRING ; T_STATIC T_PROTECTED T_VARIABLE($pma_table) ; T_STATIC T_PROTECTED T_VARIABLE($add_drop_table) ; T_STATIC T_PROTECTED T_VARIABLE($add_drop_view) ; T_STATIC T_PROTECTED T_VARIABLE($add_drop_database) ; T_STATIC T_PROTECTED T_VARIABLE($version_auto_create) ; T_STATIC T_PROTECTED T_VARIABLE($default_tracking_set) ; T_STATIC T_PRIVATE T_VARIABLE($_tracking_set_flags) = T_ARRAY ( , , , , , , , , , , , , , , , , ) ; T_STATIC T_PROTECTED T_STRING ( ) { T_STRING T_DOUBLE_COLON T_VARIABLE($pma_table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; T_STRING T_DOUBLE_COLON T_VARIABLE($add_drop_table) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_STRING T_DOUBLE_COLON T_VARIABLE($add_drop_view) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_STRING T_DOUBLE_COLON T_VARIABLE($add_drop_database) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_STRING T_DOUBLE_COLON T_VARIABLE($default_tracking_set) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_STRING T_DOUBLE_COLON T_VARIABLE($version_auto_create) = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; } T_STATIC T_PUBLIC T_STRING ( ) { T_STRING T_DOUBLE_COLON T_VARIABLE($enabled) = T_STRING ; } T_STATIC T_PUBLIC T_STRING ( ) { T_IF ( ! T_STRING T_DOUBLE_COLON T_VARIABLE($enabled) ) { T_RETURN T_STRING ; } T_STRING T_DOUBLE_COLON T_VARIABLE($enabled) = T_STRING ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_STRING T_DOUBLE_COLON T_VARIABLE($enabled) = T_STRING ; T_IF ( ! T_VARIABLE($cfgRelation) [ ] ) { T_RETURN T_STRING ; } T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($pma_table) ) ) { T_RETURN T_STRING ; } T_ELSE { T_RETURN T_STRING ; } } T_STATIC T_PROTECTED T_STRING ( T_VARIABLE($string) ) { T_IF ( T_STRING ( T_VARIABLE($string) , ) ) { T_VARIABLE($temp) = T_STRING ( , T_VARIABLE($string) ) ; T_VARIABLE($tablename) = T_VARIABLE($temp) [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($tablename) = T_VARIABLE($string) ; } T_VARIABLE($str) = T_STRING ( , T_VARIABLE($tablename) ) ; T_VARIABLE($tablename) = T_VARIABLE($str) [ T_LNUMBER ] ; T_VARIABLE($tablename) = T_STRING ( , , T_VARIABLE($tablename) ) ; T_VARIABLE($tablename) = T_STRING ( , , T_VARIABLE($tablename) ) ; T_VARIABLE($tablename) = T_STRING ( T_VARIABLE($tablename) ) ; T_RETURN T_VARIABLE($tablename) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) ) { T_IF ( ! T_STRING T_DOUBLE_COLON T_VARIABLE($enabled) ) { T_RETURN T_STRING ; } T_STRING T_DOUBLE_COLON T_VARIABLE($enabled) = T_STRING ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_STRING T_DOUBLE_COLON T_VARIABLE($enabled) = T_STRING ; T_IF ( ! T_VARIABLE($cfgRelation) [ ] ) { T_RETURN T_STRING ; } T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_VARIABLE($pma_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tablename) ) . . ; T_VARIABLE($row) = T_STRING ( T_STRING ( T_VARIABLE($sql_query) ) ) ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) T_BOOLEAN_AND T_VARIABLE($row) [ ] T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ; } T_ELSE { T_RETURN T_STRING ; } } T_STATIC T_PUBLIC T_STRING ( ) { T_VARIABLE($date) = T_STRING ( ) ; T_RETURN . T_VARIABLE($date) . . T_VARIABLE($GLOBALS) [ ] [ ] [ ] . ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) , T_VARIABLE($version) , T_VARIABLE($tracking_set) = , T_VARIABLE($is_view) = T_STRING ) { T_GLOBAL T_VARIABLE($sql_backquotes) , T_VARIABLE($export_type) ; T_IF ( T_VARIABLE($tracking_set) T_IS_EQUAL ) { T_VARIABLE($tracking_set) = T_STRING T_DOUBLE_COLON T_VARIABLE($default_tracking_set) ; } T_INCLUDE_ONCE ; T_VARIABLE($export_sql_plugin) = T_STRING ( , , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($export_type) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($single_table) ) ) ) ; T_VARIABLE($sql_backquotes) = T_STRING ; T_VARIABLE($date) = T_STRING ( ) ; T_VARIABLE($columns) = T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) , T_STRING , T_STRING ) ; T_VARIABLE($columns) = T_STRING ( T_VARIABLE($columns) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($columns) ) ; T_VARIABLE($i) T_INC ) { T_UNSET ( T_VARIABLE($columns) [ T_VARIABLE($i) ] [ ] ) ; } T_VARIABLE($indexes) = T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) ) ; T_VARIABLE($snapshot) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($columns) , T_DOUBLE_ARROW T_VARIABLE($indexes) ) ; T_VARIABLE($snapshot) = T_STRING ( T_VARIABLE($snapshot) ) ; T_VARIABLE($sql_backquotes) = T_STRING ; T_VARIABLE($create_sql) = ; T_IF ( T_STRING T_DOUBLE_COLON T_VARIABLE($add_drop_table) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($is_view) T_IS_EQUAL T_STRING ) { T_VARIABLE($create_sql) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tablename) ) . ; } T_IF ( T_STRING T_DOUBLE_COLON T_VARIABLE($add_drop_view) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($is_view) T_IS_EQUAL T_STRING ) { T_VARIABLE($create_sql) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tablename) ) . ; } T_VARIABLE($create_sql) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) . T_VARIABLE($export_sql_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) , , ) ; T_VARIABLE($sql_query) = . . T_STRING T_DOUBLE_COLON T_VARIABLE($pma_table) . . . . . . . . . . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tablename) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($version) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($date) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($date) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($snapshot) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($create_sql) ) . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tracking_set) ) ) . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_IF ( T_VARIABLE($result) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) , ( T_VARIABLE($version) - T_LNUMBER ) ) ; } T_RETURN T_VARIABLE($result) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) ) { T_VARIABLE($sql_query) = . . T_STRING T_DOUBLE_COLON T_VARIABLE($pma_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tablename) ) . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_RETURN T_VARIABLE($result) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($version) , T_VARIABLE($query) , T_VARIABLE($tracking_set) = ) { T_VARIABLE($date) = T_STRING ( ) ; T_IF ( T_VARIABLE($tracking_set) T_IS_EQUAL ) { T_VARIABLE($tracking_set) = T_STRING T_DOUBLE_COLON T_VARIABLE($default_tracking_set) ; } T_INCLUDE_ONCE ; T_VARIABLE($create_sql) = ; T_IF ( T_STRING T_DOUBLE_COLON T_VARIABLE($add_drop_database) T_IS_EQUAL T_STRING ) { T_VARIABLE($create_sql) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) ) . ; } T_VARIABLE($create_sql) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) . T_VARIABLE($query) ; T_VARIABLE($sql_query) = . . T_STRING T_DOUBLE_COLON T_VARIABLE($pma_table) . . . . . . . . . . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) ) . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($version) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($date) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($date) ) . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($create_sql) ) . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tracking_set) ) ) . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_RETURN T_VARIABLE($result) ; } T_STATIC T_PRIVATE T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) , T_VARIABLE($version) , T_VARIABLE($new_state) ) { T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_VARIABLE($pma_table) . . T_VARIABLE($new_state) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tablename) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($version) ) . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_RETURN T_VARIABLE($result) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) , T_VARIABLE($version) , T_VARIABLE($type) , T_VARIABLE($new_data) ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($save_to) = ; } T_ELSEIF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($save_to) = ; } T_ELSE { T_RETURN T_STRING ; } T_VARIABLE($date) = T_STRING ( ) ; T_VARIABLE($new_data_processed) = ; T_IF ( T_STRING ( T_VARIABLE($new_data) ) ) { T_FOREACH ( T_VARIABLE($new_data) T_AS T_VARIABLE($data) ) { T_VARIABLE($new_data_processed) T_CONCAT_EQUAL . T_VARIABLE($date) . . T_VARIABLE($data) [ ] . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($data) [ ] ) . ; } } T_ELSE { T_VARIABLE($new_data_processed) = T_VARIABLE($new_data) ; } T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_VARIABLE($pma_table) . . T_VARIABLE($save_to) . . T_VARIABLE($new_data_processed) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tablename) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($version) ) . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_RETURN T_VARIABLE($result) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) , T_VARIABLE($version) ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) , T_VARIABLE($version) , T_LNUMBER ) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) , T_VARIABLE($version) ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) , T_VARIABLE($version) , T_LNUMBER ) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) , T_VARIABLE($statement) = T_STRING ) { T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_VARIABLE($pma_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tablename) ) . ; T_IF ( T_VARIABLE($statement) T_IS_NOT_EQUAL ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL T_STRING ? . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($statement) ) . : . T_VARIABLE($statement) . ; } T_VARIABLE($row) = T_STRING ( T_STRING ( T_VARIABLE($sql_query) ) ) ; T_RETURN T_ISSET ( T_VARIABLE($row) [ T_LNUMBER ] ) ? T_VARIABLE($row) [ T_LNUMBER ] : - T_LNUMBER ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($tablename) , T_VARIABLE($version) ) { T_IF ( ! T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($pma_table) ) ) { T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_VARIABLE($pma_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) ) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($tablename) ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tablename) ) . ; } T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($version) ) . . ; T_VARIABLE($mixed) = T_STRING ( T_STRING ( T_VARIABLE($sql_query) ) ) ; T_VARIABLE($log_schema_entries) = T_STRING ( , T_VARIABLE($mixed) [ ] ) ; T_VARIABLE($log_data_entries) = T_STRING ( , T_VARIABLE($mixed) [ ] ) ; T_VARIABLE($ddl_date_from) = T_VARIABLE($date) = T_STRING ( ) ; T_VARIABLE($ddlog) = T_ARRAY ( ) ; T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($log_schema_entries) T_AS T_VARIABLE($log_entry) ) { T_IF ( T_STRING ( T_VARIABLE($log_entry) ) T_IS_NOT_EQUAL ) { T_VARIABLE($date) = T_STRING ( T_VARIABLE($log_entry) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($username) = T_STRING ( T_VARIABLE($log_entry) , T_LNUMBER , T_STRING ( T_VARIABLE($log_entry) , ) - T_LNUMBER ) ; T_IF ( T_VARIABLE($i) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($ddl_date_from) = T_VARIABLE($date) ; } T_VARIABLE($statement) = T_STRING ( T_STRING ( T_VARIABLE($log_entry) , ) ) ; T_VARIABLE($ddlog) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($date) , T_DOUBLE_ARROW T_VARIABLE($username) , T_DOUBLE_ARROW T_VARIABLE($statement) ) ; T_VARIABLE($i) T_INC ; } } T_VARIABLE($date_from) = T_VARIABLE($ddl_date_from) ; T_VARIABLE($date_to) = T_VARIABLE($ddl_date_to) = T_VARIABLE($date) ; T_VARIABLE($dml_date_from) = T_VARIABLE($date_from) ; T_VARIABLE($dmlog) = T_ARRAY ( ) ; T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($log_data_entries) T_AS T_VARIABLE($log_entry) ) { T_IF ( T_STRING ( T_VARIABLE($log_entry) ) T_IS_NOT_EQUAL ) { T_VARIABLE($date) = T_STRING ( T_VARIABLE($log_entry) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($username) = T_STRING ( T_VARIABLE($log_entry) , T_LNUMBER , T_STRING ( T_VARIABLE($log_entry) , ) - T_LNUMBER ) ; T_IF ( T_VARIABLE($i) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($dml_date_from) = T_VARIABLE($date) ; } T_VARIABLE($statement) = T_STRING ( T_STRING ( T_VARIABLE($log_entry) , ) ) ; T_VARIABLE($dmlog) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($date) , T_DOUBLE_ARROW T_VARIABLE($username) , T_DOUBLE_ARROW T_VARIABLE($statement) ) ; T_VARIABLE($i) T_INC ; } } T_VARIABLE($dml_date_to) = T_VARIABLE($date) ; T_IF ( T_STRING ( T_VARIABLE($ddl_date_from) ) T_IS_SMALLER_OR_EQUAL T_STRING ( T_VARIABLE($dml_date_from) ) ) { T_VARIABLE($data) [ ] = T_VARIABLE($ddl_date_from) ; } T_ELSE { T_VARIABLE($data) [ ] = T_VARIABLE($dml_date_from) ; } T_IF ( T_STRING ( T_VARIABLE($ddl_date_to) ) T_IS_GREATER_OR_EQUAL T_STRING ( T_VARIABLE($dml_date_to) ) ) { T_VARIABLE($data) [ ] = T_VARIABLE($ddl_date_to) ; } T_ELSE { T_VARIABLE($data) [ ] = T_VARIABLE($dml_date_to) ; } T_VARIABLE($data) [ ] = T_VARIABLE($ddlog) ; T_VARIABLE($data) [ ] = T_VARIABLE($dmlog) ; T_VARIABLE($data) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($mixed) [ ] ) ; T_VARIABLE($data) [ ] = T_VARIABLE($mixed) [ ] ; T_RETURN T_VARIABLE($data) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($query) ) { T_VARIABLE($query) = T_STRING ( , , T_VARIABLE($query) ) ; T_VARIABLE($query) = T_STRING ( , , T_VARIABLE($query) ) ; T_VARIABLE($query) = T_STRING ( T_VARIABLE($query) ) ; T_VARIABLE($query) = T_STRING ( T_VARIABLE($query) , ) ; T_VARIABLE($tokens) = T_STRING ( , T_VARIABLE($query) ) ; T_FOREACH ( T_VARIABLE($tokens) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($tokens) [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($value) ) ; } T_IF ( T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($prefix) = T_STRING ( , T_VARIABLE($query) ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($prefix) [ T_LNUMBER ] ) ; } T_VARIABLE($result) [ ] = ; T_IF ( T_STRING ( , T_VARIABLE($tokens) ) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_STRING ( , T_VARIABLE($tokens) ) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_STRING ( , T_VARIABLE($tokens) ) T_IS_EQUAL T_STRING ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($index) = T_STRING ( , T_VARIABLE($tokens) ) ; T_VARIABLE($result) [ ] = T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tokens) [ T_VARIABLE($index) + T_LNUMBER ] ) ) ; } T_IF ( T_STRING ( , T_VARIABLE($tokens) ) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_STRING ( , T_VARIABLE($tokens) ) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_STRING ( , T_VARIABLE($tokens) ) T_IS_EQUAL T_STRING T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($result) [ ] ) ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($index) = T_STRING ( , T_VARIABLE($tokens) ) ; T_VARIABLE($result) [ ] = T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tokens) [ T_VARIABLE($index) + T_LNUMBER ] ) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($prefix) = T_STRING ( , T_VARIABLE($query) ) ; T_VARIABLE($str) = T_STRING ( T_VARIABLE($prefix) [ T_LNUMBER ] , ) ; T_IF ( T_VARIABLE($str) T_IS_EQUAL T_STRING ) { T_VARIABLE($str) = T_VARIABLE($prefix) [ T_LNUMBER ] ; } T_VARIABLE($result) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($str) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($str) = T_STRING ( , , T_VARIABLE($query) ) ; T_VARIABLE($str) = T_STRING ( , , T_VARIABLE($str) ) ; T_VARIABLE($prefix) = T_STRING ( , T_VARIABLE($str) ) ; T_VARIABLE($result) [ ] = ; T_VARIABLE($GLOBALS) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($prefix) [ T_LNUMBER ] ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($result) [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($str) = T_STRING ( , , T_VARIABLE($query) ) ; T_VARIABLE($str) = T_STRING ( , , T_VARIABLE($str) ) ; T_VARIABLE($GLOBALS) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($str) ) ; T_VARIABLE($result) [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($query) = T_STRING ( , , T_VARIABLE($query) ) ; T_VARIABLE($prefix) = T_STRING ( , T_VARIABLE($query) ) ; T_VARIABLE($suffix) = T_STRING ( , T_VARIABLE($prefix) [ T_LNUMBER ] ) ; T_VARIABLE($result) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($suffix) [ T_LNUMBER ] ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($prefix) = T_STRING ( , T_VARIABLE($query) ) ; T_VARIABLE($suffix) = T_STRING ( , T_VARIABLE($prefix) [ T_LNUMBER ] ) ; T_VARIABLE($result) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($suffix) [ T_LNUMBER ] ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($prefix) = T_STRING ( , T_VARIABLE($query) ) ; T_VARIABLE($str) = T_STRING ( T_VARIABLE($prefix) [ T_LNUMBER ] , ) ; T_IF ( T_VARIABLE($str) T_IS_EQUAL T_STRING ) { T_VARIABLE($str) = T_VARIABLE($prefix) [ T_LNUMBER ] ; } T_VARIABLE($result) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($str) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL T_BOOLEAN_OR T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL T_BOOLEAN_OR T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($prefix) = T_STRING ( , T_VARIABLE($query) ) ; T_VARIABLE($suffix) = T_STRING ( , T_VARIABLE($prefix) [ T_LNUMBER ] ) ; T_VARIABLE($result) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($suffix) [ T_LNUMBER ] ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($prefix) = T_STRING ( , T_VARIABLE($query) ) ; T_VARIABLE($result) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($prefix) [ T_LNUMBER ] ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($prefix) = T_STRING ( , T_VARIABLE($query) ) ; T_VARIABLE($names) = T_STRING ( , T_VARIABLE($prefix) [ T_LNUMBER ] ) ; T_VARIABLE($result) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($names) [ T_LNUMBER ] ) ; T_VARIABLE($result) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($names) [ T_LNUMBER ] ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ ] ) ) { T_VARIABLE($result) [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($prefix) = T_STRING ( , T_VARIABLE($query) ) ; T_VARIABLE($suffix) = T_STRING ( , T_VARIABLE($prefix) [ T_LNUMBER ] ) ; T_VARIABLE($result) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($suffix) [ T_LNUMBER ] ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($prefix) = T_STRING ( , T_VARIABLE($query) ) ; T_VARIABLE($suffix) = T_STRING ( , T_VARIABLE($prefix) [ T_LNUMBER ] ) ; T_VARIABLE($result) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($suffix) [ T_LNUMBER ] ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($prefix) = T_STRING ( , T_VARIABLE($query) ) ; T_VARIABLE($suffix) = T_STRING ( , T_VARIABLE($prefix) [ T_LNUMBER ] ) ; T_VARIABLE($result) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($suffix) [ T_LNUMBER ] ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($result) [ ] = ; T_VARIABLE($prefix) = T_STRING ( , T_VARIABLE($query) ) ; T_VARIABLE($result) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($prefix) [ T_LNUMBER ] ) ; } T_RETURN T_VARIABLE($result) ; } T_STATIC T_PUBLIC T_STRING ( T_VARIABLE($query) ) { T_IF ( T_STRING ( T_VARIABLE($query) , ) ) { T_RETURN ; } T_IF ( ! ( T_STRING ( T_VARIABLE($query) , - T_LNUMBER ) T_IS_EQUAL ) ) { T_VARIABLE($query) = T_VARIABLE($query) . ; } T_VARIABLE($result) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($query) ) ; T_VARIABLE($dbname) = T_STRING ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : , ) ; T_IF ( T_EMPTY ( T_VARIABLE($dbname) ) ) { T_RETURN ; } T_VARIABLE($dbname) = T_STRING ( , , T_VARIABLE($dbname) ) ; T_IF ( T_ISSET ( T_VARIABLE($result) [ ] ) ) { T_VARIABLE($version) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($result) [ ] , T_VARIABLE($result) [ ] ) ; T_IF ( T_STRING T_DOUBLE_COLON T_VARIABLE($version_auto_create) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($result) [ ] ) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($version) T_IS_EQUAL - T_LNUMBER ) { T_SWITCH ( T_VARIABLE($result) [ ] ) { T_CASE : T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($result) [ ] , ) ; T_BREAK ; T_CASE : T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($result) [ ] , , , T_STRING ) ; T_BREAK ; T_CASE : T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) , , T_VARIABLE($query) ) ; T_BREAK ; } } T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) , T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_VARIABLE($version) T_IS_NOT_EQUAL - T_LNUMBER ) { T_IF ( T_VARIABLE($result) [ ] T_IS_EQUAL ) { T_VARIABLE($save_to) = ; } T_ELSEIF ( T_VARIABLE($result) [ ] T_IS_EQUAL ) { T_VARIABLE($save_to) = ; } T_ELSE { T_VARIABLE($save_to) = ; } T_VARIABLE($date) = T_STRING ( ) ; T_VARIABLE($query) = T_STRING ( . T_VARIABLE($dbname) . , , T_VARIABLE($query) ) ; T_VARIABLE($query) = T_STRING T_DOUBLE_COLON T_STRING ( ) . T_VARIABLE($query) ; T_VARIABLE($sql_query) = . . T_STRING T_DOUBLE_COLON T_VARIABLE($pma_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($save_to) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($save_to) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($query) ) . . . T_VARIABLE($date) . ; T_IF ( T_VARIABLE($result) [ ] T_IS_EQUAL ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($result) [ ] ) . ; } T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($result) [ ] . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($result) [ ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($version) ) . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; } } } T_STATIC T_PRIVATE T_STRING ( T_VARIABLE($tracking_set) ) { T_IF ( ! T_STRING ) { T_RETURN T_VARIABLE($tracking_set) ; } T_IF ( T_ISSET ( T_STRING T_DOUBLE_COLON T_VARIABLE($_tracking_set_flags) [ T_LNUMBER ] ) ) { T_VARIABLE($set) = T_STRING T_DOUBLE_COLON T_VARIABLE($_tracking_set_flags) ; T_VARIABLE($array) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($set) ) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($flag) = T_LNUMBER T_SL T_VARIABLE($i) ; T_VARIABLE($array) [ T_VARIABLE($flag) ] = T_VARIABLE($set) [ T_VARIABLE($i) ] ; T_VARIABLE($array) [ T_VARIABLE($set) [ T_VARIABLE($i) ] ] = T_VARIABLE($flag) ; } T_STRING T_DOUBLE_COLON T_VARIABLE($_tracking_set_flags) = T_VARIABLE($array) ; } T_IF ( T_STRING ( T_VARIABLE($tracking_set) ) ) { T_VARIABLE($aflags) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_STRING T_DOUBLE_COLON T_VARIABLE($_tracking_set_flags) ) / T_LNUMBER ; T_VARIABLE($i) T_INC ) { T_VARIABLE($flag) = T_LNUMBER T_SL T_VARIABLE($i) ; T_IF ( T_VARIABLE($tracking_set) & T_VARIABLE($flag) ) { T_VARIABLE($aflags) [ ] = T_STRING T_DOUBLE_COLON T_VARIABLE($_tracking_set_flags) [ T_VARIABLE($flag) ] ; } } T_VARIABLE($flags) = T_STRING ( , T_VARIABLE($aflags) ) ; } T_ELSE { T_VARIABLE($flags) = T_LNUMBER ; T_FOREACH ( T_STRING ( , T_VARIABLE($tracking_set) ) T_AS T_VARIABLE($strflag) ) { T_IF ( T_VARIABLE($strflag) T_IS_EQUAL ) { T_CONTINUE ; } T_VARIABLE($flags) T_OR_EQUAL T_STRING T_DOUBLE_COLON T_VARIABLE($_tracking_set_flags) [ T_VARIABLE($strflag) ] ; } } T_RETURN T_VARIABLE($flags) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_transformation_getOptions) ( T_VARIABLE($option_string) ) { T_VARIABLE($result) = T_ARRAY ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($option_string) ) T_BOOLEAN_OR ! T_VARIABLE($transform_options) = T_STRING ( , T_VARIABLE($option_string) ) ) { T_RETURN T_VARIABLE($result) ; } T_WHILE ( ( T_VARIABLE($option) = T_STRING ( T_VARIABLE($transform_options) ) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($trimmed) = T_STRING ( T_VARIABLE($option) ) ; T_IF ( T_STRING ( T_VARIABLE($trimmed) ) > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($trimmed) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($trimmed) [ T_STRING ( T_VARIABLE($trimmed) ) - T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($option) = T_STRING ( T_VARIABLE($trimmed) , T_LNUMBER , - T_LNUMBER ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($trimmed) [ T_LNUMBER ] ) T_BOOLEAN_AND T_VARIABLE($trimmed) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($trimmed) = T_STRING ( T_VARIABLE($option) ) ; T_WHILE ( ( T_VARIABLE($option) = T_STRING ( T_VARIABLE($transform_options) ) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($trimmed) T_CONCAT_EQUAL . T_VARIABLE($option) ; T_VARIABLE($rtrimmed) = T_STRING ( T_VARIABLE($trimmed) ) ; T_IF ( T_VARIABLE($rtrimmed) [ T_STRING ( T_VARIABLE($rtrimmed) ) - T_LNUMBER ] T_IS_EQUAL ) { T_BREAK ; } } T_VARIABLE($option) = T_STRING ( T_VARIABLE($rtrimmed) , T_LNUMBER , - T_LNUMBER ) ; } T_VARIABLE($result) [ ] = T_STRING ( T_VARIABLE($option) ) ; } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(PMA_getAvailableMIMEtypes) ( ) { T_STATIC T_VARIABLE($stack) = T_STRING ; T_IF ( T_STRING T_IS_NOT_IDENTICAL T_VARIABLE($stack) ) { T_RETURN T_VARIABLE($stack) ; } T_VARIABLE($stack) = T_ARRAY ( ) ; T_VARIABLE($filestack) = T_ARRAY ( ) ; T_VARIABLE($handle) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($handle) ) { T_RETURN T_VARIABLE($stack) ; } T_WHILE ( T_VARIABLE($file) = T_STRING ( T_VARIABLE($handle) ) ) { T_VARIABLE($filestack) [ ] = T_VARIABLE($file) ; } T_STRING ( T_VARIABLE($handle) ) ; T_STRING ( T_VARIABLE($filestack) ) ; T_FOREACH ( T_VARIABLE($filestack) T_AS T_VARIABLE($file) ) { T_IF ( T_STRING ( , T_VARIABLE($file) ) ) { T_VARIABLE($parts) = T_STRING ( , T_STRING ( , , T_VARIABLE($file) ) ) ; T_VARIABLE($mimetype) = T_VARIABLE($parts) [ T_LNUMBER ] . . T_VARIABLE($parts) [ T_LNUMBER ] ; T_VARIABLE($stack) [ ] [ T_VARIABLE($mimetype) ] = T_VARIABLE($mimetype) ; T_VARIABLE($stack) [ ] [ ] = T_VARIABLE($mimetype) . . T_VARIABLE($parts) [ T_LNUMBER ] ; T_VARIABLE($stack) [ ] [ ] = T_VARIABLE($file) ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($file) ) ) { T_VARIABLE($base) = T_STRING ( , , T_VARIABLE($file) ) ; T_IF ( T_VARIABLE($base) T_IS_NOT_EQUAL ) { T_VARIABLE($mimetype) = T_STRING ( , , T_VARIABLE($base) ) ; T_VARIABLE($stack) [ ] [ T_VARIABLE($mimetype) ] = T_VARIABLE($mimetype) ; T_VARIABLE($stack) [ ] [ T_VARIABLE($mimetype) ] = T_VARIABLE($mimetype) ; } } } T_RETURN T_VARIABLE($stack) ; } T_FUNCTION(PMA_getTransformationDescription) ( T_VARIABLE($file) , T_VARIABLE($html_formatted) = T_STRING ) { T_VARIABLE($class_name) = T_STRING ( , T_VARIABLE($file) ) ; T_VARIABLE($class_name) = T_VARIABLE($class_name) [ T_LNUMBER ] ; T_INCLUDE_ONCE . T_VARIABLE($file) ; T_VARIABLE($functionGetInfo) = T_VARIABLE($class_name) . ; T_RETURN T_VARIABLE($functionGetInfo) ( ) ; } T_FUNCTION(PMA_getMIME) ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($strict) = T_STRING ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($cfgRelation) [ ] ) { T_RETURN T_STRING ; } T_VARIABLE($com_qry) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . ( ! T_VARIABLE($strict) ? : ) . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($com_qry) , , T_STRING , T_VARIABLE($GLOBALS) [ ] ) ; T_FOREACH ( T_VARIABLE($result) T_AS T_VARIABLE($column) T_DOUBLE_ARROW T_VARIABLE($values) ) { T_VARIABLE($values) = T_STRING ( , , T_VARIABLE($values) ) ; T_VARIABLE($values) = T_STRING ( , , T_VARIABLE($values) ) ; T_VARIABLE($values) = T_STRING ( , , T_VARIABLE($values) ) ; T_VARIABLE($delimiter_space) = ; T_VARIABLE($delimiter) = ; T_VARIABLE($values) [ ] = T_STRING ( T_VARIABLE($delimiter_space) , T_VARIABLE($delimiter) , T_STRING ( T_STRING ( T_VARIABLE($delimiter) , T_VARIABLE($delimiter_space) , T_VARIABLE($values) [ ] ) ) ) ; T_VARIABLE($values) = T_STRING ( , , T_VARIABLE($values) ) ; T_VARIABLE($values) = T_STRING ( , , T_VARIABLE($values) ) ; T_VARIABLE($values) [ ] = T_STRING ( T_VARIABLE($delimiter_space) , T_VARIABLE($delimiter) , T_STRING ( T_STRING ( T_VARIABLE($delimiter) , T_VARIABLE($delimiter_space) , T_VARIABLE($values) [ ] ) ) ) ; T_VARIABLE($result) [ T_VARIABLE($column) ] = T_VARIABLE($values) ; } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(PMA_setMIME) ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($key) , T_VARIABLE($mimetype) , T_VARIABLE($transformation) , T_VARIABLE($transformation_options) , T_VARIABLE($forcedelete) = T_STRING ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($cfgRelation) [ ] ) { T_RETURN T_STRING ; } T_VARIABLE($mimetype) = T_STRING ( T_VARIABLE($mimetype) ) ; T_IF ( T_STRING ( T_VARIABLE($mimetype) , ) ) { T_VARIABLE($mimetype) = ; } T_VARIABLE($transformation) = T_STRING ( T_VARIABLE($transformation) ) ; T_VARIABLE($transformation) = T_STRING ( , , T_VARIABLE($transformation) ) ; T_VARIABLE($last_pos) = T_STRING ( T_VARIABLE($transformation) , ) ; T_VARIABLE($transformation) = T_STRING ( T_VARIABLE($transformation) , T_LNUMBER , T_VARIABLE($last_pos) ) . . T_STRING ( T_VARIABLE($transformation) , T_VARIABLE($last_pos) ) ; T_VARIABLE($test_qry) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($key) ) . ; T_VARIABLE($test_rs) = T_STRING ( T_VARIABLE($test_qry) , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($test_rs) T_BOOLEAN_AND T_STRING ( T_VARIABLE($test_rs) ) > T_LNUMBER ) { T_VARIABLE($row) = @ T_STRING ( T_VARIABLE($test_rs) ) ; T_STRING ( T_VARIABLE($test_rs) ) ; T_IF ( ! T_VARIABLE($forcedelete) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($mimetype) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($transformation) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($transformation_options) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($row) [ ] ) ) ) { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($mimetype) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($transformation) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($transformation_options) ) . ; } T_ELSE { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) ; } T_VARIABLE($upd_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($key) ) . ; } T_ELSEIF ( T_STRING ( T_VARIABLE($mimetype) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($transformation) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($transformation_options) ) ) { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($key) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($mimetype) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($transformation) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($transformation_options) ) . ; } T_IF ( T_ISSET ( T_VARIABLE($upd_query) ) ) { T_RETURN T_STRING ( T_VARIABLE($upd_query) ) ; } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(PMA_transformation_global_html_replace) ( T_VARIABLE($buffer) , T_VARIABLE($options) = T_ARRAY ( ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($options) [ ] ) ) { T_VARIABLE($options) [ ] = ; } T_IF ( T_ISSET ( T_VARIABLE($options) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($options) [ ] ) ) { T_VARIABLE($buffer) = T_STRING ( . T_STRING ( , , T_VARIABLE($options) [ ] ) . , T_VARIABLE($options) [ ] , T_VARIABLE($buffer) ) ; } T_VARIABLE($return) = T_STRING ( , T_VARIABLE($buffer) , T_VARIABLE($options) [ ] ) ; T_RETURN T_VARIABLE($return) ; } T_FUNCTION(PMA_clearTransformations) ( T_VARIABLE($db) , T_VARIABLE($table) = , T_VARIABLE($column) = ) { T_IF ( ! T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) ) { T_RETURN T_STRING ; } T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_VARIABLE($delete_sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . ; T_IF ( ( T_VARIABLE($column) T_IS_NOT_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($table) T_IS_NOT_EQUAL ) ) { T_VARIABLE($delete_sql) T_CONCAT_EQUAL . T_VARIABLE($db) . . . T_VARIABLE($table) . . . T_VARIABLE($column) . ; } T_ELSE T_IF ( T_VARIABLE($table) T_IS_NOT_EQUAL ) { T_VARIABLE($delete_sql) T_CONCAT_EQUAL . T_VARIABLE($db) . . . T_VARIABLE($table) . ; } T_ELSE { T_VARIABLE($delete_sql) T_CONCAT_EQUAL . T_VARIABLE($db) . ; } T_RETURN T_STRING ( T_VARIABLE($delete_sql) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( , , , , ) ; } T_PUBLIC T_STRING ( T_VARIABLE($op) ) { T_RETURN T_STRING ( T_VARIABLE($op) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( , , ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( , , ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( , , , , , , , , , , , , , , ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( , , , , , , , , , , , , , ) ; } T_PUBLIC T_STRING ( T_VARIABLE($type) , T_VARIABLE($null) ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($class) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($type) ) ; T_IF ( T_STRING ( T_VARIABLE($type) , , T_LNUMBER ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($ret) = T_STRING ( T_VARIABLE($ret) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_ELSEIF ( T_VARIABLE($class) T_IS_EQUAL ) { T_VARIABLE($ret) = T_STRING ( T_VARIABLE($ret) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($ret) = T_STRING ( T_VARIABLE($ret) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_IF ( T_VARIABLE($null) ) { T_VARIABLE($ret) = T_STRING ( T_VARIABLE($ret) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_RETURN T_VARIABLE($ret) ; } T_PUBLIC T_STRING ( T_VARIABLE($type) , T_VARIABLE($null) , T_VARIABLE($selectedOperator) = T_STRING ) { T_VARIABLE($html) = ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($type) , T_VARIABLE($null) ) T_AS T_VARIABLE($fc) ) { T_IF ( T_ISSET ( T_VARIABLE($selectedOperator) ) T_BOOLEAN_AND T_VARIABLE($selectedOperator) T_IS_EQUAL T_VARIABLE($fc) ) { T_VARIABLE($html) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($fc) ) . . T_STRING ( T_VARIABLE($fc) ) . ; } T_ELSE { T_VARIABLE($html) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($fc) ) . . T_STRING ( T_VARIABLE($fc) ) . ; } } T_RETURN T_VARIABLE($html) ; } T_PUBLIC T_STRING ( T_VARIABLE($type) ) { T_RETURN ; } T_PUBLIC T_STRING ( T_VARIABLE($type) ) { T_RETURN ; } T_PUBLIC T_STRING ( T_VARIABLE($class) ) { T_RETURN T_ARRAY ( ) ; } T_PUBLIC T_STRING ( T_VARIABLE($type) ) { T_VARIABLE($class) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($type) ) ; T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($class) ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($ret) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_STRING ( T_VARIABLE($ret) ) ; T_RETURN T_VARIABLE($ret) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( , , , , ) ; } } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( T_VARIABLE($type) ) { T_VARIABLE($type) = T_STRING ( T_VARIABLE($type) ) ; T_SWITCH ( T_VARIABLE($type) ) {} T_RETURN ; } T_PUBLIC T_STRING ( T_VARIABLE($type) ) { T_VARIABLE($type) = T_STRING ( T_VARIABLE($type) ) ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_RETURN ; T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_RETURN ; T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_RETURN ; T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_RETURN ; } T_RETURN ; } T_PUBLIC T_STRING ( T_VARIABLE($class) ) { T_SWITCH ( T_VARIABLE($class) ) { T_CASE : T_RETURN T_ARRAY ( , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ) ; T_CASE : T_RETURN T_ARRAY ( , , , , , , , , , , , , , , , ) ; T_CASE : T_VARIABLE($ret) = T_ARRAY ( , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ) ; T_IF ( T_STRING < T_LNUMBER ) { T_VARIABLE($ret) = T_STRING ( T_VARIABLE($ret) , T_ARRAY ( ) ) ; } T_IF ( T_STRING < T_LNUMBER ) { T_VARIABLE($ret) = T_STRING ( T_VARIABLE($ret) , T_ARRAY ( ) ) ; } T_RETURN T_VARIABLE($ret) ; T_CASE : T_RETURN T_ARRAY ( , , , , , , , , , , , , , , , , ) ; } T_RETURN T_ARRAY ( ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( , , , , , ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($ret) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($ret) [ T_STRING ( , ) ] = T_ARRAY ( , , , , , , , , , , , , , , ) ; T_VARIABLE($ret) [ T_STRING ( , ) ] = T_ARRAY ( , , , , , ) ; T_VARIABLE($ret) [ T_STRING ( , ) ] = T_ARRAY ( , , , , , , , , , , , , , , , , , , ) ; T_VARIABLE($ret) [ T_STRING ( , ) ] = T_ARRAY ( , , , , , , , , ) ; T_RETURN T_VARIABLE($ret) ; } } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( T_VARIABLE($type) ) { T_VARIABLE($type) = T_STRING ( T_VARIABLE($type) ) ; T_SWITCH ( T_VARIABLE($type) ) {} T_RETURN ; } T_PUBLIC T_STRING ( T_VARIABLE($type) ) { T_VARIABLE($type) = T_STRING ( T_VARIABLE($type) ) ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_RETURN ; T_CASE : T_CASE : T_CASE : T_CASE : T_RETURN ; T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_RETURN ; T_CASE : T_RETURN ; } T_RETURN ; } T_PUBLIC T_STRING ( T_VARIABLE($class) ) { T_SWITCH ( T_VARIABLE($class) ) { T_CASE : T_VARIABLE($ret) = T_ARRAY ( , , , , , , , , , , , , , , , , , , , , , , , , ) ; T_VARIABLE($functions) = T_ARRAY ( , , ) ; T_VARIABLE($sql) = . T_STRING ( , T_VARIABLE($functions) ) . ; T_VARIABLE($drizzle_functions) = T_STRING ( T_VARIABLE($sql) , , ) ; T_IF ( T_STRING ( T_VARIABLE($drizzle_functions) ) > T_LNUMBER ) { T_VARIABLE($ret) = T_STRING ( T_VARIABLE($ret) , T_VARIABLE($drizzle_functions) ) ; T_STRING ( T_VARIABLE($ret) ) ; } T_RETURN T_VARIABLE($ret) ; T_CASE : T_RETURN T_ARRAY ( , ) ; T_CASE : T_RETURN T_ARRAY ( , , , , , , , , , , , , , ) ; T_CASE : T_RETURN T_ARRAY ( , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ) ; } T_RETURN T_ARRAY ( ) ; } T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( , , ) ; } T_PUBLIC T_STRING ( ) { T_VARIABLE($types_num) = T_ARRAY ( , , , , , , , , , ) ; T_VARIABLE($types_date) = T_ARRAY ( , , , , ) ; T_VARIABLE($types_string) = T_ARRAY ( , , , , , , , ) ; T_IF ( T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($types_string) [ ] = ; T_VARIABLE($types_string) [ ] = ; } T_VARIABLE($ret) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($ret) [ T_STRING ( , ) ] = T_VARIABLE($types_num) ; T_VARIABLE($ret) [ T_STRING ( , ) ] = T_VARIABLE($types_date) ; T_VARIABLE($ret) [ T_STRING ( , ) ] = T_VARIABLE($types_string) ; T_RETURN T_VARIABLE($ret) ; } }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_generate_common_hidden_inputs) ( T_VARIABLE($db) = , T_VARIABLE($table) = , T_VARIABLE($indent) = T_LNUMBER , T_VARIABLE($skip) = T_ARRAY ( ) ) { T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($params) = & T_VARIABLE($db) ; T_VARIABLE($_indent) = T_EMPTY ( T_VARIABLE($table) ) ? T_VARIABLE($indent) : T_VARIABLE($table) ; T_VARIABLE($_skip) = T_EMPTY ( T_VARIABLE($indent) ) ? T_VARIABLE($skip) : T_VARIABLE($indent) ; T_VARIABLE($indent) = & T_VARIABLE($_indent) ; T_VARIABLE($skip) = & T_VARIABLE($_skip) ; } T_ELSE { T_VARIABLE($params) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($params) [ ] = T_VARIABLE($db) ; } T_IF ( T_STRING ( T_VARIABLE($table) ) ) { T_VARIABLE($params) [ ] = T_VARIABLE($table) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($params) [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_EMPTY ( T_VARIABLE($_COOKIE) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($params) [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_EMPTY ( T_VARIABLE($_COOKIE) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($params) [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_VARIABLE($params) [ ] = T_VARIABLE($_SESSION) [ ] ; T_IF ( ! T_STRING ( T_VARIABLE($skip) ) ) { T_IF ( T_ISSET ( T_VARIABLE($params) [ T_VARIABLE($skip) ] ) ) { T_UNSET ( T_VARIABLE($params) [ T_VARIABLE($skip) ] ) ; } } T_ELSE { T_FOREACH ( T_VARIABLE($skip) T_AS T_VARIABLE($skipping) ) { T_IF ( T_ISSET ( T_VARIABLE($params) [ T_VARIABLE($skipping) ] ) ) { T_UNSET ( T_VARIABLE($params) [ T_VARIABLE($skipping) ] ) ; } } } T_RETURN T_STRING ( T_VARIABLE($params) ) ; } T_FUNCTION(PMA_getHiddenFields) ( T_VARIABLE($values) , T_VARIABLE($pre) = ) { T_VARIABLE($fields) = ; T_FOREACH ( T_VARIABLE($values) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($pre) ) ) { T_VARIABLE($name) = T_VARIABLE($pre) . . T_VARIABLE($name) . ; } T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_VARIABLE($fields) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($value) , T_VARIABLE($name) ) ; } T_ELSE { T_VARIABLE($fields) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($name) ) . . T_STRING ( T_VARIABLE($value) ) . ; } } T_RETURN T_VARIABLE($fields) ; } T_FUNCTION(PMA_generate_common_url) ( ) { T_VARIABLE($args) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($args) [ T_LNUMBER ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_VARIABLE($params) = T_VARIABLE($args) [ T_LNUMBER ] ; T_IF ( T_ISSET ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_VARIABLE($encode) = T_VARIABLE($args) [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($encode) = ; } T_IF ( T_ISSET ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_VARIABLE($questionmark) = T_VARIABLE($args) [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($questionmark) = ; } } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_VARIABLE($params) [ ] = T_VARIABLE($args) [ T_LNUMBER ] ; } T_IF ( T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_VARIABLE($params) [ ] = T_VARIABLE($args) [ T_LNUMBER ] ; } T_IF ( T_ISSET ( T_VARIABLE($args) [ T_LNUMBER ] ) T_BOOLEAN_AND T_VARIABLE($args) [ T_LNUMBER ] T_IS_NOT_IDENTICAL ) { T_VARIABLE($encode) = ; } T_ELSE { T_VARIABLE($encode) = ; } T_VARIABLE($questionmark) = ; } T_VARIABLE($separator) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($params) [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_EMPTY ( T_VARIABLE($_COOKIE) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($params) [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_EMPTY ( T_VARIABLE($_COOKIE) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($params) [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($params) [ ] = T_VARIABLE($_SESSION) [ ] ; } T_IF ( T_EMPTY ( T_VARIABLE($params) ) ) { T_RETURN ; } T_VARIABLE($query) = T_VARIABLE($questionmark) . T_STRING ( T_VARIABLE($params) , T_STRING , T_VARIABLE($separator) ) ; T_IF ( T_VARIABLE($encode) T_IS_IDENTICAL ) { T_VARIABLE($query) = T_STRING ( T_VARIABLE($query) ) ; } T_RETURN T_VARIABLE($query) ; } T_FUNCTION(PMA_get_arg_separator) ( T_VARIABLE($encode) = ) { T_STATIC T_VARIABLE($separator) = T_STRING ; T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($separator) ) { T_VARIABLE($php_arg_separator_input) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($php_arg_separator_input) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($separator) = ; } T_ELSEIF ( T_STRING ( T_VARIABLE($php_arg_separator_input) ) > T_LNUMBER ) { T_VARIABLE($separator) = T_VARIABLE($php_arg_separator_input) { T_LNUMBER } ; } T_ELSE { T_VARIABLE($separator) = ; } } T_SWITCH ( T_VARIABLE($encode) ) { T_CASE : T_RETURN T_STRING ( T_VARIABLE($separator) ) ; T_BREAK ; T_CASE : T_CASE : T_DEFAULT : T_RETURN T_VARIABLE($separator) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_VARIABLE($form_param) = T_STRING ( T_STRING , ) ; T_IF ( ! T_ISSET ( T_VARIABLE($forms) [ T_VARIABLE($form_param) ] ) ) { T_VARIABLE($forms_keys) = T_STRING ( T_VARIABLE($forms) ) ; T_VARIABLE($form_param) = T_STRING ( T_VARIABLE($forms_keys) ) ; } T_VARIABLE($tabs_icons) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_ECHO ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_ECHO . ; T_VARIABLE($script_name) = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_FOREACH ( T_STRING ( T_VARIABLE($forms) ) T_AS T_VARIABLE($formset) ) { T_VARIABLE($tab) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($formset) ) , T_DOUBLE_ARROW T_VARIABLE($tabs_icons) [ T_VARIABLE($formset) ] , T_DOUBLE_ARROW ( T_VARIABLE($script_name) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($formset) T_IS_EQUAL T_VARIABLE($form_param) ) ) ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tab) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($formset) ) ) . ; } T_ECHO ; T_IF ( ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($msg) = T_STRING ( ) ; T_VARIABLE($msg) = T_STRING ( T_STRING ( T_VARIABLE($msg) , , ) ) ; T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($msg) ) T_OBJECT_OPERATOR T_STRING ( ) ; }',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_userprefsPageInit) ( ) { T_VARIABLE($forms_all_keys) = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($cf) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($forms_all_keys) ) ; T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; } T_FUNCTION(PMA_loadUserprefs) ( ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($cfgRelation) [ ] ) { T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($_SESSION) [ ] [ ] , T_DOUBLE_ARROW T_VARIABLE($_SESSION) [ ] [ ] , T_DOUBLE_ARROW ) ; } T_VARIABLE($query_table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) ; T_VARIABLE($query) = . T_VARIABLE($query_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . ; T_VARIABLE($row) = T_STRING ( T_VARIABLE($query) , , T_VARIABLE($GLOBALS) [ ] ) ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($row) ? T_ARRAY_CAST T_STRING ( T_VARIABLE($row) [ ] ) : T_ARRAY ( ) , T_DOUBLE_ARROW T_VARIABLE($row) ? T_VARIABLE($row) [ ] : T_STRING ( ) , T_DOUBLE_ARROW ) ; } T_FUNCTION(PMA_saveUserprefs) ( T_ARRAY T_VARIABLE($config_array) ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_VARIABLE($server) = T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? T_VARIABLE($GLOBALS) [ ] : T_VARIABLE($GLOBALS) [ ] [ ] ; T_VARIABLE($cache_key) = . T_VARIABLE($server) ; T_IF ( ! T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($_SESSION) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($config_array) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] ) ) { T_UNSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] ) ; } T_RETURN T_STRING ; } T_VARIABLE($query_table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) ; T_VARIABLE($query) = . T_VARIABLE($query_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . ; T_VARIABLE($has_config) = T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($config_data) = T_STRING ( T_VARIABLE($config_array) ) ; T_IF ( T_VARIABLE($has_config) ) { T_VARIABLE($query) = . T_VARIABLE($query_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($config_data) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . ; } T_ELSE { T_VARIABLE($query) = . T_VARIABLE($query_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($config_data) ) . ; } T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] ) ) { T_UNSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($cache_key) ] [ ] ) ; } T_IF ( ! T_STRING ( T_VARIABLE($query) , T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) ) ; T_RETURN T_VARIABLE($message) ; } T_RETURN T_STRING ; } T_FUNCTION(PMA_applyUserprefs) ( T_ARRAY T_VARIABLE($config_data) ) { T_VARIABLE($cfg) = T_ARRAY ( ) ; T_VARIABLE($blacklist) = T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_IF ( ! T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($blacklist) [ ] = T_STRING ; T_VARIABLE($blacklist) [ ] = T_STRING ; T_VARIABLE($blacklist) [ ] = T_STRING ; } T_VARIABLE($whitelist) = T_STRING ( T_STRING ( ) ) ; T_VARIABLE($whitelist) [ ] = T_STRING ; T_VARIABLE($whitelist) [ ] = T_STRING ; T_VARIABLE($whitelist) [ ] = T_STRING ; T_VARIABLE($whitelist) [ ] = T_STRING ; T_VARIABLE($whitelist) [ ] = T_STRING ; T_VARIABLE($whitelist) [ ] = T_STRING ; T_FOREACH ( T_VARIABLE($config_data) T_AS T_VARIABLE($path) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( ! T_ISSET ( T_VARIABLE($whitelist) [ T_VARIABLE($path) ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($blacklist) [ T_VARIABLE($path) ] ) ) { T_CONTINUE ; } T_STRING ( T_VARIABLE($path) , T_VARIABLE($cfg) , T_VARIABLE($value) ) ; } T_RETURN T_VARIABLE($cfg) ; } T_FUNCTION(PMA_readUserprefsFieldNames) ( T_ARRAY T_VARIABLE($forms) = T_STRING ) { T_STATIC T_VARIABLE($names) ; T_IF ( T_VARIABLE($names) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN T_VARIABLE($names) ; } T_IF ( T_STRING ( T_VARIABLE($forms) ) ) { T_VARIABLE($forms) = T_ARRAY ( ) ; T_INCLUDE ; } T_VARIABLE($names) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($forms) T_AS T_VARIABLE($formset) ) { T_FOREACH ( T_VARIABLE($formset) T_AS T_VARIABLE($form) ) { T_FOREACH ( T_VARIABLE($form) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($names) [ ] = T_STRING ( T_VARIABLE($k) ) ? T_VARIABLE($v) : T_VARIABLE($k) ; } } } T_RETURN T_VARIABLE($names) ; } T_FUNCTION(PMA_persistOption) ( T_VARIABLE($path) , T_VARIABLE($value) , T_VARIABLE($default_value) ) { T_VARIABLE($prefs) = T_STRING ( ) ; T_IF ( T_VARIABLE($value) T_IS_IDENTICAL T_VARIABLE($default_value) ) { T_IF ( T_ISSET ( T_VARIABLE($prefs) [ ] [ T_VARIABLE($path) ] ) ) { T_UNSET ( T_VARIABLE($prefs) [ ] [ T_VARIABLE($path) ] ) ; } T_ELSE { T_RETURN ; } } T_ELSE { T_VARIABLE($prefs) [ ] [ T_VARIABLE($path) ] = T_VARIABLE($value) ; } T_STRING ( T_VARIABLE($prefs) [ ] ) ; } T_FUNCTION(PMA_userprefsRedirect) ( T_VARIABLE($file_name) , T_VARIABLE($params) = T_STRING , T_VARIABLE($hash) = T_STRING ) { T_VARIABLE($url_params) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) ; T_IF ( T_STRING ( T_VARIABLE($params) ) ) { T_VARIABLE($url_params) = T_STRING ( T_VARIABLE($params) , T_VARIABLE($url_params) ) ; } T_IF ( T_VARIABLE($hash) ) { T_VARIABLE($hash) = . T_STRING ( T_VARIABLE($hash) ) ; } T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] . T_VARIABLE($file_name) . T_STRING ( T_VARIABLE($url_params) , ) . T_VARIABLE($hash) ) ; } T_FUNCTION(PMA_userprefsAutoloadGetHeader) ( ) { T_VARIABLE($retval) = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($_SESSION) [ ] = T_STRING ; } T_ELSE { T_VARIABLE($script_name) = T_STRING ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) ; T_VARIABLE($return_url) = T_STRING ( T_VARIABLE($script_name) . . T_STRING ( T_VARIABLE($_GET) , , ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($return_url) . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( . ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($retval) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_IF ( T_STRING ( ) ) { T_RETURN ; } T_ELSEIF ( T_STRING ( ) ) { T_RETURN ; } T_ELSE { T_RETURN ; } } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($base) , T_VARIABLE($exp) , T_VARIABLE($use_function) = T_STRING ) { T_STATIC T_VARIABLE($pow_function) = T_STRING ; T_IF ( T_VARIABLE($pow_function) T_IS_EQUAL T_STRING ) { T_VARIABLE($pow_function) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_IF ( ! T_VARIABLE($use_function) ) { T_IF ( T_VARIABLE($exp) < T_LNUMBER ) { T_VARIABLE($use_function) = ; } T_ELSE { T_VARIABLE($use_function) = T_VARIABLE($pow_function) ; } } T_IF ( ( T_VARIABLE($exp) < T_LNUMBER ) T_BOOLEAN_AND ( T_VARIABLE($use_function) T_IS_NOT_EQUAL ) ) { T_RETURN T_STRING ; } T_SWITCH ( T_VARIABLE($use_function) ) { T_CASE : T_STRING ( T_LNUMBER ) ; T_VARIABLE($pow) = T_STRING ( T_VARIABLE($base) , T_VARIABLE($exp) ) ; T_BREAK ; T_CASE : T_VARIABLE($pow) = T_STRING ( T_STRING ( T_VARIABLE($base) , T_VARIABLE($exp) ) ) ; T_BREAK ; T_CASE : T_VARIABLE($base) = T_DOUBLE_CAST T_VARIABLE($base) ; T_VARIABLE($exp) = T_INT_CAST T_VARIABLE($exp) ; T_VARIABLE($pow) = T_STRING ( T_VARIABLE($base) , T_VARIABLE($exp) ) ; T_BREAK ; T_DEFAULT : T_VARIABLE($pow) = T_VARIABLE($use_function) ( T_VARIABLE($base) , T_VARIABLE($exp) ) ; } T_RETURN T_VARIABLE($pow) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($icon) , T_VARIABLE($alternate) = , T_VARIABLE($force_text) = T_STRING ) { T_VARIABLE($include_icon) = ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_NOT_IDENTICAL T_STRING ) ; T_VARIABLE($include_text) = ( T_VARIABLE($force_text) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_NOT_IDENTICAL T_STRING ) ) ; T_VARIABLE($button) = ; T_IF ( T_VARIABLE($include_icon) ) { T_VARIABLE($button) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($icon) , T_VARIABLE($alternate) ) ; } T_IF ( T_VARIABLE($include_icon) T_BOOLEAN_AND T_VARIABLE($include_text) ) { T_VARIABLE($button) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($include_text) ) { T_VARIABLE($button) T_CONCAT_EQUAL T_VARIABLE($alternate) ; } T_VARIABLE($button) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($button) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($image) , T_VARIABLE($alternate) = , T_VARIABLE($attributes) = T_ARRAY ( ) ) { T_STATIC T_VARIABLE($sprites) ; T_IF ( T_STRING ( ) ) { T_UNSET ( T_VARIABLE($sprites) ) ; } T_VARIABLE($url) = ; T_VARIABLE($is_sprite) = T_STRING ; T_VARIABLE($alternate) = T_STRING ( T_VARIABLE($alternate) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($sprites) ) ) { T_IF ( T_STRING ( T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) . ) ) { T_INCLUDE_ONCE T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) . ; T_VARIABLE($sprites) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($sprites) = T_ARRAY ( ) ; } } T_VARIABLE($class) = T_STRING ( T_ARRAY ( , ) , , T_VARIABLE($image) ) ; T_IF ( T_STRING ( T_VARIABLE($class) , T_VARIABLE($sprites) ) ) { T_VARIABLE($is_sprite) = T_STRING ; T_VARIABLE($url) = ( T_STRING ( ) ? : ) . ; } T_ELSE { T_VARIABLE($url) = T_VARIABLE($GLOBALS) [ ] . T_VARIABLE($image) ; } T_IF ( T_VARIABLE($is_sprite) ) { T_IF ( T_ISSET ( T_VARIABLE($attributes) [ ] ) ) { T_VARIABLE($attributes) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($class) T_ENCAPSED_AND_WHITESPACE . T_VARIABLE($attributes) [ ] ; } T_ELSE { T_VARIABLE($attributes) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($class) ; } } T_VARIABLE($attr_str) = ; T_FOREACH ( T_VARIABLE($attributes) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( ! T_STRING ( T_VARIABLE($key) , T_ARRAY ( , ) ) ) { T_VARIABLE($attr_str) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($key) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($value) T_ENCAPSED_AND_WHITESPACE ; } } T_IF ( T_ISSET ( T_VARIABLE($attributes) [ ] ) ) { T_VARIABLE($alt) = T_VARIABLE($attributes) [ ] ; } T_ELSE { T_VARIABLE($alt) = T_VARIABLE($alternate) ; } T_IF ( T_ISSET ( T_VARIABLE($attributes) [ ] ) ) { T_VARIABLE($title) = T_VARIABLE($attributes) [ ] ; } T_ELSE { T_VARIABLE($title) = T_VARIABLE($alternate) ; } T_VARIABLE($template) = ; T_VARIABLE($retval) = T_STRING ( T_VARIABLE($template) , T_VARIABLE($url) , T_VARIABLE($title) , T_VARIABLE($alt) , T_VARIABLE($attr_str) ) ; T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($max_upload_size) ) { T_LIST ( T_VARIABLE($max_size) , T_VARIABLE($max_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($max_upload_size) , T_LNUMBER ) ; T_RETURN . T_STRING ( T_STRING ( ) , T_VARIABLE($max_size) , T_VARIABLE($max_unit) ) . ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($max_size) ) { T_RETURN . T_VARIABLE($max_size) . ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($a_string) = , T_VARIABLE($is_like) = T_STRING , T_VARIABLE($crlf) = T_STRING , T_VARIABLE($php_code) = T_STRING ) { T_IF ( T_VARIABLE($is_like) ) { T_VARIABLE($a_string) = T_STRING ( , , T_VARIABLE($a_string) ) ; } T_ELSE { T_VARIABLE($a_string) = T_STRING ( , , T_VARIABLE($a_string) ) ; } T_IF ( T_VARIABLE($crlf) ) { T_VARIABLE($a_string) = T_STRING ( T_VARIABLE($a_string) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; } T_IF ( T_VARIABLE($php_code) ) { T_VARIABLE($a_string) = T_STRING ( , , T_VARIABLE($a_string) ) ; } T_ELSE { T_VARIABLE($a_string) = T_STRING ( , , T_VARIABLE($a_string) ) ; } T_RETURN T_VARIABLE($a_string) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($name) ) { T_RETURN T_STRING ( T_VARIABLE($name) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($name) ) { T_RETURN T_STRING ( T_VARIABLE($name) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($quoted_string) , T_VARIABLE($quote) = T_STRING ) { T_VARIABLE($quotes) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($quote) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($quotes) [ ] = ; T_VARIABLE($quotes) [ ] = ; T_VARIABLE($quotes) [ ] = ; } T_ELSE { T_VARIABLE($quotes) [ ] = T_VARIABLE($quote) ; } T_FOREACH ( T_VARIABLE($quotes) T_AS T_VARIABLE($quote) ) { T_IF ( T_STRING ( T_VARIABLE($quoted_string) , T_LNUMBER , T_LNUMBER ) T_IS_IDENTICAL T_VARIABLE($quote) T_BOOLEAN_AND T_STRING ( T_VARIABLE($quoted_string) , - T_LNUMBER , T_LNUMBER ) T_IS_IDENTICAL T_VARIABLE($quote) ) { T_VARIABLE($unquoted_string) = T_STRING ( T_VARIABLE($quoted_string) , T_LNUMBER , - T_LNUMBER ) ; T_VARIABLE($unquoted_string) = T_STRING ( T_VARIABLE($quote) . T_VARIABLE($quote) , T_VARIABLE($quote) , T_VARIABLE($unquoted_string) ) ; T_RETURN T_VARIABLE($unquoted_string) ; } } T_RETURN T_VARIABLE($quoted_string) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($parsed_sql) , T_VARIABLE($unparsed_sql) = ) { T_GLOBAL T_VARIABLE($cfg) ; T_IF ( T_STRING ( ) ) { T_RETURN T_STRING ( T_VARIABLE($parsed_sql) [ ] ) ; } T_IF ( ! T_STRING ( T_VARIABLE($parsed_sql) ) ) { T_VARIABLE($formatted_sql) = ; T_IF ( ( T_VARIABLE($cfg) [ ] [ ] T_IS_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($unparsed_sql) T_IS_NOT_EQUAL ) ) { T_VARIABLE($formatted_sql) T_CONCAT_EQUAL T_VARIABLE($unparsed_sql) ; } T_ELSE { T_VARIABLE($formatted_sql) T_CONCAT_EQUAL T_VARIABLE($parsed_sql) ; } T_VARIABLE($formatted_sql) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($formatted_sql) ; } T_VARIABLE($formatted_sql) = ; T_SWITCH ( T_VARIABLE($cfg) [ ] [ ] ) { T_CASE : T_IF ( T_VARIABLE($unparsed_sql) T_IS_NOT_EQUAL ) { T_VARIABLE($formatted_sql) = . . T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($unparsed_sql) ) ) . . ; } T_ELSE { T_VARIABLE($formatted_sql) = T_STRING ( T_VARIABLE($parsed_sql) ) ; } T_BREAK ; T_CASE : T_VARIABLE($formatted_sql) = T_STRING ( T_VARIABLE($parsed_sql) , ) ; T_BREAK ; T_CASE : T_VARIABLE($formatted_sql) = T_STRING ( T_VARIABLE($parsed_sql) , ) ; T_BREAK ; T_DEFAULT : T_BREAK ; } T_RETURN T_VARIABLE($formatted_sql) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($link) , T_VARIABLE($target) = ) { T_RETURN . T_VARIABLE($link) . . T_VARIABLE($target) . . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($chapter) , T_VARIABLE($link) , T_VARIABLE($big_icon) = T_STRING , T_VARIABLE($anchor) = , T_VARIABLE($just_open) = T_STRING ) { T_GLOBAL T_VARIABLE($cfg) ; T_IF ( ( T_VARIABLE($cfg) [ ] T_IS_EQUAL ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($cfg) [ ] ) ) { T_RETURN ; } T_VARIABLE($chapter) = T_STRING ( , , T_STRING ( T_VARIABLE($chapter) ) ) ; T_VARIABLE($link) = T_STRING ( , , T_STRING ( T_VARIABLE($link) ) ) ; T_SWITCH ( T_VARIABLE($cfg) [ ] ) { T_CASE : T_IF ( T_EMPTY ( T_VARIABLE($chapter) ) ) { T_VARIABLE($chapter) = ; } T_IF ( T_EMPTY ( T_VARIABLE($anchor) ) ) { T_VARIABLE($anchor) = T_VARIABLE($link) ; } T_VARIABLE($url) = T_VARIABLE($cfg) [ ] . . T_VARIABLE($chapter) . . T_VARIABLE($anchor) ; T_BREAK ; T_CASE : T_IF ( T_EMPTY ( T_VARIABLE($anchor) ) ) { T_VARIABLE($anchor) = T_VARIABLE($link) ; } T_VARIABLE($url) = T_VARIABLE($cfg) [ ] . . T_VARIABLE($anchor) ; T_BREAK ; T_CASE : T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_VARIABLE($link) = ; } T_VARIABLE($url) = T_VARIABLE($cfg) [ ] . . T_VARIABLE($link) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($anchor) ) ) { T_VARIABLE($url) T_CONCAT_EQUAL . T_VARIABLE($anchor) ; } T_BREAK ; T_CASE : T_DEFAULT : T_IF ( T_EMPTY ( T_VARIABLE($link) ) ) { T_VARIABLE($link) = ; } T_VARIABLE($mysql) = ; T_VARIABLE($lang) = ; T_IF ( T_STRING ( ) ) { T_IF ( T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($mysql) = ; } T_ELSE T_IF ( T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($mysql) = ; } T_ELSE T_IF ( T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($mysql) = ; } T_ELSE { T_VARIABLE($mysql) = ; } } T_VARIABLE($url) = T_VARIABLE($cfg) [ ] . . T_VARIABLE($mysql) . . T_VARIABLE($lang) . . T_VARIABLE($link) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($anchor) ) ) { T_VARIABLE($url) T_CONCAT_EQUAL . T_VARIABLE($anchor) ; } T_BREAK ; } T_VARIABLE($open_link) = . T_STRING ( T_VARIABLE($url) ) . ; T_IF ( T_VARIABLE($just_open) ) { T_RETURN T_VARIABLE($open_link) ; } T_ELSEIF ( T_VARIABLE($big_icon) ) { T_RETURN T_VARIABLE($open_link) . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . ; } T_ELSE { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($url) ) , ) ; } } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($page) , T_VARIABLE($anchor) = ) { T_VARIABLE($url) = T_VARIABLE($page) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($anchor) ) ) { T_VARIABLE($url) T_CONCAT_EQUAL . T_VARIABLE($anchor) ; } T_IF ( T_STRING ( ) ) { T_RETURN T_STRING ( . T_VARIABLE($url) ) ; } T_ELSE T_IF ( T_STRING ( ) ) { T_IF ( T_STRING ( ) ) { T_RETURN . T_VARIABLE($url) ; } T_ELSE { T_RETURN . T_VARIABLE($url) ; } } T_ELSE { T_RETURN T_STRING ( . T_VARIABLE($url) ) ; } } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($page) , T_VARIABLE($anchor) = ) { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($page) , T_VARIABLE($anchor) ) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($target) ) { T_VARIABLE($url) = T_STRING ( T_VARIABLE($target) ) ; T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($url) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($message) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($classClause) = ; } T_ELSE { T_VARIABLE($classClause) = ; } T_RETURN . T_VARIABLE($classClause) . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_VARIABLE($message) . . ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($error_message) = , T_VARIABLE($the_query) = , T_VARIABLE($is_modify_link) = T_STRING , T_VARIABLE($back_url) = , T_VARIABLE($exit) = T_STRING ) { T_GLOBAL T_VARIABLE($table) , T_VARIABLE($db) ; T_VARIABLE($error_msg) = ; T_IF ( ! T_VARIABLE($error_message) ) { T_VARIABLE($error_message) = T_STRING ( ) ; } T_IF ( ! T_VARIABLE($the_query) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($the_query) = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( ! T_STRING ( ) T_BOOLEAN_OR T_STRING ( ) ) { T_VARIABLE($formatted_sql) = T_STRING ( T_VARIABLE($the_query) ) ; } T_ELSEIF ( T_EMPTY ( T_VARIABLE($the_query) ) T_BOOLEAN_OR ( T_STRING ( T_VARIABLE($the_query) ) T_IS_EQUAL ) ) { T_VARIABLE($formatted_sql) = ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($the_query) ) > T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($formatted_sql) = T_STRING ( T_STRING ( T_VARIABLE($the_query) , T_LNUMBER , T_VARIABLE($GLOBALS) [ ] [ ] ) ) . ; } T_ELSE { T_VARIABLE($formatted_sql) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($the_query) ) , T_VARIABLE($the_query) ) ; } } T_VARIABLE($error_msg) T_CONCAT_EQUAL . . ; T_VARIABLE($error_msg) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_IF ( ! T_EMPTY ( T_VARIABLE($the_query) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($the_query) , ) ) { T_IF ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($error_msg) T_CONCAT_EQUAL T_STRING ( ) . ; T_VARIABLE($error_msg) T_CONCAT_EQUAL . ; } T_VARIABLE($error_msg) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_IF ( T_STRING ( T_STRING ( T_VARIABLE($formatted_sql) ) , ) ) { T_VARIABLE($error_msg) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , ) ; } T_IF ( T_VARIABLE($is_modify_link) ) { T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($the_query) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_IF ( T_STRING ( T_VARIABLE($table) ) ) { T_VARIABLE($_url_params) [ ] = T_VARIABLE($db) ; T_VARIABLE($_url_params) [ ] = T_VARIABLE($table) ; T_VARIABLE($doedit_goto) = . T_STRING ( T_VARIABLE($_url_params) ) . ; } T_ELSEIF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($_url_params) [ ] = T_VARIABLE($db) ; T_VARIABLE($doedit_goto) = . T_STRING ( T_VARIABLE($_url_params) ) . ; } T_ELSE { T_VARIABLE($doedit_goto) = . T_STRING ( T_VARIABLE($_url_params) ) . ; } T_VARIABLE($error_msg) T_CONCAT_EQUAL T_VARIABLE($doedit_goto) . T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . ; } T_VARIABLE($error_msg) T_CONCAT_EQUAL . . . . T_VARIABLE($formatted_sql) . . . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($error_message) ) ) { T_VARIABLE($error_message) = T_STRING ( , , T_VARIABLE($error_message) ) ; } T_VARIABLE($error_msg) T_CONCAT_EQUAL . . . T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( , ) . . . ; T_VARIABLE($error_message) = T_STRING ( , , T_VARIABLE($error_message) ) ; T_VARIABLE($error_message) = T_STRING ( , , T_VARIABLE($error_message) ) ; T_VARIABLE($error_message) = T_STRING ( T_VARIABLE($error_message) ) ; T_VARIABLE($error_msg) T_CONCAT_EQUAL . . T_VARIABLE($error_message) . . . ; T_VARIABLE($error_msg) T_CONCAT_EQUAL ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($error_msg) ; T_IF ( T_VARIABLE($exit) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($error_msg) ) ; T_EXIT ; } T_IF ( ! T_EMPTY ( T_VARIABLE($back_url) ) ) { T_IF ( T_STRING ( T_VARIABLE($back_url) , ) ) { T_VARIABLE($back_url) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($back_url) T_CONCAT_EQUAL ; } T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($back_url) ; T_VARIABLE($error_msg) T_CONCAT_EQUAL . . T_VARIABLE($back_url) . . T_STRING ( ) . . . ; } T_ECHO T_VARIABLE($error_msg) ; T_EXIT ; } T_ELSE { T_RETURN T_VARIABLE($error_msg) ; } } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($db) , T_VARIABLE($tables) = T_STRING , T_VARIABLE($limit_offset) = T_LNUMBER , T_VARIABLE($limit_count) = T_STRING ) { T_VARIABLE($sep) = T_VARIABLE($GLOBALS) [ ] [ ] ; T_IF ( T_VARIABLE($tables) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($tables) = T_STRING ( T_VARIABLE($db) , T_STRING , T_STRING , T_STRING , T_VARIABLE($limit_offset) , T_VARIABLE($limit_count) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( T_VARIABLE($tables) , ) ; } } T_IF ( T_STRING ( T_VARIABLE($tables) ) < T_LNUMBER ) { T_RETURN T_VARIABLE($tables) ; } T_VARIABLE($default) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($table_groups) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($table_name) T_DOUBLE_ARROW T_VARIABLE($table) ) { T_IF ( T_VARIABLE($table) [ ] T_IS_IDENTICAL T_STRING ) { T_VARIABLE($tbl_is_view) = T_VARIABLE($table) [ ] T_IS_EQUAL ; T_IF ( T_VARIABLE($tbl_is_view) T_BOOLEAN_OR T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($table) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) [ ] , T_STRING , T_STRING ) ; } } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($sep) T_BOOLEAN_AND T_STRING ( T_VARIABLE($table_name) , T_VARIABLE($sep) ) ) { T_VARIABLE($parts) = T_STRING ( T_VARIABLE($sep) , T_VARIABLE($table_name) ) ; T_VARIABLE($group) = & T_VARIABLE($table_groups) ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($group_name_full) = ; T_VARIABLE($parts_cnt) = T_STRING ( T_VARIABLE($parts) ) - T_LNUMBER ; T_WHILE ( ( T_VARIABLE($i) < T_VARIABLE($parts_cnt) ) T_BOOLEAN_AND ( T_VARIABLE($i) < T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($group_name) = T_VARIABLE($parts) [ T_VARIABLE($i) ] . T_VARIABLE($sep) ; T_VARIABLE($group_name_full) T_CONCAT_EQUAL T_VARIABLE($group_name) ; T_IF ( ! T_ISSET ( T_VARIABLE($group) [ T_VARIABLE($group_name) ] ) ) { T_VARIABLE($group) [ T_VARIABLE($group_name) ] = T_ARRAY ( ) ; T_VARIABLE($group) [ T_VARIABLE($group_name) ] [ . T_VARIABLE($sep) . ] = T_STRING ; T_VARIABLE($group) [ T_VARIABLE($group_name) ] [ . T_VARIABLE($sep) . ] = T_LNUMBER ; T_VARIABLE($group) [ T_VARIABLE($group_name) ] [ . T_VARIABLE($sep) . ] = T_VARIABLE($group_name_full) ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($group) [ T_VARIABLE($group_name) ] [ . T_VARIABLE($sep) . ] ) ) { T_VARIABLE($table) = T_VARIABLE($group) [ T_VARIABLE($group_name) ] ; T_VARIABLE($group) [ T_VARIABLE($group_name) ] = T_ARRAY ( ) ; T_VARIABLE($group) [ T_VARIABLE($group_name) ] [ T_VARIABLE($group_name) ] = T_VARIABLE($table) ; T_UNSET ( T_VARIABLE($table) ) ; T_VARIABLE($group) [ T_VARIABLE($group_name) ] [ . T_VARIABLE($sep) . ] = T_STRING ; T_VARIABLE($group) [ T_VARIABLE($group_name) ] [ . T_VARIABLE($sep) . ] = T_LNUMBER ; T_VARIABLE($group) [ T_VARIABLE($group_name) ] [ . T_VARIABLE($sep) . ] = T_VARIABLE($group_name_full) ; } T_ELSE { T_VARIABLE($group) [ T_VARIABLE($group_name) ] [ . T_VARIABLE($sep) . ] T_INC ; } T_VARIABLE($group) = & T_VARIABLE($group) [ T_VARIABLE($group_name) ] ; T_VARIABLE($i) T_INC ; } } T_ELSE { T_IF ( ! T_ISSET ( T_VARIABLE($table_groups) [ T_VARIABLE($table_name) ] ) ) { T_VARIABLE($table_groups) [ T_VARIABLE($table_name) ] = T_ARRAY ( ) ; } T_VARIABLE($group) = & T_VARIABLE($table_groups) ; } T_VARIABLE($table) [ ] = T_VARIABLE($table) [ ] ; T_VARIABLE($group) [ T_VARIABLE($table_name) ] = T_STRING ( T_VARIABLE($default) , T_VARIABLE($table) ) ; } T_RETURN T_VARIABLE($table_groups) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($a_name) , T_VARIABLE($do_it) = T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($a_name) ) ) { T_FOREACH ( T_VARIABLE($a_name) T_AS & T_VARIABLE($data) ) { T_VARIABLE($data) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($data) , T_VARIABLE($do_it) ) ; } T_RETURN T_VARIABLE($a_name) ; } T_IF ( ! T_VARIABLE($do_it) ) { T_GLOBAL T_VARIABLE($PMA_SQPdata_forbidden_word) ; T_IF ( ! T_STRING ( T_STRING ( T_VARIABLE($a_name) ) , T_VARIABLE($PMA_SQPdata_forbidden_word) ) ) { T_RETURN T_VARIABLE($a_name) ; } } T_IF ( T_STRING ( T_VARIABLE($a_name) ) T_BOOLEAN_AND T_VARIABLE($a_name) T_IS_NOT_IDENTICAL ) { T_RETURN . T_STRING ( , , T_VARIABLE($a_name) ) . ; } T_ELSE { T_RETURN T_VARIABLE($a_name) ; } } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($a_name) , T_VARIABLE($compatibility) = , T_VARIABLE($do_it) = T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($a_name) ) ) { T_FOREACH ( T_VARIABLE($a_name) T_AS & T_VARIABLE($data) ) { T_VARIABLE($data) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($data) , T_VARIABLE($compatibility) , T_VARIABLE($do_it) ) ; } T_RETURN T_VARIABLE($a_name) ; } T_IF ( ! T_VARIABLE($do_it) ) { T_GLOBAL T_VARIABLE($PMA_SQPdata_forbidden_word) ; T_IF ( ! T_STRING ( T_STRING ( T_VARIABLE($a_name) ) , T_VARIABLE($PMA_SQPdata_forbidden_word) ) ) { T_RETURN T_VARIABLE($a_name) ; } } T_SWITCH ( T_VARIABLE($compatibility) ) { T_CASE : T_VARIABLE($quote) = ; T_BREAK ; T_DEFAULT : ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) ? T_VARIABLE($quote) = : T_VARIABLE($quote) = ; T_BREAK ; } T_IF ( T_STRING ( T_VARIABLE($a_name) ) T_BOOLEAN_AND T_VARIABLE($a_name) T_IS_NOT_IDENTICAL ) { T_RETURN T_VARIABLE($quote) . T_VARIABLE($a_name) . T_VARIABLE($quote) ; } T_ELSE { T_RETURN T_VARIABLE($a_name) ; } } T_PUBLIC T_STATIC T_STRING ( ) { T_IF ( T_STRING T_IS_EQUAL ) { T_VARIABLE($the_crlf) = ; } T_ELSE { T_VARIABLE($the_crlf) = ; } T_RETURN T_VARIABLE($the_crlf) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($message) , T_VARIABLE($sql_query) = T_STRING , T_VARIABLE($type) = , T_VARIABLE($is_view) = T_STRING ) { T_GLOBAL T_VARIABLE($cfg) ; T_VARIABLE($retval) = ; T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($sql_query) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($sql_query) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSEIF ( T_VARIABLE($cfg) [ ] [ ] T_IS_EQUAL T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($sql_query) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($sql_query) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_VARIABLE($sql_query) = ; } } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_UNSET ( T_VARIABLE($GLOBALS) [ ] ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL . ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ? . T_VARIABLE($GLOBALS) [ ] . : ) . . ; T_IF ( T_VARIABLE($message) T_INSTANCEOF T_STRING ) { T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_UNSET ( T_VARIABLE($GLOBALS) [ ] ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($type) . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($message) ) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_UNSET ( T_VARIABLE($GLOBALS) [ ] ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($cfg) [ ] T_IS_EQUAL T_STRING T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($sql_query) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($new_line) = . . ; T_VARIABLE($query_base) = T_STRING ( T_STRING ( T_VARIABLE($sql_query) ) ) ; T_VARIABLE($query_base) = T_STRING ( , T_VARIABLE($new_line) , T_VARIABLE($query_base) ) ; } T_ELSE { T_VARIABLE($query_base) = T_VARIABLE($sql_query) ; } T_VARIABLE($query_too_big) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($query_base) ) > T_VARIABLE($cfg) [ ] ) { T_VARIABLE($query_too_big) = T_STRING ; T_VARIABLE($shortened_query_base) = T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($sql_query) , T_LNUMBER , T_VARIABLE($cfg) [ ] ) . ) ) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($query_base) T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($parsed_sql) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_VARIABLE($parsed_sql) = T_STRING ( T_VARIABLE($query_base) ) ; } T_IF ( T_ISSET ( T_VARIABLE($parsed_sql) ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_VARIABLE($analyzed_display_query) = T_STRING ( T_VARIABLE($parsed_sql) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_display_query) [ T_LNUMBER ] [ ] [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($query_base) = T_VARIABLE($analyzed_display_query) [ T_LNUMBER ] [ ] . . T_VARIABLE($GLOBALS) [ ] . T_VARIABLE($analyzed_display_query) [ T_LNUMBER ] [ ] . . T_VARIABLE($analyzed_display_query) [ T_LNUMBER ] [ ] ; T_VARIABLE($parsed_sql) = T_STRING ( T_VARIABLE($query_base) ) ; T_VARIABLE($analyzed_display_query) [ T_LNUMBER ] [ ] T_CONCAT_EQUAL T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($analyzed_display_query) [ T_LNUMBER ] [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($analyzed_display_query) [ T_LNUMBER ] [ ] [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($query_base) = T_VARIABLE($analyzed_display_query) [ T_LNUMBER ] [ ] . . T_VARIABLE($GLOBALS) [ ] . T_VARIABLE($analyzed_display_query) [ T_LNUMBER ] [ ] ; T_VARIABLE($parsed_sql) = T_STRING ( T_VARIABLE($query_base) ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($query_base) = . T_VARIABLE($query_base) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_TRY { T_VARIABLE($query_base) = T_STRING ( T_VARIABLE($query_base) ) ; } T_CATCH ( T_STRING T_VARIABLE($e) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_ELSEIF ( T_ISSET ( T_VARIABLE($parsed_sql) ) ) { T_VARIABLE($query_base) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($parsed_sql) , T_VARIABLE($query_base) ) ; } T_VARIABLE($url_params) = T_ARRAY ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = ; } T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($url_params) [ ] = T_VARIABLE($GLOBALS) [ ] ; T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($url_params) [ ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($edit_link) = ; } T_ELSE { T_VARIABLE($edit_link) = ; } } T_ELSE { T_VARIABLE($edit_link) = ; } T_VARIABLE($explain_link) = ; T_VARIABLE($is_select) = T_STRING ; T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) T_BOOLEAN_AND ! T_VARIABLE($query_too_big) ) { T_VARIABLE($explain_params) = T_VARIABLE($url_params) ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($explain_params) [ ] = T_LNUMBER ; } T_IF ( T_STRING ( , T_VARIABLE($sql_query) ) ) { T_VARIABLE($explain_params) [ ] = . T_VARIABLE($sql_query) ; T_VARIABLE($_message) = T_STRING ( ) ; T_VARIABLE($is_select) = T_STRING ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($sql_query) ) ) { T_VARIABLE($explain_params) [ ] = T_STRING ( T_VARIABLE($sql_query) , T_LNUMBER ) ; T_VARIABLE($_message) = T_STRING ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($explain_params) [ ] ) ) { T_VARIABLE($explain_link) = . T_STRING ( T_VARIABLE($explain_params) ) ; T_VARIABLE($explain_link) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($explain_link) , T_VARIABLE($_message) ) . ; } } T_VARIABLE($url_params) [ ] = T_VARIABLE($sql_query) ; T_VARIABLE($url_params) [ ] = T_LNUMBER ; T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ) { T_IF ( T_VARIABLE($cfg) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($onclick) = . T_STRING ( T_VARIABLE($sql_query) , T_STRING ) . ; } T_ELSE { T_VARIABLE($onclick) = ; } T_VARIABLE($edit_link) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($url_params) ) . ; T_VARIABLE($edit_link) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($edit_link) , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($onclick) , T_DOUBLE_ARROW ) ) . ; } T_ELSE { T_VARIABLE($edit_link) = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) T_BOOLEAN_AND ! T_VARIABLE($query_too_big) ) { T_VARIABLE($php_params) = T_VARIABLE($url_params) ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($_message) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($php_params) [ ] = T_LNUMBER ; T_VARIABLE($_message) = T_STRING ( ) ; } T_VARIABLE($php_link) = . T_STRING ( T_VARIABLE($php_params) ) ; T_VARIABLE($php_link) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($php_link) , T_VARIABLE($_message) ) . ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($runquery_link) = . T_STRING ( T_VARIABLE($url_params) ) ; T_VARIABLE($php_link) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($runquery_link) , T_STRING ( ) ) . ; } } T_ELSE { T_VARIABLE($php_link) = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($sql_query) ) ) { T_VARIABLE($refresh_link) = . T_STRING ( T_VARIABLE($url_params) ) ; T_VARIABLE($refresh_link) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($refresh_link) , T_STRING ( ) ) . ; } T_ELSE { T_VARIABLE($refresh_link) = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ) { T_VARIABLE($validate_params) = T_VARIABLE($url_params) ; T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($validate_message) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($validate_params) [ ] = T_LNUMBER ; T_VARIABLE($validate_message) = T_STRING ( ) ; } T_VARIABLE($validate_link) = . T_STRING ( T_VARIABLE($validate_params) ) ; T_VARIABLE($validate_link) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($validate_link) , T_VARIABLE($validate_message) ) . ; } T_ELSE { T_VARIABLE($validate_link) = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($query_too_big) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($shortened_query_base) ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($query_base) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($refresh_link) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($sql_query) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($refresh_link) ) T_BOOLEAN_OR ! T_STRING T_DOUBLE_COLON T_STRING ( ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($sql_query) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($is_select) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL T_STRING ) T_BOOLEAN_AND ! T_VARIABLE($query_too_big) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . . . T_STRING ( T_STRING ( ) ) . . T_STRING ( T_STRING ( , ) ) . . . ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($edit_link) . T_VARIABLE($explain_link) . T_VARIABLE($php_link) . T_VARIABLE($refresh_link) . T_VARIABLE($validate_link) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL T_STRING ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STATIC T_STRING ( ) { T_IF ( ! T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ) { T_IF ( T_STRING ( ) T_BOOLEAN_AND ( T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER ) T_BOOLEAN_AND T_STRING ( ) ) { T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING , T_STRING ) ; } T_ELSE { T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING , T_STRING ) ; } } T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($sql_query) ) { T_VARIABLE($retval) = ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($sql_query) ) . . . . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_ISSET ( T_VARIABLE($_SESSION) [ ] ) , T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL . ; } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($value) , T_VARIABLE($limes) = T_LNUMBER , T_VARIABLE($comma) = T_LNUMBER ) { T_IF ( T_VARIABLE($value) T_IS_IDENTICAL T_STRING ) { T_RETURN T_STRING ; } T_VARIABLE($byteUnits) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($dh) = T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , T_VARIABLE($comma) ) ; T_VARIABLE($li) = T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , T_VARIABLE($limes) ) ; T_VARIABLE($unit) = T_VARIABLE($byteUnits) [ T_LNUMBER ] ; T_FOR ( T_VARIABLE($d) = T_LNUMBER , T_VARIABLE($ex) = T_LNUMBER ; T_VARIABLE($d) T_IS_GREATER_OR_EQUAL T_LNUMBER ; T_VARIABLE($d) T_DEC , T_VARIABLE($ex) T_MINUS_EQUAL T_LNUMBER ) { T_IF ( T_ISSET ( T_VARIABLE($byteUnits) [ T_VARIABLE($d) ] ) T_BOOLEAN_AND ( T_VARIABLE($value) T_IS_GREATER_OR_EQUAL T_VARIABLE($li) * T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , T_VARIABLE($ex) ) ) ) { T_VARIABLE($value) = T_STRING ( T_VARIABLE($value) / ( T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , T_VARIABLE($d) ) / T_VARIABLE($dh) ) ) / T_VARIABLE($dh) ; T_VARIABLE($unit) = T_VARIABLE($byteUnits) [ T_VARIABLE($d) ] ; T_BREAK T_LNUMBER ; } } T_IF ( T_VARIABLE($unit) T_IS_NOT_EQUAL T_VARIABLE($byteUnits) [ T_LNUMBER ] ) { T_VARIABLE($return_value) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) , T_LNUMBER , T_VARIABLE($comma) , T_STRING ) ; } T_ELSE { T_VARIABLE($return_value) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) , T_LNUMBER ) ; } T_RETURN T_ARRAY ( T_STRING ( T_VARIABLE($return_value) ) , T_VARIABLE($unit) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($value) ) { T_RETURN T_STRING ( T_ARRAY ( , ) , T_ARRAY ( T_STRING ( ) , T_STRING ( ) , ) , T_VARIABLE($value) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($value) , T_VARIABLE($digits_left) = T_LNUMBER , T_VARIABLE($digits_right) = T_LNUMBER , T_VARIABLE($only_down) = T_STRING , T_VARIABLE($noTrailingZero) = T_STRING ) { T_IF ( T_VARIABLE($value) T_IS_EQUAL T_LNUMBER ) { T_RETURN ; } T_VARIABLE($originalValue) = T_VARIABLE($value) ; T_IF ( T_VARIABLE($digits_left) T_IS_IDENTICAL T_LNUMBER ) { T_VARIABLE($value) = T_STRING ( T_VARIABLE($value) , T_VARIABLE($digits_right) ) ; T_IF ( ( T_VARIABLE($originalValue) T_IS_NOT_EQUAL T_LNUMBER ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($value) ) T_IS_EQUAL T_LNUMBER ) ) { T_VARIABLE($value) = . ( T_LNUMBER / T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , T_VARIABLE($digits_right) ) ) ; } T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) ) ; } T_VARIABLE($units) = T_ARRAY ( - T_LNUMBER T_DOUBLE_ARROW , - T_LNUMBER T_DOUBLE_ARROW , - T_LNUMBER T_DOUBLE_ARROW , - T_LNUMBER T_DOUBLE_ARROW , - T_LNUMBER T_DOUBLE_ARROW , - T_LNUMBER T_DOUBLE_ARROW , - T_LNUMBER T_DOUBLE_ARROW , - T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW ) ; T_IF ( T_VARIABLE($value) < T_LNUMBER ) { T_VARIABLE($sign) = ; T_VARIABLE($value) = T_STRING ( T_VARIABLE($value) ) ; } T_ELSE { T_VARIABLE($sign) = ; } T_VARIABLE($dh) = T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , T_VARIABLE($digits_right) ) ; T_VARIABLE($d) = T_STRING ( T_STRING ( T_VARIABLE($value) ) / T_LNUMBER ) ; T_VARIABLE($cur_digits) = T_STRING ( T_STRING ( T_VARIABLE($value) / T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , T_VARIABLE($d) , ) ) + T_LNUMBER ) ; T_IF ( T_VARIABLE($digits_left) > T_VARIABLE($cur_digits) ) { T_VARIABLE($d) T_MINUS_EQUAL T_STRING ( ( T_VARIABLE($digits_left) - T_VARIABLE($cur_digits) ) / T_LNUMBER ) ; } T_IF ( T_VARIABLE($d) < T_LNUMBER T_BOOLEAN_AND T_VARIABLE($only_down) ) { T_VARIABLE($d) = T_LNUMBER ; } T_VARIABLE($value) = T_STRING ( T_VARIABLE($value) / ( T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , T_VARIABLE($d) , ) / T_VARIABLE($dh) ) ) / T_VARIABLE($dh) ; T_VARIABLE($unit) = T_VARIABLE($units) [ T_VARIABLE($d) ] ; T_IF ( T_VARIABLE($noTrailingZero) ) { T_VARIABLE($value) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( , , T_VARIABLE($value) ) ) ; } T_ELSE { T_VARIABLE($value) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($value) , T_VARIABLE($digits_right) ) ) ; } T_IF ( T_VARIABLE($originalValue) T_IS_NOT_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($value) ) T_IS_EQUAL T_LNUMBER ) { T_RETURN . ( T_LNUMBER / T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , T_VARIABLE($digits_right) ) ) . . T_VARIABLE($unit) ; } T_RETURN T_VARIABLE($sign) . T_VARIABLE($value) . . T_VARIABLE($unit) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($formatted_size) ) { T_VARIABLE($return_value) = - T_LNUMBER ; T_IF ( T_STRING ( , T_VARIABLE($formatted_size) ) ) { T_VARIABLE($return_value) = T_STRING ( T_VARIABLE($formatted_size) , T_LNUMBER , - T_LNUMBER ) * T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , T_LNUMBER ) ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($formatted_size) ) ) { T_VARIABLE($return_value) = T_STRING ( T_VARIABLE($formatted_size) , T_LNUMBER , - T_LNUMBER ) * T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , T_LNUMBER ) ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($formatted_size) ) ) { T_VARIABLE($return_value) = T_STRING ( T_VARIABLE($formatted_size) , T_LNUMBER , - T_LNUMBER ) * T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , T_LNUMBER ) ; } T_RETURN T_VARIABLE($return_value) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($timestamp) = - T_LNUMBER , T_VARIABLE($format) = ) { T_VARIABLE($month) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( , ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($day_of_week) = T_ARRAY ( T_STRING ( , ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_IF ( T_VARIABLE($format) T_IS_EQUAL ) { T_VARIABLE($format) = T_STRING ( ) ; } T_IF ( T_VARIABLE($timestamp) T_IS_EQUAL - T_LNUMBER ) { T_VARIABLE($timestamp) = T_STRING ( ) ; } T_VARIABLE($date) = T_STRING ( , T_VARIABLE($day_of_week) [ T_INT_CAST T_STRING ( , T_VARIABLE($timestamp) ) ] , T_VARIABLE($format) ) ; T_VARIABLE($date) = T_STRING ( , T_VARIABLE($month) [ T_INT_CAST T_STRING ( , T_VARIABLE($timestamp) ) - T_LNUMBER ] , T_VARIABLE($date) ) ; T_RETURN T_STRING ( T_VARIABLE($date) , T_VARIABLE($timestamp) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($tab) , T_VARIABLE($url_params) = T_ARRAY ( ) ) { T_VARIABLE($defaults) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($tab) = T_STRING ( T_VARIABLE($defaults) , T_VARIABLE($tab) ) ; T_IF ( T_EMPTY ( T_VARIABLE($tab) [ ] ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($tab) [ ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($GLOBALS) [ ] , , T_VARIABLE($tab) [ ] ) ) { T_VARIABLE($tab) [ ] = ; } T_ELSEIF ( T_STRING ( T_VARIABLE($tab) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) T_IS_EQUAL T_VARIABLE($tab) [ ] ) ) { T_VARIABLE($tab) [ ] = ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($tab) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($tab) [ ] ) ) { T_VARIABLE($url_params) = T_STRING ( T_VARIABLE($url_params) , T_VARIABLE($tab) [ ] ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($tab) [ ] ) ) { T_VARIABLE($tab) [ ] = T_STRING ( T_VARIABLE($tab) [ ] ) ; T_VARIABLE($tab) [ ] = T_VARIABLE($tab) [ ] . T_STRING ( T_VARIABLE($url_params) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($tab) [ ] ) ) { T_FOREACH ( T_VARIABLE($tab) [ ] T_AS T_VARIABLE($param) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($tab) [ ] T_CONCAT_EQUAL T_STRING ( ) . T_STRING ( T_VARIABLE($param) ) . . T_STRING ( T_VARIABLE($value) ) ; } } } T_IF ( ! T_EMPTY ( T_VARIABLE($tab) [ ] ) ) { T_VARIABLE($tab) [ ] T_CONCAT_EQUAL T_VARIABLE($tab) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($tab) [ ] ) ) { T_VARIABLE($tab) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($tab) [ ] ) ) . T_VARIABLE($tab) [ ] ; } T_ELSEIF ( T_EMPTY ( T_VARIABLE($tab) [ ] ) ) { T_VARIABLE($tab) [ ] = ; T_STRING ( . T_FUNC_C . , T_STRING ) ; } T_VARIABLE($id_string) = ( T_EMPTY ( T_VARIABLE($tab) [ ] ) ? : . T_VARIABLE($tab) [ ] . ) ; T_VARIABLE($out) = . ( T_VARIABLE($tab) [ ] T_IS_EQUAL ? : ) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($tab) [ ] ) ) { T_VARIABLE($out) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($tab) [ ] ) . . T_VARIABLE($id_string) . . T_VARIABLE($tab) [ ] . . T_VARIABLE($tab) [ ] . . T_VARIABLE($tab) [ ] . ; } T_ELSE { T_VARIABLE($out) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($tab) [ ] ) . . T_VARIABLE($id_string) . . T_VARIABLE($tab) [ ] . ; } T_VARIABLE($out) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($out) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($tabs) , T_VARIABLE($url_params) , T_VARIABLE($menu_id) , T_VARIABLE($resizable) = T_STRING ) { T_VARIABLE($class) = ; T_IF ( T_VARIABLE($resizable) ) { T_VARIABLE($class) = ; } T_VARIABLE($tab_navigation) = . T_STRING ( T_VARIABLE($menu_id) ) . . . T_STRING ( T_VARIABLE($menu_id) ) . . T_VARIABLE($class) . ; T_FOREACH ( T_VARIABLE($tabs) T_AS T_VARIABLE($tab) ) { T_VARIABLE($tab_navigation) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tab) , T_VARIABLE($url_params) ) ; } T_VARIABLE($tab_navigation) T_CONCAT_EQUAL . . . . ; T_RETURN T_VARIABLE($tab_navigation) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($url) , T_VARIABLE($message) , T_VARIABLE($tag_params) = T_ARRAY ( ) , T_VARIABLE($new_form) = T_STRING , T_VARIABLE($strip_img) = T_STRING , T_VARIABLE($target) = ) { T_VARIABLE($url_length) = T_STRING ( T_VARIABLE($url) ) ; T_IF ( T_VARIABLE($url_length) > T_VARIABLE($GLOBALS) [ ] [ ] * T_LNUMBER ) { T_RETURN ; } T_IF ( ! T_STRING ( T_VARIABLE($tag_params) ) ) { T_VARIABLE($tmp) = T_VARIABLE($tag_params) ; T_VARIABLE($tag_params) = T_ARRAY ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($tmp) ) ) { T_VARIABLE($tag_params) [ ] = . T_STRING ( T_VARIABLE($tmp) ) . ; } T_UNSET ( T_VARIABLE($tmp) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($target) ) ) { T_VARIABLE($tag_params) [ ] = T_STRING ( T_VARIABLE($target) ) ; } T_VARIABLE($tag_params_strings) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tag_params) T_AS T_VARIABLE($par_name) T_DOUBLE_ARROW T_VARIABLE($par_value) ) { T_VARIABLE($par_value) = T_STRING ( T_VARIABLE($par_name) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ? T_VARIABLE($par_value) : T_STRING ( T_VARIABLE($par_value) ) ; T_VARIABLE($tag_params_strings) [ ] = T_VARIABLE($par_name) . . T_VARIABLE($par_value) . ; } T_VARIABLE($displayed_message) = ; T_IF ( T_STRING ( T_VARIABLE($message) , ) T_BOOLEAN_AND ( ! T_VARIABLE($strip_img) T_BOOLEAN_OR ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_IDENTICAL T_STRING ) ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($message) ) T_IS_EQUAL T_VARIABLE($message) ) ) { T_VARIABLE($displayed_message) = . T_STRING ( T_STRING ( , , T_VARIABLE($message) ) ) . ; } T_VARIABLE($in_suhosin_limits) = T_STRING ; T_IF ( T_VARIABLE($url_length) T_IS_SMALLER_OR_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] ) { T_IF ( T_VARIABLE($suhosin_get_MaxValueLength) = T_STRING ( ) ) { T_VARIABLE($query_parts) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($url) ) ; T_FOREACH ( T_VARIABLE($query_parts) T_AS T_VARIABLE($query_pair) ) { T_LIST ( T_VARIABLE($eachvar) , T_VARIABLE($eachval) ) = T_STRING ( , T_VARIABLE($query_pair) ) ; T_IF ( T_STRING ( T_VARIABLE($eachval) ) > T_VARIABLE($suhosin_get_MaxValueLength) ) { T_VARIABLE($in_suhosin_limits) = T_STRING ; T_BREAK ; } } } } T_IF ( ( T_VARIABLE($url_length) T_IS_SMALLER_OR_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($in_suhosin_limits) ) { T_VARIABLE($ret) = . . T_VARIABLE($url) . . T_STRING ( , T_VARIABLE($tag_params_strings) ) . . T_VARIABLE($message) . T_VARIABLE($displayed_message) . . ; } T_ELSE { T_IF ( T_EMPTY ( T_VARIABLE($tag_params) [ ] ) ) { T_VARIABLE($tag_params) [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($query_parts) ) ) { T_VARIABLE($query_parts) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($url) ) ; } T_VARIABLE($url_parts) = T_STRING ( T_VARIABLE($url) ) ; T_IF ( T_VARIABLE($new_form) ) { T_VARIABLE($ret) = . T_VARIABLE($url_parts) [ ] . . . T_VARIABLE($target) . ; T_VARIABLE($subname_open) = ; T_VARIABLE($subname_close) = ; T_VARIABLE($submit_link) = ; } T_ELSE { T_VARIABLE($query_parts) [ ] = . T_VARIABLE($url_parts) [ ] ; T_IF ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_LNUMBER ; } T_VARIABLE($GLOBALS) [ ] T_INC ; T_VARIABLE($ret) = ; T_VARIABLE($subname_open) = . T_VARIABLE($GLOBALS) [ ] . ; T_VARIABLE($subname_close) = ; T_VARIABLE($submit_link) = . T_VARIABLE($GLOBALS) [ ] . ; } T_FOREACH ( T_VARIABLE($query_parts) T_AS T_VARIABLE($query_pair) ) { T_LIST ( T_VARIABLE($eachvar) , T_VARIABLE($eachval) ) = T_STRING ( , T_VARIABLE($query_pair) ) ; T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($subname_open) . T_VARIABLE($eachvar) . T_VARIABLE($subname_close) . . T_STRING ( T_STRING ( T_VARIABLE($eachval) ) ) . ; } T_VARIABLE($ret) T_CONCAT_EQUAL . . T_VARIABLE($submit_link) . . T_STRING ( , T_VARIABLE($tag_params_strings) ) . . T_VARIABLE($message) . . T_VARIABLE($displayed_message) . . ; T_IF ( T_VARIABLE($new_form) ) { T_VARIABLE($ret) T_CONCAT_EQUAL ; } } T_RETURN T_VARIABLE($ret) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($url) ) { T_VARIABLE($separator) = T_STRING ( ) ; T_IF ( T_VARIABLE($separator) T_IS_NOT_IDENTICAL ) { T_VARIABLE($url) = T_STRING ( T_STRING ( ) , T_VARIABLE($separator) , T_VARIABLE($url) ) ; T_VARIABLE($url) = T_STRING ( , T_VARIABLE($separator) , T_VARIABLE($url) ) ; } T_VARIABLE($url) = T_STRING ( T_STRING ( T_VARIABLE($separator) ) , T_VARIABLE($separator) , T_VARIABLE($url) ) ; T_VARIABLE($url_parts) = T_STRING ( T_VARIABLE($url) ) ; T_RETURN T_STRING ( T_VARIABLE($separator) , T_VARIABLE($url_parts) [ ] ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($seconds) ) { T_VARIABLE($days) = T_STRING ( T_VARIABLE($seconds) / T_LNUMBER ) ; T_IF ( T_VARIABLE($days) > T_LNUMBER ) { T_VARIABLE($seconds) T_MINUS_EQUAL T_VARIABLE($days) * T_LNUMBER ; } T_VARIABLE($hours) = T_STRING ( T_VARIABLE($seconds) / T_LNUMBER ) ; T_IF ( T_VARIABLE($days) > T_LNUMBER T_BOOLEAN_OR T_VARIABLE($hours) > T_LNUMBER ) { T_VARIABLE($seconds) T_MINUS_EQUAL T_VARIABLE($hours) * T_LNUMBER ; } T_VARIABLE($minutes) = T_STRING ( T_VARIABLE($seconds) / T_LNUMBER ) ; T_IF ( T_VARIABLE($days) > T_LNUMBER T_BOOLEAN_OR T_VARIABLE($hours) > T_LNUMBER T_BOOLEAN_OR T_VARIABLE($minutes) > T_LNUMBER ) { T_VARIABLE($seconds) T_MINUS_EQUAL T_VARIABLE($minutes) * T_LNUMBER ; } T_RETURN T_STRING ( T_STRING ( ) , T_STRING_CAST T_VARIABLE($days) , T_STRING_CAST T_VARIABLE($hours) , T_STRING_CAST T_VARIABLE($minutes) , T_STRING_CAST T_VARIABLE($seconds) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($string) , T_VARIABLE($Separator) = ) { T_VARIABLE($format_string) = ; T_VARIABLE($charbuff) = T_STRING ; T_FOR ( T_VARIABLE($i) = T_LNUMBER , T_VARIABLE($str_len) = T_STRING ( T_VARIABLE($string) ) ; T_VARIABLE($i) < T_VARIABLE($str_len) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($char) = T_VARIABLE($string) { T_VARIABLE($i) } ; T_VARIABLE($append) = T_STRING ; T_IF ( T_VARIABLE($char) T_IS_EQUAL ) { T_VARIABLE($format_string) T_CONCAT_EQUAL T_VARIABLE($charbuff) ; T_VARIABLE($charbuff) = T_VARIABLE($char) ; } T_ELSEIF ( T_VARIABLE($char) T_IS_EQUAL T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($charbuff) ) ) { T_VARIABLE($format_string) T_CONCAT_EQUAL T_VARIABLE($charbuff) . T_VARIABLE($char) ; T_VARIABLE($charbuff) = T_STRING ; T_VARIABLE($append) = T_STRING ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($charbuff) ) ) { T_VARIABLE($charbuff) T_CONCAT_EQUAL T_VARIABLE($char) ; } T_ELSE { T_VARIABLE($format_string) T_CONCAT_EQUAL T_VARIABLE($char) ; T_VARIABLE($append) = T_STRING ; } T_IF ( T_VARIABLE($append) T_BOOLEAN_AND ( T_VARIABLE($i) T_IS_NOT_EQUAL T_VARIABLE($str_len) - T_LNUMBER ) ) { T_VARIABLE($format_string) T_CONCAT_EQUAL T_VARIABLE($Separator) ; } } T_RETURN T_VARIABLE($format_string) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($params) , T_VARIABLE($request) = T_STRING ) { T_GLOBAL T_VARIABLE($checked_special) ; T_IF ( ! T_ISSET ( T_VARIABLE($checked_special) ) ) { T_VARIABLE($checked_special) = T_STRING ; } T_VARIABLE($reported_script_name) = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($found_error) = T_STRING ; T_VARIABLE($error_message) = ; T_FOREACH ( T_VARIABLE($params) T_AS T_VARIABLE($param) ) { T_IF ( T_VARIABLE($request) T_BOOLEAN_AND ( T_VARIABLE($param) T_IS_NOT_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($param) T_IS_NOT_EQUAL ) ) { T_VARIABLE($checked_special) = T_STRING ; } T_IF ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ T_VARIABLE($param) ] ) ) { T_VARIABLE($error_message) T_CONCAT_EQUAL T_VARIABLE($reported_script_name) . . T_STRING ( ) . . T_VARIABLE($param) . T_STRING T_DOUBLE_COLON T_STRING ( , ) . ; T_VARIABLE($found_error) = T_STRING ; } } T_IF ( T_VARIABLE($found_error) ) { T_STRING ( T_VARIABLE($error_message) , T_STRING , T_STRING ) ; } } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($handle) , T_VARIABLE($fields_cnt) , T_VARIABLE($fields_meta) , T_VARIABLE($row) , T_VARIABLE($force_unique) = T_STRING ) { T_VARIABLE($primary_key) = ; T_VARIABLE($unique_key) = ; T_VARIABLE($nonprimary_condition) = ; T_VARIABLE($preferred_condition) = ; T_VARIABLE($primary_key_array) = T_ARRAY ( ) ; T_VARIABLE($unique_key_array) = T_ARRAY ( ) ; T_VARIABLE($nonprimary_condition_array) = T_ARRAY ( ) ; T_VARIABLE($condition_array) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($fields_cnt) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($condition) = ; T_VARIABLE($con_key) = ; T_VARIABLE($con_val) = ; T_VARIABLE($field_flags) = T_STRING ( T_VARIABLE($handle) , T_VARIABLE($i) ) ; T_VARIABLE($meta) = T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] ; T_IF ( ! T_ISSET ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] [ T_LNUMBER ] [ ] ) ) { T_FOREACH ( T_VARIABLE($GLOBALS) [ ] [ T_LNUMBER ] [ ] T_AS T_VARIABLE($select_expr) ) { T_IF ( T_STRING_CAST T_VARIABLE($select_expr) [ ] T_IS_IDENTICAL T_STRING_CAST T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($select_expr) [ ] ; T_BREAK ; } } } } T_IF ( T_ISSET ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ! T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($con_key) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) . ; } T_ELSE { T_VARIABLE($con_key) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($condition) = . T_VARIABLE($con_key) . ; T_IF ( ! T_ISSET ( T_VARIABLE($row) [ T_VARIABLE($i) ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($row) [ T_VARIABLE($i) ] ) ) { T_VARIABLE($con_val) = ; } T_ELSE { T_IF ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL ) ) { T_VARIABLE($con_val) = . T_VARIABLE($row) [ T_VARIABLE($i) ] ; } T_ELSEIF ( ( ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($field_flags) , ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($row) [ T_VARIABLE($i) ] ) ) { T_IF ( T_STRING ( T_VARIABLE($row) [ T_VARIABLE($i) ] ) < T_LNUMBER ) { T_VARIABLE($con_val) = . T_STRING ( T_VARIABLE($row) [ T_VARIABLE($i) ] ) . ; } T_ELSE T_IF ( T_VARIABLE($fields_cnt) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($condition) = . T_VARIABLE($con_key) . ; T_VARIABLE($con_val) = . T_STRING ( T_VARIABLE($row) [ T_VARIABLE($i) ] ) ; } T_ELSE { T_VARIABLE($con_val) = T_STRING ; } } T_ELSEIF ( T_STRING ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING , T_STRING T_DOUBLE_COLON T_STRING ( ) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($row) [ T_VARIABLE($i) ] ) ) { T_IF ( T_STRING ( T_VARIABLE($row) [ T_VARIABLE($i) ] ) < T_LNUMBER ) { T_VARIABLE($condition) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($row) [ T_VARIABLE($i) ] ) . ; } T_ELSE { T_VARIABLE($condition) = ; } } T_ELSEIF ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($con_val) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ T_VARIABLE($i) ] , T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING ) . ; } T_ELSE { T_VARIABLE($con_val) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ T_VARIABLE($i) ] , T_STRING , T_STRING ) . ; } } T_IF ( T_VARIABLE($con_val) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($condition) T_CONCAT_EQUAL T_VARIABLE($con_val) . ; T_IF ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING > T_LNUMBER ) { T_VARIABLE($primary_key) T_CONCAT_EQUAL T_VARIABLE($condition) ; T_VARIABLE($primary_key_array) [ T_VARIABLE($con_key) ] = T_VARIABLE($con_val) ; } T_ELSEIF ( T_VARIABLE($meta) T_OBJECT_OPERATOR T_STRING > T_LNUMBER ) { T_VARIABLE($unique_key) T_CONCAT_EQUAL T_VARIABLE($condition) ; T_VARIABLE($unique_key_array) [ T_VARIABLE($con_key) ] = T_VARIABLE($con_val) ; } T_VARIABLE($nonprimary_condition) T_CONCAT_EQUAL T_VARIABLE($condition) ; T_VARIABLE($nonprimary_condition_array) [ T_VARIABLE($con_key) ] = T_VARIABLE($con_val) ; } } T_VARIABLE($clause_is_unique) = T_STRING ; T_IF ( T_VARIABLE($primary_key) ) { T_VARIABLE($preferred_condition) = T_VARIABLE($primary_key) ; T_VARIABLE($condition_array) = T_VARIABLE($primary_key_array) ; } T_ELSEIF ( T_VARIABLE($unique_key) ) { T_VARIABLE($preferred_condition) = T_VARIABLE($unique_key) ; T_VARIABLE($condition_array) = T_VARIABLE($unique_key_array) ; } T_ELSEIF ( ! T_VARIABLE($force_unique) ) { T_VARIABLE($preferred_condition) = T_VARIABLE($nonprimary_condition) ; T_VARIABLE($condition_array) = T_VARIABLE($nonprimary_condition_array) ; T_VARIABLE($clause_is_unique) = T_STRING ; } T_VARIABLE($where_clause) = T_STRING ( T_STRING ( , , T_VARIABLE($preferred_condition) ) ) ; T_RETURN ( T_ARRAY ( T_VARIABLE($where_clause) , T_VARIABLE($clause_is_unique) , T_VARIABLE($condition_array) ) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($button_name) , T_VARIABLE($button_class) , T_VARIABLE($image_name) , T_VARIABLE($text) , T_VARIABLE($image) , T_VARIABLE($value) = ) { T_IF ( T_VARIABLE($value) T_IS_EQUAL ) { T_VARIABLE($value) = T_VARIABLE($text) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_IDENTICAL T_STRING ) { T_RETURN . T_VARIABLE($button_name) . . . T_STRING ( T_VARIABLE($value) ) . . . T_STRING ( T_VARIABLE($text) ) . . ; } T_IF ( T_STRING T_IS_EQUAL T_BOOLEAN_AND T_STRING < T_LNUMBER ) { T_RETURN . T_VARIABLE($image_name) . . T_VARIABLE($button_class) . . T_STRING ( T_VARIABLE($value) ) . . T_STRING ( T_VARIABLE($text) ) . . T_VARIABLE($GLOBALS) [ ] . T_VARIABLE($image) . . ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_IDENTICAL ? . T_STRING ( T_VARIABLE($text) ) : ) . ; } T_ELSE { T_RETURN . T_VARIABLE($button_class) . . . T_VARIABLE($button_name) . . T_STRING ( T_VARIABLE($value) ) . . T_STRING ( T_VARIABLE($text) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($image) , T_VARIABLE($text) ) . . ; } } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($name) , T_VARIABLE($rows) , T_VARIABLE($pageNow) = T_LNUMBER , T_VARIABLE($nbTotalPage) = T_LNUMBER , T_VARIABLE($showAll) = T_LNUMBER , T_VARIABLE($sliceStart) = T_LNUMBER , T_VARIABLE($sliceEnd) = T_LNUMBER , T_VARIABLE($percent) = T_LNUMBER , T_VARIABLE($range) = T_LNUMBER , T_VARIABLE($prompt) = ) { T_VARIABLE($increment) = T_STRING ( T_VARIABLE($nbTotalPage) / T_VARIABLE($percent) ) ; T_VARIABLE($pageNowMinusRange) = ( T_VARIABLE($pageNow) - T_VARIABLE($range) ) ; T_VARIABLE($pageNowPlusRange) = ( T_VARIABLE($pageNow) + T_VARIABLE($range) ) ; T_VARIABLE($gotopage) = T_VARIABLE($prompt) . ; T_VARIABLE($gotopage) T_CONCAT_EQUAL ; T_VARIABLE($gotopage) T_CONCAT_EQUAL . T_VARIABLE($name) . ; T_IF ( T_VARIABLE($nbTotalPage) < T_VARIABLE($showAll) ) { T_VARIABLE($pages) = T_STRING ( T_LNUMBER , T_VARIABLE($nbTotalPage) ) ; } T_ELSE { T_VARIABLE($pages) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($sliceStart) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($pages) [ ] = T_VARIABLE($i) ; } T_FOR ( T_VARIABLE($i) = T_VARIABLE($nbTotalPage) - T_VARIABLE($sliceEnd) ; T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($nbTotalPage) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($pages) [ ] = T_VARIABLE($i) ; } T_VARIABLE($i) = T_VARIABLE($sliceStart) ; T_VARIABLE($x) = T_VARIABLE($nbTotalPage) - T_VARIABLE($sliceEnd) ; T_VARIABLE($met_boundary) = T_STRING ; T_WHILE ( T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($x) ) { T_IF ( T_VARIABLE($i) T_IS_GREATER_OR_EQUAL T_VARIABLE($pageNowMinusRange) T_BOOLEAN_AND T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($pageNowPlusRange) ) { T_VARIABLE($i) T_INC ; T_VARIABLE($met_boundary) = T_STRING ; } T_ELSE { T_VARIABLE($i) T_PLUS_EQUAL T_VARIABLE($increment) ; T_IF ( T_VARIABLE($i) > T_VARIABLE($pageNowMinusRange) T_BOOLEAN_AND ! T_VARIABLE($met_boundary) ) { T_VARIABLE($i) = T_VARIABLE($pageNowMinusRange) ; } } T_IF ( T_VARIABLE($i) > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($x) ) { T_VARIABLE($pages) [ ] = T_VARIABLE($i) ; } } T_VARIABLE($i) = T_VARIABLE($pageNow) ; T_VARIABLE($dist) = T_LNUMBER ; T_WHILE ( T_VARIABLE($i) < T_VARIABLE($x) ) { T_VARIABLE($dist) = T_LNUMBER * T_VARIABLE($dist) ; T_VARIABLE($i) = T_VARIABLE($pageNow) + T_VARIABLE($dist) ; T_IF ( T_VARIABLE($i) > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($x) ) { T_VARIABLE($pages) [ ] = T_VARIABLE($i) ; } } T_VARIABLE($i) = T_VARIABLE($pageNow) ; T_VARIABLE($dist) = T_LNUMBER ; T_WHILE ( T_VARIABLE($i) > T_LNUMBER ) { T_VARIABLE($dist) = T_LNUMBER * T_VARIABLE($dist) ; T_VARIABLE($i) = T_VARIABLE($pageNow) - T_VARIABLE($dist) ; T_IF ( T_VARIABLE($i) > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($x) ) { T_VARIABLE($pages) [ ] = T_VARIABLE($i) ; } } T_STRING ( T_VARIABLE($pages) ) ; T_VARIABLE($pages) = T_STRING ( T_VARIABLE($pages) ) ; } T_FOREACH ( T_VARIABLE($pages) T_AS T_VARIABLE($i) ) { T_IF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($pageNow) ) { T_VARIABLE($selected) = ; } T_ELSE { T_VARIABLE($selected) = ; } T_VARIABLE($gotopage) T_CONCAT_EQUAL . T_VARIABLE($selected) . . ( ( T_VARIABLE($i) - T_LNUMBER ) * T_VARIABLE($rows) ) . . T_VARIABLE($i) . . ; } T_VARIABLE($gotopage) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($gotopage) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($count) , T_VARIABLE($pos) , T_VARIABLE($_url_params) , T_VARIABLE($script) , T_VARIABLE($frame) , T_VARIABLE($max_count) , T_VARIABLE($name) = , T_VARIABLE($classes) = T_ARRAY ( ) ) { T_VARIABLE($class) = T_VARIABLE($frame) T_IS_EQUAL ? : ; T_VARIABLE($list_navigator_html) = ; T_IF ( T_VARIABLE($max_count) < T_VARIABLE($count) ) { T_VARIABLE($classes) [ ] = ; T_VARIABLE($list_navigator_html) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($classes) ) . ; T_IF ( T_VARIABLE($frame) T_IS_NOT_EQUAL ) { T_VARIABLE($list_navigator_html) T_CONCAT_EQUAL T_STRING ( ) ; } T_IF ( T_VARIABLE($pos) > T_LNUMBER ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($caption1) = ; T_VARIABLE($caption2) = ; T_VARIABLE($title1) = . T_STRING ( , ) . ; T_VARIABLE($title2) = . T_STRING ( , ) . ; } T_ELSE { T_VARIABLE($caption1) = T_STRING ( , ) . ; T_VARIABLE($caption2) = T_STRING ( , ) . ; T_VARIABLE($title1) = ; T_VARIABLE($title2) = ; } T_VARIABLE($_url_params) [ T_VARIABLE($name) ] = T_LNUMBER ; T_VARIABLE($list_navigator_html) T_CONCAT_EQUAL . T_VARIABLE($class) . T_VARIABLE($title1) . . T_VARIABLE($script) . T_STRING ( T_VARIABLE($_url_params) ) . . T_VARIABLE($caption1) . ; T_VARIABLE($_url_params) [ T_VARIABLE($name) ] = T_VARIABLE($pos) - T_VARIABLE($max_count) ; T_VARIABLE($list_navigator_html) T_CONCAT_EQUAL . T_VARIABLE($class) . T_VARIABLE($title2) . . T_VARIABLE($script) . T_STRING ( T_VARIABLE($_url_params) ) . . T_VARIABLE($caption2) . ; } T_VARIABLE($list_navigator_html) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($script) ) . ; T_VARIABLE($list_navigator_html) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($_url_params) ) ; T_VARIABLE($list_navigator_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name) , T_VARIABLE($max_count) , T_STRING ( ( T_VARIABLE($pos) + T_LNUMBER ) / T_VARIABLE($max_count) ) + T_LNUMBER , T_STRING ( T_VARIABLE($count) / T_VARIABLE($max_count) ) ) ; T_VARIABLE($list_navigator_html) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($pos) + T_VARIABLE($max_count) < T_VARIABLE($count) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($caption3) = ; T_VARIABLE($caption4) = ; T_VARIABLE($title3) = . T_STRING ( , ) . ; T_VARIABLE($title4) = . T_STRING ( , ) . ; } T_ELSE { T_VARIABLE($caption3) = . T_STRING ( , ) ; T_VARIABLE($caption4) = . T_STRING ( , ) ; T_VARIABLE($title3) = ; T_VARIABLE($title4) = ; } T_VARIABLE($_url_params) [ T_VARIABLE($name) ] = T_VARIABLE($pos) + T_VARIABLE($max_count) ; T_VARIABLE($list_navigator_html) T_CONCAT_EQUAL . T_VARIABLE($class) . T_VARIABLE($title3) . . T_VARIABLE($script) . T_STRING ( T_VARIABLE($_url_params) ) . . T_VARIABLE($caption3) . ; T_VARIABLE($_url_params) [ T_VARIABLE($name) ] = T_STRING ( T_VARIABLE($count) / T_VARIABLE($max_count) ) * T_VARIABLE($max_count) ; T_IF ( T_VARIABLE($_url_params) [ T_VARIABLE($name) ] T_IS_EQUAL T_VARIABLE($count) ) { T_VARIABLE($_url_params) [ T_VARIABLE($name) ] = T_VARIABLE($count) - T_VARIABLE($max_count) ; } T_VARIABLE($list_navigator_html) T_CONCAT_EQUAL . T_VARIABLE($class) . T_VARIABLE($title4) . . T_VARIABLE($script) . T_STRING ( T_VARIABLE($_url_params) ) . . T_VARIABLE($caption4) . ; } T_VARIABLE($list_navigator_html) T_CONCAT_EQUAL . ; } T_RETURN T_VARIABLE($list_navigator_html) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($dir) ) { T_IF ( T_STRING ( T_VARIABLE($dir) , - T_LNUMBER ) T_IS_NOT_EQUAL ) { T_VARIABLE($dir) T_CONCAT_EQUAL ; } T_RETURN T_STRING ( , T_VARIABLE($GLOBALS) [ ] [ ] [ ] , T_VARIABLE($dir) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($database) = T_STRING ) { T_IF ( ! T_STRING ( T_VARIABLE($database) ) ) { T_IF ( ! T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_RETURN ; } T_VARIABLE($database) = T_VARIABLE($GLOBALS) [ ] ; } T_ELSE { T_VARIABLE($database) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($database) ) ; } T_RETURN . T_VARIABLE($GLOBALS) [ ] [ ] . . T_STRING ( T_VARIABLE($database) ) . . T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($database) ) ) . . T_STRING ( T_VARIABLE($database) ) . ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($functionality) , T_VARIABLE($component) , T_VARIABLE($minimum_version) , T_VARIABLE($bugref) ) { T_VARIABLE($ext_but_html) = ; T_IF ( ( T_VARIABLE($component) T_IS_EQUAL ) T_BOOLEAN_AND ( T_STRING < T_VARIABLE($minimum_version) ) ) { T_VARIABLE($ext_but_html) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($functionality) , T_STRING ( ) . T_VARIABLE($bugref) ) ) ; } T_RETURN T_VARIABLE($ext_but_html) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($html_field_name) , T_VARIABLE($label) , T_VARIABLE($checked) , T_VARIABLE($onclick) ) { T_RETURN . T_VARIABLE($html_field_name) . . T_VARIABLE($html_field_name) . . ( T_VARIABLE($checked) ? : ) . ( T_VARIABLE($onclick) ? : ) . . T_VARIABLE($html_field_name) . . T_VARIABLE($label) . ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($html_field_name) , T_VARIABLE($choices) , T_VARIABLE($checked_choice) = , T_VARIABLE($line_break) = T_STRING , T_VARIABLE($escape_label) = T_STRING , T_VARIABLE($class) = ) { T_VARIABLE($radio_html) = ; T_FOREACH ( T_VARIABLE($choices) T_AS T_VARIABLE($choice_value) T_DOUBLE_ARROW T_VARIABLE($choice_label) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($class) ) ) { T_VARIABLE($radio_html) T_CONCAT_EQUAL . T_VARIABLE($class) . ; } T_VARIABLE($html_field_id) = T_VARIABLE($html_field_name) . . T_VARIABLE($choice_value) ; T_VARIABLE($radio_html) T_CONCAT_EQUAL . T_VARIABLE($html_field_name) . . T_VARIABLE($html_field_id) . . T_STRING ( T_VARIABLE($choice_value) ) . ; T_IF ( T_VARIABLE($choice_value) T_IS_EQUAL T_VARIABLE($checked_choice) ) { T_VARIABLE($radio_html) T_CONCAT_EQUAL ; } T_VARIABLE($radio_html) T_CONCAT_EQUAL . . . T_VARIABLE($html_field_id) . . ( T_VARIABLE($escape_label) ? T_STRING ( T_VARIABLE($choice_label) ) : T_VARIABLE($choice_label) ) . ; T_IF ( T_VARIABLE($line_break) ) { T_VARIABLE($radio_html) T_CONCAT_EQUAL ; } T_IF ( ! T_EMPTY ( T_VARIABLE($class) ) ) { T_VARIABLE($radio_html) T_CONCAT_EQUAL ; } T_VARIABLE($radio_html) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($radio_html) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($select_name) , T_VARIABLE($choices) , T_VARIABLE($active_choice) , T_VARIABLE($id) ) { T_VARIABLE($result) = . T_STRING ( T_VARIABLE($select_name) ) . . T_STRING ( T_VARIABLE($id) ) . ; T_FOREACH ( T_VARIABLE($choices) T_AS T_VARIABLE($one_choice_value) T_DOUBLE_ARROW T_VARIABLE($one_choice_label) ) { T_VARIABLE($result) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($one_choice_value) ) . ; T_IF ( T_VARIABLE($one_choice_value) T_IS_EQUAL T_VARIABLE($active_choice) ) { T_VARIABLE($result) T_CONCAT_EQUAL ; } T_VARIABLE($result) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($one_choice_label) ) . ; } T_VARIABLE($result) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($result) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($id) , T_VARIABLE($message) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL ) { T_RETURN . T_VARIABLE($id) . ; } T_RETURN . T_VARIABLE($id) . . ( ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL ) ? : ) . . T_STRING ( T_VARIABLE($message) ) . ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($action) , T_VARIABLE($select_name) , T_VARIABLE($options) , T_VARIABLE($callback) ) { T_VARIABLE($link) = T_VARIABLE($action) T_ENCAPSED_AND_WHITESPACE . T_STRING ( T_VARIABLE($select_name) ) . ; T_VARIABLE($link_on) = T_VARIABLE($link) . T_STRING ( T_VARIABLE($options) [ T_LNUMBER ] [ ] ) ; T_VARIABLE($link_off) = T_VARIABLE($link) . T_STRING ( T_VARIABLE($options) [ T_LNUMBER ] [ ] ) ; T_IF ( T_VARIABLE($options) [ T_LNUMBER ] [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($state) = ; } T_ELSE T_IF ( T_VARIABLE($options) [ T_LNUMBER ] [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($state) = ; } T_ELSE { T_VARIABLE($state) = ; } T_RETURN . . . . T_STRING ( ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($state) T_ENCAPSED_AND_WHITESPACE . . T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . . . . . . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($link_on) T_ENCAPSED_AND_WHITESPACE . . T_STRING ( , , T_STRING ( T_VARIABLE($options) [ T_LNUMBER ] [ ] ) ) . . . . . . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($link_off) T_ENCAPSED_AND_WHITESPACE . . T_STRING ( , , T_STRING ( T_VARIABLE($options) [ T_LNUMBER ] [ ] ) ) . . . . . . . T_STRING ( T_VARIABLE($callback) ) . . . T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . . . . ; } T_PUBLIC T_STATIC T_STRING ( ) { T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($var) , T_VARIABLE($server) = T_LNUMBER ) { T_IF ( T_VARIABLE($server) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($server) = T_VARIABLE($GLOBALS) [ ] ; } T_RETURN T_ISSET ( T_VARIABLE($_SESSION) [ ] [ . T_VARIABLE($server) ] [ T_VARIABLE($var) ] ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($var) , T_VARIABLE($server) = T_LNUMBER ) { T_IF ( T_VARIABLE($server) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($server) = T_VARIABLE($GLOBALS) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] [ . T_VARIABLE($server) ] [ T_VARIABLE($var) ] ) ) { T_RETURN T_VARIABLE($_SESSION) [ ] [ . T_VARIABLE($server) ] [ T_VARIABLE($var) ] ; } T_ELSE { T_RETURN T_STRING ; } } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($var) , T_VARIABLE($val) = T_STRING , T_VARIABLE($server) = T_LNUMBER ) { T_IF ( T_VARIABLE($server) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($server) = T_VARIABLE($GLOBALS) [ ] ; } T_VARIABLE($_SESSION) [ ] [ . T_VARIABLE($server) ] [ T_VARIABLE($var) ] = T_VARIABLE($val) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($var) , T_VARIABLE($server) = T_LNUMBER ) { T_IF ( T_VARIABLE($server) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($server) = T_VARIABLE($GLOBALS) [ ] ; } T_UNSET ( T_VARIABLE($_SESSION) [ ] [ . T_VARIABLE($server) ] [ T_VARIABLE($var) ] ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($value) , T_VARIABLE($length) ) { T_VARIABLE($printable) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER , T_VARIABLE($len_ceiled) = T_STRING ( T_VARIABLE($length) / T_LNUMBER ) ; T_VARIABLE($i) < T_VARIABLE($len_ceiled) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($printable) T_CONCAT_EQUAL T_STRING ( , T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($value) , T_VARIABLE($i) , T_LNUMBER ) ) ) ) ; } T_VARIABLE($printable) = T_STRING ( T_VARIABLE($printable) , - T_VARIABLE($length) ) ; T_RETURN T_VARIABLE($printable) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($value) ) { T_RETURN T_STRING ( , T_VARIABLE($value) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($bit_default_value) ) { T_RETURN T_STRING ( T_VARIABLE($bit_default_value) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($columnspec) ) { T_VARIABLE($first_bracket_pos) = T_STRING ( T_VARIABLE($columnspec) , ) ; T_IF ( T_VARIABLE($first_bracket_pos) ) { T_VARIABLE($spec_in_brackets) = T_STRING ( T_STRING ( T_VARIABLE($columnspec) , T_VARIABLE($first_bracket_pos) + T_LNUMBER , ( T_STRING ( T_VARIABLE($columnspec) , ) - T_VARIABLE($first_bracket_pos) - T_LNUMBER ) ) ) ; T_VARIABLE($type) = T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($columnspec) , T_LNUMBER , T_VARIABLE($first_bracket_pos) ) ) ) ; } T_ELSE { T_VARIABLE($type) = T_STRING ( T_VARIABLE($columnspec) ) ; T_VARIABLE($spec_in_brackets) = ; } T_IF ( T_IS_EQUAL T_VARIABLE($type) T_BOOLEAN_OR T_IS_EQUAL T_VARIABLE($type) ) { T_VARIABLE($enum_set_values) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($columnspec) , T_STRING ) ; T_VARIABLE($printtype) = T_VARIABLE($type) . . T_STRING ( , , T_VARIABLE($spec_in_brackets) ) . ; T_VARIABLE($binary) = T_STRING ; T_VARIABLE($unsigned) = T_STRING ; T_VARIABLE($zerofill) = T_STRING ; } T_ELSE { T_VARIABLE($enum_set_values) = T_ARRAY ( ) ; T_VARIABLE($printtype) = T_STRING ( T_VARIABLE($columnspec) ) ; T_IF ( T_STRING ( , T_VARIABLE($printtype) ) T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($printtype) ) ) { T_VARIABLE($printtype) = T_STRING ( , , T_VARIABLE($printtype) ) ; T_VARIABLE($binary) = T_STRING ; } T_ELSE { T_VARIABLE($binary) = T_STRING ; } T_VARIABLE($printtype) = T_STRING ( , , T_VARIABLE($printtype) , - T_LNUMBER , T_VARIABLE($zerofill_cnt) ) ; T_VARIABLE($zerofill) = ( T_VARIABLE($zerofill_cnt) > T_LNUMBER ) ; T_VARIABLE($printtype) = T_STRING ( , , T_VARIABLE($printtype) , - T_LNUMBER , T_VARIABLE($unsigned_cnt) ) ; T_VARIABLE($unsigned) = ( T_VARIABLE($unsigned_cnt) > T_LNUMBER ) ; T_VARIABLE($printtype) = T_STRING ( T_VARIABLE($printtype) ) ; } T_VARIABLE($attribute) = ; T_IF ( T_VARIABLE($binary) ) { T_VARIABLE($attribute) = ; } T_IF ( T_VARIABLE($unsigned) ) { T_VARIABLE($attribute) = ; } T_IF ( T_VARIABLE($zerofill) ) { T_VARIABLE($attribute) = ; } T_VARIABLE($can_contain_collation) = T_STRING ; T_IF ( ! T_VARIABLE($binary) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($type) ) ) { T_VARIABLE($can_contain_collation) = T_STRING ; } T_VARIABLE($displayed_type) = T_STRING ( T_VARIABLE($printtype) ) ; T_IF ( T_STRING ( T_VARIABLE($printtype) ) > T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($displayed_type) = . T_VARIABLE($printtype) . ; T_VARIABLE($displayed_type) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($printtype) , T_LNUMBER , T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_VARIABLE($displayed_type) T_CONCAT_EQUAL ; } T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($type) , T_DOUBLE_ARROW T_VARIABLE($spec_in_brackets) , T_DOUBLE_ARROW T_VARIABLE($enum_set_values) , T_DOUBLE_ARROW T_VARIABLE($printtype) , T_DOUBLE_ARROW T_VARIABLE($binary) , T_DOUBLE_ARROW T_VARIABLE($unsigned) , T_DOUBLE_ARROW T_VARIABLE($zerofill) , T_DOUBLE_ARROW T_VARIABLE($attribute) , T_DOUBLE_ARROW T_VARIABLE($can_contain_collation) , T_DOUBLE_ARROW T_VARIABLE($displayed_type) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($engine) ) { T_VARIABLE($engine) = T_STRING ( T_VARIABLE($engine) ) ; T_IF ( ( T_VARIABLE($engine) T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($engine) T_IS_EQUAL ) ) { T_RETURN T_STRING ; } T_ELSE { T_RETURN T_STRING ; } } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($content) ) { T_VARIABLE($result) = T_STRING ( , , T_VARIABLE($content) ) ; T_VARIABLE($result) = T_STRING ( , , T_VARIABLE($result) ) ; T_VARIABLE($result) = T_STRING ( , , T_VARIABLE($result) ) ; T_VARIABLE($result) = T_STRING ( , , T_VARIABLE($result) ) ; T_VARIABLE($result) = T_STRING ( , , T_VARIABLE($result) ) ; T_RETURN T_VARIABLE($result) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($data) , T_VARIABLE($includeSRID) = T_STRING ) { T_VARIABLE($hex) = T_STRING ( T_VARIABLE($data) ) ; T_VARIABLE($wktsql) = . T_VARIABLE($hex) . ; T_IF ( T_VARIABLE($includeSRID) ) { T_VARIABLE($wktsql) T_CONCAT_EQUAL . T_VARIABLE($hex) . ; } T_VARIABLE($wktresult) = T_STRING ( T_VARIABLE($wktsql) , T_STRING , T_STRING ) ; T_VARIABLE($wktarr) = T_STRING ( T_VARIABLE($wktresult) , T_LNUMBER ) ; T_VARIABLE($wktval) = T_VARIABLE($wktarr) [ T_LNUMBER ] ; T_IF ( T_VARIABLE($includeSRID) ) { T_VARIABLE($srid) = T_VARIABLE($wktarr) [ T_LNUMBER ] ; T_VARIABLE($wktval) = . T_VARIABLE($wktval) . . T_VARIABLE($srid) ; } @ T_STRING ( T_VARIABLE($wktresult) ) ; T_RETURN T_VARIABLE($wktval) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($string) ) { T_VARIABLE($first_occurence) = T_STRING ( T_VARIABLE($string) , ) ; T_IF ( T_VARIABLE($first_occurence) T_IS_IDENTICAL T_LNUMBER ) { T_VARIABLE($string) = . T_VARIABLE($string) ; } T_RETURN T_VARIABLE($string) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($target) ) { T_VARIABLE($mapping) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($mapping) [ T_VARIABLE($target) ] ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($string) , T_VARIABLE($escape) = T_STRING , T_VARIABLE($updates) = T_ARRAY ( ) ) { T_VARIABLE($vars) [ ] = T_STRING ( ) ; T_VARIABLE($vars) [ ] = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_VARIABLE($vars) [ ] = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; T_IF ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ) { T_VARIABLE($vars) [ ] = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; } T_ELSE { T_VARIABLE($vars) [ ] = T_VARIABLE($GLOBALS) [ ] [ ] [ ] ; } T_VARIABLE($vars) [ ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($vars) [ ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($vars) [ ] = . T_STRING ; T_FOREACH ( T_VARIABLE($updates) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($vars) [ T_VARIABLE($key) ] = T_VARIABLE($val) ; } T_VARIABLE($replace) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($vars) [ ] , T_DOUBLE_ARROW T_VARIABLE($vars) [ ] , T_DOUBLE_ARROW T_VARIABLE($vars) [ ] , T_DOUBLE_ARROW T_VARIABLE($vars) [ ] , T_DOUBLE_ARROW T_VARIABLE($vars) [ ] , T_DOUBLE_ARROW T_VARIABLE($vars) [ ] , T_DOUBLE_ARROW T_VARIABLE($vars) [ ] , T_DOUBLE_ARROW T_VARIABLE($vars) [ ] , T_DOUBLE_ARROW T_VARIABLE($vars) [ ] , T_DOUBLE_ARROW T_VARIABLE($vars) [ ] , ) ; T_IF ( ! T_STRING ( T_VARIABLE($escape) ) ) { T_IF ( T_STRING ( T_VARIABLE($escape) ) ) { T_INCLUDE_ONCE T_VARIABLE($escape) [ T_LNUMBER ] ; T_VARIABLE($escape_class) = T_NEW T_VARIABLE($escape) [ T_LNUMBER ] ; T_VARIABLE($escape_method) = T_VARIABLE($escape) [ T_LNUMBER ] ; } T_FOREACH ( T_VARIABLE($replace) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_IF ( T_STRING ( T_VARIABLE($escape) ) ) { T_VARIABLE($replace) [ T_VARIABLE($key) ] = T_VARIABLE($escape_class) T_OBJECT_OPERATOR T_VARIABLE($escape_method) ( T_VARIABLE($val) ) ; } T_ELSE { T_VARIABLE($replace) [ T_VARIABLE($key) ] = ( T_VARIABLE($escape) T_IS_EQUAL ) ? T_STRING T_DOUBLE_COLON T_VARIABLE($escape) ( T_VARIABLE($val) ) : T_VARIABLE($escape) ( T_VARIABLE($val) ) ; } } } T_IF ( T_STRING ( T_VARIABLE($string) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($string) = T_STRING ( T_VARIABLE($string) , T_ARRAY ( T_DOUBLE_ARROW ) ) ; } T_IF ( T_STRING ( T_VARIABLE($string) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($columns_list) = T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( ! T_STRING ( T_VARIABLE($columns_list) ) ) { T_VARIABLE($column_names) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($columns_list) T_AS T_VARIABLE($column) ) { T_IF ( ! T_STRING ( T_VARIABLE($escape) ) ) { T_VARIABLE($column_names) [ ] = T_STRING T_DOUBLE_COLON T_VARIABLE($escape) ( T_VARIABLE($column) [ ] ) ; } T_ELSE { T_VARIABLE($column_names) [ ] = T_VARIABLE($column) [ ] ; } } T_VARIABLE($replace) [ ] = T_STRING ( , T_VARIABLE($column_names) ) ; } T_ELSE { T_VARIABLE($replace) [ ] = ; } } T_RETURN T_STRING ( T_STRING ( T_VARIABLE($string) ) , T_VARIABLE($replace) ) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($max_upload_size) ) { T_VARIABLE($block_html) = ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_VARIABLE($block_html) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($block_html) T_CONCAT_EQUAL ; } T_VARIABLE($block_html) T_CONCAT_EQUAL T_STRING ( ) . . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($max_upload_size) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($max_upload_size) ) . ; T_RETURN T_VARIABLE($block_html) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($import_list) , T_VARIABLE($uploaddir) ) { T_VARIABLE($block_html) = ; T_VARIABLE($block_html) T_CONCAT_EQUAL . T_STRING ( T_STRING ( ) , T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($uploaddir) ) ) ) . ; T_VARIABLE($extensions) = ; T_FOREACH ( T_VARIABLE($import_list) T_AS T_VARIABLE($import_plugin) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($extensions) ) ) { T_VARIABLE($extensions) T_CONCAT_EQUAL ; } T_VARIABLE($extensions) T_CONCAT_EQUAL T_VARIABLE($import_plugin) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($matcher) = . T_VARIABLE($extensions) . . T_STRING ( ) . ; T_VARIABLE($active) = ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND T_ISSET ( T_VARIABLE($local_import_file) ) ) ? T_VARIABLE($local_import_file) : ; T_VARIABLE($files) = T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($uploaddir) ) , T_VARIABLE($matcher) , T_VARIABLE($active) ) ; T_IF ( T_VARIABLE($files) T_IS_IDENTICAL T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($files) ) ) { T_VARIABLE($block_html) T_CONCAT_EQUAL . . . . . . . T_VARIABLE($files) . . ; } T_ELSEIF ( T_EMPTY ( T_VARIABLE($files) ) ) { T_VARIABLE($block_html) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_RETURN T_VARIABLE($block_html) ; } T_PUBLIC T_STATIC T_STRING ( ) { T_VARIABLE($titles) = T_ARRAY ( ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_RETURN T_VARIABLE($titles) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($html) = T_STRING , T_VARIABLE($selected) = ) { T_IF ( T_VARIABLE($html) ) { T_VARIABLE($retval) = ; T_FOREACH ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($key) ) . ; T_FOREACH ( T_VARIABLE($value) T_AS T_VARIABLE($subvalue) ) { T_IF ( T_VARIABLE($subvalue) T_IS_EQUAL T_VARIABLE($selected) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($subvalue) ) , T_VARIABLE($subvalue) ) ; } T_ELSE T_IF ( T_VARIABLE($subvalue) T_IS_IDENTICAL ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($subvalue) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($subvalue) ) , T_VARIABLE($subvalue) ) ; } } T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_IF ( T_VARIABLE($selected) T_IS_EQUAL T_VARIABLE($value) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($value) ) , T_VARIABLE($value) ) ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($value) ) , T_VARIABLE($value) ) ; } } } } T_ELSE { T_VARIABLE($retval) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($value) ) { T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_FOREACH ( T_VARIABLE($value) T_AS T_VARIABLE($subvalue) ) { T_IF ( T_VARIABLE($subvalue) T_IS_NOT_IDENTICAL ) { T_VARIABLE($retval) [ ] = T_VARIABLE($subvalue) ; } } } T_ELSE { T_IF ( T_VARIABLE($value) T_IS_NOT_IDENTICAL ) { T_VARIABLE($retval) [ ] = T_VARIABLE($value) ; } } } } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STATIC T_STRING ( ) { T_VARIABLE($no_support_types) = T_ARRAY ( ) ; T_RETURN T_VARIABLE($no_support_types) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($upper_case) = T_STRING ) { T_VARIABLE($gis_data_types) = T_ARRAY ( , , , , , , , ) ; T_IF ( T_VARIABLE($upper_case) ) { T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($gis_data_types) ) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($gis_data_types) [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($gis_data_types) [ T_VARIABLE($i) ] ) ; } } T_RETURN T_VARIABLE($gis_data_types) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($gis_string) ) { T_VARIABLE($gis_string) = T_STRING ( T_VARIABLE($gis_string) ) ; T_VARIABLE($geom_types) = . ; T_IF ( T_STRING ( . T_VARIABLE($geom_types) . , T_VARIABLE($gis_string) ) ) { T_RETURN . T_VARIABLE($gis_string) . ; } T_ELSEIF ( T_STRING ( . T_VARIABLE($geom_types) . , T_VARIABLE($gis_string) ) ) { T_RETURN . T_VARIABLE($gis_string) . ; } T_ELSE { T_RETURN T_VARIABLE($gis_string) ; } } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($geom_type) = T_STRING , T_VARIABLE($binary) = T_STRING , T_VARIABLE($display) = T_STRING ) { T_VARIABLE($funcs) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($display) ) { T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW ) ; } T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($geom_type) = T_STRING ( T_STRING ( T_VARIABLE($geom_type) ) ) ; T_IF ( T_VARIABLE($display) T_BOOLEAN_AND T_VARIABLE($geom_type) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($geom_type) T_IS_NOT_EQUAL ) { T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW ) ; } T_IF ( T_VARIABLE($geom_type) T_IS_EQUAL ) { T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; } T_ELSEIF ( T_VARIABLE($geom_type) T_IS_EQUAL ) { } T_ELSEIF ( T_VARIABLE($geom_type) T_IS_EQUAL ) { T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; } T_ELSEIF ( T_VARIABLE($geom_type) T_IS_EQUAL ) { T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; } T_ELSEIF ( T_VARIABLE($geom_type) T_IS_EQUAL ) { T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; } T_ELSEIF ( T_VARIABLE($geom_type) T_IS_EQUAL ) { T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; } T_ELSEIF ( T_VARIABLE($geom_type) T_IS_EQUAL ) { T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; } T_IF ( T_VARIABLE($binary) ) { T_IF ( T_VARIABLE($display) ) { T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW ) ; } T_IF ( T_STRING < T_LNUMBER ) { T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; } T_ELSE { T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; } T_IF ( T_VARIABLE($display) ) { T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW ) ; } T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($funcs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; } T_RETURN T_VARIABLE($funcs) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($field) , T_VARIABLE($insert_mode) ) { T_GLOBAL T_VARIABLE($cfg) , T_VARIABLE($analyzed_sql) , T_VARIABLE($data) ; T_VARIABLE($default_function) = ; T_VARIABLE($current_class) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($field) [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($current_class) ) ) { T_IF ( T_ISSET ( T_VARIABLE($cfg) [ ] [ . T_VARIABLE($current_class) ] ) ) { T_VARIABLE($default_function) = T_VARIABLE($cfg) [ ] [ . T_VARIABLE($current_class) ] ; } } T_VARIABLE($analyzed_sql_field_array) = T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($field) [ ] ] ; T_IF ( ( T_VARIABLE($field) [ ] T_IS_EQUAL ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($field) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($data) ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($analyzed_sql_field_array) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($analyzed_sql_field_array) [ ] T_IS_NOT_EQUAL ) ) { T_VARIABLE($default_function) = T_VARIABLE($cfg) [ ] [ ] ; } T_IF ( T_VARIABLE($field) [ ] ) { T_VARIABLE($default_function) = T_VARIABLE($cfg) [ ] [ ] ; } T_IF ( T_VARIABLE($insert_mode) T_BOOLEAN_AND T_VARIABLE($field) [ ] T_IS_EQUAL T_BOOLEAN_AND ( T_VARIABLE($field) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($field) [ ] T_IS_EQUAL ) ) { T_VARIABLE($default_function) = T_VARIABLE($cfg) [ ] [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($field) [ ] ) ) { T_VARIABLE($default_function) = ; } T_RETURN T_VARIABLE($default_function) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($field) , T_VARIABLE($insert_mode) ) { T_VARIABLE($default_function) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($field) , T_VARIABLE($insert_mode) ) ; T_VARIABLE($dropdown_built) = T_ARRAY ( ) ; T_VARIABLE($retval) = . ; T_VARIABLE($functions) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($field) [ ] ) ; T_FOREACH ( T_VARIABLE($functions) T_AS T_VARIABLE($function) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($default_function) T_IS_IDENTICAL T_VARIABLE($function) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($function) . . ; T_VARIABLE($dropdown_built) [ T_VARIABLE($function) ] = T_STRING ; } T_IF ( T_STRING ( T_VARIABLE($functions) ) > T_LNUMBER ) { T_VARIABLE($retval) T_CONCAT_EQUAL . ; } T_VARIABLE($functions) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($functions) T_AS T_VARIABLE($function) ) { T_IF ( T_ISSET ( T_VARIABLE($dropdown_built) [ T_VARIABLE($function) ] ) ) { T_CONTINUE ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($default_function) T_IS_IDENTICAL T_VARIABLE($function) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($function) . . ; } T_RETURN T_VARIABLE($retval) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($priv) , T_VARIABLE($db) = T_STRING , T_VARIABLE($tbl) = T_STRING ) { T_VARIABLE($user) = T_STRING ( ) ; T_IF ( T_VARIABLE($user) T_IS_IDENTICAL T_STRING ) { T_RETURN T_STRING ; } T_VARIABLE($user) = T_STRING ( , T_VARIABLE($user) ) ; T_VARIABLE($username) = ; T_VARIABLE($username) T_CONCAT_EQUAL T_STRING ( , , T_VARIABLE($user) [ T_LNUMBER ] ) ; T_VARIABLE($username) T_CONCAT_EQUAL ; T_VARIABLE($username) T_CONCAT_EQUAL T_STRING ( , , T_VARIABLE($user) [ T_LNUMBER ] ) ; T_VARIABLE($username) T_CONCAT_EQUAL ; T_VARIABLE($query) = . ; T_VARIABLE($user_privileges) = T_STRING ( T_STRING ( T_VARIABLE($query) , , T_VARIABLE($username) , T_VARIABLE($priv) ) ) ; T_IF ( T_VARIABLE($user_privileges) ) { T_RETURN T_STRING ; } T_IF ( T_VARIABLE($db) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($db) = T_STRING ( T_ARRAY ( , ) , T_ARRAY ( , ) , T_VARIABLE($db) ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($schema_privileges) = T_STRING ( T_STRING ( T_VARIABLE($query) , , T_VARIABLE($username) , T_VARIABLE($priv) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ) ) ; T_IF ( T_VARIABLE($schema_privileges) ) { T_RETURN T_STRING ; } } T_ELSE { T_RETURN T_STRING ; } T_IF ( T_VARIABLE($tbl) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($tbl) = T_STRING ( T_ARRAY ( , ) , T_ARRAY ( , ) , T_VARIABLE($tbl) ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($table_privileges) = T_STRING ( T_STRING ( T_VARIABLE($query) , , T_VARIABLE($username) , T_VARIABLE($priv) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tbl) ) ) ) ; T_IF ( T_VARIABLE($table_privileges) ) { T_RETURN T_STRING ; } } T_RETURN T_STRING ; } T_PUBLIC T_STATIC T_STRING ( ) { T_VARIABLE($server_type) = ; T_IF ( T_STRING ) { T_VARIABLE($server_type) = ; } T_ELSE T_IF ( T_STRING ( T_STRING , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($server_type) = ; } T_ELSE T_IF ( T_STRING ( T_STRING , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($server_type) = ; } T_RETURN T_VARIABLE($server_type) ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($limit_clause) ) { T_VARIABLE($start_and_length) = T_STRING ( , T_STRING ( , , T_VARIABLE($limit_clause) ) ) ; T_VARIABLE($size) = T_STRING ( T_VARIABLE($start_and_length) ) ; T_IF ( T_VARIABLE($size) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($start_and_length) [ T_LNUMBER ] ) ) ; } T_ELSEIF ( T_VARIABLE($size) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($start_and_length) [ T_LNUMBER ] ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($start_and_length) [ T_LNUMBER ] ) ) ; } } T_PUBLIC T_STATIC T_STRING ( ) { T_RETURN . . T_STRING ( ) . . ; } T_PUBLIC T_STATIC T_STRING ( T_VARIABLE($definition) , T_VARIABLE($escapeHtml) = T_STRING ) { T_VARIABLE($values_string) = T_STRING ( T_VARIABLE($definition) , T_STRING , ) ; T_VARIABLE($values) = T_ARRAY ( ) ; T_VARIABLE($in_string) = T_STRING ; T_VARIABLE($buffer) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($values_string) ) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($curr) = T_VARIABLE($values_string) [ T_VARIABLE($i) ] ; T_VARIABLE($next) = ( T_VARIABLE($i) T_IS_EQUAL T_STRING ( T_VARIABLE($values_string) ) - T_LNUMBER ) ? : T_VARIABLE($values_string) [ T_VARIABLE($i) + T_LNUMBER ] ; T_IF ( ! T_VARIABLE($in_string) T_BOOLEAN_AND T_VARIABLE($curr) T_IS_EQUAL ) { T_VARIABLE($in_string) = T_STRING ; } T_ELSE T_IF ( ( T_VARIABLE($in_string) T_BOOLEAN_AND T_VARIABLE($curr) T_IS_EQUAL ) T_BOOLEAN_AND T_VARIABLE($next) T_IS_EQUAL ) { T_VARIABLE($buffer) T_CONCAT_EQUAL ; T_VARIABLE($i) T_INC ; } T_ELSE T_IF ( ( T_VARIABLE($in_string) T_BOOLEAN_AND T_VARIABLE($next) T_IS_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($curr) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($curr) T_IS_EQUAL ) ) { T_VARIABLE($buffer) T_CONCAT_EQUAL ; T_VARIABLE($i) T_INC ; } T_ELSE T_IF ( T_VARIABLE($in_string) T_BOOLEAN_AND T_VARIABLE($curr) T_IS_EQUAL ) { T_VARIABLE($in_string) = T_STRING ; T_VARIABLE($values) [ ] = T_VARIABLE($buffer) ; T_VARIABLE($buffer) = ; } T_ELSE T_IF ( T_VARIABLE($in_string) ) { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($curr) ; } } T_IF ( T_STRING ( T_VARIABLE($buffer) ) > T_LNUMBER ) { T_VARIABLE($values) [ ] = T_VARIABLE($buffer) ; } T_IF ( ! T_VARIABLE($escapeHtml) ) { T_FOREACH ( T_VARIABLE($values) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($values) [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($value) , T_STRING ) ; } } T_RETURN T_VARIABLE($values) ; } T_PUBLIC T_STATIC T_STRING ( & T_VARIABLE($tooltip_truename) , & T_VARIABLE($tooltip_aliasname) , T_VARIABLE($table) ) { T_IF ( T_STRING ( T_VARIABLE($table) [ ] , ) T_IS_IDENTICAL T_STRING ) { T_IF ( ! T_STRING ( T_VARIABLE($table) [ ] , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($table) [ ] = ; } } T_ELSE { T_VARIABLE($table) [ ] = T_STRING ( , , T_VARIABLE($table) [ ] ) ; } T_IF ( T_IS_EQUAL T_VARIABLE($table) [ ] ) { T_VARIABLE($table) [ ] = ; } T_IF ( T_EMPTY ( T_VARIABLE($table) [ ] ) ) { T_VARIABLE($table) [ ] = T_VARIABLE($table) [ ] ; } T_ELSE { T_VARIABLE($table) [ ] T_CONCAT_EQUAL ; } T_VARIABLE($tooltip_truename) [ T_VARIABLE($table) [ ] ] = T_VARIABLE($table) [ ] ; T_VARIABLE($tooltip_aliasname) [ T_VARIABLE($table) [ ] ] = T_VARIABLE($table) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($table) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($table) [ ] ) ) { T_VARIABLE($tooltip_aliasname) [ T_VARIABLE($table) [ ] ] T_CONCAT_EQUAL . T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($table) [ ] ) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($table) [ ] ) ) { T_VARIABLE($tooltip_aliasname) [ T_VARIABLE($table) [ ] ] T_CONCAT_EQUAL . T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($table) [ ] ) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($table) [ ] ) ) { T_VARIABLE($tooltip_aliasname) [ T_VARIABLE($table) [ ] ] T_CONCAT_EQUAL . T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($table) [ ] ) ) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING ( , ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_STRING ( , T_STRING ) ; T_STRING ( , ) ; T_STRING ( , T_STRING . ) ; T_STRING ( , T_STRING . ) ; T_STRING ( , T_STRING . ) ; T_STRING ( , T_STRING ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(PMA_getZipContents) ( T_VARIABLE($file) , T_VARIABLE($specific_entry) = T_STRING ) { T_VARIABLE($error_message) = ; T_VARIABLE($file_data) = ; T_VARIABLE($zip_handle) = T_STRING ( T_VARIABLE($file) ) ; T_IF ( T_STRING ( T_VARIABLE($zip_handle) ) ) { T_VARIABLE($first_zip_entry) = T_STRING ( T_VARIABLE($zip_handle) ) ; T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($first_zip_entry) ) { T_VARIABLE($error_message) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($read) = T_STRING ( T_VARIABLE($first_zip_entry) ) ; T_VARIABLE($ods_mime) = ; T_IF ( ! T_STRING ( T_VARIABLE($ods_mime) , T_VARIABLE($read) ) ) { T_VARIABLE($specific_entry) = ; } T_IF ( T_ISSET ( T_VARIABLE($specific_entry) ) ) { T_FOR ( ; ; ) { T_VARIABLE($entry) = T_STRING ( T_VARIABLE($zip_handle) ) ; T_IF ( T_STRING ( T_VARIABLE($entry) ) ) { T_IF ( T_STRING ( T_VARIABLE($specific_entry) , T_STRING ( T_VARIABLE($entry) ) ) ) { T_STRING ( T_VARIABLE($zip_handle) , T_VARIABLE($entry) , ) ; T_VARIABLE($file_data) = T_STRING ( T_VARIABLE($entry) , T_STRING ( T_VARIABLE($entry) ) ) ; T_STRING ( T_VARIABLE($entry) ) ; T_BREAK ; } } T_ELSE { T_IF ( T_VARIABLE($entry) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error_message) = T_STRING ( ) . . T_VARIABLE($specific_entry) . ; } T_ELSE { T_VARIABLE($error_message) = T_STRING ( ) . . T_STRING ( T_VARIABLE($zip_handle) ) ; } T_BREAK ; } } } T_ELSE { T_STRING ( T_VARIABLE($zip_handle) , T_VARIABLE($first_zip_entry) , ) ; T_VARIABLE($file_data) = T_VARIABLE($read) ; T_VARIABLE($file_data) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($first_zip_entry) , T_STRING ( T_VARIABLE($first_zip_entry) ) ) ; T_STRING ( T_VARIABLE($first_zip_entry) ) ; } } } T_ELSE { T_VARIABLE($error_message) = T_STRING ( ) . . T_STRING ( T_VARIABLE($zip_handle) ) ; } T_STRING ( T_VARIABLE($zip_handle) ) ; T_RETURN ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($error_message) , T_DOUBLE_ARROW T_VARIABLE($file_data) ) ) ; } T_FUNCTION(PMA_findFileFromZipArchive) ( T_VARIABLE($file_regexp) , T_VARIABLE($file) ) { T_VARIABLE($zip_handle) = T_STRING ( T_VARIABLE($file) ) ; T_IF ( T_STRING ( T_VARIABLE($zip_handle) ) ) { T_VARIABLE($entry) = T_STRING ( T_VARIABLE($zip_handle) ) ; T_WHILE ( T_STRING ( T_VARIABLE($entry) ) ) { T_IF ( T_STRING ( T_VARIABLE($file_regexp) , T_STRING ( T_VARIABLE($entry) ) ) ) { T_VARIABLE($file_name) = T_STRING ( T_VARIABLE($entry) ) ; T_STRING ( T_VARIABLE($zip_handle) ) ; T_RETURN T_VARIABLE($file_name) ; } T_VARIABLE($entry) = T_STRING ( T_VARIABLE($zip_handle) ) ; } } T_STRING ( T_VARIABLE($zip_handle) ) ; T_RETURN T_STRING ; } T_FUNCTION(PMA_getNoOfFilesInZip) ( T_VARIABLE($file) ) { T_VARIABLE($count) = T_LNUMBER ; T_VARIABLE($zip_handle) = T_STRING ( T_VARIABLE($file) ) ; T_IF ( T_STRING ( T_VARIABLE($zip_handle) ) ) { T_VARIABLE($entry) = T_STRING ( T_VARIABLE($zip_handle) ) ; T_WHILE ( T_STRING ( T_VARIABLE($entry) ) ) { T_VARIABLE($count) T_INC ; T_VARIABLE($entry) = T_STRING ( T_VARIABLE($zip_handle) ) ; } } T_STRING ( T_VARIABLE($zip_handle) ) ; T_RETURN T_VARIABLE($count) ; } T_FUNCTION(PMA_zipExtract) ( T_VARIABLE($zip_path) , T_VARIABLE($destination) , T_VARIABLE($entries) ) { T_VARIABLE($zip) = T_NEW T_STRING ; T_IF ( T_VARIABLE($zip) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($zip_path) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($zip) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($destination) , T_VARIABLE($entries) ) ; T_VARIABLE($zip) T_OBJECT_OPERATOR T_STRING ( ) ; T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_FUNCTION(PMA_getZipError) ( T_VARIABLE($code) ) { T_SWITCH ( T_VARIABLE($code) ) { T_CASE T_STRING T_DOUBLE_COLON T_STRING : T_VARIABLE($message) = ; T_BREAK ; T_CASE T_STRING T_DOUBLE_COLON T_STRING : T_VARIABLE($message) = ; T_BREAK ; T_CASE T_STRING T_DOUBLE_COLON T_STRING : T_VARIABLE($message) = ; T_BREAK ; T_CASE T_STRING T_DOUBLE_COLON T_STRING : T_VARIABLE($message) = ; T_BREAK ; T_CASE T_STRING T_DOUBLE_COLON T_STRING : T_VARIABLE($message) = ; T_BREAK ; T_DEFAULT : T_VARIABLE($message) = T_VARIABLE($code) ; } T_RETURN T_VARIABLE($message) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_STRING { T_VAR T_VARIABLE($doWrite) = T_STRING ; T_VAR T_VARIABLE($datasec) = T_ARRAY ( ) ; T_VAR T_VARIABLE($ctrl_dir) = T_ARRAY ( ) ; T_VAR T_VARIABLE($eof_ctrl_dir) = ; T_VAR T_VARIABLE($old_offset) = T_LNUMBER ; T_STRING ( ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_STRING ( T_VARIABLE($unixtime) = T_LNUMBER ) { T_VARIABLE($timearray) = ( T_VARIABLE($unixtime) T_IS_EQUAL T_LNUMBER ) ? T_STRING ( ) : T_STRING ( T_VARIABLE($unixtime) ) ; T_IF ( T_VARIABLE($timearray) [ ] < T_LNUMBER ) { T_VARIABLE($timearray) [ ] = T_LNUMBER ; T_VARIABLE($timearray) [ ] = T_LNUMBER ; T_VARIABLE($timearray) [ ] = T_LNUMBER ; T_VARIABLE($timearray) [ ] = T_LNUMBER ; T_VARIABLE($timearray) [ ] = T_LNUMBER ; T_VARIABLE($timearray) [ ] = T_LNUMBER ; } T_RETURN ( ( T_VARIABLE($timearray) [ ] - T_LNUMBER ) T_SL T_LNUMBER ) | ( T_VARIABLE($timearray) [ ] T_SL T_LNUMBER ) | ( T_VARIABLE($timearray) [ ] T_SL T_LNUMBER ) | ( T_VARIABLE($timearray) [ ] T_SL T_LNUMBER ) | ( T_VARIABLE($timearray) [ ] T_SL T_LNUMBER ) | ( T_VARIABLE($timearray) [ ] T_SR T_LNUMBER ) ; } T_STRING ( T_VARIABLE($data) , T_VARIABLE($name) , T_VARIABLE($time) = T_LNUMBER ) { T_VARIABLE($name) = T_STRING ( , , T_VARIABLE($name) ) ; T_VARIABLE($dtime) = T_STRING ( . T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($time) ) ) , - T_LNUMBER ) ; T_VARIABLE($hexdtime) = . T_VARIABLE($dtime) [ T_LNUMBER ] . T_VARIABLE($dtime) [ T_LNUMBER ] . . T_VARIABLE($dtime) [ T_LNUMBER ] . T_VARIABLE($dtime) [ T_LNUMBER ] . . T_VARIABLE($dtime) [ T_LNUMBER ] . T_VARIABLE($dtime) [ T_LNUMBER ] . . T_VARIABLE($dtime) [ T_LNUMBER ] . T_VARIABLE($dtime) [ T_LNUMBER ] ; T_EVAL ( . T_VARIABLE($hexdtime) . ) ; T_VARIABLE($fr) = ; T_VARIABLE($fr) T_CONCAT_EQUAL ; T_VARIABLE($fr) T_CONCAT_EQUAL ; T_VARIABLE($fr) T_CONCAT_EQUAL ; T_VARIABLE($fr) T_CONCAT_EQUAL T_VARIABLE($hexdtime) ; T_VARIABLE($unc_len) = T_STRING ( T_VARIABLE($data) ) ; T_VARIABLE($crc) = T_STRING ( T_VARIABLE($data) ) ; T_VARIABLE($zdata) = T_STRING ( T_VARIABLE($data) ) ; T_VARIABLE($zdata) = T_STRING ( T_STRING ( T_VARIABLE($zdata) , T_LNUMBER , T_STRING ( T_VARIABLE($zdata) ) - T_LNUMBER ) , T_LNUMBER ) ; T_VARIABLE($c_len) = T_STRING ( T_VARIABLE($zdata) ) ; T_VARIABLE($fr) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($crc) ) ; T_VARIABLE($fr) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($c_len) ) ; T_VARIABLE($fr) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($unc_len) ) ; T_VARIABLE($fr) T_CONCAT_EQUAL T_STRING ( , T_STRING ( T_VARIABLE($name) ) ) ; T_VARIABLE($fr) T_CONCAT_EQUAL T_STRING ( , T_LNUMBER ) ; T_VARIABLE($fr) T_CONCAT_EQUAL T_VARIABLE($name) ; T_VARIABLE($fr) T_CONCAT_EQUAL T_VARIABLE($zdata) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_ECHO T_VARIABLE($fr) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($fr) ; } T_VARIABLE($cdrec) = ; T_VARIABLE($cdrec) T_CONCAT_EQUAL ; T_VARIABLE($cdrec) T_CONCAT_EQUAL ; T_VARIABLE($cdrec) T_CONCAT_EQUAL ; T_VARIABLE($cdrec) T_CONCAT_EQUAL ; T_VARIABLE($cdrec) T_CONCAT_EQUAL T_VARIABLE($hexdtime) ; T_VARIABLE($cdrec) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($crc) ) ; T_VARIABLE($cdrec) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($c_len) ) ; T_VARIABLE($cdrec) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($unc_len) ) ; T_VARIABLE($cdrec) T_CONCAT_EQUAL T_STRING ( , T_STRING ( T_VARIABLE($name) ) ) ; T_VARIABLE($cdrec) T_CONCAT_EQUAL T_STRING ( , T_LNUMBER ) ; T_VARIABLE($cdrec) T_CONCAT_EQUAL T_STRING ( , T_LNUMBER ) ; T_VARIABLE($cdrec) T_CONCAT_EQUAL T_STRING ( , T_LNUMBER ) ; T_VARIABLE($cdrec) T_CONCAT_EQUAL T_STRING ( , T_LNUMBER ) ; T_VARIABLE($cdrec) T_CONCAT_EQUAL T_STRING ( , T_LNUMBER ) ; T_VARIABLE($cdrec) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_PLUS_EQUAL T_STRING ( T_VARIABLE($fr) ) ; T_VARIABLE($cdrec) T_CONCAT_EQUAL T_VARIABLE($name) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($cdrec) ; } T_STRING ( ) { T_VARIABLE($ctrldir) = T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($header) = T_VARIABLE($ctrldir) . T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING . T_STRING ( , T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) . T_STRING ( , T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ) . T_STRING ( , T_STRING ( T_VARIABLE($ctrldir) ) ) . T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) . ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_ECHO T_VARIABLE($header) ; T_RETURN ; } T_ELSE { T_VARIABLE($data) = T_STRING ( , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_VARIABLE($data) . T_VARIABLE($header) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE ; T_STRING ( ) ; T_VARIABLE($filename) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($filename) ) ) { T_STRING ( T_VARIABLE($filename) ) ; } T_ELSE { T_STRING ( T_STRING ( ) , T_VARIABLE($filename) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($navigation) = T_NEW T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($navigation) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_STRING ( , T_STRING ) ; T_REQUIRE_ONCE ; T_IF ( T_STRING T_IS_EQUAL T_BOOLEAN_AND T_STRING T_IS_EQUAL T_BOOLEAN_AND ( T_STRING ( ) ) ) { @ T_STRING ( , ) ; } T_STRING ( ) ; T_STRING ( . T_STRING ( , T_STRING ( ) + T_LNUMBER ) . ) ; T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( T_STRING ( , T_STRING ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_THROW T_NEW T_STRING ( T_VARIABLE($error) ) ; } T_IF ( T_STRING ( , T_STRING ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_THROW T_NEW T_STRING ( T_VARIABLE($error) ) ; } T_STRING T_EXTENDS T_STRING { T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( T_STRING , T_STRING , ) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($phpcsFile) , T_VARIABLE($stackPtr) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($phpcsFile) ; T_VARIABLE($tokens) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($type) = T_STRING ( T_VARIABLE($tokens) [ T_VARIABLE($stackPtr) ] [ ] ) ; T_VARIABLE($errorData) = T_ARRAY ( T_VARIABLE($type) ) ; T_VARIABLE($find) = T_ARRAY ( T_STRING , T_STRING , T_STRING , ) ; T_VARIABLE($commentEnd) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($find) , ( T_VARIABLE($stackPtr) - T_LNUMBER ) , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($commentEnd) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_VARIABLE($tokens) [ T_VARIABLE($commentEnd) ] [ ] T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($stackPtr) , , T_VARIABLE($errorData) ) ; T_RETURN ; } T_ELSE T_IF ( T_VARIABLE($commentEnd) T_IS_IDENTICAL T_STRING T_BOOLEAN_OR T_VARIABLE($tokens) [ T_VARIABLE($commentEnd) ] [ ] T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($stackPtr) , , T_VARIABLE($errorData) ) ; T_RETURN ; } T_VARIABLE($commentStart) = ( T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($commentEnd) - T_LNUMBER ) , T_STRING , T_STRING ) + T_LNUMBER ) ; T_VARIABLE($commentNext) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($commentEnd) + T_LNUMBER ) , T_VARIABLE($stackPtr) , T_STRING , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($prevClassToken) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($stackPtr) - T_LNUMBER ) ) ; T_IF ( T_VARIABLE($prevClassToken) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($prevNonComment) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($commentStart) - T_LNUMBER ) , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($prevNonComment) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($prevComment) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($prevNonComment) - T_LNUMBER ) ) ; T_IF ( T_VARIABLE($prevComment) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($newlineToken) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($commentEnd) + T_LNUMBER ) , T_VARIABLE($stackPtr) , T_STRING , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($newlineToken) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($newlineToken) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($newlineToken) + T_LNUMBER ) , T_VARIABLE($stackPtr) , T_STRING , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($newlineToken) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , ( T_VARIABLE($stackPtr) + T_LNUMBER ) , , T_VARIABLE($errorData) ) ; T_RETURN ; } } } } } T_VARIABLE($comment) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($commentStart) , ( T_VARIABLE($commentEnd) - T_VARIABLE($commentStart) + T_LNUMBER ) ) ; T_TRY { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_NEW T_STRING ( T_VARIABLE($comment) , T_VARIABLE($phpcsFile) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; } T_CATCH ( T_STRING T_VARIABLE($e) ) { T_VARIABLE($line) = ( T_VARIABLE($e) T_OBJECT_OPERATOR T_STRING ( ) + T_VARIABLE($commentStart) ) ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($e) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($line) , ) ; T_RETURN ; } T_VARIABLE($comment) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($comment) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($commentStart) , , T_VARIABLE($errorData) ) ; T_RETURN ; } T_VARIABLE($short) = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($newlineCount) = T_LNUMBER ; T_VARIABLE($newlineSpan) = T_STRING ( T_VARIABLE($short) , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($short) T_IS_NOT_IDENTICAL T_BOOLEAN_AND T_VARIABLE($newlineSpan) > T_LNUMBER ) { T_VARIABLE($error) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , ( T_VARIABLE($commentStart) + T_LNUMBER ) , , T_VARIABLE($errorData) ) ; } T_VARIABLE($newlineCount) = ( T_STRING ( T_VARIABLE($short) , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) + T_LNUMBER ) ; T_VARIABLE($long) = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($long) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($between) = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($newlineBetween) = T_STRING ( T_VARIABLE($between) , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($newlineBetween) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_VARIABLE($error) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , ( T_VARIABLE($commentStart) + T_VARIABLE($newlineCount) + T_LNUMBER ) , , T_VARIABLE($errorData) ) ; } T_VARIABLE($newlineCount) T_PLUS_EQUAL T_VARIABLE($newlineBetween) ; } T_VARIABLE($tags) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($tags) ) > T_LNUMBER ) { T_VARIABLE($newlineSpan) = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($newlineSpan) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_VARIABLE($error) = ; T_IF ( T_VARIABLE($long) T_IS_NOT_IDENTICAL ) { T_VARIABLE($newlineCount) T_PLUS_EQUAL ( T_STRING ( T_VARIABLE($long) , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) - T_VARIABLE($newlineSpan) + T_LNUMBER ) ; } T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , ( T_VARIABLE($commentStart) + T_VARIABLE($newlineCount) ) , , T_VARIABLE($errorData) ) ; T_VARIABLE($short) = T_STRING ( T_VARIABLE($short) , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING . ) ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($commentStart) , T_VARIABLE($commentEnd) ) ; } T_PROTECTED T_STRING ( T_VARIABLE($errorPos) ) { T_VARIABLE($version) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($version) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($content) = T_VARIABLE($version) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($matches) = T_ARRAY ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($content) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } T_ELSE T_IF ( ( T_STRING ( T_VARIABLE($content) , ) T_IS_IDENTICAL T_STRING ) ) { T_VARIABLE($error) = ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($content) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , , T_VARIABLE($data) ) ; } } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( T_STRING ( , T_STRING ) T_IS_IDENTICAL T_STRING ) { T_THROW T_NEW T_STRING ( ) ; } T_STRING T_IMPLEMENTS T_STRING { T_PROTECTED T_VARIABLE($commentParser) = T_STRING ; T_PROTECTED T_VARIABLE($currentFile) = T_STRING ; T_PROTECTED T_VARIABLE($tags) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , ) ; T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( T_STRING ) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($phpcsFile) , T_VARIABLE($stackPtr) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($phpcsFile) ; T_IF ( T_VARIABLE($stackPtr) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_IF ( T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($stackPtr) - T_LNUMBER ) ) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN ; } } T_VARIABLE($tokens) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($commentStart) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($stackPtr) + T_LNUMBER ) , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($tokens) [ T_VARIABLE($commentStart) ] [ ] T_IS_IDENTICAL T_STRING ) { T_VARIABLE($semicolon) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($commentStart) + T_LNUMBER ) ) ; T_VARIABLE($commentStart) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($semicolon) + T_LNUMBER ) , T_STRING , T_STRING ) ; } T_IF ( T_VARIABLE($tokens) [ T_VARIABLE($commentStart) ] [ ] T_IS_IDENTICAL T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($tokens) [ T_VARIABLE($commentStart) ] [ ] , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($commentStart) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($commentStart) + T_LNUMBER ) , T_STRING , T_STRING ) ; } } T_VARIABLE($errorToken) = ( T_VARIABLE($stackPtr) + T_LNUMBER ) ; T_IF ( T_ISSET ( T_VARIABLE($tokens) [ T_VARIABLE($errorToken) ] ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($errorToken) T_DEC ; } T_IF ( T_VARIABLE($tokens) [ T_VARIABLE($commentStart) ] [ ] T_IS_IDENTICAL T_STRING ) { T_RETURN ; } T_ELSE T_IF ( T_VARIABLE($tokens) [ T_VARIABLE($commentStart) ] [ ] T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorToken) , ) ; T_RETURN ; } T_ELSE T_IF ( T_VARIABLE($commentStart) T_IS_IDENTICAL T_STRING T_BOOLEAN_OR T_VARIABLE($tokens) [ T_VARIABLE($commentStart) ] [ ] T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($errorToken) , ) ; T_RETURN ; } T_ELSE { T_VARIABLE($commentEnd) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($commentStart) + T_LNUMBER ) , T_STRING , T_STRING ) ; T_VARIABLE($commentEnd) T_DEC ; T_VARIABLE($nextToken) = T_ARRAY ( T_STRING , T_STRING , T_STRING , T_STRING , ) ; T_VARIABLE($commentNext) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($nextToken) , ( T_VARIABLE($commentEnd) + T_LNUMBER ) ) ; T_IF ( T_VARIABLE($commentNext) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_VARIABLE($tokens) [ T_VARIABLE($commentNext) ] [ ] T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($newlineToken) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($commentEnd) + T_LNUMBER ) , T_VARIABLE($commentNext) , T_STRING , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($newlineToken) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($newlineToken) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($newlineToken) + T_LNUMBER ) , T_VARIABLE($commentNext) , T_STRING , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($newlineToken) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorToken) , ) ; T_RETURN ; } } } T_VARIABLE($comment) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($commentStart) , ( T_VARIABLE($commentEnd) - T_VARIABLE($commentStart) + T_LNUMBER ) ) ; T_TRY { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_NEW T_STRING ( T_VARIABLE($comment) , T_VARIABLE($phpcsFile) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; } T_CATCH ( T_STRING T_VARIABLE($e) ) { T_VARIABLE($line) = ( T_VARIABLE($e) T_OBJECT_OPERATOR T_STRING ( ) + T_VARIABLE($commentStart) ) ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($e) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($line) , ) ; T_RETURN ; } T_VARIABLE($comment) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($comment) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($commentStart) , ) ; T_RETURN ; } T_VARIABLE($short) = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($newlineCount) = T_LNUMBER ; T_VARIABLE($newlineSpan) = T_STRING ( T_VARIABLE($short) , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($short) T_IS_NOT_IDENTICAL T_BOOLEAN_AND T_VARIABLE($newlineSpan) > T_LNUMBER ) { T_VARIABLE($error) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , ( T_VARIABLE($commentStart) + T_LNUMBER ) , ) ; } T_VARIABLE($newlineCount) = ( T_STRING ( T_VARIABLE($short) , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) + T_LNUMBER ) ; T_VARIABLE($long) = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($long) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($between) = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($newlineBetween) = T_STRING ( T_VARIABLE($between) , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($newlineBetween) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_VARIABLE($error) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , ( T_VARIABLE($commentStart) + T_VARIABLE($newlineCount) + T_LNUMBER ) , ) ; } T_VARIABLE($newlineCount) T_PLUS_EQUAL T_VARIABLE($newlineBetween) ; } T_VARIABLE($tags) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($tags) ) > T_LNUMBER ) { T_VARIABLE($newlineSpan) = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($newlineSpan) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_VARIABLE($error) = ; T_IF ( T_VARIABLE($long) T_IS_NOT_IDENTICAL ) { T_VARIABLE($newlineCount) T_PLUS_EQUAL ( T_STRING ( T_VARIABLE($long) , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) - T_VARIABLE($newlineSpan) + T_LNUMBER ) ; } T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , ( T_VARIABLE($commentStart) + T_VARIABLE($newlineCount) ) , ) ; T_VARIABLE($short) = T_STRING ( T_VARIABLE($short) , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING . ) ; } } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($commentStart) , T_VARIABLE($commentEnd) ) ; } } T_PROTECTED T_STRING ( T_VARIABLE($commentStart) , T_VARIABLE($commentEnd) ) { T_VARIABLE($docBlock) = ( T_STRING ( T_VARIABLE($this) ) T_IS_IDENTICAL ) ? : ; T_VARIABLE($foundTags) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($orderIndex) = T_LNUMBER ; T_VARIABLE($indentation) = T_ARRAY ( ) ; T_VARIABLE($longestTag) = T_LNUMBER ; T_VARIABLE($errorPos) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($tag) T_DOUBLE_ARROW T_VARIABLE($info) ) { T_IF ( T_VARIABLE($info) [ ] T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($tag) , T_VARIABLE($foundTags) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($tag) , T_VARIABLE($docBlock) , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($commentEnd) , , T_VARIABLE($data) ) ; T_CONTINUE ; } T_VARIABLE($tagName) = T_STRING ( T_VARIABLE($tag) ) ; T_IF ( T_VARIABLE($info) [ ] T_IS_IDENTICAL T_STRING ) { T_VARIABLE($tagName) T_CONCAT_EQUAL ; } T_VARIABLE($getMethod) = . T_VARIABLE($tagName) ; T_VARIABLE($tagElement) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_VARIABLE($getMethod) ( ) ; T_IF ( T_STRING ( T_VARIABLE($tagElement) ) T_IS_IDENTICAL T_STRING T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($tagElement) ) T_IS_IDENTICAL T_STRING ) { T_CONTINUE ; } T_VARIABLE($errorPos) = T_VARIABLE($commentStart) ; T_IF ( T_STRING ( T_VARIABLE($tagElement) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($errorPos) = ( T_VARIABLE($commentStart) + T_VARIABLE($tagElement) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_VARIABLE($foundIndexes) = T_STRING ( T_VARIABLE($foundTags) , T_VARIABLE($tag) ) ; T_IF ( T_STRING ( T_VARIABLE($foundIndexes) ) > T_LNUMBER ) { T_IF ( T_VARIABLE($info) [ ] T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($tag) , T_VARIABLE($docBlock) , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , , T_VARIABLE($data) ) ; } T_ELSE { T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($count) = T_VARIABLE($foundIndexes) [ T_LNUMBER ] ; T_FOREACH ( T_VARIABLE($foundIndexes) T_AS T_VARIABLE($index) ) { T_IF ( T_VARIABLE($index) T_IS_NOT_IDENTICAL T_VARIABLE($count) ) { T_VARIABLE($errorPosIndex) = ( T_VARIABLE($errorPos) + T_VARIABLE($tagElement) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($error) = ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($tag) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPosIndex) , , T_VARIABLE($data) ) ; } T_VARIABLE($i) T_INC ; T_VARIABLE($count) T_INC ; } } } T_IF ( T_VARIABLE($foundIndexes) [ T_LNUMBER ] > T_VARIABLE($orderIndex) ) { T_VARIABLE($orderIndex) = T_VARIABLE($foundIndexes) [ T_LNUMBER ] ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($tagElement) ) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($tagElement) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($errorPos) T_PLUS_EQUAL T_VARIABLE($tagElement) [ T_LNUMBER ] T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($error) = ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($tag) , T_VARIABLE($info) [ ] , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , , T_VARIABLE($data) ) ; } T_VARIABLE($len) = T_STRING ( T_VARIABLE($tag) ) ; T_IF ( T_VARIABLE($len) > T_VARIABLE($longestTag) ) { T_VARIABLE($longestTag) = T_VARIABLE($len) ; } T_IF ( T_STRING ( T_VARIABLE($tagElement) ) T_IS_IDENTICAL T_STRING ) { T_FOREACH ( T_VARIABLE($tagElement) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($element) ) { T_VARIABLE($indentation) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($tag) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($tag) , T_VARIABLE($element) ) , T_DOUBLE_ARROW T_VARIABLE($element) T_OBJECT_OPERATOR T_STRING ( ) , ) ; } } T_ELSE { T_VARIABLE($indentation) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($tag) , T_DOUBLE_ARROW T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($tag) , T_VARIABLE($tagElement) ) , ) ; } T_VARIABLE($method) = . T_VARIABLE($tagName) ; T_IF ( T_STRING ( T_VARIABLE($this) , T_VARIABLE($method) ) T_IS_IDENTICAL T_STRING ) { T_STRING ( T_ARRAY ( T_VARIABLE($this) , T_VARIABLE($method) ) , T_VARIABLE($errorPos) ) ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($tagElement) ) T_IS_IDENTICAL T_STRING ) { T_FOREACH ( T_VARIABLE($tagElement) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($element) ) { T_VARIABLE($element) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($commentStart) , T_VARIABLE($docBlock) ) ; } } T_ELSE { T_VARIABLE($tagElement) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($commentStart) , T_VARIABLE($docBlock) ) ; } } } T_FOREACH ( T_VARIABLE($indentation) T_AS T_VARIABLE($indentInfo) ) { T_IF ( T_VARIABLE($indentInfo) [ ] T_IS_NOT_IDENTICAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($indentInfo) [ ] T_IS_NOT_IDENTICAL ( T_VARIABLE($longestTag) + T_LNUMBER ) ) { T_VARIABLE($expected) = ( ( T_VARIABLE($longestTag) - T_STRING ( T_VARIABLE($indentInfo) [ ] ) ) + T_LNUMBER ) ; T_VARIABLE($space) = ( T_VARIABLE($indentInfo) [ ] - T_STRING ( T_VARIABLE($indentInfo) [ ] ) ) ; T_VARIABLE($error) = ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($indentInfo) [ ] , T_VARIABLE($expected) , T_VARIABLE($space) , ) ; T_VARIABLE($getTagMethod) = . T_STRING ( T_VARIABLE($indentInfo) [ ] ) ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($indentInfo) [ ] ] [ ] T_IS_IDENTICAL T_STRING ) { T_VARIABLE($line) = T_VARIABLE($indentInfo) [ ] ; } T_ELSE { T_VARIABLE($tagElem) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_VARIABLE($getTagMethod) ( ) ; T_VARIABLE($line) = T_VARIABLE($tagElem) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , ( T_VARIABLE($commentStart) + T_VARIABLE($line) ) , , T_VARIABLE($data) ) ; } } } T_PROTECTED T_STRING ( T_VARIABLE($tagName) , T_VARIABLE($tagElement) ) { T_IF ( T_VARIABLE($tagElement) T_INSTANCEOF T_STRING ) { T_IF ( T_VARIABLE($tagElement) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_IDENTICAL ) { T_RETURN ( T_STRING ( T_VARIABLE($tagName) ) + T_STRING ( T_VARIABLE($tagElement) T_OBJECT_OPERATOR T_STRING ( ) , ) ) ; } } T_ELSE T_IF ( T_VARIABLE($tagElement) T_INSTANCEOF T_STRING ) { T_IF ( T_VARIABLE($tagElement) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_IDENTICAL ) { T_RETURN ( T_STRING ( T_VARIABLE($tagName) ) + T_STRING ( T_VARIABLE($tagElement) T_OBJECT_OPERATOR T_STRING ( ) , ) ) ; } } T_RETURN T_LNUMBER ; } T_PROTECTED T_STRING ( T_VARIABLE($errorPos) ) { T_VARIABLE($category) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($category) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($content) = T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($content) T_IS_NOT_IDENTICAL ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($content) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($newContent) = T_STRING ( , , T_VARIABLE($content) ) ; T_VARIABLE($nameBits) = T_STRING ( , T_VARIABLE($newContent) ) ; T_VARIABLE($firstBit) = T_STRING ( T_VARIABLE($nameBits) ) ; T_VARIABLE($newName) = T_STRING ( T_VARIABLE($firstBit) ) . ; T_FOREACH ( T_VARIABLE($nameBits) T_AS T_VARIABLE($bit) ) { T_VARIABLE($newName) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($bit) ) . ; } T_VARIABLE($error) = ; T_VARIABLE($validName) = T_STRING ( T_VARIABLE($newName) , ) ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($content) , T_VARIABLE($validName) , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , , T_VARIABLE($data) ) ; } } T_ELSE { T_VARIABLE($error) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } } } T_PROTECTED T_STRING ( T_VARIABLE($errorPos) ) { T_VARIABLE($package) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($package) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($content) = T_VARIABLE($package) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($content) T_IS_NOT_IDENTICAL ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($content) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($newContent) = T_STRING ( , , T_VARIABLE($content) ) ; T_VARIABLE($nameBits) = T_STRING ( , T_VARIABLE($newContent) ) ; T_VARIABLE($firstBit) = T_STRING ( T_VARIABLE($nameBits) ) ; T_VARIABLE($newName) = T_STRING ( T_VARIABLE($firstBit) { T_LNUMBER } ) . T_STRING ( T_VARIABLE($firstBit) , T_LNUMBER ) . ; T_FOREACH ( T_VARIABLE($nameBits) T_AS T_VARIABLE($bit) ) { T_VARIABLE($newName) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($bit) { T_LNUMBER } ) . T_STRING ( T_VARIABLE($bit) , T_LNUMBER ) . ; } T_VARIABLE($error) = ; T_VARIABLE($validName) = T_STRING ( T_VARIABLE($newName) , ) ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($content) , T_VARIABLE($validName) , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , , T_VARIABLE($data) ) ; } } T_ELSE { T_VARIABLE($error) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } } } T_PROTECTED T_STRING ( T_VARIABLE($errorPos) ) { T_VARIABLE($package) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($package) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($content) = T_VARIABLE($package) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($content) T_IS_NOT_IDENTICAL ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($content) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($newContent) = T_STRING ( , , T_VARIABLE($content) ) ; T_VARIABLE($nameBits) = T_STRING ( , T_VARIABLE($newContent) ) ; T_VARIABLE($firstBit) = T_STRING ( T_VARIABLE($nameBits) ) ; T_VARIABLE($newName) = T_STRING ( T_VARIABLE($firstBit) { T_LNUMBER } ) . T_STRING ( T_VARIABLE($firstBit) , T_LNUMBER ) . ; T_FOREACH ( T_VARIABLE($nameBits) T_AS T_VARIABLE($bit) ) { T_VARIABLE($newName) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($bit) { T_LNUMBER } ) . T_STRING ( T_VARIABLE($bit) , T_LNUMBER ) . ; } T_VARIABLE($error) = ; T_VARIABLE($validName) = T_STRING ( T_VARIABLE($newName) , ) ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($content) , T_VARIABLE($validName) , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , , T_VARIABLE($data) ) ; } } T_ELSE { T_VARIABLE($error) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } } } T_PROTECTED T_STRING ( T_VARIABLE($commentStart) ) { T_VARIABLE($authors) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($authors) ) T_IS_IDENTICAL T_STRING ) { T_FOREACH ( T_VARIABLE($authors) T_AS T_VARIABLE($author) ) { T_VARIABLE($errorPos) = ( T_VARIABLE($commentStart) + T_VARIABLE($author) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($content) = T_VARIABLE($author) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($content) T_IS_NOT_IDENTICAL ) { T_VARIABLE($local) = ; T_VARIABLE($localMiddle) = T_VARIABLE($local) . ; T_IF ( T_STRING ( . T_VARIABLE($local) . . T_VARIABLE($localMiddle) . . T_VARIABLE($local) . , T_VARIABLE($content) ) T_IS_IDENTICAL T_LNUMBER ) { T_VARIABLE($error) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } } T_ELSE { T_VARIABLE($error) = ; T_VARIABLE($docBlock) = ( T_STRING ( T_VARIABLE($this) ) T_IS_IDENTICAL ) ? : ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($docBlock) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , , T_VARIABLE($data) ) ; } } } } T_PROTECTED T_STRING ( T_VARIABLE($commentStart) ) { T_VARIABLE($copyrights) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($copyrights) T_AS T_VARIABLE($copyright) ) { T_VARIABLE($errorPos) = ( T_VARIABLE($commentStart) + T_VARIABLE($copyright) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($content) = T_VARIABLE($copyright) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($content) T_IS_NOT_IDENTICAL ) { T_VARIABLE($matches) = T_ARRAY ( ) ; T_IF ( T_STRING ( , T_VARIABLE($content) , T_VARIABLE($matches) ) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_IF ( T_VARIABLE($matches) [ T_LNUMBER ] T_IS_NOT_IDENTICAL ) { T_IF ( T_VARIABLE($matches) [ T_LNUMBER ] T_IS_NOT_IDENTICAL ) { T_VARIABLE($error) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } T_IF ( T_VARIABLE($matches) [ T_LNUMBER ] T_IS_NOT_IDENTICAL T_BOOLEAN_AND T_VARIABLE($matches) [ T_LNUMBER ] < T_VARIABLE($matches) [ T_LNUMBER ] ) { T_VARIABLE($error) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($matches) [ T_NUM_STRING ] T_VARIABLE($matches) [ T_NUM_STRING ] T_VARIABLE($matches) [ T_NUM_STRING ] T_ENCAPSED_AND_WHITESPACE T_VARIABLE($matches) [ T_NUM_STRING ] T_ENCAPSED_AND_WHITESPACE T_VARIABLE($matches) [ T_NUM_STRING ] T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } } } T_ELSE { T_VARIABLE($error) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } } T_ELSE { T_VARIABLE($error) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } } } T_PROTECTED T_STRING ( T_VARIABLE($errorPos) ) { T_VARIABLE($license) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($license) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($value) = T_VARIABLE($license) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($comment) = T_VARIABLE($license) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($value) T_IS_IDENTICAL T_BOOLEAN_OR T_VARIABLE($comment) T_IS_IDENTICAL ) { T_VARIABLE($error) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } } } T_PROTECTED T_STRING ( T_VARIABLE($errorPos) ) { T_VARIABLE($version) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($version) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($content) = T_VARIABLE($version) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($matches) = T_ARRAY ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($content) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } T_ELSE T_IF ( T_STRING ( T_VARIABLE($content) , ) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($content) , ) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($content) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($content) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , , T_VARIABLE($data) ) ; } } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( T_STRING ( , T_STRING ) T_IS_IDENTICAL T_STRING ) { T_THROW T_NEW T_STRING ( ) ; } T_STRING T_IMPLEMENTS T_STRING { T_PRIVATE T_VARIABLE($_methodName) = ; T_PRIVATE T_VARIABLE($_functionToken) = T_STRING ; T_PRIVATE T_VARIABLE($_classToken) = T_STRING ; T_PROTECTED T_VARIABLE($commentParser) = T_STRING ; T_PROTECTED T_VARIABLE($currentFile) = T_STRING ; T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( T_STRING ) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($phpcsFile) , T_VARIABLE($stackPtr) ) { T_VARIABLE($find) = T_ARRAY ( T_STRING , T_STRING , T_STRING , T_STRING , T_STRING , ) ; T_VARIABLE($commentEnd) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($find) , ( T_VARIABLE($stackPtr) - T_LNUMBER ) ) ; T_IF ( T_VARIABLE($commentEnd) T_IS_IDENTICAL T_STRING ) { T_RETURN ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($phpcsFile) ; T_VARIABLE($tokens) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($code) = T_VARIABLE($tokens) [ T_VARIABLE($commentEnd) ] [ ] ; T_IF ( T_VARIABLE($code) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($stackPtr) , ) ; T_RETURN ; } T_ELSE T_IF ( T_VARIABLE($code) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($stackPtr) , ) ; T_RETURN ; } T_VARIABLE($ignore) = T_STRING T_DOUBLE_COLON T_VARIABLE($scopeModifiers) ; T_VARIABLE($ignore) [ ] = T_STRING ; T_VARIABLE($ignore) [ ] = T_STRING ; T_VARIABLE($ignore) [ ] = T_STRING ; T_VARIABLE($ignore) [ ] = T_STRING ; T_VARIABLE($prevToken) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($ignore) , ( T_VARIABLE($stackPtr) - T_LNUMBER ) , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($prevToken) T_IS_NOT_IDENTICAL T_VARIABLE($commentEnd) ) { T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($stackPtr) , ) ; T_RETURN ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($stackPtr) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_FOREACH ( T_VARIABLE($tokens) [ T_VARIABLE($stackPtr) ] [ ] T_AS T_VARIABLE($condPtr) T_DOUBLE_ARROW T_VARIABLE($condition) ) { T_IF ( T_VARIABLE($condition) T_IS_IDENTICAL T_STRING T_BOOLEAN_OR T_VARIABLE($condition) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($condPtr) ; T_BREAK ; } } T_VARIABLE($commentStart) = ( T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($commentEnd) - T_LNUMBER ) , T_STRING , T_STRING ) + T_LNUMBER ) ; T_VARIABLE($prevToken) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($commentStart) - T_LNUMBER ) , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($tokens) [ T_VARIABLE($prevToken) ] [ ] T_IS_IDENTICAL T_STRING ) { T_IF ( T_VARIABLE($stackPtr) T_IS_IDENTICAL T_LNUMBER T_BOOLEAN_OR T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($prevToken) - T_LNUMBER ) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($stackPtr) , ) ; T_RETURN ; } } T_VARIABLE($comment) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($commentStart) , ( T_VARIABLE($commentEnd) - T_VARIABLE($commentStart) + T_LNUMBER ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($stackPtr) ) ; T_TRY { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_NEW T_STRING ( T_VARIABLE($comment) , T_VARIABLE($phpcsFile) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; } T_CATCH ( T_STRING T_VARIABLE($e) ) { T_VARIABLE($line) = ( T_VARIABLE($e) T_OBJECT_OPERATOR T_STRING ( ) + T_VARIABLE($commentStart) ) ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($e) T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($line) , ) ; T_RETURN ; } T_VARIABLE($comment) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($comment) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($commentStart) , ) ; T_RETURN ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($commentStart) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($commentStart) , T_VARIABLE($commentEnd) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($commentStart) ) ; T_VARIABLE($short) = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($newlineCount) = T_LNUMBER ; T_VARIABLE($newlineSpan) = T_STRING ( T_VARIABLE($short) , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($short) T_IS_NOT_IDENTICAL T_BOOLEAN_AND T_VARIABLE($newlineSpan) > T_LNUMBER ) { T_VARIABLE($error) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , ( T_VARIABLE($commentStart) + T_LNUMBER ) , ) ; } T_VARIABLE($newlineCount) = ( T_STRING ( T_VARIABLE($short) , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) + T_LNUMBER ) ; T_VARIABLE($long) = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($long) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($between) = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($newlineBetween) = T_STRING ( T_VARIABLE($between) , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($newlineBetween) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_VARIABLE($error) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , ( T_VARIABLE($commentStart) + T_VARIABLE($newlineCount) + T_LNUMBER ) , ) ; } T_VARIABLE($newlineCount) T_PLUS_EQUAL T_VARIABLE($newlineBetween) ; } T_VARIABLE($params) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($params) ) > T_LNUMBER ) { T_VARIABLE($newlineSpan) = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($newlineSpan) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_VARIABLE($error) = ; T_IF ( T_VARIABLE($long) T_IS_NOT_IDENTICAL ) { T_VARIABLE($newlineCount) T_PLUS_EQUAL ( T_STRING ( T_VARIABLE($long) , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) - T_VARIABLE($newlineSpan) + T_LNUMBER ) ; } T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , ( T_VARIABLE($commentStart) + T_VARIABLE($newlineCount) ) , ) ; T_VARIABLE($short) = T_STRING ( T_VARIABLE($short) , T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING . ) ; } } } T_PROTECTED T_STRING ( T_VARIABLE($commentStart) ) { T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ) T_IS_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_FOREACH ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($throw) ) { T_VARIABLE($exception) = T_VARIABLE($throw) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($errorPos) = ( T_VARIABLE($commentStart) + T_VARIABLE($throw) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_IF ( T_VARIABLE($exception) T_IS_IDENTICAL ) { T_VARIABLE($error) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } } } T_PROTECTED T_STRING ( T_VARIABLE($commentStart) , T_VARIABLE($commentEnd) ) { T_VARIABLE($className) = ; T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($className) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($className) = T_STRING ( T_STRING ( T_VARIABLE($className) , ) ) ; } T_VARIABLE($methodName) = T_STRING ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , ) ) ; T_VARIABLE($isSpecialMethod) = ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_IDENTICAL T_BOOLEAN_OR T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_IS_IDENTICAL ) ; T_IF ( T_VARIABLE($isSpecialMethod) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_VARIABLE($methodName) T_IS_NOT_IDENTICAL T_VARIABLE($className) ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($commentEnd) , ) ; } T_ELSE T_IF ( T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ) T_IS_IDENTICAL ) { T_VARIABLE($error) = ; T_VARIABLE($errorPos) = ( T_VARIABLE($commentStart) + T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } } } T_PROTECTED T_STRING ( T_VARIABLE($commentStart) ) { T_VARIABLE($realParams) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($params) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($foundParams) = T_ARRAY ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($params) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($lastParm) = ( T_STRING ( T_VARIABLE($params) ) - T_LNUMBER ) ; T_IF ( T_STRING ( T_VARIABLE($params) [ T_VARIABLE($lastParm) ] T_OBJECT_OPERATOR T_STRING ( ) , T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_VARIABLE($error) = ; T_VARIABLE($errorPos) = ( T_VARIABLE($params) [ T_VARIABLE($lastParm) ] T_OBJECT_OPERATOR T_STRING ( ) + T_VARIABLE($commentStart) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } T_IF ( T_VARIABLE($params) [ T_LNUMBER ] T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_VARIABLE($error) = ; T_VARIABLE($errorPos) = ( T_VARIABLE($params) [ T_LNUMBER ] T_OBJECT_OPERATOR T_STRING ( ) + T_VARIABLE($commentStart) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } T_VARIABLE($previousParam) = T_STRING ; T_VARIABLE($spaceBeforeVar) = T_LNUMBER ; T_VARIABLE($spaceBeforeComment) = T_LNUMBER ; T_VARIABLE($longestType) = T_LNUMBER ; T_VARIABLE($longestVar) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($params) T_AS T_VARIABLE($param) ) { T_VARIABLE($paramComment) = T_STRING ( T_VARIABLE($param) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($errorPos) = ( T_VARIABLE($param) T_OBJECT_OPERATOR T_STRING ( ) + T_VARIABLE($commentStart) ) ; T_IF ( T_VARIABLE($param) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_IDENTICAL ) { T_VARIABLE($error) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } T_VARIABLE($spaceCount) = T_STRING ( T_VARIABLE($param) T_OBJECT_OPERATOR T_STRING ( ) , ) ; T_IF ( T_VARIABLE($spaceCount) < T_VARIABLE($spaceBeforeVar) ) { T_VARIABLE($spaceBeforeVar) = T_VARIABLE($spaceCount) ; T_VARIABLE($longestType) = T_VARIABLE($errorPos) ; } T_VARIABLE($spaceCount) = T_STRING ( T_VARIABLE($param) T_OBJECT_OPERATOR T_STRING ( ) , ) ; T_IF ( T_VARIABLE($spaceCount) < T_VARIABLE($spaceBeforeComment) T_BOOLEAN_AND T_VARIABLE($paramComment) T_IS_NOT_IDENTICAL ) { T_VARIABLE($spaceBeforeComment) = T_VARIABLE($spaceCount) ; T_VARIABLE($longestVar) = T_VARIABLE($errorPos) ; } T_VARIABLE($pos) = T_VARIABLE($param) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($paramName) = ( T_VARIABLE($param) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_IDENTICAL ) ? T_VARIABLE($param) T_OBJECT_OPERATOR T_STRING ( ) : ; T_IF ( T_VARIABLE($previousParam) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($previousName) = ( T_VARIABLE($previousParam) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_IDENTICAL ) ? T_VARIABLE($previousParam) T_OBJECT_OPERATOR T_STRING ( ) : ; T_IF ( T_VARIABLE($param) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($previousParam) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($previousName) , ( T_VARIABLE($pos) - T_LNUMBER ) , T_VARIABLE($paramName) , T_VARIABLE($pos) , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , , T_VARIABLE($data) ) ; } T_IF ( T_VARIABLE($param) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($previousParam) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($error) = ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($previousName) , ( T_VARIABLE($pos) - T_LNUMBER ) , T_VARIABLE($paramName) , T_VARIABLE($pos) , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , , T_VARIABLE($data) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($realParams) [ ( T_VARIABLE($pos) - T_LNUMBER ) ] ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($realName) = T_VARIABLE($realParams) [ ( T_VARIABLE($pos) - T_LNUMBER ) ] [ ] ; T_VARIABLE($foundParams) [ ] = T_VARIABLE($realName) ; T_IF ( T_VARIABLE($realParams) [ ( T_VARIABLE($pos) - T_LNUMBER ) ] [ ] T_IS_IDENTICAL T_STRING ) { T_VARIABLE($realName) = . T_VARIABLE($realName) ; } T_IF ( T_VARIABLE($realName) T_IS_NOT_IDENTICAL T_VARIABLE($paramName) ) { T_VARIABLE($code) = ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($paramName) , T_VARIABLE($realName) , T_VARIABLE($pos) , ) ; T_VARIABLE($error) = ; T_IF ( T_STRING ( T_VARIABLE($paramName) ) T_IS_IDENTICAL T_STRING ( T_VARIABLE($realName) ) ) { T_VARIABLE($error) T_CONCAT_EQUAL ; T_VARIABLE($code) = ; } T_VARIABLE($error) T_CONCAT_EQUAL ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , T_VARIABLE($code) , T_VARIABLE($data) ) ; } } T_ELSE { T_VARIABLE($error) = . T_VARIABLE($pos) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } T_IF ( T_VARIABLE($param) T_OBJECT_OPERATOR T_STRING ( ) T_IS_IDENTICAL ) { T_VARIABLE($error) = . T_VARIABLE($pos) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } T_IF ( T_VARIABLE($param) T_OBJECT_OPERATOR T_STRING ( ) T_IS_IDENTICAL ) { T_VARIABLE($error) = . T_VARIABLE($pos) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , ) ; } T_IF ( T_VARIABLE($paramComment) T_IS_IDENTICAL ) { T_VARIABLE($error) = ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($paramName) , T_VARIABLE($pos) , ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , , T_VARIABLE($data) ) ; } T_VARIABLE($previousParam) = T_VARIABLE($param) ; } T_IF ( T_VARIABLE($spaceBeforeVar) T_IS_NOT_IDENTICAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($spaceBeforeVar) T_IS_NOT_IDENTICAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($spaceBeforeComment) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_VARIABLE($error) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($longestType) , ) ; } T_IF ( T_VARIABLE($spaceBeforeComment) T_IS_NOT_IDENTICAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($spaceBeforeComment) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_VARIABLE($error) = ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($longestVar) , ) ; } } T_VARIABLE($realNames) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($realParams) T_AS T_VARIABLE($realParam) ) { T_VARIABLE($realNames) [ ] = T_VARIABLE($realParam) [ ] ; } T_VARIABLE($diff) = T_STRING ( T_VARIABLE($realNames) , T_VARIABLE($foundParams) ) ; T_FOREACH ( T_VARIABLE($diff) T_AS T_VARIABLE($neededParam) ) { T_IF ( T_STRING ( T_VARIABLE($params) ) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_VARIABLE($errorPos) = ( T_VARIABLE($params) [ ( T_STRING ( T_VARIABLE($params) ) - T_LNUMBER ) ] T_OBJECT_OPERATOR T_STRING ( ) + T_VARIABLE($commentStart) ) ; } T_ELSE { T_VARIABLE($errorPos) = T_VARIABLE($commentStart) ; } T_VARIABLE($error) = ; T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($neededParam) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($errorPos) , , T_VARIABLE($data) ) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_STRING T_IMPLEMENTS T_STRING { T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( T_STRING ) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($phpcsFile) , T_VARIABLE($stackPtr) ) { T_VARIABLE($tokens) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($tokens) [ T_VARIABLE($stackPtr) ] [ ] { T_LNUMBER } T_IS_IDENTICAL ) { T_VARIABLE($error) = ; T_VARIABLE($error) T_CONCAT_EQUAL ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($stackPtr) , ) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_STRING T_IMPLEMENTS T_STRING { T_PUBLIC T_VARIABLE($lineLimit) = T_LNUMBER ; T_PUBLIC T_VARIABLE($absoluteLineLimit) = T_LNUMBER ; T_PUBLIC T_STRING ( ) { T_RETURN T_ARRAY ( T_STRING ) ; } T_PUBLIC T_STRING ( T_STRING T_VARIABLE($phpcsFile) , T_VARIABLE($stackPtr) ) { T_VARIABLE($tokens) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($previousOpenTag) = T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_STRING , ( T_VARIABLE($stackPtr) - T_LNUMBER ) ) ; T_IF ( T_VARIABLE($previousOpenTag) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN ; } T_VARIABLE($tokenCount) = T_LNUMBER ; T_VARIABLE($currentLineContent) = ; T_VARIABLE($currentLine) = T_LNUMBER ; T_VARIABLE($trim) = ( T_STRING ( T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ) * - T_LNUMBER ) ; T_FOR ( ; T_VARIABLE($tokenCount) < T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($tokenCount) T_INC ) { T_IF ( T_VARIABLE($tokens) [ T_VARIABLE($tokenCount) ] [ ] T_IS_IDENTICAL T_VARIABLE($currentLine) ) { T_VARIABLE($currentLineContent) T_CONCAT_EQUAL T_VARIABLE($tokens) [ T_VARIABLE($tokenCount) ] [ ] ; } T_ELSE { T_VARIABLE($currentLineContent) = T_STRING ( T_VARIABLE($currentLineContent) , T_LNUMBER , T_VARIABLE($trim) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($phpcsFile) , ( T_VARIABLE($tokenCount) - T_LNUMBER ) , T_VARIABLE($currentLineContent) ) ; T_VARIABLE($currentLineContent) = T_VARIABLE($tokens) [ T_VARIABLE($tokenCount) ] [ ] ; T_VARIABLE($currentLine) T_INC ; } } T_VARIABLE($currentLineContent) = T_STRING ( T_VARIABLE($currentLineContent) , T_LNUMBER , T_VARIABLE($trim) ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($phpcsFile) , ( T_VARIABLE($tokenCount) - T_LNUMBER ) , T_VARIABLE($currentLineContent) ) ; } T_PROTECTED T_STRING ( T_STRING T_VARIABLE($phpcsFile) , T_VARIABLE($stackPtr) , T_VARIABLE($lineContent) ) { T_IF ( T_STRING ( , T_VARIABLE($lineContent) ) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( , T_VARIABLE($lineContent) ) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( , T_VARIABLE($lineContent) ) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING ( , T_VARIABLE($lineContent) ) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_STRING T_IS_NOT_IDENTICAL ) { T_VARIABLE($lineLength) = T_STRING ( T_VARIABLE($lineContent) , T_STRING ) ; T_IF ( T_VARIABLE($lineLength) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($lineLength) = T_STRING ( T_VARIABLE($lineContent) ) ; } } T_ELSE { T_VARIABLE($lineLength) = T_STRING ( T_VARIABLE($lineContent) ) ; } T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($lineLength) > T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($lineLength) , ) ; T_VARIABLE($error) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error) , T_VARIABLE($stackPtr) , , T_VARIABLE($data) ) ; } T_ELSE T_IF ( T_VARIABLE($lineLength) > T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($data) = T_ARRAY ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($lineLength) , ) ; T_VARIABLE($warning) = ; T_VARIABLE($phpcsFile) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($warning) , T_VARIABLE($stackPtr) , , T_VARIABLE($data) ) ; } } }',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE_ONCE ; T_VARIABLE($post_params) = T_ARRAY ( , ) ; T_FOREACH ( T_VARIABLE($post_params) T_AS T_VARIABLE($one_post_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_post_param) ] = T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ; } } T_VARIABLE($table) = T_VARIABLE($T) ; T_VARIABLE($display_field) = T_VARIABLE($F) ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($disp) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($disp) ) { T_IF ( T_VARIABLE($display_field) T_IS_NOT_EQUAL T_VARIABLE($disp) ) { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($display_field) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; } T_ELSE { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; } } T_ELSEIF ( T_VARIABLE($display_field) T_IS_NOT_EQUAL ) { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($display_field) ) . ; } T_IF ( T_ISSET ( T_VARIABLE($upd_query) ) ) { T_VARIABLE($upd_rs) = T_STRING ( T_VARIABLE($upd_query) ) ; } } T_STRING ( ) ; T_STRING ( ) ; T_EXIT ( . T_STRING ( ) . ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($get_params) = T_ARRAY ( , , ) ; T_FOREACH ( T_VARIABLE($get_params) T_AS T_VARIABLE($one_get_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_GET) [ T_VARIABLE($one_get_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_get_param) ] = T_VARIABLE($_GET) [ T_VARIABLE($one_get_param) ] ; } } T_VARIABLE($script_display_field) = T_STRING ( ) ; T_VARIABLE($tab_column) = T_STRING ( ) ; T_VARIABLE($script_tables) = T_STRING ( ) ; T_VARIABLE($script_contr) = T_STRING ( ) ; T_VARIABLE($tab_pos) = T_STRING ( ) ; T_VARIABLE($tables_pk_or_unique_keys) = T_STRING ( ) ; T_VARIABLE($tables_all_keys) = T_STRING ( ) ; T_VARIABLE($params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($params) [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE ; T_REQUIRE ; T_ECHO ; T_ECHO T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( T_STRING ( T_VARIABLE($script_tables) ) ) ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( T_STRING ( T_VARIABLE($script_contr) ) ) ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( T_STRING ( T_VARIABLE($script_display_field) ) ) ; T_ECHO ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( , ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) . . T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_ECHO ; T_ECHO . T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) . ; T_ECHO T_STRING ( ) ; T_ECHO ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($name_cnt) = T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($name_cnt) ; T_VARIABLE($i) T_INC ) { T_ECHO . T_STRING ( ) . . . ; T_ECHO . . T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] . . . T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO . T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] . . . T_STRING ( ) . . . T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] . . . . T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] . ; T_IF ( T_ISSET ( T_VARIABLE($tab_pos) [ T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ] ) ) { T_ECHO T_VARIABLE($tab_pos) [ T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ] [ ] ? : ; } T_ELSE { T_ECHO ; } T_ECHO ; T_ECHO . . . T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] . ; T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ; T_ECHO ; T_ECHO ; } T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( ) . . T_VARIABLE($name_cnt) ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($t_n) = T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ; T_VARIABLE($t_n_url) = T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_ISSET ( T_VARIABLE($tab_pos) [ T_VARIABLE($t_n) ] ) ? T_VARIABLE($tab_pos) [ T_VARIABLE($t_n) ] [ ] : T_STRING ( T_LNUMBER , T_LNUMBER ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_ISSET ( T_VARIABLE($tab_pos) [ T_VARIABLE($t_n) ] ) ? T_VARIABLE($tab_pos) [ T_VARIABLE($t_n) ] [ ] : T_STRING ( T_LNUMBER , T_LNUMBER ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO ! T_ISSET ( T_VARIABLE($tab_pos) [ T_VARIABLE($t_n) ] ) T_BOOLEAN_OR T_VARIABLE($tab_pos) [ T_VARIABLE($t_n) ] [ ] ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_ECHO ; T_ECHO . T_STRING ( T_VARIABLE($t_n_url) ) . ; T_ECHO . T_STRING ( T_VARIABLE($t_n_url) ) . ; T_ECHO . T_STRING ( T_VARIABLE($t_n_url) ) . . T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ) . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_ISSET ( T_VARIABLE($tab_pos) [ T_VARIABLE($t_n) ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($tab_pos) [ T_VARIABLE($t_n) ] [ ] ) ) { T_ECHO ; } T_ELSE { T_ECHO ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_LNUMBER : T_LNUMBER ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_LNUMBER : T_LNUMBER ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ; T_ECHO ; T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_ECHO . T_STRING ( T_VARIABLE($t_n_url) ) . . T_STRING ( T_VARIABLE($t_n_url) ) . ; T_ECHO . T_STRING ( T_VARIABLE($t_n_url) ) . ; T_ECHO . T_STRING ( T_VARIABLE($t_n_url) ) . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($tab_pos) [ T_VARIABLE($t_n) ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($tab_pos) [ T_VARIABLE($t_n) ] [ ] ) ) { T_ECHO ; } T_ECHO ; T_VARIABLE($display_field) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ) ; T_FOR ( T_VARIABLE($j) = T_LNUMBER , T_VARIABLE($id_cnt) = T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] ) ; T_VARIABLE($j) < T_VARIABLE($id_cnt) ; T_VARIABLE($j) T_INC ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] . . T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($display_field) T_IS_EQUAL T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] ) { T_ECHO ; } T_ELSE { T_ECHO ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] . . T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] ) . ; T_IF ( ! T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ) ) { T_ECHO ( T_ISSET ( T_VARIABLE($tables_pk_or_unique_keys) [ T_VARIABLE($t_n) . . T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] ] ) ? T_LNUMBER : T_LNUMBER ) ; } T_ELSE { T_ECHO ( T_ISSET ( T_VARIABLE($tables_all_keys) [ T_VARIABLE($t_n) . . T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] ] ) ? T_LNUMBER : T_LNUMBER ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_ECHO ; T_ECHO . T_STRING ( T_VARIABLE($t_n_url) ) . T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($t_n_url) ) . . T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ) . . T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] ) . . T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] ) . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($t_n_url) . . T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($tables_pk_or_unique_keys) [ T_VARIABLE($t_n) . . T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] ] ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSE { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] , ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] , ) ) { T_ECHO ; } T_ELSEIF ( T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] , ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] , ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] , ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] , ) ) { T_ECHO ; } T_ELSEIF ( T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] , ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] , ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] , ) ) { T_ECHO ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ECHO T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] . . T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] , T_STRING ) ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( T_VARIABLE($tab_column) [ T_VARIABLE($t_n) ] [ ] [ T_VARIABLE($j) ] ) . . T_VARIABLE($GLOBALS) [ ] [ ] [ T_VARIABLE($i) ] . ; T_ECHO . T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) . ; } T_ECHO ; } T_ECHO ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_ECHO ; T_ECHO ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($post_params) = T_ARRAY ( , , , , ) ; T_FOREACH ( T_VARIABLE($post_params) T_AS T_VARIABLE($one_post_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_post_param) ] = T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ; } } T_IF ( ! T_ISSET ( T_VARIABLE($scale) ) ) { T_VARIABLE($no_die_save_pos) = T_LNUMBER ; T_INCLUDE_ONCE ; } T_IF ( T_ISSET ( T_VARIABLE($mode) ) ) { T_IF ( T_IS_NOT_EQUAL T_VARIABLE($mode) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($pdf_page_number) ) ) { T_EXIT ( ) ; } T_VARIABLE($pmd_table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_VARIABLE($pma_table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) ; T_VARIABLE($scale_q) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($scale) ) ; T_IF ( T_IS_EQUAL T_VARIABLE($mode) ) { T_VARIABLE($pdf_page_number) = T_STRING ( T_VARIABLE($newpage) , T_VARIABLE($cfgRelation) , T_VARIABLE($db) ) ; T_IF ( T_VARIABLE($pdf_page_number) > T_LNUMBER ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($mode) = ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } } T_VARIABLE($pdf_page_number_q) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($pdf_page_number) ) ; T_IF ( T_IS_EQUAL T_VARIABLE($mode) ) { T_VARIABLE($sql) = . T_VARIABLE($pma_table) . . . T_VARIABLE($pdf_page_number_q) . . . T_VARIABLE($scale_q) . . T_VARIABLE($scale_q) . . . T_VARIABLE($pmd_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ; T_STRING ( T_VARIABLE($sql) , T_STRING , T_STRING ) ; } T_IF ( T_IS_EQUAL T_VARIABLE($mode) ) { T_STRING ( . T_VARIABLE($pma_table) . . T_VARIABLE($pmd_table) . . T_VARIABLE($pmd_table) . . T_VARIABLE($pma_table) . . T_VARIABLE($scale_q) . . T_VARIABLE($pmd_table) . . T_VARIABLE($pma_table) . . T_VARIABLE($scale_q) . . T_VARIABLE($pmd_table) . . T_VARIABLE($pma_table) . . T_VARIABLE($pmd_table) . . T_VARIABLE($pma_table) . . T_VARIABLE($pmd_table) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_VARIABLE($pdf_page_number_q) . , T_STRING , T_STRING ) ; } } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($message) ) ) { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($db) ) ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_VARIABLE($choices) = T_ARRAY ( ) ; T_VARIABLE($table_info_result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . ) ; T_IF ( T_STRING ( T_VARIABLE($table_info_result) ) > T_LNUMBER ) { T_ECHO . T_STRING ( ) . ; T_ECHO ; T_WHILE ( T_VARIABLE($page) = T_STRING ( T_VARIABLE($table_info_result) ) ) { T_ECHO . T_VARIABLE($page) [ ] . ; T_ECHO T_STRING ( T_VARIABLE($page) [ ] ) ; T_ECHO ; } T_ECHO ; T_ECHO ; T_VARIABLE($choices) [ ] = T_STRING ( ) ; T_VARIABLE($choices) [ ] = T_STRING ( ) ; } T_VARIABLE($choices) [ ] = T_STRING ( ) ; T_IF ( T_LNUMBER T_IS_EQUAL T_STRING ( T_VARIABLE($choices) ) ) { T_ECHO T_VARIABLE($choices) [ ] ; T_ECHO ; } T_ELSE { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($choices) , T_VARIABLE($checked_choice) = , T_VARIABLE($line_break) = T_STRING , T_VARIABLE($escape_label) = T_STRING , T_VARIABLE($class) = ) ; } T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE_ONCE ; T_VARIABLE($die_save_pos) = T_LNUMBER ; T_REQUIRE_ONCE ; T_STRING ( T_VARIABLE($_POST) , T_STRING ) ; T_VARIABLE($tables) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($T1) ) ; T_VARIABLE($type_T1) = T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($T1) ] [ ] ) ; T_VARIABLE($tables) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($T2) ) ; T_VARIABLE($type_T2) = T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($T2) ] [ ] ) ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($type_T1) ) T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($type_T2) ) T_BOOLEAN_AND T_VARIABLE($type_T1) T_IS_EQUAL T_VARIABLE($type_T2) ) { T_VARIABLE($existrel_foreign) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($T2) , , ) ; T_IF ( T_ISSET ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($F2) ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($F2) ] [ ] ) ) { T_STRING ( T_LNUMBER , T_STRING ( ) ) ; } T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($T1) ) . ) ; T_VARIABLE($index_array1) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($index_array1) [ T_VARIABLE($row) [ ] ] = T_LNUMBER ; } T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($T2) ) . ) ; T_VARIABLE($index_array2) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($index_array2) [ T_VARIABLE($row) [ ] ] = T_LNUMBER ; } T_STRING ( T_VARIABLE($result) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($index_array1) [ T_VARIABLE($F1) ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($index_array2) [ T_VARIABLE($F2) ] ) ) { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($T2) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($F2) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($T1) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($F1) ) . ; T_IF ( T_VARIABLE($on_delete) T_IS_NOT_EQUAL ) { T_VARIABLE($upd_query) T_CONCAT_EQUAL . T_VARIABLE($on_delete) ; } T_IF ( T_VARIABLE($on_update) T_IS_NOT_EQUAL ) { T_VARIABLE($upd_query) T_CONCAT_EQUAL . T_VARIABLE($on_update) ; } T_VARIABLE($upd_query) T_CONCAT_EQUAL ; T_STRING ( T_VARIABLE($upd_query) ) T_LOGICAL_OR T_STRING ( T_LNUMBER , T_STRING ( ) ) ; T_STRING ( T_LNUMBER , T_STRING ( ) ) ; } } T_ELSE { T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL T_STRING ) { T_STRING ( T_LNUMBER , T_STRING ( ) . . T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($q) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($T2) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($F2) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($T1) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($F1) ) . ; T_IF ( T_STRING ( T_VARIABLE($q) , T_STRING , T_STRING ) ) { T_STRING ( T_LNUMBER , T_STRING ( ) ) ; } T_ELSE { T_STRING ( T_LNUMBER , T_STRING ( ) ) ; } } } T_FUNCTION(PMD_return_new) ( T_VARIABLE($b) , T_VARIABLE($ret) ) { T_GLOBAL T_VARIABLE($db) , T_VARIABLE($T1) , T_VARIABLE($F1) , T_VARIABLE($T2) , T_VARIABLE($F2) ; T_STRING ( ) ; T_STRING ( ) ; T_EXIT ( . T_VARIABLE($ret) . . T_VARIABLE($b) . . T_STRING ( T_VARIABLE($db) ) . . T_STRING ( T_VARIABLE($T1) ) . . T_STRING ( T_VARIABLE($F1) ) . . T_STRING ( T_VARIABLE($db) ) . . T_STRING ( T_VARIABLE($T2) ) . . T_STRING ( T_VARIABLE($F2) ) . ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE_ONCE ; T_STRING ( T_VARIABLE($_POST) , T_STRING ) ; T_STRING ( T_VARIABLE($_GET) , T_STRING ) ; T_VARIABLE($die_save_pos) = T_LNUMBER ; T_REQUIRE_ONCE ; T_LIST ( T_VARIABLE($DB1) , T_VARIABLE($T1) ) = T_STRING ( , T_VARIABLE($T1) ) ; T_LIST ( T_VARIABLE($DB2) , T_VARIABLE($T2) ) = T_STRING ( , T_VARIABLE($T2) ) ; T_VARIABLE($tables) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($T1) ) ; T_VARIABLE($type_T1) = T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($T1) ] [ ] ) ; T_VARIABLE($tables) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($T2) ) ; T_VARIABLE($type_T2) = T_STRING ( T_VARIABLE($tables) [ T_VARIABLE($T2) ] [ ] ) ; T_VARIABLE($try_to_delete_internal_relation) = T_STRING ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($type_T1) ) T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($type_T2) ) T_BOOLEAN_AND T_VARIABLE($type_T1) T_IS_EQUAL T_VARIABLE($type_T2) ) { T_VARIABLE($existrel_foreign) = T_STRING ( T_VARIABLE($DB2) , T_VARIABLE($T2) , , ) ; T_IF ( T_ISSET ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($F2) ] [ ] ) ) { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($DB2) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($T2) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($F2) ] [ ] ) . ; T_VARIABLE($upd_rs) = T_STRING ( T_VARIABLE($upd_query) ) ; } T_ELSE { T_VARIABLE($try_to_delete_internal_relation) = T_STRING ; } } T_ELSE { T_VARIABLE($try_to_delete_internal_relation) = T_STRING ; } T_IF ( T_VARIABLE($try_to_delete_internal_relation) ) { T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_VARIABLE($cfg) [ ] [ ] . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($DB2) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($T2) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($F2) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($DB1) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($T1) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($F1) ) . , T_STRING , T_STRING ) ; } T_STRING ( T_LNUMBER , T_STRING ( ) ) ; T_FUNCTION(PMD_return_upd) ( T_VARIABLE($b) , T_VARIABLE($ret) ) { T_GLOBAL T_VARIABLE($K) ; T_STRING ( ) ; T_STRING ( ) ; T_EXIT ( . T_VARIABLE($ret) . . T_VARIABLE($b) . . T_VARIABLE($K) . ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($cfgRelation) [ ] ) { T_STRING ( ) ; } T_VARIABLE($post_params) = T_ARRAY ( , , , , , , ) ; T_FOREACH ( T_VARIABLE($post_params) T_AS T_VARIABLE($one_post_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_post_param) ] = T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ; } } T_FOREACH ( T_VARIABLE($t_x) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($KEY) = T_EMPTY ( T_VARIABLE($IS_AJAX) ) ? T_STRING ( T_VARIABLE($key) ) : T_VARIABLE($key) ; T_LIST ( T_VARIABLE($DB) , T_VARIABLE($TAB) ) = T_STRING ( , T_VARIABLE($KEY) ) ; T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($DB) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($TAB) ) . , T_STRING , T_STRING ) ; T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($DB) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($TAB) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($t_x) [ T_VARIABLE($key) ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($t_y) [ T_VARIABLE($key) ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($t_v) [ T_VARIABLE($key) ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($t_h) [ T_VARIABLE($key) ] ) . , T_STRING , T_STRING ) ; } T_FUNCTION(PMD_err_sav) ( ) { T_GLOBAL T_VARIABLE($die_save_pos) ; T_IF ( ! T_EMPTY ( T_VARIABLE($die_save_pos) ) ) { T_STRING ( ) ; T_STRING ( ) ; T_EXIT ( . T_STRING ( ) . ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($die_save_pos) ) ) { T_STRING ( ) ; T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE ; T_STRING ( ) ; T_VARIABLE($form_param) = T_STRING ( T_STRING , ) ; T_IF ( ! T_ISSET ( T_VARIABLE($forms) [ T_VARIABLE($form_param) ] ) ) { T_VARIABLE($forms_keys) = T_STRING ( T_VARIABLE($forms) ) ; T_VARIABLE($form_param) = T_STRING ( T_VARIABLE($forms_keys) ) ; } T_VARIABLE($form_display) = T_NEW T_STRING ( ) ; T_FOREACH ( T_VARIABLE($forms) [ T_VARIABLE($form_param) ] T_AS T_VARIABLE($form_name) T_DOUBLE_ARROW T_VARIABLE($form) ) { T_IF ( T_VARIABLE($form_name) T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($GLOBALS) [ ] [ ] ) { T_CONTINUE ; } T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($form_name) , T_VARIABLE($form) , T_LNUMBER ) ; } T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_param) ) ; T_STRING ( T_VARIABLE($cfg) [ ] . . T_STRING ( T_VARIABLE($url_params) , ) ) ; T_EXIT ; } T_VARIABLE($error) = T_STRING ; T_IF ( T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( T_STRING ) T_BOOLEAN_AND ! T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($result) = T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_IF ( T_VARIABLE($result) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($hash) = T_STRING ( T_STRING ( T_STRING , ) , ) ; T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_param) ) , T_VARIABLE($hash) ) ; T_EXIT ; } T_ELSE { T_VARIABLE($error) = T_VARIABLE($result) ; } } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE ; T_IF ( T_VARIABLE($error) ) { T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( T_STRING , T_STRING ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE ; T_STRING ( ) ; T_VARIABLE($error) = ; T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_STRING ( T_STRING , ) T_IS_EQUAL ) { T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($filename) = . T_STRING ( T_STRING ( ) ) . ; T_STRING ( T_VARIABLE($filename) , ) ; T_VARIABLE($settings) = T_STRING ( ) ; T_ECHO T_STRING ( T_VARIABLE($settings) [ ] ) ; T_EXIT ; } T_ELSE T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($settings) = T_STRING ( ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_VARIABLE($settings) [ ] ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($settings) [ ] ) ; T_EXIT ; } T_ELSE T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($json) = ; T_IF ( T_STRING ( T_STRING , ) T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_FILES) [ ] ) T_BOOLEAN_AND T_VARIABLE($_FILES) [ ] [ ] T_IS_EQUAL T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($_FILES) [ ] [ ] ) ) { T_VARIABLE($open_basedir) = @ T_STRING ( ) ; T_VARIABLE($file_to_unlink) = ; T_VARIABLE($import_file) = T_VARIABLE($_FILES) [ ] [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($open_basedir) ) ) { T_VARIABLE($tmp_subdir) = ( T_STRING ? : ) ; T_IF ( T_STRING ( T_VARIABLE($tmp_subdir) ) ) { T_VARIABLE($import_file_new) = T_STRING ( T_VARIABLE($tmp_subdir) , ) ; T_IF ( T_STRING ( T_VARIABLE($import_file) , T_VARIABLE($import_file_new) ) ) { T_VARIABLE($import_file) = T_VARIABLE($import_file_new) ; T_VARIABLE($file_to_unlink) = T_VARIABLE($import_file_new) ; } } } T_VARIABLE($json) = T_STRING ( T_VARIABLE($import_file) ) ; T_IF ( T_VARIABLE($file_to_unlink) ) { T_STRING ( T_VARIABLE($file_to_unlink) ) ; } } T_ELSE { T_VARIABLE($json) = T_STRING ( T_STRING , ) ; } T_VARIABLE($_SESSION) [ ] = T_STRING ; T_VARIABLE($config) = T_STRING ( T_VARIABLE($json) , T_STRING ) ; T_VARIABLE($return_url) = T_STRING ( T_STRING , ) ; T_IF ( ! T_STRING ( T_VARIABLE($config) ) ) { T_VARIABLE($error) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($form_display) = T_NEW T_STRING ( ) ; T_FOREACH ( T_VARIABLE($forms) T_AS T_VARIABLE($formset_id) T_DOUBLE_ARROW T_VARIABLE($formset) ) { T_FOREACH ( T_VARIABLE($formset) T_AS T_VARIABLE($form_name) T_DOUBLE_ARROW T_VARIABLE($form) ) { T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($formset_id) . . T_VARIABLE($form_name) , T_VARIABLE($form) ) ; } } T_VARIABLE($cf) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($new_config) = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($new_config) = T_STRING ( T_VARIABLE($new_config) , T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) ) ; } T_VARIABLE($new_config) = T_STRING ( T_VARIABLE($new_config) , T_VARIABLE($config) ) ; T_VARIABLE($_POST_bak) = T_VARIABLE($_POST) ; T_FOREACH ( T_VARIABLE($new_config) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($_POST) [ T_STRING ( , , T_VARIABLE($k) ) ] = T_VARIABLE($v) ; } T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($all_ok) = T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( T_STRING , T_STRING ) ; T_VARIABLE($all_ok) = T_VARIABLE($all_ok) T_BOOLEAN_AND ! T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($_POST) = T_VARIABLE($_POST_bak) ; T_IF ( ! T_VARIABLE($all_ok) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($all_ok) = T_STRING ; } T_IF ( ! T_VARIABLE($all_ok) ) { T_INCLUDE ; T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( ) ; T_ECHO ; T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( ) ; T_ECHO ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) . ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($json) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($_POST) [ ] ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($return_url) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($return_url) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_EXIT ; } T_VARIABLE($params) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($config) [ ] ) T_BOOLEAN_AND T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL T_VARIABLE($config) [ ] T_BOOLEAN_AND T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($config) [ ] ) ) { T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($config) [ ] ) ; T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($config) [ ] ) T_BOOLEAN_AND T_VARIABLE($config) [ ] T_IS_NOT_EQUAL T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($params) [ ] = T_VARIABLE($config) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($config) [ ] ) T_BOOLEAN_AND T_VARIABLE($config) [ ] T_IS_NOT_EQUAL T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($params) [ ] = T_VARIABLE($config) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($config) [ ] ) T_BOOLEAN_AND T_VARIABLE($config) [ ] T_IS_NOT_EQUAL T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($params) [ ] = T_VARIABLE($config) [ ] ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_IF ( T_VARIABLE($result) T_IS_IDENTICAL T_STRING ) { T_IF ( T_VARIABLE($return_url) ) { T_VARIABLE($query) = T_STRING ( , T_STRING ( T_VARIABLE($return_url) , T_STRING ) ) ; T_VARIABLE($return_url) = T_STRING ( T_VARIABLE($return_url) , T_STRING ) ; T_FOREACH ( T_VARIABLE($query) T_AS T_VARIABLE($q) ) { T_VARIABLE($pos) = T_STRING ( T_VARIABLE($q) , ) ; T_VARIABLE($k) = T_STRING ( T_VARIABLE($q) , T_LNUMBER , T_VARIABLE($pos) ) ; T_IF ( T_VARIABLE($k) T_IS_EQUAL ) { T_CONTINUE ; } T_VARIABLE($params) [ T_VARIABLE($k) ] = T_STRING ( T_VARIABLE($q) , T_VARIABLE($pos) + T_LNUMBER ) ; } } T_ELSE { T_VARIABLE($return_url) = ; } T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( T_VARIABLE($return_url) , T_VARIABLE($params) ) ; T_EXIT ; } T_ELSE { T_VARIABLE($error) = T_VARIABLE($result) ; } } } T_ELSE T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($result) = T_STRING ( T_ARRAY ( ) ) ; T_IF ( T_VARIABLE($result) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($params) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) ; T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( , T_VARIABLE($params) ) ; T_EXIT ; } T_ELSE { T_VARIABLE($error) = T_VARIABLE($result) ; } T_EXIT ; } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE ; T_IF ( T_VARIABLE($error) ) { T_IF ( ! T_VARIABLE($error) T_INSTANCEOF T_STRING ) { T_VARIABLE($error) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($error) ) ; } T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_STRING ( , T_STRING ( ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($max_upload_size) ) . ; T_ECHO T_STRING ( ) . ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_STRING ( ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_STRING ( ) , , ) ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) . T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) . T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($is_superuser) = T_STRING ( ) ; T_REQUIRE_ONCE ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_REQUIRE_ONCE ; T_VARIABLE($querydisplay_tabs) = T_ARRAY ( , , , , ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($querydisplay_tabs) ) ) { T_VARIABLE($querydisplay_tab) = T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_VARIABLE($querydisplay_tab) = T_VARIABLE($GLOBALS) [ ] [ ] ; } T_VARIABLE($no_js) = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_STRING ) ; T_IF ( T_VARIABLE($no_js) ) { T_VARIABLE($querydisplay_tab) = ; T_VARIABLE($tabs) = T_STRING ; } T_ELSE { T_VARIABLE($tabs) = T_ARRAY ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_BOOL_CAST ( T_VARIABLE($querydisplay_tab) T_IS_EQUAL ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_BOOL_CAST ( T_VARIABLE($querydisplay_tab) T_IS_EQUAL ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_BOOL_CAST ( T_VARIABLE($querydisplay_tab) T_IS_EQUAL ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_EQUAL ) { T_VARIABLE($tabs) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = ; T_VARIABLE($tabs) [ ] [ ] = T_BOOL_CAST ( T_VARIABLE($querydisplay_tab) T_IS_EQUAL ) ; } } T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($url_query) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($sql_query) ) ) { T_VARIABLE($show_query) = T_LNUMBER ; } T_IF ( T_VARIABLE($no_js) ) { T_IF ( T_STRING ( T_VARIABLE($table) ) ) { T_INCLUDE ; } T_ELSEIF ( T_STRING ( T_VARIABLE($db) ) ) { T_INCLUDE ; } T_ELSE { T_INCLUDE ; } T_EXIT ; } T_IF ( ! T_EMPTY ( T_VARIABLE($show_query) ) ) { T_VARIABLE($query_to_display) = T_VARIABLE($sql_query) ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($query_to_display) = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($show_query) = T_LNUMBER ; } T_ELSE { T_VARIABLE($query_to_display) = ; } T_VARIABLE($sql_query) = ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , , ) ) { T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_IF ( T_VARIABLE($querydisplay_tab) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($querydisplay_tab) T_IS_EQUAL ) { T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( , ) ; } T_ECHO ; T_IF ( T_VARIABLE($tabs) ) { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tabs) , T_ARRAY ( ) , , T_STRING ) ; T_UNSET ( T_VARIABLE($tabs) ) ; } T_STRING ( T_VARIABLE($query_to_display) , T_VARIABLE($querydisplay_tab) ) ; T_VARIABLE($_sql_history) = T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_sql_history) ) T_BOOLEAN_AND ( T_VARIABLE($querydisplay_tab) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($querydisplay_tab) T_IS_EQUAL ) ) { T_VARIABLE($tab) = T_VARIABLE($querydisplay_tab) T_IS_NOT_EQUAL ? : ; T_ECHO T_STRING ( ) . . ; T_FOREACH ( T_VARIABLE($_sql_history) T_AS T_VARIABLE($query) ) { T_ECHO . ; T_VARIABLE($url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($tab) , T_DOUBLE_ARROW T_VARIABLE($query) [ ] , T_DOUBLE_ARROW T_VARIABLE($query) [ ] , T_DOUBLE_ARROW T_VARIABLE($query) [ ] , ) ; T_ECHO . T_STRING ( T_VARIABLE($url_params) ) . . T_VARIABLE($titles) [ ] . ; T_VARIABLE($url_params) [ ] = ; T_ECHO . T_STRING ( T_VARIABLE($url_params) ) . . ; T_IF ( ! T_EMPTY ( T_VARIABLE($query) [ ] ) ) { T_ECHO ; T_ECHO T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($query) [ ] ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($query) [ ] ) ) { T_ECHO . T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($query) [ ] ) ) ; } T_ECHO ; } T_IF ( T_STRING ( T_VARIABLE($query) [ ] ) > T_LNUMBER ) { T_ECHO . T_STRING ( T_VARIABLE($query) [ ] ) . ; T_ECHO T_STRING ( T_STRING ( T_VARIABLE($query) [ ] , T_LNUMBER , T_LNUMBER ) ) . ; T_ECHO T_STRING ( T_STRING ( T_VARIABLE($query) [ ] , - T_LNUMBER ) ) ; T_ECHO ; } T_ELSE { T_ECHO T_STRING ( T_VARIABLE($query) [ ] ) ; } T_ECHO . ; T_ECHO . ; } T_UNSET ( T_VARIABLE($tab) , T_VARIABLE($_sql_history) , T_VARIABLE($query) ) ; T_ECHO . ; } T_ECHO ; T_ECHO ; T_ECHO T_STRING ( , ) ; T_ECHO . T_STRING ( T_VARIABLE($db) ) . ; T_ECHO . T_STRING ( T_VARIABLE($table) ) . ; T_ECHO ; T_ECHO . T_VARIABLE($querydisplay_tab) . ; T_ECHO ; T_ECHO ;',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE ; T_VARIABLE($active_page) = ; T_REQUIRE_ONCE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_REQUIRE_ONCE ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($cfgRelation) [ ] ) { T_ECHO T_STRING ( T_STRING ( ) , , ) . . . T_STRING T_DOUBLE_COLON T_STRING ( , ) . ; T_EXIT ; } T_IF ( ! T_VARIABLE($cfgRelation) [ ] ) { T_ECHO T_STRING ( T_STRING ( ) , , ) . . . T_STRING T_DOUBLE_COLON T_STRING ( , ) . ; T_EXIT ; } T_IF ( ! T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) ) { T_ECHO T_STRING ( T_STRING ( ) , , ) . . . T_STRING T_DOUBLE_COLON T_STRING ( , ) . ; T_EXIT ; } T_IF ( ! T_ISSET ( T_VARIABLE($cfgRelation) [ ] ) ) { T_ECHO T_STRING ( T_STRING ( ) , , ) . . . T_STRING T_DOUBLE_COLON T_STRING ( , ) . ; T_EXIT ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_INCLUDE_ONCE ; T_VARIABLE($user_schema) = T_NEW T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($user_schema) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($user_schema) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($user_schema) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($user_schema) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($user_schema) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_BOOLEAN_OR ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($user_schema) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($user_schema) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_LNUMBER ) T_BOOLEAN_OR ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($user_schema) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($user_schema) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_LNUMBER ) ) ) { T_VARIABLE($user_schema) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ( T_ISSET ( T_VARIABLE($showwysiwyg) ) T_BOOLEAN_AND T_VARIABLE($showwysiwyg) T_IS_EQUAL ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($post_params) = T_ARRAY ( , , , , , , , , , , , , , ) ; T_FOREACH ( T_VARIABLE($post_params) T_AS T_VARIABLE($one_post_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_post_param) ] = T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ; } } T_IF ( ! T_ISSET ( T_VARIABLE($export_type) ) T_BOOLEAN_OR ! T_STRING ( , T_VARIABLE($export_type) ) ) { T_VARIABLE($export_type) = ; } T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($path) = T_STRING ( T_STRING ( T_VARIABLE($export_type) ) ) ; T_IF ( ! T_STRING ( . T_VARIABLE($path) . ) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_POST) [ ] , T_VARIABLE($export_type) , T_STRING ( ) ) ; } T_REQUIRE . T_VARIABLE($path) . ; T_VARIABLE($obj_schema) = T_EVAL ( . T_VARIABLE($path) . ) ;',no
'T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FUNCTION(PMA_printDecodedBug) ( T_VARIABLE($textdata) ) { T_RETURN . T_STRING ( T_VARIABLE($textdata) ) . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_POST) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($bug_encoded) = T_VARIABLE($_POST) [ ] ; } T_IF ( ! T_EMPTY ( T_VARIABLE($bug_encoded) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($bug_encoded) ) ) { T_IF ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($bug_encoded) = T_STRING ( T_VARIABLE($bug_encoded) ) ; } T_VARIABLE($bug_encoded) = T_STRING ( , , T_VARIABLE($bug_encoded) ) ; T_VARIABLE($bug_decoded) = T_STRING ( T_VARIABLE($bug_encoded) ) ; T_IF ( T_STRING ( T_VARIABLE($bug_encoded) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($result) = T_STRING ( T_STRING ( T_VARIABLE($bug_decoded) ) ) ; } T_ELSE { T_VARIABLE($result) = . ; } } T_ELSE { T_VARIABLE($result) = T_STRING ( T_VARIABLE($bug_decoded) ) ; } T_ECHO . . T_VARIABLE($result) . ; } T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($url_params) = T_ARRAY ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($pos) = T_LNUMBER ; } T_ELSE { T_VARIABLE($pos) = T_INT_CAST T_VARIABLE($_REQUEST) [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($binary_logs) ) ) { T_VARIABLE($_REQUEST) [ ] = ; } T_ELSE { T_VARIABLE($url_params) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($sql_query) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($_REQUEST) [ ] . ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_NOT_IDENTICAL ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($pos) . . T_INT_CAST T_VARIABLE($GLOBALS) [ ] [ ] ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_IF ( T_ISSET ( T_VARIABLE($result) ) T_BOOLEAN_AND T_VARIABLE($result) ) { T_VARIABLE($num_rows) = T_STRING ( T_VARIABLE($result) ) ; } T_ELSE { T_VARIABLE($num_rows) = T_LNUMBER ; } T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($dontlimitchars) = T_STRING ; } T_ELSE { T_VARIABLE($dontlimitchars) = T_STRING ; T_VARIABLE($url_params) [ ] = T_LNUMBER ; } T_ECHO . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( ) . . . ; T_IF ( T_STRING ( T_VARIABLE($binary_logs) ) > T_LNUMBER ) { T_ECHO ; T_ECHO T_STRING ( T_VARIABLE($url_params) ) ; T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO ; T_VARIABLE($full_size) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($binary_logs) T_AS T_VARIABLE($each_log) ) { T_ECHO . T_VARIABLE($each_log) [ ] . ; T_IF ( T_VARIABLE($each_log) [ ] T_IS_EQUAL T_VARIABLE($_REQUEST) [ ] ) { T_ECHO ; } T_ECHO . T_VARIABLE($each_log) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($each_log) [ ] ) ) { T_VARIABLE($full_size) T_PLUS_EQUAL T_VARIABLE($each_log) [ ] ; T_ECHO . T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($each_log) [ ] , T_LNUMBER , T_LNUMBER ) ) . ; } T_ECHO ; } T_ECHO ; T_ECHO T_STRING ( T_VARIABLE($binary_logs) ) . . T_STRING ( ) . ; T_IF ( T_VARIABLE($full_size) > T_LNUMBER ) { T_ECHO T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($full_size) ) ) ; } T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; } T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( ) ) ; T_ECHO . . . ; T_IF ( T_VARIABLE($pos) > T_LNUMBER ) { T_VARIABLE($this_url_params) = T_VARIABLE($url_params) ; T_IF ( T_VARIABLE($pos) > T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($this_url_params) [ ] = T_VARIABLE($pos) - T_VARIABLE($GLOBALS) [ ] [ ] ; } T_ECHO . T_STRING ( T_VARIABLE($this_url_params) ) . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_ECHO . T_STRING ( , ) . ; } T_ELSE { T_ECHO . T_STRING ( , ) ; } T_ECHO ; } T_VARIABLE($this_url_params) = T_VARIABLE($url_params) ; T_IF ( T_VARIABLE($pos) > T_LNUMBER ) { T_VARIABLE($this_url_params) [ ] = T_VARIABLE($pos) ; } T_IF ( T_VARIABLE($dontlimitchars) ) { T_UNSET ( T_VARIABLE($this_url_params) [ ] ) ; T_VARIABLE($tempTitle) = T_STRING ( ) ; T_VARIABLE($tempImgMode) = ; } T_ELSE { T_VARIABLE($this_url_params) [ ] = T_LNUMBER ; T_VARIABLE($tempTitle) = T_STRING ( ) ; T_VARIABLE($tempImgMode) = ; } T_ECHO . T_STRING ( T_VARIABLE($this_url_params) ) . . T_VARIABLE($tempTitle) . . . T_VARIABLE($pmaThemeImage) . . T_VARIABLE($tempImgMode) . . . T_VARIABLE($tempTitle) . ; T_IF ( T_VARIABLE($num_rows) T_IS_GREATER_OR_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($this_url_params) = T_VARIABLE($url_params) ; T_VARIABLE($this_url_params) [ ] = T_VARIABLE($pos) + T_VARIABLE($GLOBALS) [ ] [ ] ; T_ECHO . T_STRING ( T_VARIABLE($this_url_params) ) . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_ECHO . T_STRING ( , ) . ; } T_ELSE { T_ECHO . T_STRING ( , ) ; } T_ECHO ; } T_ECHO . . . . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . . . . ; T_VARIABLE($odd_row) = T_STRING ; T_WHILE ( T_VARIABLE($value) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( ! T_VARIABLE($dontlimitchars) T_BOOLEAN_AND T_STRING ( T_VARIABLE($value) [ ] ) > T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($value) [ ] = T_STRING ( T_VARIABLE($value) [ ] , T_LNUMBER , T_VARIABLE($GLOBALS) [ ] [ ] ) . ; } T_ECHO . ( T_VARIABLE($odd_row) ? : ) . . . T_VARIABLE($value) [ ] . . . T_VARIABLE($value) [ ] . . . T_VARIABLE($value) [ ] . . . T_VARIABLE($value) [ ] . . . ( T_ISSET ( T_VARIABLE($value) [ ] ) ? T_VARIABLE($value) [ ] : T_VARIABLE($value) [ ] ) . . . T_STRING ( T_VARIABLE($value) [ ] ) . . ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_ECHO . ;',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE ; T_ECHO . . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( ) . . . ; T_REQUIRE_ONCE ; T_ECHO . . . . . T_STRING ( ) . . . . T_STRING ( ) . . . . ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($table_row_count) = T_STRING ( T_VARIABLE($mysql_charsets) ) + T_STRING ( T_VARIABLE($mysql_collations) ) ; T_FOREACH ( T_VARIABLE($mysql_charsets) T_AS T_VARIABLE($current_charset) ) { T_IF ( T_VARIABLE($i) T_IS_GREATER_OR_EQUAL T_VARIABLE($table_row_count) / T_LNUMBER ) { T_VARIABLE($i) = T_LNUMBER ; T_ECHO . . . . . T_STRING ( ) . . . . T_STRING ( ) . . . . ; } T_VARIABLE($i) T_INC ; T_ECHO . . . T_STRING ( T_VARIABLE($current_charset) ) . . ( T_EMPTY ( T_VARIABLE($mysql_charsets_descriptions) [ T_VARIABLE($current_charset) ] ) ? : . T_STRING ( T_VARIABLE($mysql_charsets_descriptions) [ T_VARIABLE($current_charset) ] ) . . ) . . . . ; T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($mysql_collations) [ T_VARIABLE($current_charset) ] T_AS T_VARIABLE($current_collation) ) { T_VARIABLE($i) T_INC ; T_ECHO . ( T_VARIABLE($odd_row) ? : ) . ( T_VARIABLE($mysql_default_collations) [ T_VARIABLE($current_charset) ] T_IS_EQUAL T_VARIABLE($current_collation) ? : ) . ( T_VARIABLE($mysql_collations_available) [ T_VARIABLE($current_collation) ] ? : ) . . . . T_STRING ( T_VARIABLE($current_collation) ) . . . . T_STRING ( T_VARIABLE($current_collation) ) . . . . ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } } T_UNSET ( T_VARIABLE($table_row_count) ) ; T_ECHO . . . ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE ; T_IF ( ! T_STRING ) { T_INCLUDE_ONCE ; } T_ELSE { T_VARIABLE($replication_types) = T_ARRAY ( ) ; T_VARIABLE($replication_info) = T_STRING ; } T_REQUIRE ; T_VARIABLE($post_params) = T_ARRAY ( , , ) ; T_FOREACH ( T_VARIABLE($post_params) T_AS T_VARIABLE($one_post_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_post_param) ] = T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ; } } T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sort_by) = ; } T_ELSE { T_VARIABLE($sort_by_whitelist) = T_ARRAY ( , , , , , , , ) ; T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($sort_by_whitelist) ) ) { T_VARIABLE($sort_by) = T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_VARIABLE($sort_by) = ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_IS_EQUAL ) { T_VARIABLE($sort_order) = ; } T_ELSE { T_VARIABLE($sort_order) = ; } T_VARIABLE($dbstats) = T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ? T_LNUMBER : T_LNUMBER ; T_VARIABLE($pos) = T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ? T_LNUMBER : T_INT_CAST T_VARIABLE($_REQUEST) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = T_STRING ; } T_IF ( ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) T_BOOLEAN_AND ( T_VARIABLE($is_superuser) T_BOOLEAN_OR T_VARIABLE($cfg) [ ] ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($action) = ; T_VARIABLE($submit_mult) = ; T_VARIABLE($err_url) = . T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($selected_db) = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($submit_mult) , T_DOUBLE_ARROW T_VARIABLE($_REQUEST) [ ] , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] ) ; } T_INCLUDE ; T_UNSET ( T_VARIABLE($action) , T_VARIABLE($submit_mult) , T_VARIABLE($err_url) , T_VARIABLE($selected_db) , T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_EMPTY ( T_VARIABLE($message) ) ) { T_IF ( T_VARIABLE($mult_btn) T_IS_EQUAL T_STRING ( ) ) { T_VARIABLE($number_of_databases) = T_STRING ( T_VARIABLE($selected) ) ; } T_ELSE { T_VARIABLE($number_of_databases) = T_LNUMBER ; } T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( , , T_VARIABLE($number_of_databases) ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($number_of_databases) ) ; } } T_IF ( T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND T_VARIABLE($message) T_INSTANCEOF T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_EXIT ; } } T_ECHO . . T_STRING T_DOUBLE_COLON T_STRING ( ) . ( T_VARIABLE($dbstats) ? T_STRING ( ) : T_STRING ( ) ) . . . ; T_IF ( T_VARIABLE($cfg) [ ] ) { T_ECHO . ; T_INCLUDE ; T_ECHO . ; T_ECHO . ; } T_IF ( T_VARIABLE($server) > T_LNUMBER ) { T_VARIABLE($databases) = T_STRING ( T_STRING , T_VARIABLE($dbstats) , T_STRING , T_VARIABLE($sort_by) , T_VARIABLE($sort_order) , T_VARIABLE($pos) , T_STRING ) ; T_VARIABLE($databases_count) = T_STRING ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($databases_count) = T_LNUMBER ; } T_IF ( T_VARIABLE($databases_count) > T_LNUMBER ) { T_ECHO ; T_STRING ( T_VARIABLE($databases) ) ; T_VARIABLE($first_database) = T_STRING ( T_VARIABLE($databases) ) ; T_VARIABLE($column_order) = T_STRING ( ) ; T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($pos) , T_DOUBLE_ARROW T_VARIABLE($dbstats) , T_DOUBLE_ARROW T_VARIABLE($sort_by) , T_DOUBLE_ARROW T_VARIABLE($sort_order) , ) ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($databases_count) , T_VARIABLE($pos) , T_VARIABLE($_url_params) , , , T_VARIABLE($GLOBALS) [ ] [ ] ) ; T_VARIABLE($_url_params) [ ] = T_VARIABLE($pos) ; T_VARIABLE($_url_params) [ ] = T_LNUMBER ; T_ECHO ; T_ECHO . ; T_ECHO T_STRING ( T_VARIABLE($_url_params) ) ; T_VARIABLE($_url_params) [ ] = ; T_VARIABLE($_url_params) [ ] = ( T_VARIABLE($sort_by) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($sort_order) T_IS_EQUAL ) ? : ; T_ECHO . . . . . . ( T_VARIABLE($is_superuser) T_BOOLEAN_OR T_VARIABLE($cfg) [ ] ? . : ) . . T_STRING ( T_VARIABLE($_url_params) ) . . . . T_STRING ( ) . . ( T_VARIABLE($sort_by) T_IS_EQUAL ? . T_STRING T_DOUBLE_COLON T_STRING ( . T_VARIABLE($sort_order) . , ( T_VARIABLE($sort_order) T_IS_EQUAL ? T_STRING ( ) : T_STRING ( ) ) ) . : ) . . ; T_VARIABLE($table_columns) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($column_order) T_AS T_VARIABLE($stat_name) T_DOUBLE_ARROW T_VARIABLE($stat) ) { T_IF ( T_STRING ( T_VARIABLE($stat_name) , T_VARIABLE($first_database) ) ) { T_IF ( T_VARIABLE($stat) [ ] T_IS_IDENTICAL ) { T_VARIABLE($table_columns) T_PLUS_EQUAL T_LNUMBER ; T_VARIABLE($colspan) = ; } T_ELSE { T_VARIABLE($table_columns) T_INC ; T_VARIABLE($colspan) = ; } T_VARIABLE($_url_params) [ ] = T_VARIABLE($stat_name) ; T_VARIABLE($_url_params) [ ] = ( T_VARIABLE($sort_by) T_IS_EQUAL T_VARIABLE($stat_name) T_BOOLEAN_AND T_VARIABLE($sort_order) T_IS_EQUAL ) ? : ; T_ECHO . T_VARIABLE($colspan) . . . T_STRING ( T_VARIABLE($_url_params) ) . . . . T_VARIABLE($stat) [ ] . . ( T_VARIABLE($sort_by) T_IS_EQUAL T_VARIABLE($stat_name) ? . T_STRING T_DOUBLE_COLON T_STRING ( . T_VARIABLE($sort_order) . , ( T_VARIABLE($sort_order) T_IS_EQUAL ? T_STRING ( ) : T_STRING ( ) ) ) . : ) . . ; } } T_FOREACH ( T_VARIABLE($replication_types) T_AS T_VARIABLE($type) ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($name) = T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($name) = T_STRING ( ) ; } T_IF ( $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ) { T_ECHO . T_VARIABLE($name) . . ; } } T_IF ( T_VARIABLE($is_superuser) T_BOOLEAN_AND ! T_STRING ) { T_ECHO . ( T_VARIABLE($cfg) [ ] ? : T_STRING ( ) ) . . . ; } T_ECHO . . . . . ; T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($databases) T_AS T_VARIABLE($current) ) { T_VARIABLE($tr_class) = T_VARIABLE($odd_row) ? : ; T_IF ( T_STRING ( T_VARIABLE($current) [ ] , T_STRING ) ) { T_VARIABLE($tr_class) T_CONCAT_EQUAL ; } T_ECHO . T_VARIABLE($tr_class) . . ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_LIST ( T_VARIABLE($column_order) , T_VARIABLE($generated_html) ) = T_STRING ( T_VARIABLE($current) , T_VARIABLE($is_superuser) , T_VARIABLE($url_query) , T_VARIABLE($column_order) , T_VARIABLE($replication_types) , T_VARIABLE($replication_info) ) ; T_ECHO T_VARIABLE($generated_html) ; T_ECHO . ; } T_UNSET ( T_VARIABLE($current) , T_VARIABLE($odd_row) ) ; T_ECHO . ; T_IF ( T_VARIABLE($is_superuser) T_BOOLEAN_OR T_VARIABLE($cfg) [ ] ) { T_ECHO . ; } T_ECHO . T_STRING ( ) . . T_VARIABLE($databases_count) . . ; T_FOREACH ( T_VARIABLE($column_order) T_AS T_VARIABLE($stat_name) T_DOUBLE_ARROW T_VARIABLE($stat) ) { T_IF ( T_STRING ( T_VARIABLE($stat_name) , T_VARIABLE($first_database) ) ) { T_IF ( T_VARIABLE($stat) [ ] T_IS_IDENTICAL ) { T_LIST ( T_VARIABLE($value) , T_VARIABLE($unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($stat) [ ] , T_LNUMBER , T_LNUMBER ) ; } T_ELSEIF ( T_VARIABLE($stat) [ ] T_IS_IDENTICAL ) { T_VARIABLE($value) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($stat) [ ] , T_LNUMBER ) ; } T_ELSE { T_VARIABLE($value) = T_STRING ( T_VARIABLE($stat) [ ] , T_LNUMBER ) ; } T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($stat) [ ] ) ) { T_ECHO . T_VARIABLE($stat) [ ] ( T_VARIABLE($stat) [ ] ) . ; } T_ECHO T_VARIABLE($value) ; T_IF ( T_ISSET ( T_VARIABLE($stat) [ ] ) ) { T_ECHO ; } T_ECHO . ; T_IF ( T_VARIABLE($stat) [ ] T_IS_IDENTICAL ) { T_ECHO . T_VARIABLE($unit) . . ; } } } T_FOREACH ( T_VARIABLE($replication_types) T_AS T_VARIABLE($type) ) { T_IF ( $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ) { T_ECHO . ; } } T_IF ( T_VARIABLE($is_superuser) ) { T_ECHO . ; } T_ECHO . ; T_ECHO . . . ; T_UNSET ( T_VARIABLE($column_order) , T_VARIABLE($stat_name) , T_VARIABLE($stat) , T_VARIABLE($databases) , T_VARIABLE($table_columns) ) ; T_IF ( T_VARIABLE($is_superuser) T_BOOLEAN_OR T_VARIABLE($cfg) [ ] ) { T_VARIABLE($common_url_query) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($sort_by) , T_DOUBLE_ARROW T_VARIABLE($sort_order) , T_DOUBLE_ARROW T_VARIABLE($dbstats) ) ) ; T_ECHO . T_VARIABLE($pmaThemeImage) . . T_VARIABLE($text_dir) . . . T_STRING ( ) . . . . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( ) . . ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( , . , , T_STRING ( ) , ) ; } T_IF ( T_EMPTY ( T_VARIABLE($dbstats) ) ) { T_ECHO . ; T_ECHO . T_VARIABLE($url_query) . . . T_STRING ( ) . . . . T_STRING ( ) ; T_ECHO . ; T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_ECHO . . . ; } T_ECHO ; T_ECHO ; } T_ELSE { T_ECHO T_STRING ( ) ; } T_UNSET ( T_VARIABLE($databases_count) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE ; T_REQUIRE ; T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_ECHO . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( ) . . . ; T_ECHO . . . . . T_STRING ( ) . . . . T_STRING ( ) . . . . . . . . ; T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_STRING T_DOUBLE_COLON T_STRING ( ) T_AS T_VARIABLE($engine) T_DOUBLE_ARROW T_VARIABLE($details) ) { T_ECHO . ( T_VARIABLE($odd_row) ? : ) . ( T_VARIABLE($details) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($details) [ ] T_IS_EQUAL ? : ) . . . . T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($engine) ) ) . . . . T_STRING ( T_VARIABLE($details) [ ] ) . . . . . T_STRING ( T_VARIABLE($details) [ ] ) . . . . ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_UNSET ( T_VARIABLE($odd_row) , T_VARIABLE($engine) , T_VARIABLE($details) ) ; T_ECHO . . . ; } T_ELSE { T_VARIABLE($engine_plugin) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_ECHO . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( T_VARIABLE($engine_plugin) T_OBJECT_OPERATOR T_STRING ( ) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( , T_VARIABLE($engine_plugin) T_OBJECT_OPERATOR T_STRING ( ) ) . . . ; T_ECHO . . . . . T_STRING ( T_VARIABLE($engine_plugin) T_OBJECT_OPERATOR T_STRING ( ) ) . . . . . ; T_VARIABLE($infoPages) = T_VARIABLE($engine_plugin) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($infoPages) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($infoPages) ) ) { T_ECHO . . . ; T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_ECHO . T_STRING ( ) . . ; } T_ELSE { T_ECHO . T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($_REQUEST) [ ] ) ) . . T_STRING ( ) . . ; } T_FOREACH ( T_VARIABLE($infoPages) T_AS T_VARIABLE($current) T_DOUBLE_ARROW T_VARIABLE($label) ) { T_ECHO . ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_VARIABLE($current) ) { T_ECHO . T_VARIABLE($label) . . ; } T_ELSE { T_ECHO . T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($_REQUEST) [ ] , T_DOUBLE_ARROW T_VARIABLE($current) ) ) . . T_STRING ( T_VARIABLE($label) ) . . ; } } T_UNSET ( T_VARIABLE($current) , T_VARIABLE($label) ) ; T_ECHO . . . ; } T_UNSET ( T_VARIABLE($infoPages) , T_VARIABLE($page_output) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($page_output) = T_VARIABLE($engine_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($page_output) ) ) { T_ECHO T_VARIABLE($page_output) ; } T_ELSE { T_ECHO . T_VARIABLE($engine_plugin) T_OBJECT_OPERATOR T_STRING ( ) . . . . T_VARIABLE($engine_plugin) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE ; T_VARIABLE($export_page_title) = T_STRING ( ) . ; T_VARIABLE($multi_values) = ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL T_STRING ( ) . ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($_GET) [ ] = T_STRING ( T_VARIABLE($_GET) [ ] ) ; T_VARIABLE($_GET) [ ] = T_STRING ( , T_VARIABLE($_GET) [ ] ) ; } T_FOREACH ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($current_db) ) { T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($current_db) , T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($is_selected) = ; } T_ELSE { T_VARIABLE($is_selected) = ; } } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($selectall) ) T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($tmp_select) ) T_BOOLEAN_AND T_STRING ( . T_VARIABLE($tmp_select) , . T_VARIABLE($current_db) . ) ) ) { T_VARIABLE($is_selected) = ; } T_ELSE { T_VARIABLE($is_selected) = ; } T_VARIABLE($current_db) = T_STRING ( T_VARIABLE($current_db) ) ; T_VARIABLE($multi_values) T_CONCAT_EQUAL . T_VARIABLE($current_db) . . T_VARIABLE($is_selected) . . T_VARIABLE($current_db) . . ; } T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($multi_values) T_CONCAT_EQUAL ; T_VARIABLE($export_type) = ; T_REQUIRE_ONCE ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE ; T_VARIABLE($import_type) = ; T_REQUIRE ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE ; T_ECHO . . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( ) . . . ; T_VARIABLE($sql) = ; T_VARIABLE($res) = T_STRING ( T_VARIABLE($sql) ) ; T_VARIABLE($plugins) = T_ARRAY ( ) ; T_VARIABLE($modules) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($res) ) ) { T_VARIABLE($plugins) [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) ; T_VARIABLE($modules) [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) ; T_VARIABLE($modules) [ T_VARIABLE($row) [ ] ] [ ] [ T_VARIABLE($row) [ ] ] [ ] = T_VARIABLE($row) ; } T_STRING ( T_VARIABLE($res) ) ; T_STRING ( T_VARIABLE($plugins) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($plugins) T_AS T_VARIABLE($plugin_type) T_DOUBLE_ARROW T_VARIABLE($plugin_list) ) { T_VARIABLE($key) = . T_STRING ( , , T_STRING ( T_VARIABLE($plugin_type) ) ) ; T_ECHO . T_VARIABLE($key) . . T_STRING ( T_VARIABLE($plugin_type) ) . . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($plugins) T_AS T_VARIABLE($plugin_type) T_DOUBLE_ARROW T_VARIABLE($plugin_list) ) { T_VARIABLE($key) = . T_STRING ( , , T_STRING ( T_VARIABLE($plugin_type) ) ) ; T_STRING ( T_VARIABLE($plugin_list) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($key) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($plugin_type) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($plugin_list) T_AS T_VARIABLE($plugin) ) { T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($odd_row) ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($plugin) [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($plugin) [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($plugin) [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($plugin) [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($plugin) [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($plugin) [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($modules) T_AS T_VARIABLE($module_name) T_DOUBLE_ARROW T_VARIABLE($module) ) { T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($odd_row) ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($module_name) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($module) [ ] [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($module) [ ] [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($module) [ ] [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($module) [ ] [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($module) [ ] [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($odd_row) ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($module) [ ] T_AS T_VARIABLE($plugin_type) T_DOUBLE_ARROW T_VARIABLE($plugin_list) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($plugin_type) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($plugin_list) ) ; T_VARIABLE($i) T_INC ) { T_ECHO ( T_VARIABLE($i) T_IS_NOT_EQUAL T_LNUMBER ? : ) . T_STRING ( T_VARIABLE($plugin_list) [ T_VARIABLE($i) ] [ ] ) ; T_IF ( ! T_VARIABLE($plugin_list) [ T_VARIABLE($i) ] [ ] ) { T_ECHO . T_STRING ( ) . ; } } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($_add_user_error) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($username) = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($hostname) = T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($post_patterns) = T_ARRAY ( , ) ; T_FOREACH ( T_STRING ( T_VARIABLE($_POST) ) T_AS T_VARIABLE($post_key) ) { T_FOREACH ( T_VARIABLE($post_patterns) T_AS T_VARIABLE($one_post_pattern) ) { T_IF ( T_STRING ( T_VARIABLE($one_post_pattern) , T_VARIABLE($post_key) ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($post_key) ] = T_VARIABLE($_POST) [ T_VARIABLE($post_key) ] ; } } } T_REQUIRE ; T_VARIABLE($conditional_class) = ; T_VARIABLE($strPrivDescAllPrivileges) = T_STRING ( ) ; T_VARIABLE($strPrivDescAlter) = T_STRING ( ) ; T_VARIABLE($strPrivDescAlterRoutine) = T_STRING ( ) ; T_VARIABLE($strPrivDescCreateDb) = T_STRING ( ) ; T_VARIABLE($strPrivDescCreateRoutine) = T_STRING ( ) ; T_VARIABLE($strPrivDescCreateTbl) = T_STRING ( ) ; T_VARIABLE($strPrivDescCreateTmpTable) = T_STRING ( ) ; T_VARIABLE($strPrivDescCreateUser) = T_STRING ( ) ; T_VARIABLE($strPrivDescCreateView) = T_STRING ( ) ; T_VARIABLE($strPrivDescDelete) = T_STRING ( ) ; T_VARIABLE($strPrivDescDropDb) = T_STRING ( ) ; T_VARIABLE($strPrivDescDropTbl) = T_STRING ( ) ; T_VARIABLE($strPrivDescEvent) = T_STRING ( ) ; T_VARIABLE($strPrivDescExecute) = T_STRING ( ) ; T_VARIABLE($strPrivDescFile) = T_STRING ( ) ; T_VARIABLE($strPrivDescGrant) = T_STRING ( ) ; T_VARIABLE($strPrivDescIndex) = T_STRING ( ) ; T_VARIABLE($strPrivDescInsert) = T_STRING ( ) ; T_VARIABLE($strPrivDescLockTables) = T_STRING ( ) ; T_VARIABLE($strPrivDescMaxConnections) = T_STRING ( ) ; T_VARIABLE($strPrivDescMaxQuestions) = T_STRING ( ) ; T_VARIABLE($strPrivDescMaxUpdates) = T_STRING ( ) ; T_VARIABLE($strPrivDescMaxUserConnections) = T_STRING ( ) ; T_VARIABLE($strPrivDescProcess) = T_STRING ( ) ; T_VARIABLE($strPrivDescReferences) = T_STRING ( ) ; T_VARIABLE($strPrivDescReload) = T_STRING ( ) ; T_VARIABLE($strPrivDescReplClient) = T_STRING ( ) ; T_VARIABLE($strPrivDescReplSlave) = T_STRING ( ) ; T_VARIABLE($strPrivDescSelect) = T_STRING ( ) ; T_VARIABLE($strPrivDescShowDb) = T_STRING ( ) ; T_VARIABLE($strPrivDescShowView) = T_STRING ( ) ; T_VARIABLE($strPrivDescShutdown) = T_STRING ( ) ; T_VARIABLE($strPrivDescSuper) = T_STRING ( ) ; T_VARIABLE($strPrivDescTrigger) = T_STRING ( ) ; T_VARIABLE($strPrivDescUpdate) = T_STRING ( ) ; T_VARIABLE($strPrivDescUsage) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($tablename) = T_VARIABLE($_REQUEST) [ ] ; } T_ELSEIF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($tablename) = T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_UNSET ( T_VARIABLE($tablename) ) ; } T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($dbname) = T_VARIABLE($_REQUEST) [ ] ; T_UNSET ( T_VARIABLE($pred_dbname) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($dbname) = T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_UNSET ( T_VARIABLE($dbname) ) ; T_UNSET ( T_VARIABLE($tablename) ) ; } T_IF ( T_ISSET ( T_VARIABLE($dbname) ) ) { T_VARIABLE($unescaped_db) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($dbname) ) ; T_VARIABLE($db_and_table) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($unescaped_db) ) . ; T_IF ( T_ISSET ( T_VARIABLE($tablename) ) ) { T_VARIABLE($db_and_table) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tablename) ) ; } T_ELSE { T_VARIABLE($db_and_table) T_CONCAT_EQUAL ; } } T_ELSE { T_VARIABLE($db_and_table) = ; } T_IF ( T_ISSET ( T_VARIABLE($dbname) ) ) { T_IF ( T_STRING ( , T_VARIABLE($dbname) ) ) { T_VARIABLE($dbname_is_wildcard) = T_STRING ; } T_ELSE { T_VARIABLE($dbname_is_wildcard) = T_STRING ; } } T_IF ( ! T_VARIABLE($is_superuser) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( . . T_STRING T_DOUBLE_COLON T_STRING ( ) . T_STRING ( ) . . . ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_EXIT ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($user_host_condition) = . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_VARIABLE($row) = T_STRING ( . T_VARIABLE($user_host_condition) ) ; T_IF ( ! T_VARIABLE($row) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSE { T_STRING ( T_VARIABLE($row) , T_STRING ) ; T_IF ( ! T_ISSET ( T_VARIABLE($password) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($Password) ) ) { T_VARIABLE($password) = T_VARIABLE($Password) ; } T_VARIABLE($queries) = T_ARRAY ( ) ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sql_query) = ; T_IF ( T_VARIABLE($_POST) [ ] T_IS_EQUAL ) { T_VARIABLE($username) = ; } T_SWITCH ( T_VARIABLE($_POST) [ ] ) { T_CASE : T_VARIABLE($hostname) = ; T_BREAK ; T_CASE : T_VARIABLE($hostname) = ; T_BREAK ; T_CASE : T_VARIABLE($hostname) = ; T_BREAK ; T_CASE : T_VARIABLE($_user_name) = T_STRING ( ) ; T_VARIABLE($hostname) = T_STRING ( T_VARIABLE($_user_name) , ( T_STRING ( T_VARIABLE($_user_name) , ) + T_LNUMBER ) ) ; T_UNSET ( T_VARIABLE($_user_name) ) ; T_BREAK ; } T_VARIABLE($sql) = . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($username) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($hostname) ) . ; T_IF ( T_STRING ( T_VARIABLE($sql) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($username) . . T_VARIABLE($hostname) . ) ; T_VARIABLE($_REQUEST) [ ] = T_STRING ; T_VARIABLE($_add_user_error) = T_STRING ; } T_ELSE { T_LIST ( T_VARIABLE($create_user_real) , T_VARIABLE($create_user_show) , T_VARIABLE($real_sql_query) , T_VARIABLE($sql_query) ) = T_STRING ( T_VARIABLE($username) , T_VARIABLE($hostname) , ( T_ISSET ( T_VARIABLE($password) ) ? T_VARIABLE($password) : ) ) ; T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_error) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($create_user_real) ) ) { T_IF ( ! T_STRING ( T_VARIABLE($create_user_real) ) ) { T_VARIABLE($_error) = T_STRING ; } T_VARIABLE($sql_query) = T_VARIABLE($create_user_show) . T_VARIABLE($sql_query) ; } T_LIST ( T_VARIABLE($sql_query) , T_VARIABLE($message) ) = T_STRING ( T_VARIABLE($_error) , T_VARIABLE($real_sql_query) , T_VARIABLE($sql_query) , T_VARIABLE($username) , T_VARIABLE($hostname) , T_ISSET ( T_VARIABLE($dbname) ) ? T_VARIABLE($dbname) : T_STRING ) ; } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($create_user_real) ) ) { T_VARIABLE($queries) [ ] = T_VARIABLE($create_user_real) ; } T_VARIABLE($queries) [ ] = T_VARIABLE($real_sql_query) ; T_VARIABLE($tmp_count) = T_STRING ( T_VARIABLE($queries) ) ; T_IF ( T_ISSET ( T_VARIABLE($create_user_real) ) ) { T_VARIABLE($queries_for_display) [ T_VARIABLE($tmp_count) - T_LNUMBER ] = T_VARIABLE($create_user_show) ; } T_VARIABLE($queries_for_display) [ T_VARIABLE($tmp_count) - T_LNUMBER ] = T_VARIABLE($sql_query) ; } T_UNSET ( T_VARIABLE($res) , T_VARIABLE($real_sql_query) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($queries) = T_STRING ( T_VARIABLE($queries) , T_VARIABLE($username) , T_VARIABLE($hostname) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_POST) [ ] ) ) { T_LIST ( T_VARIABLE($sql_query) , T_VARIABLE($message) ) = T_STRING ( T_VARIABLE($username) , T_VARIABLE($hostname) , ( T_ISSET ( T_VARIABLE($tablename) ) ? T_VARIABLE($tablename) : ) , ( T_ISSET ( T_VARIABLE($dbname) ) ? T_VARIABLE($dbname) : ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_LIST ( T_VARIABLE($message) , T_VARIABLE($sql_query) ) = T_STRING ( T_VARIABLE($db_and_table) , ( T_ISSET ( T_VARIABLE($dbname) ) ? T_VARIABLE($dbname) : ) , ( T_ISSET ( T_VARIABLE($tablename) ) ? T_VARIABLE($tablename) : ) , T_VARIABLE($username) , T_VARIABLE($hostname) ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($message) = T_STRING ( T_VARIABLE($err_url) , T_VARIABLE($username) , T_VARIABLE($hostname) ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] < T_LNUMBER ) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($selected_usr) = T_ARRAY ( T_VARIABLE($_REQUEST) [ ] . . T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSE { T_VARIABLE($selected_usr) = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($queries) = T_ARRAY ( ) ; } T_FOREACH ( T_VARIABLE($selected_usr) T_AS T_VARIABLE($each_user) ) { T_LIST ( T_VARIABLE($this_user) , T_VARIABLE($this_host) ) = T_STRING ( , T_VARIABLE($each_user) ) ; T_VARIABLE($queries) [ ] = . T_STRING ( T_STRING ( ) , . T_VARIABLE($this_user) . . T_VARIABLE($this_host) . ) . ; T_VARIABLE($queries) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this_user) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this_host) ) . ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($queries) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($this_user) ) . ; T_VARIABLE($GLOBALS) [ ] = T_STRING ; } } T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_LIST ( T_VARIABLE($sql_query) , T_VARIABLE($message) ) = T_STRING ( T_VARIABLE($queries) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($tmp_count) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($queries) T_AS T_VARIABLE($sql_query) ) { T_IF ( T_VARIABLE($sql_query) { T_LNUMBER } T_IS_NOT_EQUAL ) { T_STRING ( T_VARIABLE($sql_query) ) ; } T_IF ( T_ISSET ( T_VARIABLE($queries_for_display) [ T_VARIABLE($tmp_count) ] ) ) { T_VARIABLE($queries) [ T_VARIABLE($tmp_count) ] = T_VARIABLE($queries_for_display) [ T_VARIABLE($tmp_count) ] ; } T_VARIABLE($tmp_count) T_INC ; } T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($sql_query) = T_STRING ( , T_VARIABLE($queries) ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sql_query) = ; T_STRING ( T_VARIABLE($sql_query) ) ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_LIST ( T_VARIABLE($link_edit) , T_VARIABLE($link_revoke) , T_VARIABLE($link_export) ) = T_STRING ( T_VARIABLE($conditional_class) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_VARIABLE($_REQUEST) [ ] T_IS_NOT_EQUAL ) T_BOOLEAN_AND ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_VARIABLE($_add_user_error) ) T_BOOLEAN_AND ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($extra_data) = T_STRING ( ( T_ISSET ( T_VARIABLE($password) ) ? T_VARIABLE($password) : ) , T_VARIABLE($link_export) , ( T_ISSET ( T_VARIABLE($sql_query) ) ? T_VARIABLE($sql_query) : ) , T_VARIABLE($link_edit) , ( T_ISSET ( T_VARIABLE($hostname) ) ? T_VARIABLE($hostname) : ) , ( T_ISSET ( T_VARIABLE($username) ) ? T_VARIABLE($username) : ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($message) ) T_BOOLEAN_AND T_VARIABLE($message) T_INSTANCEOF T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($extra_data) ) ; T_EXIT ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_VARIABLE($sub_part) = ; T_STRING ( ) ; T_INCLUDE ; T_VARIABLE($content) = T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($content) . ) ; } T_ELSE { T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) ; T_UNSET ( T_VARIABLE($GLOBALS) [ ] ) ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) ) { T_LIST ( T_VARIABLE($title) , T_VARIABLE($export) ) = T_STRING ( T_ISSET ( T_VARIABLE($username) ) ? T_VARIABLE($username) : T_STRING , T_ISSET ( T_VARIABLE($hostname) ) ? T_VARIABLE($hostname) : T_STRING ) ; T_UNSET ( T_VARIABLE($username) , T_VARIABLE($hostname) , T_VARIABLE($grants) , T_VARIABLE($one_grant) ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($export) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($title) ) ; T_EXIT ; } T_ELSE { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($title) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($export) ) ; } } T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($username) ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($link_edit) , T_VARIABLE($pmaThemeImage) , T_VARIABLE($text_dir) , T_VARIABLE($conditional_class) , T_VARIABLE($link_export) ) ) ; } T_ELSE { T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_STRING ( ) ; } T_VARIABLE($url_dbname) = T_STRING ( T_STRING ( T_ARRAY ( , ) , T_ARRAY ( , ) , T_VARIABLE($_REQUEST) [ ] ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ( ( T_ISSET ( T_VARIABLE($dbname_is_wildcard) ) ) ? T_VARIABLE($dbname_is_wildcard) : ) , T_VARIABLE($url_dbname) , T_VARIABLE($username) , T_VARIABLE($hostname) , T_VARIABLE($link_edit) , T_VARIABLE($link_revoke) , ( T_ISSET ( T_VARIABLE($unescaped_db) ) ? T_VARIABLE($unescaped_db) : ) , ( T_ISSET ( T_VARIABLE($tablename) ) ? T_VARIABLE($tablename) : ) ) ) ; } } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ( T_ISSET ( T_VARIABLE($dbname) ) ? T_VARIABLE($dbname) : ) ) ) ; } T_ELSE { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($link_edit) , T_VARIABLE($conditional_class) ) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE ; T_REQUIRE ; T_REQUIRE ; T_IF ( ! T_VARIABLE($is_superuser) ) { T_ECHO . . T_STRING T_DOUBLE_COLON T_STRING ( ) . T_STRING ( ) . . . ; T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_EXIT ; } T_VARIABLE($request_params) = T_ARRAY ( , , , , , , , , , , , , , , , , ) ; T_FOREACH ( T_VARIABLE($request_params) T_AS T_VARIABLE($one_request_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ T_VARIABLE($one_request_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_request_param) ] = T_VARIABLE($_REQUEST) [ T_VARIABLE($one_request_param) ] ; } } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($refresh) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($sr) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($sr) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($sr) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($sr) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($_SESSION) [ ] [ ] = ; T_VARIABLE($_SESSION) [ ] [ ] = ; T_VARIABLE($_SESSION) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($link_to_master) = T_STRING ( T_VARIABLE($sr) [ ] , T_VARIABLE($sr) [ ] , T_VARIABLE($sr) [ ] , T_VARIABLE($sr) [ ] ) ; T_IF ( ! T_VARIABLE($link_to_master) ) { T_VARIABLE($_SESSION) [ ] [ ] = ; T_VARIABLE($_SESSION) [ ] [ ] = T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($sr) [ ] ) ) ; } T_ELSE { T_VARIABLE($position) = T_STRING ( T_VARIABLE($link_to_master) ) ; T_IF ( T_EMPTY ( T_VARIABLE($position) ) ) { T_VARIABLE($_SESSION) [ ] [ ] = ; T_VARIABLE($_SESSION) [ ] [ ] = T_STRING ( ) ; } T_ELSE { T_VARIABLE($_SESSION) [ ] [ ] = T_STRING ; T_IF ( ! T_STRING ( T_VARIABLE($sr) [ ] , T_VARIABLE($sr) [ ] , T_VARIABLE($sr) [ ] , T_VARIABLE($sr) [ ] , T_VARIABLE($position) , T_STRING , T_STRING ) ) { T_VARIABLE($_SESSION) [ ] [ ] = ; T_VARIABLE($_SESSION) [ ] [ ] = T_STRING ( ) ; } T_ELSE { T_VARIABLE($_SESSION) [ ] [ ] = ; T_VARIABLE($_SESSION) [ ] [ ] = T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($sr) [ ] ) ) ; } } } } T_ELSEIF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) { T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; } T_ELSE { T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; } T_VARIABLE($refresh) = T_STRING ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($count) = T_LNUMBER ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($count) = T_VARIABLE($GLOBALS) [ ] * T_LNUMBER ; } T_STRING ( ) ; T_STRING ( . T_VARIABLE($count) . ) ; T_STRING ( ) ; } T_IF ( T_VARIABLE($refresh) ) { T_STRING ( . T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) ; } T_UNSET ( T_VARIABLE($refresh) ) ; } T_ECHO ; T_ECHO ; T_ECHO . T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_ECHO T_STRING ( ) ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_IF ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_SESSION) [ ] [ ] ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($_SESSION) [ ] [ ] = ; } T_ELSEIF ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL ) { T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_SESSION) [ ] [ ] ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($_SESSION) [ ] [ ] = ; } } T_IF ( T_VARIABLE($server_master_status) ) { T_IF ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO T_STRING ( ) ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_STRING ( , T_STRING , T_STRING ) ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_STRING ( T_STRING ) ; T_ECHO ; T_VARIABLE($_url_params) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($_url_params) [ ] = T_STRING ; T_VARIABLE($_url_params) [ ] = T_STRING ; T_ECHO . T_STRING ( T_VARIABLE($_url_params) ) . ; T_ECHO T_STRING ( ) . ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_STRING ( ) ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_ECHO ; T_ECHO ; } } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($_url_params) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($_url_params) [ ] = T_STRING ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO T_STRING ( T_STRING ( ) , . T_STRING ( T_VARIABLE($_url_params) ) ) ; T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO T_STRING ( ) . ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( ) . ; T_ECHO T_STRING ( ) ; T_ECHO ; T_ECHO T_STRING ( ) . ; T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( , ) ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_EXIT ; } T_ECHO ; T_IF ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_ECHO ; T_ECHO . T_STRING ( ) . ; T_IF ( T_VARIABLE($server_slave_status) ) { T_ECHO ; T_VARIABLE($_url_params) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($_url_params) [ ] = T_STRING ; T_VARIABLE($_url_params) [ ] = T_STRING ; T_IF ( T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] T_IS_EQUAL ) { T_VARIABLE($_url_params) [ ] = ; } T_ELSE { T_VARIABLE($_url_params) [ ] = ; } T_VARIABLE($_url_params) [ ] = ; T_VARIABLE($slave_control_io_link) = . T_STRING ( T_VARIABLE($_url_params) ) ; T_IF ( T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] T_IS_EQUAL ) { T_VARIABLE($_url_params) [ ] = ; } T_ELSE { T_VARIABLE($_url_params) [ ] = ; } T_VARIABLE($_url_params) [ ] = ; T_VARIABLE($slave_control_sql_link) = . T_STRING ( T_VARIABLE($_url_params) ) ; T_IF ( T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] T_IS_EQUAL ) { T_VARIABLE($_url_params) [ ] = ; } T_ELSE { T_VARIABLE($_url_params) [ ] = ; } T_VARIABLE($_url_params) [ ] = T_STRING ; T_VARIABLE($slave_control_full_link) = . T_STRING ( T_VARIABLE($_url_params) ) ; T_VARIABLE($_url_params) [ ] = ; T_VARIABLE($slave_control_reset_link) = . T_STRING ( T_VARIABLE($_url_params) ) ; T_VARIABLE($_url_params) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($_url_params) [ ] = T_STRING ; T_VARIABLE($slave_skip_error_link) = . T_STRING ( T_VARIABLE($_url_params) ) ; T_IF ( T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] T_IS_EQUAL ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] T_IS_EQUAL ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($_url_params) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($_url_params) [ ] = T_STRING ; T_VARIABLE($_url_params) [ ] = T_STRING ; T_VARIABLE($reconfiguremaster_link) = . T_STRING ( T_VARIABLE($_url_params) ) ; T_ECHO T_STRING ( ) ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO T_STRING ( , T_STRING , T_STRING ) ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO . T_VARIABLE($slave_control_full_link) . . ( ( T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] T_IS_EQUAL ) ? T_STRING ( ) : T_STRING ( ) ) . ; T_ECHO . T_VARIABLE($slave_control_reset_link) . . T_STRING ( ) . ; T_IF ( T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] T_IS_EQUAL ) { T_ECHO . T_VARIABLE($slave_control_sql_link) . . T_STRING ( ) . ; } T_ELSE { T_ECHO . T_VARIABLE($slave_control_sql_link) . . T_STRING ( ) . ; } T_IF ( T_VARIABLE($server_slave_replication) [ T_LNUMBER ] [ ] T_IS_EQUAL ) { T_ECHO . T_VARIABLE($slave_control_io_link) . . T_STRING ( ) . ; } T_ELSE { T_ECHO . T_VARIABLE($slave_control_io_link) . . T_STRING ( ) . ; } T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_ECHO ; T_ECHO . T_VARIABLE($slave_skip_error_link) . . T_STRING ( ) . ; T_ECHO . T_STRING ( ) ; T_ECHO ; T_ECHO T_STRING ( , ) ; T_ECHO . T_STRING ( ) ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_VARIABLE($reconfiguremaster_link) . . T_STRING ( ) . ; T_ECHO ; T_ECHO ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($_url_params) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($_url_params) [ ] = T_STRING ; T_VARIABLE($_url_params) [ ] = T_STRING ; T_ECHO T_STRING ( T_STRING ( ) , . T_STRING ( T_VARIABLE($_url_params) ) ) ; } T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_STRING ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING ( ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_IF ( T_STRING ) { T_VARIABLE($server_master_status) = T_STRING ; T_VARIABLE($server_slave_status) = T_STRING ; } T_ELSE { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; } T_VARIABLE($ServerStatusData) = T_NEW T_STRING ( ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( . ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( . . ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( . . . ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( . . ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($advisor) = T_NEW T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_VARIABLE($advisor) T_OBJECT_OPERATOR T_STRING ( ) ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($output) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_IF ( T_STRING ) { T_VARIABLE($server_master_status) = T_STRING ; T_VARIABLE($server_slave_status) = T_STRING ; } T_ELSE { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_SWITCH ( T_VARIABLE($_REQUEST) [ ] ) { T_CASE : T_VARIABLE($ret) = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_STRING ) ; T_VARIABLE($statusVars) = T_ARRAY ( ) ; T_VARIABLE($serverVars) = T_ARRAY ( ) ; T_VARIABLE($sysinfo) = T_VARIABLE($cpuload) = T_VARIABLE($memory) = T_LNUMBER ; T_VARIABLE($pName) = ; T_FOREACH ( T_VARIABLE($ret) T_AS T_VARIABLE($chart_id) T_DOUBLE_ARROW T_VARIABLE($chartNodes) ) { T_FOREACH ( T_VARIABLE($chartNodes) T_AS T_VARIABLE($node_id) T_DOUBLE_ARROW T_VARIABLE($nodeDataPoints) ) { T_FOREACH ( T_VARIABLE($nodeDataPoints) T_AS T_VARIABLE($point_id) T_DOUBLE_ARROW T_VARIABLE($dataPoint) ) { T_VARIABLE($pName) = T_VARIABLE($dataPoint) [ ] ; T_SWITCH ( T_VARIABLE($dataPoint) [ ] ) { T_CASE : T_IF ( ! T_STRING ( , T_VARIABLE($pName) ) ) { T_VARIABLE($serverVars) [ ] = T_VARIABLE($pName) ; } T_BREAK ; T_CASE : T_IF ( ! T_STRING ( , T_VARIABLE($pName) ) ) { T_VARIABLE($statusVars) [ ] = T_VARIABLE($pName) ; } T_BREAK ; T_CASE : T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($ret) [ T_VARIABLE($chart_id) ] [ T_VARIABLE($node_id) ] [ T_VARIABLE($point_id) ] [ ] = T_STRING ( T_VARIABLE($result) ) ; T_BREAK ; T_CASE : T_IF ( ! T_VARIABLE($sysinfo) ) { T_INCLUDE_ONCE ; T_VARIABLE($sysinfo) = T_STRING ( ) ; } T_IF ( ! T_VARIABLE($cpuload) ) { T_VARIABLE($cpuload) = T_VARIABLE($sysinfo) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_STRING ( ) T_IS_EQUAL ) { T_VARIABLE($ret) [ T_VARIABLE($chart_id) ] [ T_VARIABLE($node_id) ] [ T_VARIABLE($point_id) ] [ ] = T_VARIABLE($cpuload) [ ] ; T_VARIABLE($ret) [ T_VARIABLE($chart_id) ] [ T_VARIABLE($node_id) ] [ T_VARIABLE($point_id) ] [ ] = T_VARIABLE($cpuload) [ ] ; } T_ELSE { T_VARIABLE($ret) [ T_VARIABLE($chart_id) ] [ T_VARIABLE($node_id) ] [ T_VARIABLE($point_id) ] [ ] = T_VARIABLE($cpuload) [ ] ; } T_BREAK ; T_CASE : T_IF ( ! T_VARIABLE($sysinfo) ) { T_INCLUDE_ONCE ; T_VARIABLE($sysinfo) = T_STRING ( ) ; } T_IF ( ! T_VARIABLE($memory) ) { T_VARIABLE($memory) = T_VARIABLE($sysinfo) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($ret) [ T_VARIABLE($chart_id) ] [ T_VARIABLE($node_id) ] [ T_VARIABLE($point_id) ] [ ] = T_VARIABLE($memory) [ T_VARIABLE($pName) ] ; T_BREAK ; } } } } T_IF ( T_STRING ( T_VARIABLE($statusVars) ) ) { T_VARIABLE($statusVarValues) = T_STRING ( . T_STRING ( , T_VARIABLE($statusVars) ) . , T_LNUMBER , T_LNUMBER ) ; } T_ELSE { T_VARIABLE($statusVarValues) = T_ARRAY ( ) ; } T_IF ( T_STRING ( T_VARIABLE($serverVars) ) ) { T_VARIABLE($serverVarValues) = T_STRING ( . T_STRING ( , T_VARIABLE($serverVars) ) . , T_LNUMBER , T_LNUMBER ) ; } T_ELSE { T_VARIABLE($serverVarValues) = T_ARRAY ( ) ; } T_FOREACH ( T_VARIABLE($ret) T_AS T_VARIABLE($chart_id) T_DOUBLE_ARROW T_VARIABLE($chartNodes) ) { T_FOREACH ( T_VARIABLE($chartNodes) T_AS T_VARIABLE($node_id) T_DOUBLE_ARROW T_VARIABLE($nodeDataPoints) ) { T_FOREACH ( T_VARIABLE($nodeDataPoints) T_AS T_VARIABLE($point_id) T_DOUBLE_ARROW T_VARIABLE($dataPoint) ) { T_SWITCH ( T_VARIABLE($dataPoint) [ ] ) { T_CASE : T_VARIABLE($ret) [ T_VARIABLE($chart_id) ] [ T_VARIABLE($node_id) ] [ T_VARIABLE($point_id) ] [ ] = T_VARIABLE($statusVarValues) [ T_VARIABLE($dataPoint) [ ] ] ; T_BREAK ; T_CASE : T_VARIABLE($ret) [ T_VARIABLE($chart_id) ] [ T_VARIABLE($node_id) ] [ T_VARIABLE($point_id) ] [ ] = T_VARIABLE($serverVarValues) [ T_VARIABLE($dataPoint) [ ] ] ; T_BREAK ; } } } } T_VARIABLE($ret) [ ] = T_STRING ( T_STRING ) * T_LNUMBER ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($ret) ) ; T_EXIT ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_STRING < T_LNUMBER ) { T_EXIT ( ) ; } T_VARIABLE($start) = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($end) = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($q) = ; T_VARIABLE($q) T_CONCAT_EQUAL ; T_VARIABLE($q) T_CONCAT_EQUAL ; T_VARIABLE($q) T_CONCAT_EQUAL ; T_VARIABLE($q) T_CONCAT_EQUAL ; T_VARIABLE($q) T_CONCAT_EQUAL ; T_VARIABLE($q) T_CONCAT_EQUAL ; T_VARIABLE($q) T_CONCAT_EQUAL . T_VARIABLE($start) . ; T_VARIABLE($q) T_CONCAT_EQUAL . T_VARIABLE($end) . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($q) ) ; T_VARIABLE($return) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($type) = ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($type) = T_STRING ( T_STRING ( T_VARIABLE($row) [ ] , T_LNUMBER , T_STRING ( T_VARIABLE($row) [ ] , ) ) ) ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_CASE : T_IF ( T_STRING ( T_VARIABLE($row) [ ] ) > T_LNUMBER ) { T_VARIABLE($implode_sql_text) = T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($row) [ ] ) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($row) [ ] , T_LNUMBER , T_LNUMBER ) . . T_VARIABLE($implode_sql_text) . ; } T_BREAK ; T_DEFAULT : T_BREAK ; } T_IF ( ! T_ISSET ( T_VARIABLE($return) [ ] [ T_VARIABLE($type) ] ) ) { T_VARIABLE($return) [ ] [ T_VARIABLE($type) ] = T_LNUMBER ; } T_VARIABLE($return) [ ] [ T_VARIABLE($type) ] T_PLUS_EQUAL T_VARIABLE($row) [ ] ; T_VARIABLE($return) [ ] [ ] = T_VARIABLE($row) ; } T_VARIABLE($return) [ ] [ ] = T_STRING ( T_VARIABLE($return) [ ] ) ; T_VARIABLE($return) [ ] = T_STRING ( T_VARIABLE($return) [ ] ) ; T_STRING ( T_VARIABLE($result) ) ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($return) ) ; T_EXIT ; } T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($limitTypes) = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] ) { T_VARIABLE($limitTypes) = ; } T_VARIABLE($q) = ; T_VARIABLE($q) T_CONCAT_EQUAL ; T_VARIABLE($q) T_CONCAT_EQUAL ; T_VARIABLE($q) T_CONCAT_EQUAL ; T_VARIABLE($q) T_CONCAT_EQUAL . T_VARIABLE($start) . ; T_VARIABLE($q) T_CONCAT_EQUAL . T_VARIABLE($end) . ; T_VARIABLE($q) T_CONCAT_EQUAL T_VARIABLE($limitTypes) . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($q) ) ; T_VARIABLE($return) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($type) = ; T_VARIABLE($insertTables) = T_ARRAY ( ) ; T_VARIABLE($insertTablesFirst) = - T_LNUMBER ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($removeVars) = T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( , T_VARIABLE($row) [ ] , T_VARIABLE($match) ) ; T_VARIABLE($type) = T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ; T_IF ( ! T_ISSET ( T_VARIABLE($return) [ ] [ T_VARIABLE($type) ] ) ) { T_VARIABLE($return) [ ] [ T_VARIABLE($type) ] = T_LNUMBER ; } T_VARIABLE($return) [ ] [ T_VARIABLE($type) ] T_PLUS_EQUAL T_VARIABLE($row) [ ] ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_IF ( T_VARIABLE($removeVars) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($row) [ ] , T_VARIABLE($matches) ) ) { T_VARIABLE($insertTables) [ T_VARIABLE($matches) [ T_LNUMBER ] ] T_INC ; T_IF ( T_VARIABLE($insertTables) [ T_VARIABLE($matches) [ T_LNUMBER ] ] > T_LNUMBER ) { T_VARIABLE($return) [ ] [ T_VARIABLE($insertTablesFirst) ] [ ] = T_VARIABLE($insertTables) [ T_VARIABLE($matches) [ T_LNUMBER ] ] ; T_VARIABLE($temp) = T_VARIABLE($return) [ ] [ T_VARIABLE($insertTablesFirst) ] [ ] ; T_IF ( T_VARIABLE($temp) [ T_STRING ( T_VARIABLE($temp) ) - T_LNUMBER ] T_IS_NOT_EQUAL ) { T_VARIABLE($return) [ ] [ T_VARIABLE($insertTablesFirst) ] [ ] T_CONCAT_EQUAL ; } T_CONTINUE T_LNUMBER ; } T_ELSE { T_VARIABLE($insertTablesFirst) = T_VARIABLE($i) ; T_VARIABLE($insertTables) [ T_VARIABLE($matches) [ T_LNUMBER ] ] T_PLUS_EQUAL T_VARIABLE($row) [ ] - T_LNUMBER ; } } T_CASE : T_IF ( T_STRING ( T_VARIABLE($row) [ ] ) > T_LNUMBER ) { T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($row) [ ] , T_LNUMBER , T_LNUMBER ) . . T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($row) [ ] ) ) , T_LNUMBER , T_LNUMBER ) . ; } T_BREAK ; T_DEFAULT : T_BREAK ; } T_VARIABLE($return) [ ] [ ] = T_VARIABLE($row) ; T_VARIABLE($i) T_INC ; } T_VARIABLE($return) [ ] [ ] = T_STRING ( T_VARIABLE($return) [ ] ) ; T_VARIABLE($return) [ ] = T_STRING ( T_VARIABLE($return) [ ] ) ; T_STRING ( T_VARIABLE($result) ) ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($return) ) ; T_EXIT ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($value) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_IF ( ! T_STRING ( T_VARIABLE($value) ) ) { T_VARIABLE($value) = . T_VARIABLE($value) . ; } T_IF ( ! T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) ) { T_STRING ( . T_VARIABLE($_REQUEST) [ ] . . T_VARIABLE($value) ) ; } } T_VARIABLE($loggingVars) = T_STRING ( . , T_LNUMBER , T_LNUMBER ) ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($loggingVars) ) ; T_EXIT ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($return) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_IF ( T_VARIABLE($profiling) = T_STRING T_DOUBLE_COLON T_STRING ( ) ) { T_STRING ( ) ; } T_VARIABLE($query) = T_STRING ( , , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($query) ) ; T_VARIABLE($return) [ ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($result) = T_STRING ( . T_VARIABLE($query) ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($return) [ ] [ ] = T_VARIABLE($row) ; } T_VARIABLE($return) [ ] = T_STRING ( ) ; T_STRING ( T_VARIABLE($result) ) ; T_IF ( T_VARIABLE($profiling) ) { T_VARIABLE($return) [ ] = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( . ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($return) [ ] [ ] = T_VARIABLE($row) ; } T_STRING ( T_VARIABLE($result) ) ; } T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($return) ) ; T_EXIT ; } } T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING T_IS_EQUAL T_BOOLEAN_AND T_STRING < T_LNUMBER ) { T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($ServerStatusData) = T_NEW T_STRING ( ) ; T_VARIABLE($input) = ; T_VARIABLE($form) = ; T_VARIABLE($form) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($input) , , T_STRING ( T_STRING ) * T_LNUMBER ) ; T_VARIABLE($form) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($input) , , T_STRING ) ; T_VARIABLE($form) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($input) , , T_STRING ( ) ) ; T_VARIABLE($form) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($input) , , T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) T_CONCAT_EQUAL ; T_VARIABLE($links) = ; T_VARIABLE($links) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($links) T_CONCAT_EQUAL ; T_VARIABLE($links) T_CONCAT_EQUAL ; T_VARIABLE($links) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_VARIABLE($links) T_CONCAT_EQUAL ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($ServerStatusData) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($form) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($links) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_EXIT ; T_FUNCTION(getPrintMonitorHtml) ( T_VARIABLE($ServerStatusData) ) { T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) . T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) . T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( ! T_STRING ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) . T_STRING ( ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) . T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) . T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_LNUMBER , T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( . . . . . ) ; T_IF ( T_STRING < T_LNUMBER ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( . . . ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($GLOBALS) [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( . . ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( . . . . ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( . . . . ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( ! T_STRING ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_IF ( T_VARIABLE($i) T_INC > T_LNUMBER ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($name) . ; } } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(PMA_getRefreshList) ( T_VARIABLE($name) , T_VARIABLE($defaultRate) = T_LNUMBER , T_VARIABLE($refreshRates) = T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) { T_VARIABLE($return) = . T_VARIABLE($name) . . T_VARIABLE($name) . ; T_FOREACH ( T_VARIABLE($refreshRates) T_AS T_VARIABLE($rate) ) { T_VARIABLE($selected) = ( T_VARIABLE($rate) T_IS_EQUAL T_VARIABLE($defaultRate) ) ? : ; T_VARIABLE($return) T_CONCAT_EQUAL . T_VARIABLE($rate) . . T_VARIABLE($selected) . ; T_IF ( T_VARIABLE($rate) < T_LNUMBER ) { T_VARIABLE($return) T_CONCAT_EQUAL T_STRING ( T_STRING ( , , T_VARIABLE($rate) ) , T_VARIABLE($rate) ) ; } T_ELSE { T_VARIABLE($rate) = T_VARIABLE($rate) / T_LNUMBER ; T_VARIABLE($return) T_CONCAT_EQUAL T_STRING ( T_STRING ( , , T_VARIABLE($rate) ) , T_VARIABLE($rate) ) ; } T_VARIABLE($return) T_CONCAT_EQUAL ; } T_VARIABLE($return) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($return) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_IF ( T_STRING ) { T_VARIABLE($server_master_status) = T_STRING ; T_VARIABLE($server_slave_status) = T_STRING ; } T_ELSE { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; } T_VARIABLE($ServerStatusData) = T_NEW T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_STRING ( . T_VARIABLE($_REQUEST) [ ] . ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . ) ) ; } T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($ServerStatusData) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_EXIT ; T_FUNCTION(getServerTrafficHtml) ( T_VARIABLE($ServerStatusData) ) { T_VARIABLE($hour_factor) = T_LNUMBER / T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] ; T_VARIABLE($start_time) = T_STRING ( . T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] ) ; T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] + T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] , T_LNUMBER , T_LNUMBER ) ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] ) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($start_time) ) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( . ) ; } T_ELSEIF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( . ) ; } T_ELSEIF ( T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( . ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( . ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($GLOBALS) [ ] T_AS T_VARIABLE($type) ) { T_IF ( T_ISSET ( $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ) T_BOOLEAN_AND $ { T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($type) } T_ENCAPSED_AND_WHITESPACE } ) { T_STRING ( T_VARIABLE($type) ) ; } } } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] * T_VARIABLE($hour_factor) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] * T_VARIABLE($hour_factor) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] + T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] + T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] ) * T_VARIABLE($hour_factor) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] , T_LNUMBER ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] , T_LNUMBER , T_LNUMBER , T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] * T_VARIABLE($hour_factor) , T_LNUMBER , T_LNUMBER , T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] > T_LNUMBER ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] * T_LNUMBER / T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] , T_LNUMBER , T_LNUMBER , T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] , T_LNUMBER , T_LNUMBER , T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] * T_VARIABLE($hour_factor) , T_LNUMBER , T_LNUMBER , T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] > T_LNUMBER ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] * T_LNUMBER / T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] , T_LNUMBER , T_LNUMBER , T_STRING ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] * T_VARIABLE($hour_factor) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($url_params) = T_ARRAY ( ) ; T_VARIABLE($show_full_sql) = ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ; T_IF ( T_VARIABLE($show_full_sql) ) { T_VARIABLE($url_params) [ ] = T_LNUMBER ; T_VARIABLE($full_text_link) = . T_STRING ( T_ARRAY ( ) , , ) ; } T_ELSE { T_VARIABLE($full_text_link) = . T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) ) ; } T_VARIABLE($sortable_columns) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) ; T_VARIABLE($sortable_columns_count) = T_STRING ( T_VARIABLE($sortable_columns) ) ; T_IF ( T_STRING ) { T_VARIABLE($sql_query) = . ( T_VARIABLE($show_full_sql) ? : . T_INT_CAST T_VARIABLE($GLOBALS) [ ] [ ] . ) . . ( T_VARIABLE($show_full_sql) ? : ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($_REQUEST) [ ] . . T_VARIABLE($_REQUEST) [ ] ; } } T_ELSE { T_VARIABLE($sql_query) = T_VARIABLE($show_full_sql) ? : ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sql_query) = . T_VARIABLE($_REQUEST) [ ] . . T_VARIABLE($_REQUEST) [ ] ; } } T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_FOREACH ( T_VARIABLE($sortable_columns) T_AS T_VARIABLE($column) ) { T_VARIABLE($is_sorted) = ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_VARIABLE($column) [ ] ) ; T_VARIABLE($column) [ ] = ; T_IF ( T_VARIABLE($is_sorted) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_IDENTICAL ) { T_VARIABLE($column) [ ] = ; } T_IF ( T_VARIABLE($is_sorted) ) { T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($asc_display_style) = ; T_VARIABLE($desc_display_style) = ; } T_ELSEIF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($desc_display_style) = ; T_VARIABLE($asc_display_style) = ; } } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($column) ) . ; T_IF ( T_VARIABLE($is_sorted) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($column) [ ] ; T_IF ( T_VARIABLE($is_sorted) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . . . T_VARIABLE($desc_display_style) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . . . T_VARIABLE($asc_display_style) . ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( ! T_STRING T_BOOLEAN_AND ( T_LNUMBER T_IS_IDENTICAL T_DEC T_VARIABLE($sortable_columns_count) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($full_text_link) . ; T_IF ( T_VARIABLE($show_full_sql) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($odd_row) = T_STRING ; T_WHILE ( T_VARIABLE($process) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_FOREACH ( T_STRING ( T_VARIABLE($process) ) T_AS T_VARIABLE($key) ) { T_VARIABLE($new_key) = T_STRING ( T_STRING ( T_VARIABLE($key) ) ) ; T_VARIABLE($process) [ T_VARIABLE($new_key) ] = T_VARIABLE($process) [ T_VARIABLE($key) ] ; T_UNSET ( T_VARIABLE($process) [ T_VARIABLE($key) ] ) ; } } T_VARIABLE($url_params) [ ] = T_VARIABLE($process) [ ] ; T_VARIABLE($kill_process) = . T_STRING ( T_VARIABLE($url_params) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($kill_process) . . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($process) [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($process) [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($process) [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL . ( ( ! T_ISSET ( T_VARIABLE($process) [ ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($process) [ ] ) ) ? . T_STRING ( ) . : T_VARIABLE($process) [ ] ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($process) [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($process) [ ] . ; T_VARIABLE($retval) T_CONCAT_EQUAL . ( T_EMPTY ( T_VARIABLE($process) [ ] ) ? : T_VARIABLE($process) [ ] ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_EMPTY ( T_VARIABLE($process) [ ] ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_IF ( ! T_VARIABLE($show_full_sql) T_BOOLEAN_AND T_STRING ( T_VARIABLE($process) [ ] ) > T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_VARIABLE($process) [ ] , T_LNUMBER , T_VARIABLE($GLOBALS) [ ] [ ] ) ) . ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_VARIABLE($process) [ ] ) ) ; } } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_IF ( T_STRING ) { T_VARIABLE($server_master_status) = T_STRING ; T_VARIABLE($server_slave_status) = T_STRING ; } T_ELSE { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; } T_VARIABLE($ServerStatusData) = T_NEW T_STRING ( ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING T_IS_EQUAL T_BOOLEAN_AND T_STRING < T_LNUMBER ) { T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($ServerStatusData) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_EXIT ; T_FUNCTION(getQueryStatisticsHtml) ( T_VARIABLE($ServerStatusData) ) { T_VARIABLE($retval) = ; T_VARIABLE($hour_factor) = T_LNUMBER / T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] ; T_VARIABLE($used_queries) = T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($total_queries) = T_STRING ( T_VARIABLE($used_queries) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($total_queries) , T_LNUMBER ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , T_STRING , ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($total_queries) * T_VARIABLE($hour_factor) , T_LNUMBER ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($total_queries) * T_LNUMBER / T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] , T_LNUMBER ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($total_queries) / T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($total_queries) / T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] , T_LNUMBER ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_STRING ( T_VARIABLE($used_queries) ) ; T_VARIABLE($odd_row) = T_STRING ; T_VARIABLE($perc_factor) = T_LNUMBER / T_VARIABLE($total_queries) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($chart_json) = T_ARRAY ( ) ; T_VARIABLE($query_sum) = T_STRING ( T_VARIABLE($used_queries) ) ; T_VARIABLE($other_sum) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($used_queries) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_VARIABLE($name) = T_STRING ( T_ARRAY ( , ) , T_ARRAY ( , ) , T_VARIABLE($name) ) ; T_IF ( T_VARIABLE($value) < T_VARIABLE($query_sum) * T_DNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($chart_json) ) > T_LNUMBER ) { T_VARIABLE($other_sum) T_PLUS_EQUAL T_VARIABLE($value) ; } T_ELSE { T_VARIABLE($chart_json) [ T_VARIABLE($name) ] = T_VARIABLE($value) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($odd_row) ? : ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($name) ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) , T_LNUMBER , T_LNUMBER , T_STRING ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) * T_VARIABLE($hour_factor) , T_LNUMBER , T_LNUMBER , T_STRING ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) * T_VARIABLE($perc_factor) , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($other_sum) > T_LNUMBER ) { T_VARIABLE($chart_json) [ T_STRING ( ) ] = T_VARIABLE($other_sum) ; } T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_VARIABLE($chart_json) ) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_IF ( T_STRING ) { T_VARIABLE($server_master_status) = T_STRING ; T_VARIABLE($server_slave_status) = T_STRING ; } T_ELSE { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_flush_commands) = T_ARRAY ( , , , ) ; T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_flush_commands) ) ) { T_STRING ( . T_VARIABLE($_REQUEST) [ ] . ) ; } T_UNSET ( T_VARIABLE($_flush_commands) ) ; } T_VARIABLE($ServerStatusData) = T_NEW T_STRING ( ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($ServerStatusData) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($ServerStatusData) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($ServerStatusData) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_EXIT ; T_FUNCTION(getFilterHtml) ( T_VARIABLE($ServerStatusData) ) { T_VARIABLE($filterAlert) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($filterAlert) = ; } T_VARIABLE($filterText) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($filterText) = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_VARIABLE($dontFormat) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($dontFormat) = ; } T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . . T_VARIABLE($filterText) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($filterAlert) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_FOREACH ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($section_id) T_DOUBLE_ARROW T_VARIABLE($section_name) ) { T_IF ( T_ISSET ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($section_id) ] ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_VARIABLE($section_id) ) { T_VARIABLE($selected) = ; } T_ELSE { T_VARIABLE($selected) = ; } T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($selected) . . T_VARIABLE($section_id) . ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($section_name) ) . ; } } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($dontFormat) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(getLinkSuggestionsHtml) ( T_VARIABLE($ServerStatusData) ) { T_VARIABLE($retval) = ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) ; T_FOREACH ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($section_name) T_DOUBLE_ARROW T_VARIABLE($section_links) ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($section_name) . ; T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($section_links) T_AS T_VARIABLE($link_name) T_DOUBLE_ARROW T_VARIABLE($link_url) ) { T_IF ( T_VARIABLE($i) > T_LNUMBER ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_IF ( T_IS_EQUAL T_VARIABLE($link_name) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($link_url) , T_VARIABLE($link_url) ) ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($link_url) . . T_VARIABLE($link_name) . ; } T_VARIABLE($i) T_INC ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_UNSET ( T_VARIABLE($link_url) , T_VARIABLE($link_name) , T_VARIABLE($i) ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(getVariablesTableHtml) ( T_VARIABLE($ServerStatusData) ) { T_VARIABLE($retval) = ; T_VARIABLE($strShowStatus) = T_STRING ( ) ; T_VARIABLE($alerts) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] ) ? T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] / T_LNUMBER : T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] ) ? ( T_DNUMBER * T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] ) : T_LNUMBER , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] ) ? ( T_DNUMBER * T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] ) : T_LNUMBER , T_DOUBLE_ARROW T_DNUMBER , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] ) ? T_DNUMBER * T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ ] : T_LNUMBER ) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_VARIABLE($retval) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . ( T_ISSET ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($name) ] ) ? . T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($name) ] : ) . ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING ( , , T_VARIABLE($name) ) ) ; T_IF ( T_STRING ( T_VARIABLE($name) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , , T_STRING , . T_VARIABLE($name) ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($alerts) [ T_VARIABLE($name) ] ) ) { T_IF ( T_VARIABLE($value) > T_VARIABLE($alerts) [ T_VARIABLE($name) ] ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL ; } } T_IF ( T_IS_IDENTICAL T_STRING ( T_VARIABLE($name) , - T_LNUMBER , T_LNUMBER ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) , T_LNUMBER , T_LNUMBER ) ) . ; } T_ELSEIF ( T_STRING ( T_VARIABLE($name) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) ) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($value) ) T_BOOLEAN_AND T_VARIABLE($value) T_IS_EQUAL T_INT_CAST T_VARIABLE($value) T_BOOLEAN_AND T_VARIABLE($value) > T_LNUMBER ) { T_VARIABLE($retval) T_CONCAT_EQUAL . T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) , T_LNUMBER ) ) . . T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) , T_LNUMBER , T_LNUMBER ) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($value) ) T_BOOLEAN_AND T_VARIABLE($value) T_IS_EQUAL T_INT_CAST T_VARIABLE($value) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) , T_LNUMBER , T_LNUMBER ) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($value) ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) , T_LNUMBER , T_LNUMBER ) ) ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($value) ) ; } T_IF ( T_ISSET ( T_VARIABLE($alerts) [ T_VARIABLE($name) ] ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($value) ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($strShowStatus) [ T_VARIABLE($name) ] ) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_VARIABLE($strShowStatus) [ T_VARIABLE($name) ] ; } T_IF ( T_ISSET ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($name) ] ) ) { T_FOREACH ( T_VARIABLE($ServerStatusData) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($name) ] T_AS T_VARIABLE($link_name) T_DOUBLE_ARROW T_VARIABLE($link_url) ) { T_IF ( T_IS_EQUAL T_VARIABLE($link_name) ) { T_VARIABLE($retval) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($link_url) , T_VARIABLE($link_url) ) ; } T_ELSE { T_VARIABLE($retval) T_CONCAT_EQUAL . T_VARIABLE($link_url) . . T_VARIABLE($link_name) . ; } } T_UNSET ( T_VARIABLE($link_url) , T_VARIABLE($link_name) ) ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; } T_VARIABLE($retval) T_CONCAT_EQUAL ; T_VARIABLE($retval) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($retval) ; } T_FUNCTION(getStatusVariablesDescriptions) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( . . . . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . . . ) , T_DOUBLE_ARROW T_STRING ( . . . ) , T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( . . . . ) , T_DOUBLE_ARROW T_STRING ( . . . . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( . . . . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( . . . . . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . . . ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( . . . ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . . . . ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( . ) , T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . . . ) , T_DOUBLE_ARROW T_STRING ( . . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . . . . ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE ; T_REQUIRE ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_IDENTICAL ) { T_STRING ( ) ; T_VARIABLE($varValue) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . , ) ; T_IF ( T_ISSET ( T_VARIABLE($VARIABLE_DOC_LINKS) [ T_VARIABLE($_REQUEST) [ ] ] [ T_LNUMBER ] ) T_BOOLEAN_AND T_VARIABLE($VARIABLE_DOC_LINKS) [ T_VARIABLE($_REQUEST) [ ] ] [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($varValue) [ T_LNUMBER ] , T_LNUMBER , T_LNUMBER ) ) ) ; } T_ELSE { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($varValue) [ T_LNUMBER ] ) ; } } T_ELSE T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_IDENTICAL ) { T_VARIABLE($value) = T_VARIABLE($_REQUEST) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($VARIABLE_DOC_LINKS) [ T_VARIABLE($_REQUEST) [ ] ] [ T_LNUMBER ] ) T_BOOLEAN_AND T_VARIABLE($VARIABLE_DOC_LINKS) [ T_VARIABLE($_REQUEST) [ ] ] [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( , T_VARIABLE($value) , T_VARIABLE($matches) ) ) { T_VARIABLE($exp) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($value) = T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] ) * T_STRING T_DOUBLE_COLON T_STRING ( T_LNUMBER , T_VARIABLE($exp) [ T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] ) ] ) ; } T_ELSE { T_VARIABLE($value) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) ) ; } T_IF ( ! T_STRING ( T_VARIABLE($value) ) ) { T_VARIABLE($value) = . T_VARIABLE($value) . ; } T_IF ( ! T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( . T_VARIABLE($_REQUEST) [ ] . . T_VARIABLE($value) ) ) { T_VARIABLE($varValue) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . , ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($varValue) [ T_LNUMBER ] ) ) ; } T_ELSE { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( ) ) ; } } T_EXIT ; } } T_VARIABLE($output) = . T_STRING T_DOUBLE_COLON T_STRING ( ) . . T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( , ) . . ; T_VARIABLE($url) = T_STRING ( . T_STRING ( ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($url) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; T_VARIABLE($serverVarsSession) = T_STRING ( , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($serverVars) = T_STRING ( , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($value) = ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ? T_STRING ( T_VARIABLE($_REQUEST) [ ] ) : ; T_VARIABLE($output) T_CONCAT_EQUAL . . T_STRING ( ) . . . . T_STRING ( ) . . . . T_VARIABLE($value) . . . ; T_VARIABLE($output) T_CONCAT_EQUAL . . . T_STRING ( ) . . . T_STRING ( ) . . T_STRING ( ) . . . ; T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($serverVars) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($has_session_value) = T_ISSET ( T_VARIABLE($serverVarsSession) [ T_VARIABLE($name) ] ) T_BOOLEAN_AND T_VARIABLE($serverVarsSession) [ T_VARIABLE($name) ] T_IS_NOT_EQUAL T_VARIABLE($value) ; T_VARIABLE($row_class) = ( T_VARIABLE($odd_row) ? : ) . ( T_VARIABLE($has_session_value) ? : ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($row_class) . . ; T_IF ( T_ISSET ( T_VARIABLE($VARIABLE_DOC_LINKS) [ T_VARIABLE($name) ] ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( , , T_VARIABLE($name) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($VARIABLE_DOC_LINKS) [ T_VARIABLE($name) ] [ T_LNUMBER ] , T_VARIABLE($VARIABLE_DOC_LINKS) [ T_VARIABLE($name) ] [ T_LNUMBER ] , T_STRING , T_VARIABLE($VARIABLE_DOC_LINKS) [ T_VARIABLE($name) ] [ T_LNUMBER ] . . T_VARIABLE($VARIABLE_DOC_LINKS) [ T_VARIABLE($name) ] [ T_LNUMBER ] , T_STRING ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_STRING ( , , T_VARIABLE($name) ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_STRING ( , , T_VARIABLE($name) ) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL . . ( T_STRING ( ) ? : ) . . T_STRING ( T_VARIABLE($name) , T_VARIABLE($value) ) . . . ; T_IF ( T_VARIABLE($has_session_value) ) { T_VARIABLE($output) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . . . T_STRING ( ) . . . T_STRING ( T_VARIABLE($name) , T_VARIABLE($serverVarsSession) [ T_VARIABLE($name) ] ) . . . ; } T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($output) ) ; T_FUNCTION(formatVariable) ( T_VARIABLE($name) , T_VARIABLE($value) ) { T_GLOBAL T_VARIABLE($VARIABLE_DOC_LINKS) ; T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_IF ( T_ISSET ( T_VARIABLE($VARIABLE_DOC_LINKS) [ T_VARIABLE($name) ] [ T_LNUMBER ] ) T_BOOLEAN_AND T_VARIABLE($VARIABLE_DOC_LINKS) [ T_VARIABLE($name) ] [ T_LNUMBER ] T_IS_EQUAL ) { T_RETURN . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) , T_LNUMBER ) . . T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) , T_LNUMBER , T_LNUMBER ) ) . ; } T_ELSE { T_RETURN T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($value) , T_LNUMBER ) ; } } T_RETURN T_STRING ( T_VARIABLE($value) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE ; T_VARIABLE($form_display) = T_NEW T_STRING ( ) ; T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($forms) [ ] ) ; T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($config_file_path) = T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = ( T_VARIABLE($_POST) [ ] T_IS_EQUAL ) ? : ; } T_IF ( T_STRING ( T_VARIABLE($_POST) [ ] , ) ) { T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_EXIT ; } T_ELSEIF ( T_STRING ( T_VARIABLE($_POST) [ ] , ) ) { T_STRING ( , ) ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_EXIT ; } T_ELSEIF ( T_STRING ( T_VARIABLE($_POST) [ ] , ) ) { T_STRING ( T_VARIABLE($config_file_path) , T_STRING T_DOUBLE_COLON T_STRING ( ) ) ; T_STRING ( ) ; T_STRING ( ) ; T_EXIT ; } T_ELSEIF ( T_STRING ( T_VARIABLE($_POST) [ ] , ) ) { T_VARIABLE($cfg) = T_ARRAY ( ) ; T_INCLUDE_ONCE T_VARIABLE($config_file_path) ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($cfg) ) ; T_STRING ( ) ; T_STRING ( ) ; T_EXIT ; } T_ELSEIF ( T_STRING ( T_VARIABLE($_POST) [ ] , ) ) { @ T_STRING ( T_VARIABLE($config_file_path) ) ; T_STRING ( ) ; T_STRING ( ) ; T_EXIT ; } T_ELSE { T_STRING ( ) ; T_STRING ( ) ; T_EXIT ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($config_readable) = T_STRING ; T_VARIABLE($config_writable) = T_STRING ; T_VARIABLE($config_exists) = T_STRING ; T_STRING ( T_VARIABLE($config_readable) , T_VARIABLE($config_writable) , T_VARIABLE($config_exists) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_STRING ( T_VARIABLE($_GET) [ ] , ) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_STRING ( , , T_STRING , T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( ) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_VARIABLE($config_writable) ) { T_ECHO ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_STRING ( ) ; T_STRING ( ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE ; T_VARIABLE($formset_id) = T_STRING ( T_STRING , ) ; T_VARIABLE($mode) = T_STRING ( T_STRING , ) ; T_IF ( ! T_ISSET ( T_VARIABLE($forms) [ T_VARIABLE($formset_id) ] ) ) { T_STRING ( T_STRING ( ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ . T_VARIABLE($formset_id) ] ) ) { T_ECHO . T_VARIABLE($GLOBALS) [ . T_VARIABLE($formset_id) ] . ; } T_VARIABLE($form_display) = T_NEW T_STRING ( ) ; T_FOREACH ( T_VARIABLE($forms) [ T_VARIABLE($formset_id) ] T_AS T_VARIABLE($form_name) T_DOUBLE_ARROW T_VARIABLE($form) ) { T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($form_name) , T_VARIABLE($form) ) ; } T_STRING ( T_VARIABLE($form_display) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($all_languages) = T_STRING ( ) ; T_STRING ( T_VARIABLE($all_languages) , ) ; T_VARIABLE($cf) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($separator) = T_STRING ( ) ; T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_STRING ( ) ; } T_STRING ( ) ; T_VARIABLE($config_readable) = T_STRING ; T_VARIABLE($config_writable) = T_STRING ; T_VARIABLE($config_exists) = T_STRING ; T_STRING ( T_VARIABLE($config_readable) , T_VARIABLE($config_writable) , T_VARIABLE($config_exists) ) ; T_IF ( ! T_VARIABLE($config_writable) T_BOOLEAN_OR ! T_VARIABLE($config_readable) ) { T_STRING ( , , T_STRING ( ) , T_STRING ( T_STRING ( ) ) ) ; } T_VARIABLE($is_https) = ! T_EMPTY ( T_VARIABLE($_SERVER) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_SERVER) [ ] ) T_IS_EQUAL ; T_IF ( ! T_VARIABLE($is_https) ) { T_VARIABLE($text) = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_SERVER) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_SERVER) [ ] ) ) { T_VARIABLE($link) = . T_STRING ( T_VARIABLE($_SERVER) [ ] . T_VARIABLE($_SERVER) [ ] ) ; T_VARIABLE($strInsecureConnectionMsg2) = T_STRING ( ) ; T_VARIABLE($strInsecureConnectionMsg2) = T_STRING ( T_VARIABLE($strInsecureConnectionMsg2) , T_VARIABLE($link) ) ; T_VARIABLE($text) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($strInsecureConnectionMsg2) ) ; } T_STRING ( , , T_STRING ( ) , T_VARIABLE($text) ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($_SERVER) [ ] ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) . ( T_STRING ( ) T_IS_NOT_EQUAL ? : ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($lang_list) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($all_languages) T_AS T_VARIABLE($each_lang_key) T_DOUBLE_ARROW T_VARIABLE($each_lang) ) { T_VARIABLE($lang_name) = T_STRING ( T_VARIABLE($each_lang) ) ; T_VARIABLE($selected) = ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_VARIABLE($each_lang_key) ) ? : ; T_ECHO . T_VARIABLE($each_lang_key) . . T_VARIABLE($selected) . . T_VARIABLE($lang_name) . . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_SWITCH ( T_VARIABLE($action_done) ) { T_CASE : T_STRING ( , T_STRING ( ) , T_STRING ( ) , T_STRING ( T_STRING ( ) ) ) ; T_BREAK ; T_DEFAULT : T_BREAK ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_STRING ( ) ; T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) > T_LNUMBER ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($server) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($id) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($id) ) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($id) T_ENCAPSED_AND_WHITESPACE ) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($id) ) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($separator) } T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($separator) } T_ENCAPSED_AND_WHITESPACE T_VARIABLE($id) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($separator) } T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($separator) } T_ENCAPSED_AND_WHITESPACE T_VARIABLE($id) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSE { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($form_display) = T_NEW T_STRING ( ) ; T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($opts) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING ) ; T_FOREACH ( T_VARIABLE($all_languages) T_AS T_VARIABLE($each_lang_key) T_DOUBLE_ARROW T_VARIABLE($each_lang) ) { T_VARIABLE($lang_name) = T_STRING ( T_VARIABLE($each_lang) ) ; T_VARIABLE($opts) [ ] [ T_VARIABLE($each_lang_key) ] = T_VARIABLE($lang_name) ; } T_STRING ( , T_STRING ( ) , , T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) , , T_STRING , T_VARIABLE($opts) ) ; T_VARIABLE($opts) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) > T_LNUMBER ) { T_VARIABLE($opts) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($opts) [ ] [ ] = ; T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($opts) [ ] [ ] = ; } T_VARIABLE($opts) [ ] [ ] = ; T_FOREACH ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($server) ) { T_VARIABLE($opts) [ ] [ T_STRING_CAST T_VARIABLE($id) ] = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($id) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($id) T_ENCAPSED_AND_WHITESPACE ; } } T_ELSE { T_VARIABLE($opts) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($opts) [ ] = T_STRING ; } T_STRING ( , T_STRING ( ) , , T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) , , T_STRING , T_VARIABLE($opts) ) ; T_VARIABLE($opts) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($eol) = T_STRING ( T_VARIABLE($_SESSION) [ ] , ( T_STRING ? : ) ) ; T_STRING ( , T_STRING ( ) , , T_VARIABLE($eol) , , T_STRING , T_VARIABLE($opts) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_VARIABLE($config_writable) ) { T_ECHO ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_VARIABLE($config_exists) ) { T_ECHO ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_VARIABLE($config_exists) T_BOOLEAN_OR ! T_VARIABLE($config_writable) ) { T_ECHO ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_CURLY_OPEN T_VARIABLE($separator) } T_ENCAPSED_AND_WHITESPACE . T_VARIABLE($_SESSION) [ ] T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_VARIABLE($separator) = T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($separator) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($separator) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($separator) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($separator) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($separator) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($separator) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE ; T_VARIABLE($mode) = T_STRING ( T_STRING , ) ; T_VARIABLE($id) = T_STRING ( T_STRING , , T_STRING ) ; T_VARIABLE($cf) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($server_exists) = ! T_EMPTY ( T_VARIABLE($id) ) T_BOOLEAN_AND T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($id) ) T_IS_NOT_IDENTICAL T_STRING ; T_IF ( T_VARIABLE($mode) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($server_exists) ) { T_VARIABLE($page_title) = T_STRING ( ) . . T_VARIABLE($id) . . T_STRING ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($id) ) ) . ; } T_ELSEIF ( T_VARIABLE($mode) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($server_exists) ) { T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($id) ) ; T_STRING ( ) ; T_EXIT ; } T_ELSEIF ( T_VARIABLE($mode) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($server_exists) ) { } T_ELSE { T_VARIABLE($page_title) = T_STRING ( ) ; T_VARIABLE($id) = T_LNUMBER ; } T_IF ( T_ISSET ( T_VARIABLE($page_title) ) ) { T_ECHO . T_VARIABLE($page_title) . ; } T_VARIABLE($form_display) = T_NEW T_STRING ( ) ; T_FOREACH ( T_VARIABLE($forms) [ ] T_AS T_VARIABLE($form_name) T_DOUBLE_ARROW T_VARIABLE($form) ) { T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($form_name) , T_VARIABLE($form) , T_VARIABLE($id) ) ; } T_STRING ( T_VARIABLE($form_display) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE ; T_VARIABLE($page) = T_STRING ( T_STRING , ) ; T_VARIABLE($page) = T_STRING ( , , T_VARIABLE($page) ) ; T_IF ( T_VARIABLE($page) T_IS_IDENTICAL ) { T_VARIABLE($page) = ; } T_IF ( ! T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($page) T_ENCAPSED_AND_WHITESPACE ) ) { T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($action_done) = T_STRING ( T_STRING , ) ; T_VARIABLE($action_done) = T_STRING ( , , T_VARIABLE($action_done) ) ; T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_REQUIRE ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_REQUIRE T_ENCAPSED_AND_WHITESPACE T_VARIABLE($page) T_ENCAPSED_AND_WHITESPACE ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_STRING ( , T_STRING ) ; T_STRING ( , T_STRING ) ; T_STRING ( ) ; T_IF ( ! T_STRING ( ) ) { T_STRING ( ) ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING ( ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($GLOBALS) [ ] ) ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( T_ARRAY ( , , , , , , , , , , , , ) ) ; T_STRING ( ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_STRING { T_PUBLIC T_STATIC T_STRING ( ) { T_VARIABLE($cf) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($crlf) = ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) T_BOOLEAN_AND T_VARIABLE($_SESSION) [ ] T_IS_EQUAL ) ? : ; T_VARIABLE($c) = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($ret) = . T_VARIABLE($crlf) . . T_VARIABLE($crlf) . . T_VARIABLE($crlf) . . T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) . . T_VARIABLE($crlf) . . T_STRING ( T_STRING ) . T_VARIABLE($crlf) . . T_VARIABLE($crlf) . T_VARIABLE($crlf) ; T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) > T_LNUMBER ) { T_VARIABLE($ret) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($crlf) T_ENCAPSED_AND_WHITESPACE . T_VARIABLE($crlf) . T_VARIABLE($crlf) ; T_FOREACH ( T_VARIABLE($c) [ ] T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($server) ) { T_VARIABLE($ret) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($id) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($id) T_ENCAPSED_AND_WHITESPACE , , ) . . T_VARIABLE($crlf) . . T_VARIABLE($crlf) ; T_FOREACH ( T_VARIABLE($server) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($k) = T_STRING ( , , T_VARIABLE($k) ) ; T_VARIABLE($ret) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($k) T_ENCAPSED_AND_WHITESPACE . ( T_STRING ( T_VARIABLE($v) ) T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($v) ) ? T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($v) , T_VARIABLE($crlf) ) : T_STRING ( T_VARIABLE($v) , T_STRING ) ) . . T_VARIABLE($crlf) ; } T_VARIABLE($ret) T_CONCAT_EQUAL T_VARIABLE($crlf) ; } T_VARIABLE($ret) T_CONCAT_EQUAL . T_VARIABLE($crlf) . T_VARIABLE($crlf) ; } T_UNSET ( T_VARIABLE($c) [ ] ) ; T_VARIABLE($persistKeys) = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($c) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($k) = T_STRING ( , , T_VARIABLE($k) ) ; T_VARIABLE($ret) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($k) , T_VARIABLE($v) , T_VARIABLE($crlf) ) ; T_IF ( T_ISSET ( T_VARIABLE($persistKeys) [ T_VARIABLE($k) ] ) ) { T_UNSET ( T_VARIABLE($persistKeys) [ T_VARIABLE($k) ] ) ; } } T_FOREACH ( T_STRING ( T_VARIABLE($persistKeys) ) T_AS T_VARIABLE($k) ) { T_IF ( T_STRING ( T_VARIABLE($k) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($k) = T_STRING ( , , T_VARIABLE($k) ) ; T_VARIABLE($ret) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($k) , T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($k) ) , T_VARIABLE($crlf) ) ; } } T_VARIABLE($ret) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($ret) ; } T_PRIVATE T_STATIC T_STRING ( T_VARIABLE($var_name) , T_VARIABLE($var_value) , T_VARIABLE($crlf) ) { T_IF ( ! T_STRING ( T_VARIABLE($var_value) ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($var_value) ) ) { T_RETURN T_ENCAPSED_AND_WHITESPACE T_VARIABLE($var_name) T_ENCAPSED_AND_WHITESPACE . T_STRING ( T_VARIABLE($var_value) , T_STRING ) . . T_VARIABLE($crlf) ; } T_VARIABLE($ret) = ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($var_value) ) ) { T_VARIABLE($ret) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($var_name) T_ENCAPSED_AND_WHITESPACE . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($var_value) , T_VARIABLE($crlf) ) . . T_VARIABLE($crlf) ; } T_ELSE { T_FOREACH ( T_VARIABLE($var_value) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($k) = T_STRING ( , , T_VARIABLE($k) ) ; T_VARIABLE($ret) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($var_name) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($k) T_ENCAPSED_AND_WHITESPACE . T_STRING ( T_VARIABLE($v) , T_STRING ) . . T_VARIABLE($crlf) ; } } T_RETURN T_VARIABLE($ret) ; } T_PRIVATE T_STATIC T_STRING ( T_ARRAY T_VARIABLE($array) ) { T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($array) ) ; T_VARIABLE($i) T_INC ) { T_IF ( ! T_ISSET ( T_VARIABLE($array) [ T_VARIABLE($i) ] ) ) { T_RETURN T_STRING ; } } T_RETURN T_STRING ; } T_PRIVATE T_STATIC T_STRING ( T_ARRAY T_VARIABLE($array) , T_VARIABLE($crlf) ) { T_VARIABLE($retv) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($array) T_AS T_VARIABLE($v) ) { T_VARIABLE($retv) [ ] = T_STRING ( T_VARIABLE($v) , T_STRING ) ; } T_VARIABLE($ret) = ; T_IF ( T_STRING ( T_VARIABLE($retv) ) T_IS_SMALLER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($ret) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($retv) ) ; } T_ELSE { T_VARIABLE($imax) = T_STRING ( T_VARIABLE($retv) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($imax) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($ret) T_CONCAT_EQUAL ( T_VARIABLE($i) > T_LNUMBER ? : ) . T_VARIABLE($crlf) . . T_VARIABLE($retv) [ T_VARIABLE($i) ] ; } } T_VARIABLE($ret) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($ret) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_FUNCTION(process_formset) ( T_STRING T_VARIABLE($form_display) ) { T_IF ( T_STRING ( T_STRING , ) T_IS_EQUAL ) { T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_EXIT ; } T_IF ( ! T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ) { T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( T_STRING , T_STRING ) ; } T_ELSE { T_IF ( T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($separator) = T_STRING ( ) ; T_VARIABLE($page) = T_STRING ( T_STRING , ) ; T_VARIABLE($formset) = T_STRING ( T_STRING , ) ; T_VARIABLE($formset) = T_VARIABLE($formset) ? T_CURLY_OPEN T_VARIABLE($separator) } T_ENCAPSED_AND_WHITESPACE T_VARIABLE($formset) : ; T_VARIABLE($id) = T_STRING ( T_STRING , , T_STRING ) ; T_IF ( T_VARIABLE($id) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_VARIABLE($page) T_IS_EQUAL ) { T_VARIABLE($id) = T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($id) = T_VARIABLE($id) ? T_CURLY_OPEN T_VARIABLE($separator) } T_ENCAPSED_AND_WHITESPACE T_VARIABLE($id) : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($page) . T_VARIABLE($formset) . T_VARIABLE($id) . T_VARIABLE($separator) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($form_display) T_OBJECT_OPERATOR T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($page) . T_VARIABLE($formset) . T_VARIABLE($id) . T_VARIABLE($separator) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSE { T_STRING ( ) ; T_STRING ( ) ; T_EXIT ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ; } T_FUNCTION(messages_begin) ( ) { T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) ; } T_ELSE { T_FOREACH ( T_VARIABLE($_SESSION) [ ] T_AS & T_VARIABLE($messages) ) { T_FOREACH ( T_VARIABLE($messages) T_AS & T_VARIABLE($msg) ) { T_VARIABLE($msg) [ ] = T_STRING ; T_VARIABLE($msg) [ ] = T_STRING ; } } } } T_FUNCTION(messages_set) ( T_VARIABLE($type) , T_VARIABLE($id) , T_VARIABLE($title) , T_VARIABLE($message) ) { T_VARIABLE($fresh) = ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($type) ] [ T_VARIABLE($id) ] ) ; T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($type) ] [ T_VARIABLE($id) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($fresh) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($title) , T_DOUBLE_ARROW T_VARIABLE($message) ) ; } T_FUNCTION(messages_end) ( ) { T_FOREACH ( T_VARIABLE($_SESSION) [ ] T_AS & T_VARIABLE($messages) ) { T_VARIABLE($remove_ids) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($messages) T_AS T_VARIABLE($id) T_DOUBLE_ARROW & T_VARIABLE($msg) ) { T_IF ( T_VARIABLE($msg) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($remove_ids) [ ] = T_VARIABLE($id) ; } } T_FOREACH ( T_VARIABLE($remove_ids) T_AS T_VARIABLE($id) ) { T_UNSET ( T_VARIABLE($messages) [ T_VARIABLE($id) ] ) ; } } } T_FUNCTION(messages_show_html) ( ) { T_VARIABLE($old_ids) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($_SESSION) [ ] T_AS T_VARIABLE($type) T_DOUBLE_ARROW T_VARIABLE($messages) ) { T_FOREACH ( T_VARIABLE($messages) T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($msg) ) { T_ECHO . T_VARIABLE($type) . . T_VARIABLE($id) . . . T_VARIABLE($msg) [ ] . . T_VARIABLE($msg) [ ] . ; T_IF ( ! T_VARIABLE($msg) [ ] T_BOOLEAN_AND T_VARIABLE($type) T_IS_NOT_EQUAL ) { T_VARIABLE($old_ids) [ ] = T_VARIABLE($id) ; } } } T_ECHO . ; T_FOREACH ( T_VARIABLE($old_ids) T_AS T_VARIABLE($id) ) { T_ECHO T_ENCAPSED_AND_WHITESPACE T_VARIABLE($id) T_ENCAPSED_AND_WHITESPACE ; } T_ECHO ; } T_FUNCTION(PMA_version_check) ( ) { T_VARIABLE($message_id) = T_STRING ( ) ; T_VARIABLE($connection_timeout) = T_LNUMBER ; T_VARIABLE($url) = ; T_VARIABLE($context) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($connection_timeout) ) ) ) ; T_VARIABLE($data) = @ T_STRING ( T_VARIABLE($url) , T_STRING , T_VARIABLE($context) ) ; T_IF ( T_VARIABLE($data) T_IS_IDENTICAL T_STRING ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($ch) = T_STRING ( T_VARIABLE($url) ) ; T_STRING ( T_VARIABLE($ch) , T_STRING , T_STRING ) ; T_STRING ( T_VARIABLE($ch) , T_STRING , T_STRING ) ; T_STRING ( T_VARIABLE($ch) , T_STRING , T_VARIABLE($connection_timeout) ) ; T_VARIABLE($data) = T_STRING ( T_VARIABLE($ch) ) ; T_STRING ( T_VARIABLE($ch) ) ; } T_ELSE { T_STRING ( , T_VARIABLE($message_id) , T_STRING ( ) , T_STRING ( ) ) ; T_RETURN ; } } T_IF ( T_EMPTY ( T_VARIABLE($data) ) ) { T_STRING ( , T_VARIABLE($message_id) , T_STRING ( ) , T_STRING ( ) ) ; T_RETURN ; } T_VARIABLE($data_list) = T_STRING ( , T_VARIABLE($data) ) ; T_IF ( T_STRING ( T_VARIABLE($data_list) ) > T_LNUMBER ) { T_VARIABLE($version) = T_VARIABLE($data_list) [ T_LNUMBER ] ; T_VARIABLE($date) = T_VARIABLE($data_list) [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($version) = T_VARIABLE($date) = ; } T_VARIABLE($version_upstream) = T_STRING ( T_VARIABLE($version) ) ; T_IF ( T_VARIABLE($version_upstream) T_IS_IDENTICAL T_STRING ) { T_STRING ( , T_VARIABLE($message_id) , T_STRING ( ) , T_STRING ( ) ) ; T_RETURN ; } T_VARIABLE($version_local) = T_STRING ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) ; T_IF ( T_VARIABLE($version_local) T_IS_IDENTICAL T_STRING ) { T_STRING ( , T_VARIABLE($message_id) , T_STRING ( ) , T_STRING ( ) ) ; T_RETURN ; } T_IF ( T_VARIABLE($version_upstream) > T_VARIABLE($version_local) ) { T_VARIABLE($version) = T_STRING ( T_VARIABLE($version) ) ; T_VARIABLE($date) = T_STRING ( T_VARIABLE($date) ) ; T_STRING ( , T_VARIABLE($message_id) , T_STRING ( ) , T_STRING ( T_STRING ( ) , T_VARIABLE($version) , T_VARIABLE($date) ) ) ; } T_ELSE { T_IF ( T_VARIABLE($version_local) \% T_LNUMBER T_IS_EQUAL T_LNUMBER ) { T_STRING ( , T_VARIABLE($message_id) , T_STRING ( ) , T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($version) , T_VARIABLE($date) ) ) ) ; } T_ELSE { T_STRING ( , T_VARIABLE($message_id) , T_STRING ( ) , T_STRING ( ) ) ; } } } T_FUNCTION(version_to_int) ( T_VARIABLE($version) ) { T_VARIABLE($matches) = T_ARRAY ( ) ; T_IF ( ! T_STRING ( , T_VARIABLE($version) , T_VARIABLE($matches) ) ) { T_RETURN T_STRING ; } T_IF ( ! T_EMPTY ( T_VARIABLE($matches) [ T_LNUMBER ] ) ) { T_SWITCH ( T_VARIABLE($matches) [ T_LNUMBER ] ) { T_CASE : T_VARIABLE($added) = T_LNUMBER ; T_BREAK ; T_CASE : T_VARIABLE($added) = T_LNUMBER ; T_BREAK ; T_CASE : T_VARIABLE($added) = T_LNUMBER ; T_BREAK ; T_CASE : T_VARIABLE($added) = T_LNUMBER ; T_BREAK ; T_CASE : T_VARIABLE($added) = T_LNUMBER ; T_BREAK ; T_DEFAULT : T_STRING ( , , T_STRING ( ) , . T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] ) ) ; T_VARIABLE($added) = T_LNUMBER ; T_BREAK ; } } T_ELSE { T_VARIABLE($added) = T_LNUMBER ; } T_IF ( ! T_EMPTY ( T_VARIABLE($matches) [ T_LNUMBER ] ) ) { T_VARIABLE($added) = T_VARIABLE($added) + T_VARIABLE($matches) [ T_LNUMBER ] ; } T_RETURN T_VARIABLE($matches) [ T_LNUMBER ] * T_LNUMBER + T_VARIABLE($matches) [ T_LNUMBER ] * T_LNUMBER + T_VARIABLE($matches) [ T_LNUMBER ] * T_LNUMBER + T_VARIABLE($added) ; } T_FUNCTION(check_config_rw) ( & T_VARIABLE($is_readable) , & T_VARIABLE($is_writable) , & T_VARIABLE($file_exists) ) { T_VARIABLE($file_path) = T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($file_dir) = T_STRING ( T_VARIABLE($file_path) ) ; T_VARIABLE($is_readable) = T_STRING ; T_VARIABLE($is_writable) = T_STRING ( T_VARIABLE($file_dir) ) ; T_IF ( T_STRING ) { T_VARIABLE($is_writable) = T_VARIABLE($is_writable) T_BOOLEAN_AND T_STRING ( T_VARIABLE($file_dir) ) ; } T_VARIABLE($file_exists) = T_STRING ( T_VARIABLE($file_path) ) ; T_IF ( T_VARIABLE($file_exists) ) { T_VARIABLE($is_readable) = T_STRING ( T_VARIABLE($file_path) ) ; T_VARIABLE($is_writable) = T_VARIABLE($is_writable) T_BOOLEAN_AND T_STRING ( T_VARIABLE($file_path) ) ; } } T_FUNCTION(perform_config_checks) ( ) { T_VARIABLE($cf) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($blowfish_secret) = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($blowfish_secret_set) = T_STRING ; T_VARIABLE($cookie_auth_used) = T_STRING ; T_VARIABLE($strAllowArbitraryServerWarning) = T_STRING ( ) ; T_VARIABLE($strAllowArbitraryServerWarning) = T_STRING ( T_VARIABLE($strAllowArbitraryServerWarning) , , , , ) ; T_VARIABLE($strBlowfishSecretMsg) = T_STRING ( ) ; T_VARIABLE($strBZipDumpWarning) = T_STRING ( ) ; T_VARIABLE($strBZipDumpWarning) = T_STRING ( T_VARIABLE($strBZipDumpWarning) , , , ) ; T_VARIABLE($strDirectoryNotice) = T_STRING ( ) ; T_VARIABLE($strForceSSLNotice) = T_STRING ( ) ; T_VARIABLE($strForceSSLNotice) = T_STRING ( T_VARIABLE($strForceSSLNotice) , , ) ; T_VARIABLE($strGZipDumpWarning) = T_STRING ( ) ; T_VARIABLE($strGZipDumpWarning) = T_STRING ( T_VARIABLE($strGZipDumpWarning) , , , ) ; T_VARIABLE($strLoginCookieValidityWarning) = T_STRING ( ) ; T_VARIABLE($strLoginCookieValidityWarning) = T_STRING ( T_VARIABLE($strLoginCookieValidityWarning) , , , . T_STRING ( ) . , , T_STRING ( ) ) ; T_VARIABLE($strLoginCookieValidityWarning2) = T_STRING ( ) ; T_VARIABLE($strLoginCookieValidityWarning2) = T_STRING ( T_VARIABLE($strLoginCookieValidityWarning2) , , ) ; T_VARIABLE($strLoginCookieValidityWarning3) = T_STRING ( ) ; T_VARIABLE($strLoginCookieValidityWarning3) = T_STRING ( T_VARIABLE($strLoginCookieValidityWarning3) , , , , ) ; T_VARIABLE($strSecurityInfoMsg) = T_STRING ( ) ; T_VARIABLE($strSecurityInfoMsg) = T_STRING ( T_VARIABLE($strSecurityInfoMsg) , , , , ) ; T_VARIABLE($strServerAuthConfigMsg) = T_STRING ( ) ; T_VARIABLE($strServerAuthConfigMsg) = T_STRING ( T_VARIABLE($strServerAuthConfigMsg) , , ) ; T_VARIABLE($strZipDumpExportWarning) = T_STRING ( ) ; T_VARIABLE($strZipDumpExportWarning) = T_STRING ( T_VARIABLE($strZipDumpExportWarning) , , , ) ; T_VARIABLE($strZipDumpImportWarning) = T_STRING ( ) ; T_VARIABLE($strZipDumpImportWarning) = T_STRING ( T_VARIABLE($strZipDumpImportWarning) , , , ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER , T_VARIABLE($server_cnt) = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($server_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($cookie_auth_server) = ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE ) T_IS_EQUAL ) ; T_VARIABLE($cookie_auth_used) T_OR_EQUAL T_VARIABLE($cookie_auth_server) ; T_VARIABLE($server_name) = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($i) ) ; T_IF ( T_VARIABLE($server_name) T_IS_EQUAL ) { T_VARIABLE($server_name) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($server_name) = T_STRING ( T_VARIABLE($server_name) ) ; T_IF ( T_VARIABLE($cookie_auth_server) T_BOOLEAN_AND T_VARIABLE($blowfish_secret) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($blowfish_secret) = T_STRING ( , T_STRING ) ; T_VARIABLE($blowfish_secret_set) = T_STRING ; T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($blowfish_secret) ) ; } T_IF ( ! T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE ) ) { T_VARIABLE($title) = T_STRING ( T_STRING ( ) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($server_name) T_ENCAPSED_AND_WHITESPACE ; T_STRING ( , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE , T_VARIABLE($title) , T_STRING ( ) ) ; } T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE ) T_IS_EQUAL ) { T_VARIABLE($title) = T_STRING ( T_STRING ( ) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($server_name) T_ENCAPSED_AND_WHITESPACE ; T_STRING ( , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE , T_VARIABLE($title) , T_STRING ( ) ) ; } T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE ) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE ) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE ) T_IS_NOT_EQUAL ) { T_VARIABLE($title) = T_STRING ( T_STRING ( ) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($server_name) T_ENCAPSED_AND_WHITESPACE ; T_STRING ( , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE , T_VARIABLE($title) , T_STRING ( T_VARIABLE($strServerAuthConfigMsg) , T_VARIABLE($i) ) . . T_STRING ( T_VARIABLE($strSecurityInfoMsg) , T_VARIABLE($i) ) ) ; } T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE ) T_BOOLEAN_AND T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE ) ) { T_VARIABLE($title) = T_STRING ( T_STRING ( ) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($server_name) T_ENCAPSED_AND_WHITESPACE ; T_STRING ( , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE , T_VARIABLE($title) , T_STRING ( ) . . T_STRING ( T_VARIABLE($strSecurityInfoMsg) , T_VARIABLE($i) ) ) ; } } T_IF ( T_VARIABLE($cookie_auth_used) ) { T_IF ( T_VARIABLE($blowfish_secret_set) ) { T_STRING ( , , T_STRING ( T_STRING ( ) ) , T_VARIABLE($strBlowfishSecretMsg) ) ; } T_ELSE { T_VARIABLE($blowfish_warnings) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($blowfish_secret) ) < T_LNUMBER ) { T_VARIABLE($blowfish_warnings) [ ] = T_STRING ( ) ; } T_VARIABLE($has_digits) = T_BOOL_CAST T_STRING ( , T_VARIABLE($blowfish_secret) ) ; T_VARIABLE($has_chars) = T_BOOL_CAST T_STRING ( , T_VARIABLE($blowfish_secret) ) ; T_VARIABLE($has_nonword) = T_BOOL_CAST T_STRING ( , T_VARIABLE($blowfish_secret) ) ; T_IF ( ! T_VARIABLE($has_digits) T_BOOLEAN_OR ! T_VARIABLE($has_chars) T_BOOLEAN_OR ! T_VARIABLE($has_nonword) ) { T_VARIABLE($blowfish_warnings) [ ] = T_STRING ( T_STRING ( ) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($blowfish_warnings) ) ) { T_STRING ( , . T_STRING ( T_VARIABLE($blowfish_warnings) ) , T_STRING ( T_STRING ( ) ) , T_STRING ( , T_VARIABLE($blowfish_warnings) ) ) ; } } } T_IF ( ! T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) ) { T_STRING ( , , T_STRING ( T_STRING ( ) ) , T_STRING ( T_VARIABLE($strForceSSLNotice) ) ) ; } T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) ) { T_STRING ( , , T_STRING ( T_STRING ( ) ) , T_STRING ( T_VARIABLE($strAllowArbitraryServerWarning) ) ) ; } T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) > T_LNUMBER T_BOOLEAN_OR T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) > T_STRING ( ) ) { T_VARIABLE($message_type) = T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) > T_STRING ( ) ? : ; T_STRING ( T_VARIABLE($message_type) , , T_STRING ( T_STRING ( ) ) , T_STRING ( T_VARIABLE($strLoginCookieValidityWarning) ) ) ; } T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) > T_LNUMBER ) { T_STRING ( , , T_STRING ( T_STRING ( ) ) , T_STRING ( T_VARIABLE($strLoginCookieValidityWarning2) ) ) ; } T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) > T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) ) { T_STRING ( , , T_STRING ( T_STRING ( ) ) , T_STRING ( T_VARIABLE($strLoginCookieValidityWarning3) ) ) ; } T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL ) { T_STRING ( , , T_STRING ( T_STRING ( ) ) , T_STRING ( T_VARIABLE($strDirectoryNotice) ) ) ; } T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL ) { T_STRING ( , , T_STRING ( T_STRING ( ) ) , T_STRING ( T_VARIABLE($strDirectoryNotice) ) ) ; } T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_AND ( @ ! T_STRING ( ) T_BOOLEAN_OR @ ! T_STRING ( ) ) ) { T_STRING ( , , T_STRING ( T_STRING ( ) ) , T_STRING ( T_VARIABLE($strGZipDumpWarning) , ) ) ; } T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_AND ( ! @ T_STRING ( ) T_BOOLEAN_OR ! @ T_STRING ( ) ) ) { T_VARIABLE($functions) = @ T_STRING ( ) ? : ; T_VARIABLE($functions) T_CONCAT_EQUAL @ T_STRING ( ) ? : ( T_VARIABLE($functions) ? : ) . ; T_STRING ( , , T_STRING ( T_STRING ( ) ) , T_STRING ( T_VARIABLE($strBZipDumpWarning) , T_VARIABLE($functions) ) ) ; } T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_AND ! @ T_STRING ( ) ) { T_STRING ( , , T_STRING ( T_STRING ( ) ) , T_STRING ( T_VARIABLE($strZipDumpImportWarning) , ) ) ; } T_IF ( T_VARIABLE($cf) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_AND ! @ T_STRING ( ) ) { T_STRING ( , , T_STRING ( T_STRING ( ) ) , T_STRING ( T_VARIABLE($strZipDumpExportWarning) , ) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE ; T_VARIABLE($validators) = T_ARRAY ( ) ; T_REQUIRE ; T_STRING ( ) ; T_VARIABLE($vids) = T_STRING ( , T_STRING ( T_STRING , ) ) ; T_VARIABLE($values) = T_STRING ( T_STRING ( T_STRING , ) ) ; T_IF ( ! ( T_VARIABLE($values) T_INSTANCEOF T_STRING ) ) { T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($values) = T_ARRAY_CAST T_VARIABLE($values) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($vids) , T_VARIABLE($values) , T_STRING ) ; T_IF ( T_VARIABLE($result) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($result) = . T_VARIABLE($vids) ; } T_ECHO T_VARIABLE($result) T_IS_NOT_IDENTICAL T_STRING ? T_STRING ( T_VARIABLE($result) ) : ; T_CLOSE_TAG',no
'T_OPEN_TAG T_STRING ( . T_STRING ( T_STRING ) ) ; T_STRING ( . ) ; T_IF ( T_ISSET ( T_VARIABLE($_SERVER) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_SERVER) [ ] , ) ) { T_STRING ( ) ; } T_ELSE { T_STRING ( ) ; T_STRING ( . T_STRING ( T_STRING ) ) ; } T_STRING ( ) ; T_REQUIRE ; T_STRING ( T_STRING ) ; T_IF ( T_STRING ( T_STRING ) ) { T_INCLUDE T_STRING ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($ajax_reload) ) T_BOOLEAN_AND T_VARIABLE($ajax_reload) [ ] T_IS_IDENTICAL T_STRING ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($ajax_reload) ) ; } T_VARIABLE($post_params) = T_ARRAY ( , , ) ; T_FOREACH ( T_VARIABLE($post_params) T_AS T_VARIABLE($one_post_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_post_param) ] = T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ; } } T_VARIABLE($get_params) = T_ARRAY ( , , ) ; T_FOREACH ( T_VARIABLE($get_params) T_AS T_VARIABLE($one_get_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_GET) [ T_VARIABLE($one_get_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_get_param) ] = T_VARIABLE($_GET) [ T_VARIABLE($one_get_param) ] ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING T_IS_EQUAL T_BOOLEAN_AND T_STRING < T_LNUMBER ) { T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = T_STRING ; } T_IF ( ! T_EMPTY ( T_VARIABLE($goto) ) ) { T_VARIABLE($is_gotofile) = T_STRING ( , , T_VARIABLE($goto) ) ; T_IF ( ! @ T_STRING ( . T_VARIABLE($is_gotofile) ) ) { T_UNSET ( T_VARIABLE($goto) ) ; } T_ELSE { T_VARIABLE($is_gotofile) = ( T_VARIABLE($is_gotofile) T_IS_EQUAL T_VARIABLE($goto) ) ; } } T_ELSE { T_IF ( T_EMPTY ( T_VARIABLE($table) ) ) { T_VARIABLE($goto) = T_VARIABLE($cfg) [ ] ; } T_ELSE { T_VARIABLE($goto) = T_VARIABLE($cfg) [ ] ; } T_VARIABLE($is_gotofile) = T_STRING ; } T_IF ( ! T_ISSET ( T_VARIABLE($err_url) ) ) { T_VARIABLE($err_url) = ( ! T_EMPTY ( T_VARIABLE($back) ) ? T_VARIABLE($back) : T_VARIABLE($goto) ) . . T_STRING ( T_VARIABLE($db) ) . ( ( T_STRING ( . T_VARIABLE($goto) , ) T_IS_NOT_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($table) ) ) ? . T_STRING ( T_VARIABLE($table) ) : ) ; } T_IF ( T_ISSET ( T_VARIABLE($fields) [ ] ) ) { T_VARIABLE($sql_query) = T_VARIABLE($fields) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($fields) [ ] ) ) { T_VARIABLE($db) = T_VARIABLE($fields) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($column) = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($foreigners) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($column) ) ; T_VARIABLE($display_field) = T_STRING ( T_VARIABLE($foreigners) [ T_VARIABLE($column) ] [ ] , T_VARIABLE($foreigners) [ T_VARIABLE($column) ] [ ] ) ; T_VARIABLE($foreignData) = T_STRING ( T_VARIABLE($foreigners) , T_VARIABLE($column) , T_STRING , , ) ; T_IF ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($display_field) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($display_field) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] ) { T_VARIABLE($curr_value) = T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_VARIABLE($curr_value) = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( T_VARIABLE($foreignData) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db) , T_DOUBLE_ARROW T_VARIABLE($table) , T_DOUBLE_ARROW T_VARIABLE($column) ) ; T_VARIABLE($dropdown) = . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . . . T_STRING ( T_VARIABLE($_url_params) ) . . . . T_STRING ( ) . ; } T_ELSE { T_VARIABLE($dropdown) = T_STRING ( T_VARIABLE($foreignData) [ ] , T_VARIABLE($foreignData) [ ] , T_VARIABLE($foreignData) [ ] , T_VARIABLE($curr_value) , T_VARIABLE($cfg) [ ] ) ; T_VARIABLE($dropdown) = . T_VARIABLE($dropdown) . ; } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($dropdown) ) ; T_EXIT ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($field_info_query) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($field_info_result) = T_STRING ( T_VARIABLE($field_info_query) , T_STRING , T_STRING , T_STRING , T_STRING ) ; T_VARIABLE($values) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($field_info_result) [ T_LNUMBER ] [ ] ) ; T_VARIABLE($dropdown) = ; T_FOREACH ( T_VARIABLE($values) T_AS T_VARIABLE($value) ) { T_VARIABLE($dropdown) T_CONCAT_EQUAL . T_VARIABLE($value) . ; T_IF ( T_VARIABLE($value) T_IS_EQUAL T_VARIABLE($_REQUEST) [ ] ) { T_VARIABLE($dropdown) T_CONCAT_EQUAL ; } T_VARIABLE($dropdown) T_CONCAT_EQUAL . T_VARIABLE($value) . ; } T_VARIABLE($dropdown) = . T_VARIABLE($dropdown) . ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($dropdown) ) ; T_EXIT ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($field_info_query) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($field_info_result) = T_STRING ( T_VARIABLE($field_info_query) , T_STRING , T_STRING , T_STRING , T_STRING ) ; T_VARIABLE($values) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($field_info_result) [ T_LNUMBER ] [ ] ) ; T_VARIABLE($select) = ; T_VARIABLE($converted_curr_value) = T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_STRING , ) ; T_VARIABLE($selected_values) = T_STRING ( , T_VARIABLE($converted_curr_value) ) ; T_FOREACH ( T_VARIABLE($values) T_AS T_VARIABLE($value) ) { T_VARIABLE($select) T_CONCAT_EQUAL . T_VARIABLE($value) . ; T_IF ( T_VARIABLE($value) T_IS_EQUAL T_VARIABLE($converted_curr_value) T_BOOLEAN_OR T_STRING ( T_VARIABLE($value) , T_VARIABLE($selected_values) , T_STRING ) ) { T_VARIABLE($select) T_CONCAT_EQUAL ; } T_VARIABLE($select) T_CONCAT_EQUAL . T_VARIABLE($value) . ; } T_VARIABLE($select_size) = ( T_STRING ( T_VARIABLE($values) ) > T_LNUMBER ) ? T_LNUMBER : T_STRING ( T_VARIABLE($values) ) ; T_VARIABLE($select) = . T_VARIABLE($select_size) . . T_VARIABLE($select) . ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($select) ) ; T_EXIT ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($pmatable) = T_NEW T_STRING ( T_VARIABLE($table) , T_VARIABLE($db) ) ; T_VARIABLE($retval) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($col_order) = T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($retval) = T_VARIABLE($pmatable) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($col_order) , T_VARIABLE($_REQUEST) [ ] ) ; T_IF ( T_STRING ( T_VARIABLE($retval) ) T_IS_NOT_EQUAL ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($retval) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_EXIT ; } } T_IF ( T_VARIABLE($retval) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($col_visib) = T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($retval) = T_VARIABLE($pmatable) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($col_visib) , T_VARIABLE($_REQUEST) [ ] ) ; T_IF ( T_STRING ( T_VARIABLE($retval) ) T_IS_NOT_EQUAL ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($retval) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_EXIT ; } } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($retval) T_IS_EQUAL T_STRING ) ; T_EXIT ; } T_IF ( T_EMPTY ( T_VARIABLE($sql_query) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($table) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($db) ) ) { T_INCLUDE_ONCE ; T_VARIABLE($book_sql_query) = T_STRING ( T_VARIABLE($db) , . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . , , T_STRING , T_STRING ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($book_sql_query) ) ) { T_VARIABLE($GLOBALS) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( , ) ) ; T_VARIABLE($sql_query) = T_VARIABLE($book_sql_query) ; } T_ELSE { T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; } T_UNSET ( T_VARIABLE($book_sql_query) ) ; T_VARIABLE($goto) = ; } T_ELSE { T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( ) ) ; } T_VARIABLE($is_drop_database) = T_STRING ( , T_VARIABLE($sql_query) ) ; T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ! T_VARIABLE($cfg) [ ] T_BOOLEAN_AND T_VARIABLE($is_drop_database) T_BOOLEAN_AND ! T_VARIABLE($is_superuser) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , , , T_VARIABLE($err_url) ) ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($displayResultsObject) = T_NEW T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($displayResultsObject) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($find_real_end) ) T_BOOLEAN_AND T_VARIABLE($find_real_end) ) { T_VARIABLE($unlim_num_rows) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_STRING ) ; T_VARIABLE($_SESSION) [ ] [ ] = @ ( ( T_STRING ( T_VARIABLE($unlim_num_rows) / T_VARIABLE($_SESSION) [ ] [ ] ) - T_LNUMBER ) * T_VARIABLE($_SESSION) [ ] [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($store_bkm) ) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($fields) , ( T_ISSET ( T_VARIABLE($bkm_all_users) ) T_BOOLEAN_AND T_VARIABLE($bkm_all_users) T_IS_EQUAL ? T_STRING : T_STRING ) ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ) { T_IF ( T_VARIABLE($result) ) { T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($fields) [ ] ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($msg) ) ; } T_ELSE { T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($msg) ) ; } T_EXIT ; } T_ELSE { T_STRING ( T_VARIABLE($cfg) [ ] . T_VARIABLE($goto) . . T_VARIABLE($fields) [ ] ) ; } } T_REQUIRE_ONCE ; T_IF ( T_VARIABLE($goto) T_IS_EQUAL ) { T_VARIABLE($is_gotofile) = T_STRING ; T_VARIABLE($goto) = . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) . . T_STRING ( T_VARIABLE($sql_query) ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ( ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($back) ) ) { T_VARIABLE($goto) = T_VARIABLE($back) ; } T_IF ( T_VARIABLE($is_gotofile) ) { T_IF ( T_STRING ( T_VARIABLE($goto) , ) T_IS_IDENTICAL T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($table) ) ) { T_VARIABLE($table) = ; } T_VARIABLE($active_page) = T_VARIABLE($goto) ; T_INCLUDE . T_STRING ( T_VARIABLE($goto) ) ; } T_ELSE { T_STRING ( T_VARIABLE($cfg) [ ] . T_STRING ( , , T_VARIABLE($goto) ) ) ; } T_EXIT ( ) ; } T_IF ( ! T_VARIABLE($cfg) [ ] T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($do_confirm) = T_STRING ; } T_ELSE { T_VARIABLE($do_confirm) = T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) ; } T_IF ( T_VARIABLE($do_confirm) ) { T_VARIABLE($stripped_sql_query) = T_VARIABLE($sql_query) ; T_VARIABLE($input) = ; T_VARIABLE($output) = ; T_IF ( T_VARIABLE($is_drop_database) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; } T_VARIABLE($form) = ; T_VARIABLE($form) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($form) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($input) , , T_STRING ( T_VARIABLE($sql_query) ) ) ; T_VARIABLE($form) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($input) , , ( T_ISSET ( T_VARIABLE($message_to_show) ) ? T_STRING ( T_VARIABLE($message_to_show) , T_STRING ) : ) ) ; T_VARIABLE($form) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($input) , , T_VARIABLE($goto) ) ; T_VARIABLE($form) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($input) , , ( T_ISSET ( T_VARIABLE($back) ) ? T_STRING ( T_VARIABLE($back) , T_STRING ) : ) ) ; T_VARIABLE($form) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($input) , , ( T_ISSET ( T_VARIABLE($reload) ) ? T_STRING ( T_VARIABLE($reload) , T_STRING ) : ) ) ; T_VARIABLE($form) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($input) , , ( T_ISSET ( T_VARIABLE($purge) ) ? T_STRING ( T_VARIABLE($purge) , T_STRING ) : ) ) ; T_VARIABLE($form) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($input) , , ( T_ISSET ( T_VARIABLE($dropped_column) ) ? T_STRING ( T_VARIABLE($dropped_column) , T_STRING ) : ) ) ; T_VARIABLE($form) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($input) , , ( T_ISSET ( T_VARIABLE($message_to_show) ) ? T_STRING ( T_VARIABLE($show_query) , T_STRING ) : ) ) ; T_VARIABLE($form) = T_STRING ( , , T_VARIABLE($form) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . . T_STRING ( ) . . . T_STRING ( T_VARIABLE($stripped_sql_query) ) . . . ; T_VARIABLE($yes_input) = T_STRING ( T_VARIABLE($input) , , T_STRING ( ) ) ; T_VARIABLE($yes_input) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($no_input) = T_STRING ( T_VARIABLE($input) , , T_STRING ( ) ) ; T_VARIABLE($no_input) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) , T_VARIABLE($yes_input) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) , T_VARIABLE($no_input) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($output) ) ; T_EXIT ; } T_IF ( T_EMPTY ( T_VARIABLE($reload) ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($sql_query) ) ) { T_VARIABLE($reload) = T_LNUMBER ; } T_LIST ( T_VARIABLE($is_group) , T_VARIABLE($is_func) , T_VARIABLE($is_count) , T_VARIABLE($is_export) , T_VARIABLE($is_analyse) , T_VARIABLE($is_explain) , T_VARIABLE($is_delete) , T_VARIABLE($is_affected) , T_VARIABLE($is_insert) , T_VARIABLE($is_replace) , T_VARIABLE($is_show) , T_VARIABLE($is_maint) ) = T_STRING ( T_VARIABLE($sql_query) , T_VARIABLE($is_select) ) ; T_VARIABLE($full_sql_query) = T_VARIABLE($sql_query) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND ! ( T_VARIABLE($is_count) T_BOOLEAN_OR T_VARIABLE($is_export) T_BOOLEAN_OR T_VARIABLE($is_func) T_BOOLEAN_OR T_VARIABLE($is_analyse) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_IS_EQUAL T_LNUMBER ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_IS_EQUAL T_LNUMBER ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($analyzed_sql) , T_VARIABLE($full_sql_query) ) ; } T_VARIABLE($sql_limit_to_append) = ; T_IF ( ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_NOT_EQUAL ) T_BOOLEAN_AND ! ( T_VARIABLE($is_count) T_BOOLEAN_OR T_VARIABLE($is_export) T_BOOLEAN_OR T_VARIABLE($is_func) T_BOOLEAN_OR T_VARIABLE($is_analyse) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($sql_limit_to_append) = . T_VARIABLE($_SESSION) [ ] [ ] . . T_VARIABLE($_SESSION) [ ] [ ] . ; T_VARIABLE($full_sql_query) = T_STRING ( T_VARIABLE($full_sql_query) , T_VARIABLE($analyzed_sql) , T_VARIABLE($sql_limit_to_append) ) ; T_IF ( T_ISSET ( T_VARIABLE($display_query) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_IS_NOT_EQUAL ) { T_VARIABLE($analyzed_display_query) = T_STRING ( T_STRING ( T_VARIABLE($display_query) ) ) ; T_VARIABLE($display_query) = T_VARIABLE($analyzed_display_query) [ T_LNUMBER ] [ ] . . T_VARIABLE($sql_limit_to_append) . T_VARIABLE($analyzed_display_query) [ T_LNUMBER ] [ ] ; } } } T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_STRING ( T_VARIABLE($db) ) ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_UNSET ( T_VARIABLE($result) ) ; T_VARIABLE($num_rows) = T_LNUMBER ; T_VARIABLE($unlim_num_rows) = T_LNUMBER ; } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( ) ) { T_STRING ( ) ; } T_VARIABLE($querytime_before) = T_STRING ( T_STRING ( , T_STRING ( ) ) ) ; T_VARIABLE($result) = @ T_STRING ( T_VARIABLE($full_sql_query) , T_STRING , T_STRING ) ; T_DO { T_STRING ( ) ; T_IF ( ! T_STRING ( ) ) { T_BREAK ; } } T_WHILE ( T_STRING ( ) ) ; T_VARIABLE($is_procedure) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($full_sql_query) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($is_procedure) = T_STRING ; } T_VARIABLE($querytime_after) = T_STRING ( T_STRING ( , T_STRING ( ) ) ) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($querytime_after) - T_VARIABLE($querytime_before) ; T_VARIABLE($error) = T_STRING ( ) ; T_IF ( T_VARIABLE($error) ) { T_IF ( T_VARIABLE($is_gotofile) ) { T_IF ( T_STRING ( T_VARIABLE($goto) , ) T_IS_IDENTICAL T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($table) ) ) { T_VARIABLE($table) = ; } T_VARIABLE($active_page) = T_VARIABLE($goto) ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($error) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_EXIT ; } T_INCLUDE . T_STRING ( T_VARIABLE($goto) ) ; } T_ELSE { T_VARIABLE($full_err_url) = T_VARIABLE($err_url) ; T_IF ( T_STRING ( , T_VARIABLE($err_url) ) ) { T_VARIABLE($full_err_url) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($sql_query) ) ; } T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($error) , T_VARIABLE($full_sql_query) , , T_VARIABLE($full_err_url) ) ; } T_EXIT ; } T_UNSET ( T_VARIABLE($error) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($bkm_label) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($import_text) ) ) { T_INCLUDE_ONCE ; T_VARIABLE($bfields) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db) , T_DOUBLE_ARROW T_VARIABLE($cfg) [ ] [ ] , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($import_text) ) , T_DOUBLE_ARROW T_VARIABLE($bkm_label) ) ; T_IF ( T_ISSET ( T_VARIABLE($bkm_replace) ) ) { T_VARIABLE($bookmarks) = T_STRING ( T_VARIABLE($db) ) ; T_FOREACH ( T_VARIABLE($bookmarks) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_IF ( T_VARIABLE($val) T_IS_EQUAL T_VARIABLE($bkm_label) ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($key) ) ; } } } T_STRING ( T_VARIABLE($bfields) , T_ISSET ( T_VARIABLE($bkm_all_users) ) ) ; T_VARIABLE($bookmark_created) = T_STRING ; } T_IF ( ! T_VARIABLE($is_affected) ) { T_VARIABLE($num_rows) = ( T_VARIABLE($result) ) ? @ T_STRING ( T_VARIABLE($result) ) : T_LNUMBER ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($num_rows) ) ) { T_VARIABLE($num_rows) = @ T_STRING ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( ) ) { T_VARIABLE($profiling_results) = T_STRING ( ) ; } T_IF ( T_STRING ( ) T_BOOLEAN_AND ( T_ISSET ( T_VARIABLE($textfile) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($textfile) ) ) ) { T_STRING ( T_VARIABLE($textfile) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($sql_limit_to_append) ) ) { T_VARIABLE($unlim_num_rows) = T_VARIABLE($num_rows) ; } T_ELSEIF ( T_VARIABLE($is_select) ) { T_IF ( ! T_VARIABLE($is_group) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND ( T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_BOOLEAN_OR T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_IS_EQUAL ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($find_real_end) ) ) { T_VARIABLE($unlim_num_rows) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_ELSE { T_VARIABLE($count_query) = T_STRING ( T_VARIABLE($parsed_sql) , , T_LNUMBER , T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] + T_LNUMBER ) ; T_VARIABLE($count_query) T_CONCAT_EQUAL ; T_VARIABLE($count_query) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($parsed_sql) , , T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] + T_LNUMBER ) ; T_VARIABLE($count_query) = T_STRING ( T_VARIABLE($count_query) ) ; T_VARIABLE($count_query) = T_STRING ( T_VARIABLE($count_query) , ) ; T_IF ( ! T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) ) { T_VARIABLE($count_query) T_CONCAT_EQUAL ; } T_STRING ( T_VARIABLE($count_query) ) ; T_VARIABLE($unlim_num_rows) = T_STRING ( ) ; } } T_ELSE { T_VARIABLE($unlim_num_rows) = T_LNUMBER ; } T_IF ( T_ISSET ( T_VARIABLE($purge) ) T_BOOLEAN_AND T_VARIABLE($purge) T_IS_EQUAL ) { T_INCLUDE_ONCE ; T_IF ( T_STRING ( T_VARIABLE($table) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($db) ) ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($db) ) ) { T_STRING ( T_VARIABLE($db) ) ; } T_ELSE { } } T_IF ( T_ISSET ( T_VARIABLE($dropped_column) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($db) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($table) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($dropped_column) ) ) { T_INCLUDE_ONCE ; T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($dropped_column) ) ; T_VARIABLE($extra_data) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($db) ) ; } } T_IF ( ( T_LNUMBER T_IS_EQUAL T_VARIABLE($num_rows) T_BOOLEAN_AND T_LNUMBER T_IS_EQUAL T_VARIABLE($unlim_num_rows) ) T_BOOLEAN_OR T_VARIABLE($is_affected) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND ( ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_IS_EQUAL ) ) ) { T_INCLUDE_ONCE ; T_IF ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_IS_EQUAL ) { T_IF ( T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($drop_column) = T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ; T_IF ( T_VARIABLE($drop_column) T_IS_NOT_EQUAL ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($drop_column) ) ; } } } T_ELSE T_IF ( ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_IS_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($table) T_IS_NOT_EQUAL ) ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } } T_IF ( T_VARIABLE($is_delete) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($num_rows) ) ; } T_ELSEIF ( T_VARIABLE($is_insert) ) { T_IF ( T_VARIABLE($is_replace) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($num_rows) ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($num_rows) ) ; } T_VARIABLE($insert_id) = T_STRING ( ) ; T_IF ( T_VARIABLE($insert_id) T_IS_NOT_EQUAL T_LNUMBER ) { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($_inserted) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($_inserted) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($insert_id) + T_VARIABLE($num_rows) - T_LNUMBER ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_inserted) ) ; } } T_ELSEIF ( T_VARIABLE($is_affected) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($num_rows) ) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($message_to_show) ) T_BOOLEAN_AND ! T_VARIABLE($is_select) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($message_to_show) ) ) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($_querytime) = T_STRING T_DOUBLE_COLON T_STRING ( . T_STRING ( ) . ) ; T_VARIABLE($_querytime) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_querytime) ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($cfg) [ ] ) { T_VARIABLE($extra_data) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) , T_VARIABLE($GLOBALS) [ ] , ) ; } T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($extra_data) [ ] = T_LNUMBER ; T_VARIABLE($extra_data) [ ] = T_VARIABLE($GLOBALS) [ ] ; } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_ISSET ( T_VARIABLE($extra_data) ) ? T_VARIABLE($extra_data) : T_ARRAY ( ) ) ; T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_EXIT ; } } T_IF ( T_VARIABLE($is_gotofile) ) { T_VARIABLE($goto) = T_STRING ( T_VARIABLE($goto) ) ; T_VARIABLE($is_db) = T_VARIABLE($is_table) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($table) = ; T_UNSET ( T_VARIABLE($url_params) [ ] ) ; } T_INCLUDE ; T_IF ( T_STRING ( T_VARIABLE($goto) , ) T_IS_IDENTICAL T_LNUMBER T_BOOLEAN_AND ! T_VARIABLE($is_table) ) { T_IF ( T_STRING ( T_VARIABLE($table) ) ) { T_VARIABLE($table) = ; } T_VARIABLE($goto) = ; } T_IF ( T_STRING ( T_VARIABLE($goto) , ) T_IS_IDENTICAL T_LNUMBER T_BOOLEAN_AND ! T_VARIABLE($is_db) ) { T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($db) = ; } T_VARIABLE($goto) = ; } T_IF ( T_STRING ( T_VARIABLE($goto) ) > T_LNUMBER ) { T_VARIABLE($active_page) = T_VARIABLE($goto) ; T_INCLUDE . T_VARIABLE($goto) ; } T_ELSE { T_ECHO ; } } T_ELSE { T_IF ( T_LNUMBER T_IS_EQUAL T_VARIABLE($num_rows) T_BOOLEAN_AND T_IS_EQUAL T_VARIABLE($cfg) [ ] ) { T_VARIABLE($goto) = T_STRING ( , , T_VARIABLE($goto) ) ; } T_STRING ( T_VARIABLE($cfg) [ ] . T_STRING ( , , T_VARIABLE($goto) ) . . T_STRING ( T_VARIABLE($message) ) ) ; } T_EXIT ( ) ; } T_ELSE { T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($row) [ T_LNUMBER ] ) ; T_EXIT ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($result) ) T_BOOLEAN_AND T_VARIABLE($result) ) { T_VARIABLE($fields_meta) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($fields_cnt) = T_STRING ( T_VARIABLE($fields_meta) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($disp_mode) ) ) { T_VARIABLE($disp_mode) = ; } T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($disp_mode) = ; } T_IF ( T_ISSET ( T_VARIABLE($message) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) ) ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) , T_VARIABLE($GLOBALS) [ ] , ) ; } T_VARIABLE($showtable) = T_ISSET ( T_VARIABLE($showtable) ) ? T_VARIABLE($showtable) : T_STRING ; T_VARIABLE($printview) = T_ISSET ( T_VARIABLE($printview) ) ? T_VARIABLE($printview) : T_STRING ; T_VARIABLE($url_query) = T_ISSET ( T_VARIABLE($url_query) ) ? T_VARIABLE($url_query) : T_STRING ; T_IF ( ! T_EMPTY ( T_VARIABLE($sql_data) ) T_BOOLEAN_AND ( T_VARIABLE($sql_data) [ ] > T_LNUMBER ) ) { T_VARIABLE($_SESSION) [ ] = T_STRING ; T_ECHO T_STRING ( T_VARIABLE($displayResultsObject) , T_VARIABLE($db) , T_VARIABLE($sql_data) , T_VARIABLE($goto) , T_VARIABLE($pmaThemeImage) , T_VARIABLE($text_dir) , T_VARIABLE($printview) , T_VARIABLE($url_query) , T_VARIABLE($disp_mode) , T_VARIABLE($sql_limit_to_append) , T_STRING ) ; } T_ELSE { T_VARIABLE($_SESSION) [ ] = T_STRING ; T_VARIABLE($displayResultsObject) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($unlim_num_rows) , T_VARIABLE($fields_meta) , T_VARIABLE($is_count) , T_VARIABLE($is_export) , T_VARIABLE($is_func) , T_VARIABLE($is_analyse) , T_VARIABLE($num_rows) , T_VARIABLE($fields_cnt) , T_VARIABLE($querytime) , T_VARIABLE($pmaThemeImage) , T_VARIABLE($text_dir) , T_VARIABLE($is_maint) , T_VARIABLE($is_explain) , T_VARIABLE($is_show) , T_VARIABLE($showtable) , T_VARIABLE($printview) , T_VARIABLE($url_query) , T_STRING ) ; T_ECHO T_VARIABLE($displayResultsObject) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($result) , T_VARIABLE($disp_mode) , T_VARIABLE($analyzed_sql) ) ; T_EXIT ( ) ; } } T_IF ( T_ISSET ( T_VARIABLE($show_query) ) ) { T_UNSET ( T_VARIABLE($show_query) ) ; } T_IF ( T_ISSET ( T_VARIABLE($printview) ) T_BOOLEAN_AND T_VARIABLE($printview) T_IS_EQUAL ) { T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( , ) ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($hostname) = ; T_IF ( T_VARIABLE($cfg) [ ] [ ] ) { T_VARIABLE($hostname) = T_VARIABLE($cfg) [ ] [ ] ; } T_ELSE { T_VARIABLE($hostname) = T_VARIABLE($cfg) [ ] [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] [ ] ) ) { T_VARIABLE($hostname) T_CONCAT_EQUAL T_VARIABLE($cfg) [ ] [ ] ; } } T_VARIABLE($versions) = . T_STRING ; T_VARIABLE($versions) T_CONCAT_EQUAL ; T_VARIABLE($versions) T_CONCAT_EQUAL . T_STRING ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO . T_STRING ( ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($hostname) T_ENCAPSED_AND_WHITESPACE ; T_ECHO . T_STRING ( ) . . T_STRING ( T_VARIABLE($db) ) . ; T_ECHO . T_STRING ( ) . . T_STRING T_DOUBLE_COLON T_STRING ( ) . ; T_ECHO . T_STRING ( ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($versions) T_ENCAPSED_AND_WHITESPACE ; T_ECHO . T_STRING ( ) . . T_STRING ( T_VARIABLE($full_sql_query) ) . ; T_IF ( T_ISSET ( T_VARIABLE($num_rows) ) ) { T_ECHO ; T_ECHO . T_STRING ( ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($num_rows) ; } T_ECHO ; } T_ELSE { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_UNSET ( T_VARIABLE($message) ) ; T_IF ( ! T_VARIABLE($GLOBALS) [ ] ) { T_IF ( T_STRING ( T_VARIABLE($table) ) ) { T_INCLUDE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_INCLUDE ; } T_ELSEIF ( T_STRING ( T_VARIABLE($db) ) ) { T_INCLUDE ; T_INCLUDE ; } T_ELSE { T_INCLUDE ; } } T_ELSE { T_VARIABLE($GLOBALS) [ ] = T_STRING ; } } T_IF ( T_STRING ( T_VARIABLE($db) ) ) { T_VARIABLE($cfgRelation) = T_STRING ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($result) ) T_BOOLEAN_AND T_VARIABLE($result) ) { T_VARIABLE($fields_meta) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($fields_cnt) = T_STRING ( T_VARIABLE($fields_meta) ) ; } T_ECHO ; T_ECHO ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($disp_query) ) T_BOOLEAN_AND ( T_VARIABLE($cfg) [ ] T_IS_EQUAL T_STRING ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($sql_data) ) ) { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($disp_message) , T_VARIABLE($disp_query) , ) ; } T_IF ( T_ISSET ( T_VARIABLE($profiling_results) ) ) { T_ECHO ; T_ECHO . T_VARIABLE($_SESSION) [ ] . ; T_ECHO . ( T_ISSET ( T_VARIABLE($url_query) ) ? T_VARIABLE($url_query) : T_STRING ( T_VARIABLE($db) ) ) . ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . . ; T_ECHO ; T_ECHO . ; T_ECHO . ; T_ECHO . T_STRING ( ) . T_STRING T_DOUBLE_COLON T_STRING ( , ) . . ; T_ECHO . T_STRING ( ) . . ; T_ECHO . ; T_VARIABLE($chart_json) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($profiling_results) T_AS T_VARIABLE($one_result) ) { T_ECHO . ; T_ECHO . T_STRING ( T_VARIABLE($one_result) [ ] ) . . ; T_ECHO . ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($one_result) [ ] , T_LNUMBER , T_LNUMBER ) ) . . ; T_IF ( T_ISSET ( T_VARIABLE($chart_json) [ T_STRING ( T_VARIABLE($one_result) [ ] ) ] ) ) { T_VARIABLE($chart_json) [ T_STRING ( T_VARIABLE($one_result) [ ] ) ] T_PLUS_EQUAL T_VARIABLE($one_result) [ ] ; } T_ELSE { T_VARIABLE($chart_json) [ T_STRING ( T_VARIABLE($one_result) [ ] ) ] = T_VARIABLE($one_result) [ ] ; } } T_ECHO . ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( T_VARIABLE($chart_json) ) ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . ; } T_IF ( T_EMPTY ( T_VARIABLE($disp_mode) ) ) { T_VARIABLE($disp_mode) = ; } T_VARIABLE($resultSetContainsUniqueKey) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($fields_meta) ) ; T_IF ( T_STRING ( T_VARIABLE($db) ) T_BOOLEAN_OR ! T_VARIABLE($resultSetContainsUniqueKey) ) { T_VARIABLE($disp_mode) = ; T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . . ) ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($label) ) ) { T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($label) ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($showtable) = T_ISSET ( T_VARIABLE($showtable) ) ? T_VARIABLE($showtable) : T_STRING ; T_VARIABLE($printview) = T_ISSET ( T_VARIABLE($printview) ) ? T_VARIABLE($printview) : T_STRING ; T_VARIABLE($url_query) = T_ISSET ( T_VARIABLE($url_query) ) ? T_VARIABLE($url_query) : T_STRING ; T_IF ( ! T_EMPTY ( T_VARIABLE($sql_data) ) T_BOOLEAN_AND ( T_VARIABLE($sql_data) [ ] > T_LNUMBER ) T_BOOLEAN_OR T_VARIABLE($is_procedure) ) { T_VARIABLE($_SESSION) [ ] = T_STRING ; T_ECHO T_STRING ( T_VARIABLE($displayResultsObject) , T_VARIABLE($db) , T_VARIABLE($sql_data) , T_VARIABLE($goto) , T_VARIABLE($pmaThemeImage) , T_VARIABLE($text_dir) , T_VARIABLE($printview) , T_VARIABLE($url_query) , T_VARIABLE($disp_mode) , T_VARIABLE($sql_limit_to_append) , T_VARIABLE($resultSetContainsUniqueKey) ) ; } T_ELSE { T_VARIABLE($_SESSION) [ ] = T_STRING ; T_VARIABLE($displayResultsObject) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($unlim_num_rows) , T_VARIABLE($fields_meta) , T_VARIABLE($is_count) , T_VARIABLE($is_export) , T_VARIABLE($is_func) , T_VARIABLE($is_analyse) , T_VARIABLE($num_rows) , T_VARIABLE($fields_cnt) , T_VARIABLE($querytime) , T_VARIABLE($pmaThemeImage) , T_VARIABLE($text_dir) , T_VARIABLE($is_maint) , T_VARIABLE($is_explain) , T_VARIABLE($is_show) , T_VARIABLE($showtable) , T_VARIABLE($printview) , T_VARIABLE($url_query) , T_VARIABLE($resultSetContainsUniqueKey) ) ; T_ECHO T_VARIABLE($displayResultsObject) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($result) , T_VARIABLE($disp_mode) , T_VARIABLE($analyzed_sql) ) ; T_STRING ( T_VARIABLE($result) ) ; } T_IF ( T_ISSET ( T_VARIABLE($query_type) ) T_BOOLEAN_AND T_VARIABLE($query_type) T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($selected) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($selected) ) ) { T_FOREACH ( T_VARIABLE($selected) T_AS T_VARIABLE($idx) T_DOUBLE_ARROW T_VARIABLE($tbl_name) ) { T_VARIABLE($check) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tbl_name) , T_VARIABLE($db) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($check) ) ) { T_STRING ( T_STRING ( ) , T_VARIABLE($tbl_name) ) ; T_ECHO T_VARIABLE($check) ; } } } T_IF ( T_VARIABLE($disp_mode) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND ( ! T_EMPTY ( T_VARIABLE($cfg) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($id_bookmark) ) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($sql_query) ) ) { T_ECHO ; T_VARIABLE($goto) = . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) . . T_STRING ( T_VARIABLE($sql_query) ) . ; T_ECHO . . ; T_ECHO T_STRING ( ) ; T_ECHO . T_VARIABLE($goto) . ; T_ECHO . . T_STRING ( T_VARIABLE($db) ) . ; T_ECHO . . T_VARIABLE($cfg) [ ] [ ] . ; T_ECHO . . T_STRING ( T_ISSET ( T_VARIABLE($complete_query) ) ? T_VARIABLE($complete_query) : T_VARIABLE($sql_query) ) . ; T_ECHO ; T_ECHO ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) , T_STRING ) ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . ; T_ECHO ; T_ECHO ; T_ECHO . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . . T_STRING ( ) . ; T_ECHO ; T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($printview) ) T_BOOLEAN_AND T_VARIABLE($printview) T_IS_EQUAL ) { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( ) ; } T_ECHO ; } T_VARIABLE($_SESSION) [ ] = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_EXIT ; } T_FUNCTION(PMA_getDisplayPropertyParams) ( T_VARIABLE($sql_query) , T_VARIABLE($is_select) ) { T_VARIABLE($is_explain) = T_VARIABLE($is_count) = T_VARIABLE($is_export) = T_VARIABLE($is_delete) = T_VARIABLE($is_insert) = T_VARIABLE($is_affected) = T_VARIABLE($is_show) = T_VARIABLE($is_maint) = T_VARIABLE($is_analyse) = T_VARIABLE($is_group) = T_VARIABLE($is_func) = T_VARIABLE($is_replace) = T_STRING ; T_IF ( T_VARIABLE($is_select) ) { T_VARIABLE($is_group) = T_STRING ( , T_VARIABLE($sql_query) ) ; T_VARIABLE($is_func) = ! T_VARIABLE($is_group) T_BOOLEAN_AND ( T_STRING ( , T_VARIABLE($sql_query) ) ) ; T_VARIABLE($is_count) = ! T_VARIABLE($is_group) T_BOOLEAN_AND ( T_STRING ( , T_VARIABLE($sql_query) ) ) ; T_VARIABLE($is_export) = T_STRING ( , T_VARIABLE($sql_query) ) ; T_VARIABLE($is_analyse) = T_STRING ( , T_VARIABLE($sql_query) ) ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($sql_query) ) ) { T_VARIABLE($is_explain) = T_STRING ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($sql_query) ) ) { T_VARIABLE($is_delete) = T_STRING ; T_VARIABLE($is_affected) = T_STRING ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($sql_query) ) ) { T_VARIABLE($is_insert) = T_STRING ; T_VARIABLE($is_affected) = T_STRING ; T_IF ( T_STRING ( , T_VARIABLE($sql_query) ) ) { T_VARIABLE($is_replace) = T_STRING ; } } T_ELSEIF ( T_STRING ( , T_VARIABLE($sql_query) ) ) { T_VARIABLE($is_affected) = T_STRING ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($sql_query) ) ) { T_VARIABLE($is_show) = T_STRING ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($sql_query) ) ) { T_VARIABLE($is_maint) = T_STRING ; } T_RETURN T_ARRAY ( T_VARIABLE($is_group) , T_VARIABLE($is_func) , T_VARIABLE($is_count) , T_VARIABLE($is_export) , T_VARIABLE($is_analyse) , T_VARIABLE($is_explain) , T_VARIABLE($is_delete) , T_VARIABLE($is_affected) , T_VARIABLE($is_insert) , T_VARIABLE($is_replace) , T_VARIABLE($is_show) , T_VARIABLE($is_maint) ) ; } T_FUNCTION(PMA_getNewDatabase) ( T_VARIABLE($sql) , T_VARIABLE($databases) ) { T_VARIABLE($db) = ; T_FOREACH ( T_VARIABLE($databases) T_AS T_VARIABLE($database) ) { T_IF ( T_STRING ( T_VARIABLE($sql) , T_VARIABLE($database) [ ] ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($db) = T_VARIABLE($database) ; T_BREAK ; } } T_RETURN T_VARIABLE($db) ; } T_FUNCTION(PMA_getTableNameBySQL) ( T_VARIABLE($sql) , T_VARIABLE($tables) ) { T_VARIABLE($table) = ; T_FOREACH ( T_VARIABLE($tables) T_AS T_VARIABLE($tbl) ) { T_IF ( T_STRING ( T_VARIABLE($sql) , T_VARIABLE($tbl) ) ) { T_VARIABLE($table) T_CONCAT_EQUAL . T_VARIABLE($tbl) ; } } T_IF ( T_STRING ( T_STRING ( , T_STRING ( T_VARIABLE($table) ) ) ) > T_LNUMBER ) { T_VARIABLE($tmp_array) = T_STRING ( , T_STRING ( T_VARIABLE($table) ) ) ; T_RETURN T_VARIABLE($tmp_array) [ T_LNUMBER ] ; } T_RETURN T_STRING ( T_VARIABLE($table) ) ; } T_FUNCTION(getTableHtmlForMultipleQueries) ( T_VARIABLE($displayResultsObject) , T_VARIABLE($db) , T_VARIABLE($sql_data) , T_VARIABLE($goto) , T_VARIABLE($pmaThemeImage) , T_VARIABLE($text_dir) , T_VARIABLE($printview) , T_VARIABLE($url_query) , T_VARIABLE($disp_mode) , T_VARIABLE($sql_limit_to_append) , T_VARIABLE($resultSetContainsUniqueKey) ) { T_VARIABLE($table_html) = ; T_VARIABLE($tables_array) = T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($databases_array) = T_STRING ( ) ; T_VARIABLE($multi_sql) = T_STRING ( , T_VARIABLE($sql_data) [ ] ) ; T_VARIABLE($querytime_before) = T_STRING ( T_STRING ( , T_STRING ( ) ) ) ; @ T_STRING ( T_VARIABLE($multi_sql) ) ; T_VARIABLE($querytime_after) = T_STRING ( T_STRING ( , T_STRING ( ) ) ) ; T_VARIABLE($querytime) = T_VARIABLE($querytime_after) - T_VARIABLE($querytime_before) ; T_VARIABLE($sql_no) = T_LNUMBER ; T_DO { T_VARIABLE($analyzed_sql) = T_ARRAY ( ) ; T_VARIABLE($is_affected) = T_STRING ; T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($fields_meta) = ( T_VARIABLE($result) T_IS_NOT_IDENTICAL T_STRING ) ? T_STRING ( T_VARIABLE($result) ) : T_ARRAY ( ) ; T_VARIABLE($fields_cnt) = T_STRING ( T_VARIABLE($fields_meta) ) ; T_IF ( T_ISSET ( T_VARIABLE($sql_data) [ ] [ T_VARIABLE($sql_no) ] ) ) { T_IF ( T_STRING ( T_VARIABLE($sql_data) [ ] [ T_VARIABLE($sql_no) ] , ) ) { T_VARIABLE($db) = T_STRING ( T_VARIABLE($sql_data) [ ] [ T_VARIABLE($sql_no) ] , T_VARIABLE($databases_array) ) ; } T_VARIABLE($parsed_sql) = T_STRING ( T_VARIABLE($sql_data) [ ] [ T_VARIABLE($sql_no) ] ) ; T_VARIABLE($table) = T_STRING ( T_VARIABLE($sql_data) [ ] [ T_VARIABLE($sql_no) ] , T_VARIABLE($tables_array) ) ; T_VARIABLE($analyzed_sql) = T_STRING ( T_VARIABLE($parsed_sql) ) ; T_VARIABLE($is_select) = T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) ; T_VARIABLE($unlim_num_rows) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_STRING ) ; T_VARIABLE($showtable) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_STRING , T_STRING ) ; T_VARIABLE($url_query) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_LIST ( T_VARIABLE($is_group) , T_VARIABLE($is_func) , T_VARIABLE($is_count) , T_VARIABLE($is_export) , T_VARIABLE($is_analyse) , T_VARIABLE($is_explain) , T_VARIABLE($is_delete) , T_VARIABLE($is_affected) , T_VARIABLE($is_insert) , T_VARIABLE($is_replace) , T_VARIABLE($is_show) , T_VARIABLE($is_maint) ) = T_STRING ( T_VARIABLE($sql_data) [ ] [ T_VARIABLE($sql_no) ] , T_VARIABLE($is_select) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_AND ! ( T_VARIABLE($is_count) T_BOOLEAN_OR T_VARIABLE($is_export) T_BOOLEAN_OR T_VARIABLE($is_func) T_BOOLEAN_OR T_VARIABLE($is_analyse) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_IS_EQUAL T_LNUMBER ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) T_IS_EQUAL T_LNUMBER ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($analyzed_sql) , T_VARIABLE($sql_data) [ ] [ T_VARIABLE($sql_no) ] ) ; } T_IF ( ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_NOT_EQUAL ) T_BOOLEAN_AND ! ( T_VARIABLE($is_count) T_BOOLEAN_OR T_VARIABLE($is_export) T_BOOLEAN_OR T_VARIABLE($is_func) T_BOOLEAN_OR T_VARIABLE($is_analyse) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($sql_limit_to_append) = . T_VARIABLE($_SESSION) [ ] [ ] . . T_VARIABLE($_SESSION) [ ] [ ] . ; T_VARIABLE($sql_data) [ ] [ T_VARIABLE($sql_no) ] = T_STRING ( T_VARIABLE($sql_data) [ ] [ T_VARIABLE($sql_no) ] , T_VARIABLE($analyzed_sql) , T_VARIABLE($sql_limit_to_append) ) ; } T_VARIABLE($displayResultsObject) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($db) ) ; T_VARIABLE($displayResultsObject) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($table) ) ; T_VARIABLE($displayResultsObject) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($goto) ) ; } T_IF ( ! T_VARIABLE($is_affected) ) { T_VARIABLE($num_rows) = ( T_VARIABLE($result) ) ? @ T_STRING ( T_VARIABLE($result) ) : T_LNUMBER ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($num_rows) ) ) { T_VARIABLE($num_rows) = @ T_STRING ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($sql_data) [ ] [ T_VARIABLE($sql_no) ] ) ) { T_VARIABLE($displayResultsObject) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($sql_data) [ ] [ T_VARIABLE($sql_no) ] ) ; T_VARIABLE($displayResultsObject) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($unlim_num_rows) , T_VARIABLE($fields_meta) , T_VARIABLE($is_count) , T_VARIABLE($is_export) , T_VARIABLE($is_func) , T_VARIABLE($is_analyse) , T_VARIABLE($num_rows) , T_VARIABLE($fields_cnt) , T_VARIABLE($querytime) , T_VARIABLE($pmaThemeImage) , T_VARIABLE($text_dir) , T_VARIABLE($is_maint) , T_VARIABLE($is_explain) , T_VARIABLE($is_show) , T_VARIABLE($showtable) , T_VARIABLE($printview) , T_VARIABLE($url_query) , T_VARIABLE($resultSetContainsUniqueKey) ) ; } T_IF ( T_VARIABLE($num_rows) T_IS_EQUAL T_LNUMBER ) { T_CONTINUE ; } T_VARIABLE($disp_mode) = ; T_VARIABLE($is_limited_display) = T_STRING ; T_VARIABLE($table_html) T_CONCAT_EQUAL T_VARIABLE($displayResultsObject) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($result) , T_VARIABLE($disp_mode) , T_VARIABLE($analyzed_sql) , T_VARIABLE($is_limited_display) ) ; T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($sql_no) T_INC ; } T_WHILE ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( ) ) ; T_RETURN T_VARIABLE($table_html) ; } T_FUNCTION(PMA_handleSortOrder) ( T_VARIABLE($db) , T_VARIABLE($table) , & T_VARIABLE($analyzed_sql) , & T_VARIABLE($full_sql_query) ) { T_VARIABLE($pmatable) = T_NEW T_STRING ( T_VARIABLE($table) , T_VARIABLE($db) ) ; T_IF ( T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($sorted_col) = T_VARIABLE($pmatable) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ) ; T_IF ( T_VARIABLE($sorted_col) ) { T_VARIABLE($sql_order_to_append) = . T_VARIABLE($sorted_col) . ; T_VARIABLE($full_sql_query) = T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] . T_VARIABLE($sql_order_to_append) . T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] . . T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ; T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] T_CONCAT_EQUAL T_VARIABLE($sql_order_to_append) ; T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] = T_VARIABLE($sorted_col) ; } } T_ELSE { T_VARIABLE($pmatable) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING , T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ; } } T_FUNCTION(PMA_getSqlWithLimitClause) ( T_VARIABLE($full_sql_query) , T_VARIABLE($analyzed_sql) , T_VARIABLE($sql_limit_to_append) ) { T_RETURN T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] . . T_VARIABLE($sql_limit_to_append) . T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ; } T_FUNCTION(PMA_getColumnNameInColumnDropSql) ( T_VARIABLE($sql) ) { T_VARIABLE($tmpArray1) = T_STRING ( , T_VARIABLE($sql) ) ; T_VARIABLE($str_to_check) = T_STRING ( T_VARIABLE($tmpArray1) [ T_LNUMBER ] ) ; T_IF ( T_STRING ( T_VARIABLE($str_to_check) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($tmpArray2) = T_STRING ( , T_VARIABLE($str_to_check) ) ; T_VARIABLE($str_to_check) = T_STRING ( T_VARIABLE($tmpArray2) [ T_LNUMBER ] ) ; } T_VARIABLE($tmpArray3) = T_STRING ( , T_VARIABLE($str_to_check) ) ; T_VARIABLE($str_to_check) = T_STRING ( T_VARIABLE($tmpArray3) [ T_LNUMBER ] ) ; T_VARIABLE($drop_column) = T_STRING ( , , T_STRING ( T_VARIABLE($str_to_check) ) ) ; T_VARIABLE($drop_column) = T_STRING ( , , T_VARIABLE($drop_column) ) ; T_RETURN T_VARIABLE($drop_column) ; } T_FUNCTION(PMA_resultSetContainsUniqueKey) ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($fields_meta) ) { T_VARIABLE($resultSetColumnNames) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($fields_meta) T_AS T_VARIABLE($oneMeta) ) { T_VARIABLE($resultSetColumnNames) [ ] = T_VARIABLE($oneMeta) T_OBJECT_OPERATOR T_STRING ; } T_FOREACH ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($db) ) T_AS T_VARIABLE($index) ) { T_IF ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($indexColumns) = T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($numberFound) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($indexColumns) T_AS T_VARIABLE($indexColumnName) T_DOUBLE_ARROW T_VARIABLE($dummy) ) { T_IF ( T_STRING ( T_VARIABLE($indexColumnName) , T_VARIABLE($resultSetColumnNames) ) ) { T_VARIABLE($numberFound) T_INC ; } } T_IF ( T_VARIABLE($numberFound) T_IS_EQUAL T_STRING ( T_VARIABLE($indexColumns) ) ) { T_RETURN T_STRING ; } } } T_RETURN T_STRING ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( , ) ) ; T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($abort) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($num_fields) = T_VARIABLE($_REQUEST) [ ] + T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($regenerate) = T_STRING ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) > T_LNUMBER ) { T_VARIABLE($num_fields) = T_INT_CAST T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_VARIABLE($num_fields) = T_LNUMBER ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($query) = ; T_VARIABLE($definitions) = T_ARRAY ( ) ; T_VARIABLE($field_cnt) = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($field_primary) = T_ARRAY ( ) ; T_VARIABLE($field_index) = T_ARRAY ( ) ; T_VARIABLE($field_unique) = T_ARRAY ( ) ; T_VARIABLE($field_fulltext) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($field_cnt) ; T_INC T_VARIABLE($i) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ) { T_IF ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL . T_VARIABLE($i) ) { T_VARIABLE($field_primary) [ ] = T_VARIABLE($i) ; } T_IF ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL . T_VARIABLE($i) ) { T_VARIABLE($field_index) [ ] = T_VARIABLE($i) ; } T_IF ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL . T_VARIABLE($i) ) { T_VARIABLE($field_unique) [ ] = T_VARIABLE($i) ; } T_IF ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL . T_VARIABLE($i) ) { T_VARIABLE($field_fulltext) [ ] = T_VARIABLE($i) ; } } } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($field_cnt) ; T_INC T_VARIABLE($i) ) { T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] T_IS_NOT_EQUAL ) { T_CONTINUE ; } T_VARIABLE($definition) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_VARIABLE($i) , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : , T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : T_STRING , T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : , T_VARIABLE($field_primary) ) ; T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_NOT_EQUAL ) { T_IF ( T_VARIABLE($i) T_IS_EQUAL T_LNUMBER ) { T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($definition) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($definition) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } } T_ELSE { T_VARIABLE($definition) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) - T_LNUMBER ] ) ; } } T_VARIABLE($definitions) [ ] = T_VARIABLE($definition) ; } T_IF ( T_STRING ( T_VARIABLE($field_primary) ) ) { T_VARIABLE($fields) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($field_primary) T_AS T_VARIABLE($field_nr) ) { T_VARIABLE($fields) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($field_nr) ] ) ; } T_VARIABLE($definitions) [ ] = . T_STRING ( , T_VARIABLE($fields) ) . ; T_UNSET ( T_VARIABLE($fields) ) ; } T_IF ( T_STRING ( T_VARIABLE($field_index) ) ) { T_VARIABLE($fields) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($field_index) T_AS T_VARIABLE($field_nr) ) { T_VARIABLE($fields) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($field_nr) ] ) ; } T_VARIABLE($definitions) [ ] = . T_STRING ( , T_VARIABLE($fields) ) . ; T_UNSET ( T_VARIABLE($fields) ) ; } T_IF ( T_STRING ( T_VARIABLE($field_unique) ) ) { T_VARIABLE($fields) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($field_unique) T_AS T_VARIABLE($field_nr) ) { T_VARIABLE($fields) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($field_nr) ] ) ; } T_VARIABLE($definitions) [ ] = . T_STRING ( , T_VARIABLE($fields) ) . ; T_UNSET ( T_VARIABLE($fields) ) ; } T_IF ( T_STRING ( T_VARIABLE($field_fulltext) ) ) { T_VARIABLE($fields) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($field_fulltext) T_AS T_VARIABLE($field_nr) ) { T_VARIABLE($fields) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($field_nr) ] ) ; } T_VARIABLE($definitions) [ ] = . T_STRING ( , T_VARIABLE($fields) ) . ; T_UNSET ( T_VARIABLE($fields) ) ; } T_STRING ( T_VARIABLE($db) ) T_LOGICAL_OR T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) , , T_VARIABLE($err_url) ) ; T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_STRING ( , T_VARIABLE($definitions) ) . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_IF ( T_VARIABLE($result) T_IS_IDENTICAL T_STRING ) { T_INCLUDE_ONCE ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($cfg) [ ] ) { T_FOREACH ( T_VARIABLE($_REQUEST) [ ] T_AS T_VARIABLE($fieldindex) T_DOUBLE_ARROW T_VARIABLE($mimetype) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] ) ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] , T_VARIABLE($mimetype) , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] ) ; } } } T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING , T_VARIABLE($sql_query) ) ) ; T_EXIT ; } T_VARIABLE($active_page) = ; T_VARIABLE($abort) = T_STRING ; T_INCLUDE ; } T_ELSE { T_VARIABLE($error_message_html) = T_STRING T_DOUBLE_COLON T_STRING ( , , , T_VARIABLE($err_url) , T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error_message_html) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_EXIT ; } T_VARIABLE($num_fields) = T_VARIABLE($_REQUEST) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($regenerate) = T_STRING ; } } T_IF ( T_VARIABLE($abort) T_IS_EQUAL T_STRING ) { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_VARIABLE($active_page) = ; T_VARIABLE($action) = ; T_INCLUDE_ONCE ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($where_clause) = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($where_clause) = T_VARIABLE($_SESSION) [ ] ; T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; T_VARIABLE($after_insert) = ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($cfg) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($cfg) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($after_insert) = T_VARIABLE($_REQUEST) [ ] ; } T_REQUIRE_ONCE ; T_IF ( T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($table) ) ) { T_VARIABLE($GLOBALS) [ ] = ; } T_ELSE { T_VARIABLE($GLOBALS) [ ] = ; } } T_VARIABLE($_url_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db) , T_DOUBLE_ARROW T_VARIABLE($_REQUEST) [ ] ) ; T_IF ( T_STRING ( , T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($_url_params) [ ] = T_VARIABLE($table) ; } T_VARIABLE($err_url) = T_VARIABLE($GLOBALS) [ ] . T_STRING ( T_VARIABLE($_url_params) ) ; T_UNSET ( T_VARIABLE($_url_params) ) ; T_VARIABLE($url_query) = T_STRING ( T_VARIABLE($url_params) , , ) ; T_REQUIRE_ONCE ; T_VARIABLE($comments_map) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($comments_map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($disp_message) ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($disp_query) ) ) { T_VARIABLE($disp_query) = T_STRING ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($disp_message) , T_VARIABLE($disp_query) ) ) ; } T_VARIABLE($show_create_table) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($analyzed_sql) = T_STRING ( T_STRING ( T_VARIABLE($show_create_table) ) ) ; T_UNSET ( T_VARIABLE($show_create_table) ) ; T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($table_fields) = T_STRING ( T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ) ; T_VARIABLE($paramTableDbArray) = T_ARRAY ( T_VARIABLE($table) , T_VARIABLE($db) ) ; T_IF ( T_ISSET ( T_VARIABLE($where_clause) ) ) { T_VARIABLE($insert_mode) = T_STRING ; T_VARIABLE($where_clause_array) = T_STRING ( T_VARIABLE($where_clause) ) ; T_LIST ( T_VARIABLE($where_clauses) , T_VARIABLE($result) , T_VARIABLE($rows) , T_VARIABLE($found_unique_key) ) = T_STRING ( T_VARIABLE($where_clause_array) , T_VARIABLE($table) , T_VARIABLE($db) ) ; } T_ELSE { T_VARIABLE($insert_mode) = T_STRING ; T_VARIABLE($where_clause) = T_STRING ; T_LIST ( T_VARIABLE($result) , T_VARIABLE($rows) ) = T_STRING ( T_VARIABLE($table) , T_VARIABLE($db) ) ; T_VARIABLE($where_clauses) = T_STRING ; T_VARIABLE($where_clause_array) = T_STRING ; T_VARIABLE($found_unique_key) = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_IDENTICAL ) { T_VARIABLE($where_clause) = T_VARIABLE($where_clauses) = T_STRING ; } T_VARIABLE($foreigners) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($_form_params) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($where_clauses) , T_VARIABLE($where_clause_array) , T_VARIABLE($err_url) ) ; T_VARIABLE($chg_evt_handler) = ( T_STRING T_IS_EQUAL T_BOOLEAN_AND T_STRING T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING < T_LNUMBER ) ? : ; T_VARIABLE($html_output) = ; T_VARIABLE($timestamp_seen) = T_STRING ; T_VARIABLE($columns_cnt) = T_STRING ( T_VARIABLE($table_fields) ) ; T_VARIABLE($tabindex) = T_LNUMBER ; T_VARIABLE($tabindex_for_function) = + T_LNUMBER ; T_VARIABLE($tabindex_for_null) = + T_LNUMBER ; T_VARIABLE($tabindex_for_value) = T_LNUMBER ; T_VARIABLE($o_rows) = T_LNUMBER ; T_VARIABLE($biggest_max_file_size) = T_LNUMBER ; T_VARIABLE($url_params) [ ] = T_VARIABLE($db) ; T_VARIABLE($url_params) [ ] = T_VARIABLE($table) ; T_VARIABLE($url_params) = T_STRING ( T_VARIABLE($url_params) , T_VARIABLE($where_clause_array) , T_VARIABLE($where_clause) ) ; T_VARIABLE($has_blob_field) = T_STRING ; T_FOREACH ( T_VARIABLE($table_fields) T_AS T_VARIABLE($column) ) { T_IF ( T_STRING ( T_VARIABLE($column) ) ) { T_VARIABLE($has_blob_field) = T_STRING ; T_BREAK ; } } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($has_blob_field) T_BOOLEAN_AND T_VARIABLE($is_upload) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($is_upload) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($_form_params) ) ; T_VARIABLE($titles) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; T_IF ( ! T_VARIABLE($cfg) [ ] T_BOOLEAN_OR ! T_VARIABLE($cfg) [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; } T_IF ( ! T_VARIABLE($cfg) [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($url_params) , T_STRING ) ; } T_IF ( ! T_VARIABLE($cfg) [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($url_params) , T_STRING ) ; } T_FOREACH ( T_VARIABLE($rows) T_AS T_VARIABLE($row_id) T_DOUBLE_ARROW T_VARIABLE($current_row) ) { T_IF ( T_VARIABLE($current_row) T_IS_IDENTICAL T_STRING ) { T_UNSET ( T_VARIABLE($current_row) ) ; } T_VARIABLE($jsvkey) = T_VARIABLE($row_id) ; T_VARIABLE($rownumber_param) = . T_VARIABLE($row_id) ; T_VARIABLE($vkey) = . T_VARIABLE($jsvkey) . ; T_VARIABLE($current_result) = ( T_ISSET ( T_VARIABLE($result) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($result) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($result) [ T_VARIABLE($row_id) ] ) ? T_VARIABLE($result) [ T_VARIABLE($row_id) ] : T_VARIABLE($result) ) ; T_IF ( T_VARIABLE($insert_mode) T_BOOLEAN_AND T_VARIABLE($row_id) > T_LNUMBER ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($row_id) . . . T_VARIABLE($row_id) . . . T_VARIABLE($row_id) . . T_STRING ( ) . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($url_params) ) . ; T_VARIABLE($m_rows) = T_VARIABLE($o_rows) + T_LNUMBER ; T_VARIABLE($default_char_editing) = T_VARIABLE($cfg) [ ] ; T_VARIABLE($odd_row) = T_STRING ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($columns_cnt) ; T_VARIABLE($i) T_INC ) { T_IF ( ! T_ISSET ( T_VARIABLE($table_fields) [ T_VARIABLE($i) ] [ ] ) ) { T_VARIABLE($column) = T_VARIABLE($table_fields) [ T_VARIABLE($i) ] ; T_VARIABLE($column) = T_STRING ( T_VARIABLE($column) , T_VARIABLE($comments_map) , T_VARIABLE($timestamp_seen) ) ; } T_VARIABLE($extracted_columnspec) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) [ ] ) ; T_IF ( - T_LNUMBER T_IS_IDENTICAL T_VARIABLE($column) [ ] ) { T_VARIABLE($column) [ ] = T_STRING ( T_VARIABLE($current_result) , T_VARIABLE($i) ) ; T_IF ( - T_LNUMBER T_IS_IDENTICAL T_VARIABLE($column) [ ] ) { T_VARIABLE($column) [ ] = T_LNUMBER ; } } T_VARIABLE($unnullify_trigger) = T_VARIABLE($chg_evt_handler) . . T_STRING ( T_VARIABLE($column) [ ] ) . . T_STRING ( T_VARIABLE($jsvkey) ) . . T_VARIABLE($column) [ ] . ; T_VARIABLE($column_name_appendix) = T_VARIABLE($vkey) . . T_VARIABLE($column) [ ] . ; T_IF ( T_VARIABLE($column) [ ] T_IS_EQUAL T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($column) [ ] ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($column) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($insert_mode) T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] ) ) ) { T_VARIABLE($current_row) [ T_VARIABLE($column) [ ] ] = T_STRING ( , T_STRING ( ) ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . . . ( T_VARIABLE($cfg) [ ] T_BOOLEAN_AND T_STRING ( T_VARIABLE($column) [ ] , ) ? : ) . . T_VARIABLE($column) [ ] . . T_VARIABLE($column_name_appendix) . . T_VARIABLE($column) [ ] . . ; T_IF ( T_VARIABLE($cfg) [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($column) [ ] . . . T_VARIABLE($column) [ ] . . ; } T_VARIABLE($gis_data_types) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($real_null_value) = T_STRING ; T_VARIABLE($special_chars_encoded) = ; T_IF ( T_ISSET ( T_VARIABLE($current_row) ) ) { T_LIST ( T_VARIABLE($real_null_value) , T_VARIABLE($special_chars_encoded) , T_VARIABLE($special_chars) , T_VARIABLE($data) , T_VARIABLE($backup_field) ) = T_STRING ( T_VARIABLE($current_row) , T_VARIABLE($column) , T_VARIABLE($extracted_columnspec) , T_VARIABLE($real_null_value) , T_VARIABLE($gis_data_types) , T_VARIABLE($column_name_appendix) ) ; } T_ELSE { T_LIST ( T_VARIABLE($real_null_value) , T_VARIABLE($data) , T_VARIABLE($special_chars) , T_VARIABLE($backup_field) , T_VARIABLE($special_chars_encoded) ) = T_STRING ( T_VARIABLE($column) , T_VARIABLE($real_null_value) ) ; } T_VARIABLE($idindex) = ( T_VARIABLE($o_rows) * T_VARIABLE($columns_cnt) ) + T_VARIABLE($i) + T_LNUMBER ; T_VARIABLE($tabindex) = T_VARIABLE($idindex) ; T_VARIABLE($no_support_types) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_VARIABLE($cfg) [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($column) , T_VARIABLE($is_upload) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($no_support_types) , T_VARIABLE($tabindex_for_function) , T_VARIABLE($tabindex) , T_VARIABLE($idindex) , T_VARIABLE($insert_mode) ) ; } T_VARIABLE($foreignData) = T_STRING ( T_VARIABLE($foreigners) , T_VARIABLE($column) [ ] , T_STRING , , ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($column) , T_VARIABLE($column_name_appendix) , T_VARIABLE($real_null_value) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_null) , T_VARIABLE($idindex) , T_VARIABLE($vkey) , T_VARIABLE($foreigners) , T_VARIABLE($foreignData) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($special_chars) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($column) , T_VARIABLE($backup_field) , T_VARIABLE($column_name_appendix) , T_VARIABLE($unnullify_trigger) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($idindex) , T_VARIABLE($data) , T_VARIABLE($special_chars) , T_VARIABLE($foreignData) , T_VARIABLE($odd_row) , T_VARIABLE($paramTableDbArray) , T_VARIABLE($rownumber_param) , T_VARIABLE($titles) , T_VARIABLE($text_dir) , T_VARIABLE($special_chars_encoded) , T_VARIABLE($vkey) , T_VARIABLE($is_upload) , T_VARIABLE($biggest_max_file_size) , T_VARIABLE($default_char_editing) , T_VARIABLE($no_support_types) , T_VARIABLE($gis_data_types) , T_VARIABLE($extracted_columnspec) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_VARIABLE($o_rows) T_INC ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . ; T_IF ( ! T_ISSET ( T_VARIABLE($after_insert) ) ) { T_VARIABLE($after_insert) = ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($where_clause) , T_VARIABLE($after_insert) , T_VARIABLE($tabindex) , T_VARIABLE($tabindex_for_value) , T_VARIABLE($found_unique_key) ) ; T_IF ( T_VARIABLE($biggest_max_file_size) > T_LNUMBER ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($biggest_max_file_size) ) . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($insert_mode) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($table) , T_VARIABLE($db) , T_VARIABLE($where_clause_array) , T_VARIABLE($err_url) ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($html_output) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_INCLUDE ; } T_ELSE { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( ) ) ; T_EXIT ; } T_VARIABLE($sql_with_limit) = . T_VARIABLE($sql_query) . . T_VARIABLE($_REQUEST) [ ] . . T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($data) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_with_limit) ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($data) [ ] = T_VARIABLE($row) ; } T_IF ( T_EMPTY ( T_VARIABLE($data) ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( ) ) ; T_EXIT ; } T_VARIABLE($sanitized_data) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($data_row_number) T_DOUBLE_ARROW T_VARIABLE($data_row) ) { T_VARIABLE($tmp_row) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($data_row) T_AS T_VARIABLE($data_column) T_DOUBLE_ARROW T_VARIABLE($data_value) ) { T_VARIABLE($tmp_row) [ T_STRING ( T_VARIABLE($data_column) ) ] = T_STRING ( T_VARIABLE($data_value) ) ; } T_VARIABLE($sanitized_data) [ ] = T_VARIABLE($tmp_row) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( T_VARIABLE($sanitized_data) ) ) ; T_UNSET ( T_VARIABLE($sanitized_data) ) ; T_EXIT ; } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($sql_query) ) T_BOOLEAN_OR T_VARIABLE($sql_query) T_IS_EQUAL ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ) ; T_EXIT ; } T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING T_IS_EQUAL T_BOOLEAN_AND T_STRING < T_LNUMBER ) { T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($url_params) [ ] = T_VARIABLE($cfg) [ ] ; T_VARIABLE($url_params) [ ] = ; T_INCLUDE ; T_INCLUDE ; } T_ELSEIF ( T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($url_params) [ ] = T_VARIABLE($cfg) [ ] ; T_VARIABLE($url_params) [ ] = ; T_INCLUDE ; T_INCLUDE ; } T_ELSE { T_VARIABLE($url_params) [ ] = T_VARIABLE($cfg) [ ] ; T_VARIABLE($url_params) [ ] = ; T_INCLUDE ; } T_VARIABLE($data) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_VARIABLE($fields_meta) = T_STRING ( T_VARIABLE($result) ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($data) [ ] = T_VARIABLE($row) ; } T_VARIABLE($keys) = T_STRING ( T_VARIABLE($data) [ T_LNUMBER ] ) ; T_VARIABLE($numeric_types) = T_ARRAY ( , ) ; T_VARIABLE($numeric_column_count) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($idx) T_DOUBLE_ARROW T_VARIABLE($key) ) { T_IF ( T_STRING ( T_VARIABLE($fields_meta) [ T_VARIABLE($idx) ] T_OBJECT_OPERATOR T_STRING , T_VARIABLE($numeric_types) ) ) { T_VARIABLE($numeric_column_count) T_INC ; } } T_IF ( T_VARIABLE($numeric_column_count) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( ) ) ; T_EXIT ; } T_VARIABLE($chartSettings) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , ) ) { T_VARIABLE($chartSettings) = T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($url_params) [ ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($url_params) [ ] = T_LNUMBER ; T_VARIABLE($htmlString) = . . T_VARIABLE($_SESSION) [ ] . . . T_VARIABLE($url_query) . . . . . . T_STRING ( T_VARIABLE($url_params) ) . . . T_STRING ( ) . . . . . T_STRING ( , ) . . . . T_STRING ( , ) . . . . . T_STRING ( , ) . . . . T_STRING ( , ) . . . . T_STRING ( , ) . . . . . T_STRING ( , ) . . . . . . T_STRING ( , ) . . . . . . . . T_STRING ( ) . . . . . T_STRING ( ) . . ; T_VARIABLE($htmlString) T_CONCAT_EQUAL . . T_STRING ( ) . . ; T_VARIABLE($yaxis) = T_STRING ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($idx) T_DOUBLE_ARROW T_VARIABLE($key) ) { T_IF ( T_VARIABLE($yaxis) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($htmlString) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($idx) ) . . T_STRING ( T_VARIABLE($key) ) . ; T_VARIABLE($yaxis) = T_VARIABLE($idx) ; } T_ELSE { T_VARIABLE($htmlString) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($idx) ) . . T_STRING ( T_VARIABLE($key) ) . ; } } T_VARIABLE($htmlString) T_CONCAT_EQUAL . . T_STRING ( ) . . ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($idx) T_DOUBLE_ARROW T_VARIABLE($key) ) { T_IF ( T_STRING ( T_VARIABLE($fields_meta) [ T_VARIABLE($idx) ] T_OBJECT_OPERATOR T_STRING , T_VARIABLE($numeric_types) ) ) { T_IF ( T_VARIABLE($idx) T_IS_EQUAL T_VARIABLE($yaxis) T_BOOLEAN_AND T_VARIABLE($numeric_column_count) > T_LNUMBER ) { T_VARIABLE($htmlString) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($idx) ) . . T_STRING ( T_VARIABLE($key) ) . ; } T_ELSE { T_VARIABLE($htmlString) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($idx) ) . . T_STRING ( T_VARIABLE($key) ) . ; } } } T_VARIABLE($htmlString) T_CONCAT_EQUAL . ; T_VARIABLE($date_time_types) = T_ARRAY ( , , ) ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($idx) T_DOUBLE_ARROW T_VARIABLE($key) ) { T_IF ( T_STRING ( T_VARIABLE($fields_meta) [ T_VARIABLE($idx) ] T_OBJECT_OPERATOR T_STRING , T_VARIABLE($date_time_types) ) ) { T_VARIABLE($htmlString) T_CONCAT_EQUAL T_VARIABLE($idx) . ; } } T_VARIABLE($htmlString) T_CONCAT_EQUAL . ; T_VARIABLE($htmlString) T_CONCAT_EQUAL . . T_STRING ( ) . . . . ( ( T_VARIABLE($yaxis) T_IS_EQUAL - T_LNUMBER ) ? T_STRING ( ) : T_STRING ( T_VARIABLE($keys) [ T_VARIABLE($yaxis) ] ) ) . . . T_STRING ( ) . . . T_STRING ( ) . . . . . . . T_STRING ( ) . . . . . T_VARIABLE($_SESSION) [ ] [ ] . . . T_STRING ( ) . . . . . ( ( T_VARIABLE($_SESSION) [ ] [ ] T_IS_NOT_EQUAL ) ? T_VARIABLE($_SESSION) [ ] [ ] : T_VARIABLE($GLOBALS) [ ] [ ] ) . . . T_STRING ( ) . . . T_STRING ( T_VARIABLE($sql_query) ) . . . . . . . . . . . ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($htmlString) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($action) = ; T_VARIABLE($titles) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( ) ) ; T_IF ( T_STRING ( T_VARIABLE($db) ) T_IS_EQUAL T_LNUMBER ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , , , ) ; } T_IF ( T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($table) ) ) , , , . T_STRING ( T_VARIABLE($db) ) ) ; } T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($regenerate) = T_STRING ; T_VARIABLE($num_fields) = T_VARIABLE($_REQUEST) [ ] + T_VARIABLE($_REQUEST) [ ] ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) > T_LNUMBER ) { T_VARIABLE($num_fields) = T_INT_CAST T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_VARIABLE($num_fields) = T_LNUMBER ; } T_IF ( ! T_STRING ( T_VARIABLE($db) ) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($db) ) ) , , , ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sql_query) = ; T_VARIABLE($field_cnt) = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($field_cnt) ; T_INC T_VARIABLE($i) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ) { T_IF ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL . T_VARIABLE($i) ) { T_VARIABLE($field_primary) [ ] = T_VARIABLE($i) ; } T_IF ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL . T_VARIABLE($i) ) { T_VARIABLE($field_index) [ ] = T_VARIABLE($i) ; } T_IF ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] T_IS_EQUAL . T_VARIABLE($i) ) { T_VARIABLE($field_unique) [ ] = T_VARIABLE($i) ; } } } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($field_cnt) ; T_VARIABLE($i) T_INC ) { T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] T_IS_NOT_EQUAL ) { T_CONTINUE ; } T_VARIABLE($query) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_VARIABLE($i) , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : , T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] , T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : T_STRING , T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] ) ? T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($i) ] : , T_VARIABLE($field_primary) , ) ; T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($query) ; } T_UNSET ( T_VARIABLE($field_cnt) , T_VARIABLE($query) ) ; T_VARIABLE($sql_query) = T_STRING ( , , T_VARIABLE($sql_query) ) ; T_VARIABLE($primary) = ; T_VARIABLE($primary_cnt) = ( T_ISSET ( T_VARIABLE($field_primary) ) ? T_STRING ( T_VARIABLE($field_primary) ) : T_LNUMBER ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($primary_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($j) = T_VARIABLE($field_primary) [ T_VARIABLE($i) ] ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($j) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($j) ] ) ) { T_VARIABLE($primary) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($j) ] ) . ; } } T_UNSET ( T_VARIABLE($primary_cnt) ) ; T_VARIABLE($primary) = T_STRING ( , , T_VARIABLE($primary) ) ; T_IF ( T_STRING ( T_VARIABLE($primary) ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($primary) . ; } T_UNSET ( T_VARIABLE($primary) ) ; T_VARIABLE($index) = ; T_VARIABLE($index_cnt) = ( T_ISSET ( T_VARIABLE($field_index) ) ? T_STRING ( T_VARIABLE($field_index) ) : T_LNUMBER ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($index_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($j) = T_VARIABLE($field_index) [ T_VARIABLE($i) ] ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($j) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($j) ] ) ) { T_VARIABLE($index) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($j) ] ) . ; } } T_UNSET ( T_VARIABLE($index_cnt) ) ; T_VARIABLE($index) = T_STRING ( , , T_VARIABLE($index) ) ; T_IF ( T_STRING ( T_VARIABLE($index) ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($index) . ; } T_UNSET ( T_VARIABLE($index) ) ; T_VARIABLE($unique) = ; T_VARIABLE($unique_cnt) = ( T_ISSET ( T_VARIABLE($field_unique) ) ? T_STRING ( T_VARIABLE($field_unique) ) : T_LNUMBER ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($unique_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($j) = T_VARIABLE($field_unique) [ T_VARIABLE($i) ] ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($j) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($j) ] ) ) { T_VARIABLE($unique) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($j) ] ) . ; } } T_UNSET ( T_VARIABLE($unique_cnt) ) ; T_VARIABLE($unique) = T_STRING ( , , T_VARIABLE($unique) ) ; T_IF ( T_STRING ( T_VARIABLE($unique) ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($unique) . ; } T_UNSET ( T_VARIABLE($unique) ) ; T_VARIABLE($fulltext) = ; T_VARIABLE($fulltext_cnt) = ( T_ISSET ( T_VARIABLE($field_fulltext) ) ? T_STRING ( T_VARIABLE($field_fulltext) ) : T_LNUMBER ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($fulltext_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($j) = T_VARIABLE($field_fulltext) [ T_VARIABLE($i) ] ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($j) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($j) ] ) ) { T_VARIABLE($fulltext) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($j) ] ) . ; } } T_VARIABLE($fulltext) = T_STRING ( , , T_VARIABLE($fulltext) ) ; T_IF ( T_STRING ( T_VARIABLE($fulltext) ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($fulltext) . ; } T_UNSET ( T_VARIABLE($fulltext) ) ; T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_VARIABLE($sql_query) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($_REQUEST) [ ] T_IS_NOT_EQUAL ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($_REQUEST) [ ] ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_VARIABLE($sql_query) T_CONCAT_EQUAL ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_IF ( T_VARIABLE($result) ) { T_INCLUDE_ONCE ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($cfg) [ ] ) { T_FOREACH ( T_VARIABLE($_REQUEST) [ ] T_AS T_VARIABLE($fieldindex) T_DOUBLE_ARROW T_VARIABLE($mimetype) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] ) ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] , T_VARIABLE($mimetype) , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($fieldindex) ] ) ; } } } T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($tbl_url_params) = T_ARRAY ( ) ; T_VARIABLE($tbl_url_params) [ ] = T_VARIABLE($db) ; T_VARIABLE($tbl_url_params) [ ] = T_VARIABLE($table) ; T_VARIABLE($is_show_stats) = T_VARIABLE($cfg) [ ] ; T_VARIABLE($tbl_stats_result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_STRING ) . ) ; T_VARIABLE($tbl_stats) = T_STRING ( T_VARIABLE($tbl_stats_result) ) ; T_STRING ( T_VARIABLE($tbl_stats_result) ) ; T_UNSET ( T_VARIABLE($tbl_stats_result) ) ; T_IF ( T_VARIABLE($is_show_stats) ) { T_VARIABLE($sum_size) = T_DOUBLE_CAST T_LNUMBER ; T_VARIABLE($overhead_size) = T_DOUBLE_CAST T_LNUMBER ; T_VARIABLE($overhead_check) = ; T_VARIABLE($tblsize) = T_STRING ( T_VARIABLE($tbl_stats) [ ] ) + T_STRING ( T_VARIABLE($tbl_stats) [ ] ) ; T_VARIABLE($sum_size) T_PLUS_EQUAL T_VARIABLE($tblsize) ; T_LIST ( T_VARIABLE($formatted_size) , T_VARIABLE($unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tblsize) , T_LNUMBER , ( T_VARIABLE($tblsize) > T_LNUMBER ) ? T_LNUMBER : T_LNUMBER ) ; T_IF ( T_ISSET ( T_VARIABLE($tbl_stats) [ ] ) T_BOOLEAN_AND T_VARIABLE($tbl_stats) [ ] > T_LNUMBER ) { T_LIST ( T_VARIABLE($formatted_overhead) , T_VARIABLE($overhead_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tbl_stats) [ ] , T_LNUMBER , ( T_VARIABLE($tbl_stats) [ ] > T_LNUMBER ) ? T_LNUMBER : T_LNUMBER ) ; T_VARIABLE($overhead_size) T_PLUS_EQUAL T_VARIABLE($tbl_stats) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($formatted_overhead) ) ) { T_VARIABLE($overhead) = . T_VARIABLE($formatted_overhead) . . . T_VARIABLE($overhead_unit) . ; T_UNSET ( T_VARIABLE($formatted_overhead) ) ; } T_ELSE { T_VARIABLE($overhead) = ; } } T_VARIABLE($new_table_string) = . ; T_VARIABLE($new_table_string) T_CONCAT_EQUAL . . . T_STRING ( T_VARIABLE($table) ) . . . ; T_VARIABLE($new_table_string) T_CONCAT_EQUAL ; T_VARIABLE($new_table_string) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($tbl_url_params) ) . . T_STRING ( T_VARIABLE($table) ) . ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( ) ) { T_VARIABLE($truename) = T_STRING ( , , T_STRING ( T_VARIABLE($table) ) ) ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($truename) ) ) { T_VARIABLE($new_table_string) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($tbl_url_params) ) . ; T_VARIABLE($new_table_string) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; } T_ELSEIF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($truename) ) > T_LNUMBER ) { T_VARIABLE($new_table_string) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($tbl_url_params) ) . ; T_VARIABLE($new_table_string) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; } T_UNSET ( T_VARIABLE($truename) ) ; } T_VARIABLE($new_table_string) T_CONCAT_EQUAL . ; T_VARIABLE($new_table_string) T_CONCAT_EQUAL . T_VARIABLE($titles) [ ] . . ; T_VARIABLE($new_table_string) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($tbl_url_params) ) . . T_VARIABLE($titles) [ ] . . . ; T_VARIABLE($new_table_string) T_CONCAT_EQUAL . T_VARIABLE($titles) [ ] . . ; T_VARIABLE($new_table_string) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($tbl_url_params) ) . . T_VARIABLE($titles) [ ] . . . ; T_VARIABLE($new_table_string) T_CONCAT_EQUAL . T_VARIABLE($titles) [ ] . . ; T_VARIABLE($new_table_string) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($tbl_url_params) ) . . T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ) . . T_VARIABLE($titles) [ ] . . . ; T_VARIABLE($new_table_string) T_CONCAT_EQUAL . T_VARIABLE($tbl_stats) [ ] . . ; T_VARIABLE($new_table_string) T_CONCAT_EQUAL . T_VARIABLE($tbl_stats) [ ] . . ; T_VARIABLE($new_table_string) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($tbl_stats) [ ] ) . . T_VARIABLE($tbl_stats) [ ] . . . ; T_IF ( T_VARIABLE($is_show_stats) ) { T_VARIABLE($new_table_string) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($tbl_url_params) ) . . . T_VARIABLE($formatted_size) . . . T_VARIABLE($unit) . . . . ; T_VARIABLE($new_table_string) T_CONCAT_EQUAL . T_VARIABLE($overhead) . . ; } T_VARIABLE($new_table_string) T_CONCAT_EQUAL . ; T_VARIABLE($formatted_sql) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) , T_VARIABLE($sql_query) , ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($formatted_sql) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($new_table_string) ) ; } T_ELSE { T_VARIABLE($display_query) = T_VARIABLE($sql_query) ; T_VARIABLE($sql_query) = ; T_VARIABLE($reread_info) = T_STRING ; T_INCLUDE ; T_IF ( T_VARIABLE($cfg) [ ] T_IS_IDENTICAL ) { T_INCLUDE ; } T_ELSE { T_INCLUDE . T_VARIABLE($cfg) [ ] ; } } } T_ELSE { T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( ) ) ; } T_ELSE { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( , , , T_VARIABLE($err_url) , T_STRING ) ; T_VARIABLE($num_fields) = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($regenerate) = T_STRING ; } } T_EXIT ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING ) { T_ECHO ( ) ; } T_REQUIRE ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING ) { T_ECHO ( ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE_ONCE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_REQUIRE_ONCE ; T_VARIABLE($export_page_title) = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($sql_query) ) ) { T_VARIABLE($parsed_sql) = T_STRING ( T_VARIABLE($sql_query) ) ; T_VARIABLE($analyzed_sql) = T_STRING ( T_VARIABLE($parsed_sql) ) ; T_IF ( T_ISSET ( T_VARIABLE($where_clause) ) ) { T_VARIABLE($temp_sql_array) = T_STRING ( , T_VARIABLE($sql_query) ) ; T_VARIABLE($sql_query) = T_VARIABLE($temp_sql_array) [ T_LNUMBER ] ; T_IF ( T_STRING ( T_VARIABLE($where_clause) ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($where_clause) ) > T_LNUMBER ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($where_clause) ) . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ; } T_IF ( ! T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ; } T_IF ( ! T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ; } } T_ELSE { T_VARIABLE($sql_query) = T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] . T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] ; } T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( ) ) ; } T_VARIABLE($export_type) = ; T_REQUIRE_ONCE ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($get_params) = T_ARRAY ( , ) ; T_FOREACH ( T_VARIABLE($get_params) T_AS T_VARIABLE($one_get_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_GET) [ T_VARIABLE($one_get_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_get_param) ] = T_VARIABLE($_GET) [ T_VARIABLE($one_get_param) ] ; } } T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( , , , ) ) ; T_IF ( ! T_STRING ( T_VARIABLE($db) ) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($db) ) ) , , ) ; } T_IF ( ! T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($sql) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($transform_key) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_VARIABLE($where_clause) . ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) ) ; T_IF ( T_VARIABLE($result) T_IS_IDENTICAL T_STRING ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , T_VARIABLE($sql) ) ; } @ T_STRING ( , ) ; T_STRING ( T_VARIABLE($table) . . T_VARIABLE($transform_key) . , T_STRING ( T_VARIABLE($result) ) , T_STRING ( T_VARIABLE($result) ) ) ; T_ECHO T_VARIABLE($result) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($url_params) [ ] = T_VARIABLE($cfg) [ ] ; T_VARIABLE($url_params) [ ] = ; T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($sql_query) ) T_BOOLEAN_OR T_VARIABLE($sql_query) T_IS_EQUAL ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ) ; T_EXIT ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_VARIABLE($meta) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($labelCandidates) = T_ARRAY ( ) ; T_VARIABLE($spatialCandidates) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($meta) T_AS T_VARIABLE($column_meta) ) { T_IF ( T_VARIABLE($column_meta) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($spatialCandidates) [ ] = T_VARIABLE($column_meta) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($labelCandidates) [ ] = T_VARIABLE($column_meta) T_OBJECT_OPERATOR T_STRING ; } } T_VARIABLE($visualizationSettings) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , ) ) { T_VARIABLE($visualizationSettings) = T_VARIABLE($_REQUEST) [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($visualizationSettings) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($labelCandidates) [ T_LNUMBER ] ) ) { T_VARIABLE($visualizationSettings) [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($visualizationSettings) [ ] ) ) { T_VARIABLE($visualizationSettings) [ ] = T_VARIABLE($spatialCandidates) [ T_LNUMBER ] ; } T_VARIABLE($modified_query) = T_STRING ( T_VARIABLE($sql_query) , T_VARIABLE($visualizationSettings) ) ; T_VARIABLE($modified_result) = T_STRING ( T_VARIABLE($modified_query) ) ; T_VARIABLE($data) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($modified_result) ) ) { T_VARIABLE($data) [ ] = T_VARIABLE($row) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($file_name) = T_VARIABLE($_REQUEST) [ ] ; T_IF ( T_VARIABLE($file_name) T_IS_EQUAL ) { T_VARIABLE($file_name) = T_VARIABLE($visualizationSettings) [ ] ; } T_VARIABLE($save_format) = T_VARIABLE($_REQUEST) [ ] ; T_STRING ( T_VARIABLE($data) , T_VARIABLE($visualizationSettings) , T_VARIABLE($save_format) , T_VARIABLE($file_name) ) ; T_EXIT ( ) ; } T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($visualizationSettings) [ ] = ; T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($row) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_EQUAL T_LNUMBER ) { T_UNSET ( T_VARIABLE($visualizationSettings) [ ] ) ; T_BREAK ; } } } T_VARIABLE($svg_support) = ( T_STRING T_IS_EQUAL T_BOOLEAN_AND T_STRING T_IS_SMALLER_OR_EQUAL T_LNUMBER ) ? T_STRING : T_STRING ; T_VARIABLE($format) = T_VARIABLE($svg_support) ? : ; T_VARIABLE($visualization) = T_STRING ( T_VARIABLE($data) , T_VARIABLE($visualizationSettings) , T_VARIABLE($format) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($url_params) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($labelCandidates) T_AS T_VARIABLE($labelCandidate) ) { T_ECHO ( . T_STRING ( T_VARIABLE($labelCandidate) ) . ) ; T_IF ( T_VARIABLE($labelCandidate) T_IS_EQUAL T_VARIABLE($visualizationSettings) [ ] ) { T_ECHO ( ) ; } T_ECHO ( . T_STRING ( T_VARIABLE($labelCandidate) ) . ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($spatialCandidates) T_AS T_VARIABLE($spatialCandidate) ) { T_ECHO ( . T_STRING ( T_VARIABLE($spatialCandidate) ) . ) ; T_IF ( T_VARIABLE($spatialCandidate) T_IS_EQUAL T_VARIABLE($visualizationSettings) [ ] ) { T_ECHO ( ) ; } T_ECHO ( . T_STRING ( T_VARIABLE($spatialCandidate) ) . ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($visualizationSettings) [ ] ) ) { T_ECHO ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($sql_query) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($url_params) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($svg_support) ) { T_ECHO ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($sql_query) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($visualizationSettings) [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($visualizationSettings) [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($visualization) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO ( T_VARIABLE($GLOBALS) [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) ) { T_ECHO ( T_STRING ( T_VARIABLE($data) , T_VARIABLE($visualizationSettings) , ) ) ; } T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE_ONCE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_REQUIRE_ONCE ; T_VARIABLE($import_type) = ; T_REQUIRE_ONCE ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($fields) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) T_AS T_VARIABLE($row) ) { T_IF ( T_STRING ( , T_VARIABLE($row) [ ] , T_VARIABLE($tmp) ) ) { T_VARIABLE($tmp) [ T_LNUMBER ] = T_STRING ( T_STRING ( , , . T_VARIABLE($tmp) [ T_LNUMBER ] ) , T_LNUMBER ) ; T_VARIABLE($fields) [ T_VARIABLE($row) [ ] ] = T_VARIABLE($tmp) [ T_LNUMBER ] . . T_STRING ( , , T_VARIABLE($tmp) [ T_LNUMBER ] ) . ; } T_ELSE { T_VARIABLE($fields) [ T_VARIABLE($row) [ ] ] = T_VARIABLE($row) [ ] ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($index) = T_NEW T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSE { T_VARIABLE($index) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($_REQUEST) [ ] ) ; } } T_ELSE { T_VARIABLE($index) = T_NEW T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($error) = T_STRING ; T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; } } T_SWITCH ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) { T_CASE : T_IF ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) T_IS_EQUAL ) { T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL ) { T_VARIABLE($error) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($sql_query) T_CONCAT_EQUAL ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_CASE : T_IF ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) T_IS_EQUAL ) { T_VARIABLE($error) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) . . ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ? T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) : ) ; T_BREAK ; } T_VARIABLE($index_fields) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($column) ) { T_VARIABLE($index_fields) [ T_VARIABLE($key) ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_IF ( T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($index_fields) [ T_VARIABLE($key) ] T_CONCAT_EQUAL . T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) . ; } } T_IF ( T_EMPTY ( T_VARIABLE($index_fields) ) ) { T_VARIABLE($error) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($index_fields) ) . ; } T_IF ( T_STRING > T_LNUMBER ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) . ; } T_VARIABLE($sql_query) T_CONCAT_EQUAL ; T_IF ( ! T_VARIABLE($error) ) { T_STRING ( T_VARIABLE($sql_query) ) ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($db) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING , T_VARIABLE($sql_query) ) ) ; } T_ELSE { T_VARIABLE($active_page) = ; T_INCLUDE ; } T_EXIT ; } T_ELSE { T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($error) ) ; T_EXIT ; } T_ELSE { T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ( ) ; } } } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE_ONCE ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($add_fields) = T_STRING ( T_VARIABLE($_REQUEST) [ ] [ ] [ ] ) - T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($add_fields) T_PLUS_EQUAL T_VARIABLE($_REQUEST) [ ] ; } } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($add_fields) = T_VARIABLE($_REQUEST) [ ] ; } T_ELSE { T_VARIABLE($add_fields) = T_LNUMBER ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($form_params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db) , T_DOUBLE_ARROW T_VARIABLE($table) , ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($form_params) [ ] = T_LNUMBER ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($form_params) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($form_params) [ ] = T_VARIABLE($_REQUEST) [ ] ; } T_ECHO T_STRING ( T_VARIABLE($form_params) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_ECHO T_STRING ( ) ; } T_ELSE { T_ECHO T_STRING ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . ) ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_STRING > T_LNUMBER ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($odd_row) = T_STRING ; T_VARIABLE($spatial_types) = T_ARRAY ( , , , , , , , ) ; T_FOREACH ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) T_AS T_VARIABLE($column) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($odd_row) ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($field_name) T_DOUBLE_ARROW T_VARIABLE($field_type) ) { T_IF ( ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL T_BOOLEAN_OR T_STRING ( , T_VARIABLE($field_type) ) ) T_BOOLEAN_AND ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL T_BOOLEAN_OR T_STRING ( T_VARIABLE($field_type) , T_VARIABLE($spatial_types) ) ) ) { T_ECHO . T_STRING ( T_VARIABLE($field_name) ) . . ( ( T_VARIABLE($field_name) T_IS_EQUAL T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ) ? : ) . . T_STRING ( T_VARIABLE($field_name) ) . . T_STRING ( T_VARIABLE($field_type) ) . . . ; } } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) T_IS_NOT_EQUAL ) { T_ECHO T_VARIABLE($column) T_OBJECT_OPERATOR T_STRING ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($add_fields) ; T_VARIABLE($i) T_INC ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($odd_row) ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($field_name) T_DOUBLE_ARROW T_VARIABLE($field_type) ) { T_ECHO . T_STRING ( T_VARIABLE($field_name) ) . . T_STRING ( T_VARIABLE($field_name) ) . . T_STRING ( T_VARIABLE($field_type) ) . . . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) . ; T_STRING ( T_STRING ( ) . , ) ; T_ECHO . T_STRING ( ) . . ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSE { T_VARIABLE($btn_value) = T_STRING ( T_STRING ( ) , T_LNUMBER ) ; T_ECHO ; T_ECHO ; T_ECHO . T_VARIABLE($btn_value) . ; T_ECHO ; } T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( , ) ) ; T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_STRING ( T_VARIABLE($db) ) ; T_VARIABLE($goto) = T_VARIABLE($cfg) [ ] ; T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($db) ; } T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_VARIABLE($db) T_IS_EQUAL T_VARIABLE($_REQUEST) [ ] T_BOOLEAN_AND T_VARIABLE($table) T_IS_EQUAL T_VARIABLE($_REQUEST) [ ] ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($result) = T_STRING ; } T_ELSE { T_VARIABLE($result) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_REQUEST) [ ] , T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) , ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($old) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($old) ) ; T_VARIABLE($new) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($new) ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($db) = T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($table) = T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($reload) = T_LNUMBER ; } } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($result) = T_STRING ; } T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_IF ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING , T_VARIABLE($sql_query) ) ) ; } T_ELSE { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; } T_EXIT ; } T_VARIABLE($_message) = T_VARIABLE($message) ; T_UNSET ( T_VARIABLE($message) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($pma_table) = T_NEW T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_REQUIRE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_VARIABLE($url_params) [ ] = T_VARIABLE($url_params) [ ] = ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_REQUIRE ; T_VARIABLE($is_myisam_or_aria) = T_VARIABLE($is_isam) = T_VARIABLE($is_innodb) = T_VARIABLE($is_berkeleydb) = T_VARIABLE($is_aria) = T_VARIABLE($is_pbxt) = T_STRING ; T_LIST ( T_VARIABLE($is_myisam_or_aria) , T_VARIABLE($is_innodb) , T_VARIABLE($is_isam) , T_VARIABLE($is_berkeleydb) , T_VARIABLE($is_aria) , T_VARIABLE($is_pbxt) ) = T_STRING ( T_VARIABLE($tbl_storage_engine) ) ; T_IF ( T_VARIABLE($is_aria) ) { T_VARIABLE($transactional) = ( T_ISSET ( T_VARIABLE($transactional) ) T_BOOLEAN_AND T_VARIABLE($transactional) T_IS_EQUAL ) ? : ; T_VARIABLE($page_checksum) = ( T_ISSET ( T_VARIABLE($page_checksum) ) ) ? T_VARIABLE($page_checksum) : ; } T_VARIABLE($reread_info) = T_STRING ; T_VARIABLE($table_alters) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_message) = ; T_INCLUDE_ONCE ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_INCLUDE_ONCE ; T_UNSET ( T_VARIABLE($result) ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_message) = ; T_VARIABLE($warning_messages) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_VARIABLE($pma_table) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_message) T_CONCAT_EQUAL T_VARIABLE($pma_table) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($result) = T_STRING ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($pma_table) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($reread_info) = T_STRING ; T_VARIABLE($reload) = T_STRING ; } T_ELSE { T_VARIABLE($_message) T_CONCAT_EQUAL T_VARIABLE($pma_table) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($result) = T_STRING ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_IS_NOT_IDENTICAL T_STRING ( T_VARIABLE($tbl_storage_engine) ) ) { T_VARIABLE($new_tbl_storage_engine) = T_VARIABLE($_REQUEST) [ ] ; T_LIST ( T_VARIABLE($is_myisam_or_aria) , T_VARIABLE($is_innodb) , T_VARIABLE($is_isam) , T_VARIABLE($is_berkeleydb) , T_VARIABLE($is_aria) , T_VARIABLE($is_pbxt) ) = T_STRING ( T_VARIABLE($new_tbl_storage_engine) ) ; T_IF ( T_VARIABLE($is_aria) ) { T_VARIABLE($transactional) = ( T_ISSET ( T_VARIABLE($transactional) ) T_BOOLEAN_AND T_VARIABLE($transactional) T_IS_EQUAL ) ? : ; T_VARIABLE($page_checksum) = ( T_ISSET ( T_VARIABLE($page_checksum) ) ) ? T_VARIABLE($page_checksum) : ; } } T_ELSE { T_VARIABLE($new_tbl_storage_engine) = ; } T_VARIABLE($table_alters) = T_STRING ( T_VARIABLE($is_myisam_or_aria) , T_VARIABLE($is_isam) , T_VARIABLE($pack_keys) , ( T_EMPTY ( T_VARIABLE($checksum) ) ? : ) , T_VARIABLE($is_aria) , ( ( T_ISSET ( T_VARIABLE($page_checksum) ) ) ? T_VARIABLE($page_checksum) : ) , ( T_EMPTY ( T_VARIABLE($delay_key_write) ) ? : ) , T_VARIABLE($is_innodb) , T_VARIABLE($is_pbxt) , T_VARIABLE($row_format) , T_VARIABLE($new_tbl_storage_engine) , ( ( T_ISSET ( T_VARIABLE($transactional) ) T_BOOLEAN_AND T_VARIABLE($transactional) T_IS_EQUAL ) ? : ) , T_VARIABLE($tbl_collation) ) ; T_IF ( T_STRING ( T_VARIABLE($table_alters) ) > T_LNUMBER ) { T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($table_alters) ) ; T_VARIABLE($sql_query) T_CONCAT_EQUAL ; T_VARIABLE($result) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($sql_query) ) ? T_STRING : T_STRING ; T_VARIABLE($reread_info) = T_STRING ; T_UNSET ( T_VARIABLE($table_alters) ) ; T_VARIABLE($warning_messages) = T_STRING ( ) ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_LIST ( T_VARIABLE($sql_query) , T_VARIABLE($result) ) = T_STRING ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_LIST ( T_VARIABLE($sql_query) , T_VARIABLE($result) ) = T_STRING ( ) ; } T_IF ( T_VARIABLE($reread_info) ) { T_STRING T_DOUBLE_COLON T_VARIABLE($cache) = T_ARRAY ( ) ; T_VARIABLE($page_checksum) = T_VARIABLE($checksum) = T_VARIABLE($delay_key_write) = T_LNUMBER ; T_INCLUDE ; } T_UNSET ( T_VARIABLE($reread_info) ) ; T_IF ( T_ISSET ( T_VARIABLE($result) ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($message_to_show) ) ) { T_VARIABLE($_type) = ; T_IF ( T_EMPTY ( T_VARIABLE($_message) ) ) { T_VARIABLE($_message) = T_VARIABLE($result) ? T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) : T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($_type) = T_VARIABLE($result) ? : ; T_IF ( T_ISSET ( T_VARIABLE($GLOBALS) [ ] ) T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_message) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($_message) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING , T_VARIABLE($sql_query) ) ) ; T_EXIT ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($warning_messages) ) ) { T_VARIABLE($_message) = T_NEW T_STRING ; T_VARIABLE($_message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($warning_messages) ) ; T_VARIABLE($_message) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($_message) ) ; T_EXIT ; } T_UNSET ( T_VARIABLE($warning_messages) ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_message) , T_VARIABLE($sql_query) , T_VARIABLE($_type) ) ) ; T_UNSET ( T_VARIABLE($_message) , T_VARIABLE($_type) ) ; } T_VARIABLE($url_params) [ ] = T_VARIABLE($url_params) [ ] = ; T_VARIABLE($columns) = T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($columns) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_IF ( T_STRING ( T_VARIABLE($show_comment) , ) T_IS_IDENTICAL T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($show_comment) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($comment) = T_VARIABLE($show_comment) ; } T_ELSE { T_VARIABLE($comment) = ; } } T_ELSE { T_VARIABLE($comment) = T_STRING ( , , T_VARIABLE($show_comment) ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($comment) , T_VARIABLE($tbl_collation) , T_VARIABLE($tbl_storage_engine) , T_VARIABLE($is_myisam_or_aria) , T_VARIABLE($is_isam) , T_VARIABLE($pack_keys) , T_VARIABLE($auto_increment) , ( T_EMPTY ( T_VARIABLE($delay_key_write) ) ? : ) , ( ( T_ISSET ( T_VARIABLE($transactional) ) T_BOOLEAN_AND T_VARIABLE($transactional) T_IS_EQUAL ) ? : ) , ( ( T_ISSET ( T_VARIABLE($page_checksum) ) ) ? T_VARIABLE($page_checksum) : ) , T_VARIABLE($is_innodb) , T_VARIABLE($is_pbxt) , T_VARIABLE($is_aria) , ( T_EMPTY ( T_VARIABLE($checksum) ) ? : ) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($is_myisam_or_aria) , T_VARIABLE($is_innodb) , T_VARIABLE($is_berkeleydb) , T_VARIABLE($url_params) ) ) ; T_IF ( ! ( T_ISSET ( T_VARIABLE($db_is_information_schema) ) T_BOOLEAN_AND T_VARIABLE($db_is_information_schema) ) ) { T_VARIABLE($truncate_table_url_params) = T_ARRAY ( ) ; T_VARIABLE($drop_table_url_params) = T_ARRAY ( ) ; T_IF ( ! T_VARIABLE($tbl_is_view) T_BOOLEAN_AND ! ( T_ISSET ( T_VARIABLE($db_is_information_schema) ) T_BOOLEAN_AND T_VARIABLE($db_is_information_schema) ) ) { T_VARIABLE($this_sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($truncate_table_url_params) = T_STRING ( T_VARIABLE($url_params) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this_sql_query) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($table) ) ) , ) ) ; } T_IF ( ! ( T_ISSET ( T_VARIABLE($db_is_information_schema) ) T_BOOLEAN_AND T_VARIABLE($db_is_information_schema) ) ) { T_VARIABLE($this_sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($drop_table_url_params) = T_STRING ( T_VARIABLE($url_params) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($this_sql_query) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ( T_VARIABLE($tbl_is_view) ? T_STRING ( ) : T_STRING ( ) ) , T_STRING ( T_VARIABLE($table) ) ) , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] , ) ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($truncate_table_url_params) , T_VARIABLE($drop_table_url_params) ) ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( ) ) { T_VARIABLE($partition_names) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( ! T_STRING ( T_VARIABLE($partition_names) [ T_LNUMBER ] ) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($partition_names) , T_VARIABLE($url_params) ) ) ; } } T_UNSET ( T_VARIABLE($partition_names) ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND ! T_VARIABLE($is_innodb) ) { T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($foreign) = T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_VARIABLE($foreign) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($foreign) , T_VARIABLE($url_params) ) ) ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE ; T_IF ( ! T_ISSET ( T_VARIABLE($the_tables) ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($the_tables) ) ) { T_VARIABLE($the_tables) = T_ARRAY ( ) ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($table) ) ) { T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_ELSE { T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($db) ) ; } T_STRING ( T_VARIABLE($db) ) ; T_IF ( T_ISSET ( T_VARIABLE($selected_tbl) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($selected_tbl) ) ) { T_VARIABLE($the_tables) = T_VARIABLE($selected_tbl) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($table) ) ) { T_VARIABLE($the_tables) [ ] = T_VARIABLE($table) ; } T_VARIABLE($multi_tables) = ( T_STRING ( T_VARIABLE($the_tables) ) > T_LNUMBER ) ; T_IF ( T_VARIABLE($multi_tables) ) { T_VARIABLE($tbl_list) = ; T_FOREACH ( T_VARIABLE($the_tables) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($table) ) { T_VARIABLE($tbl_list) T_CONCAT_EQUAL ( T_EMPTY ( T_VARIABLE($tbl_list) ) ? : ) . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; } T_ECHO . T_STRING ( ) . . T_STRING ( T_VARIABLE($tbl_list) ) . . ; T_ECHO . ; } T_VARIABLE($tables_cnt) = T_STRING ( T_VARIABLE($the_tables) ) ; T_VARIABLE($counter) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($the_tables) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($table) ) { T_IF ( T_VARIABLE($counter) + T_LNUMBER T_IS_GREATER_OR_EQUAL T_VARIABLE($tables_cnt) ) { T_VARIABLE($breakstyle) = ; } T_ELSE { T_VARIABLE($breakstyle) = ; } T_VARIABLE($counter) T_INC ; T_ECHO . T_VARIABLE($breakstyle) . . ; T_ECHO . T_STRING ( T_VARIABLE($table) ) . . ; T_VARIABLE($showtable) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($num_rows) = ( T_ISSET ( T_VARIABLE($showtable) [ ] ) ? T_VARIABLE($showtable) [ ] : T_LNUMBER ) ; T_VARIABLE($show_comment) = ( T_ISSET ( T_VARIABLE($showtable) [ ] ) ? T_VARIABLE($showtable) [ ] : ) ; T_VARIABLE($tbl_is_view) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($columns) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($show_create_table) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($analyzed_sql) = T_STRING ( T_STRING ( T_VARIABLE($show_create_table) ) ) ; T_VARIABLE($res_rel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($have_rel) = T_BOOL_CAST T_STRING ( T_VARIABLE($res_rel) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($show_comment) ) ) { T_ECHO T_STRING ( ) . . T_STRING ( T_VARIABLE($show_comment) ) . ; } T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_IF ( T_VARIABLE($have_rel) ) { T_ECHO . T_STRING ( ) . . ; } T_ECHO . T_STRING ( ) . . ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_ECHO . ; } T_ECHO ; T_ECHO ; T_ECHO ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($row) ) { T_VARIABLE($extracted_columnspec) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) ; T_VARIABLE($type) = T_VARIABLE($extracted_columnspec) [ ] ; T_VARIABLE($attribute) = T_VARIABLE($extracted_columnspec) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($row) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($row) [ ] = ; } } T_ELSE { T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($row) [ ] ) ; } T_VARIABLE($field_name) = T_STRING ( T_VARIABLE($row) [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($field_name) ] [ ] ) T_BOOLEAN_AND T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($field_name) ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($field_name) ] [ ] ) { T_VARIABLE($row) [ ] = ; } T_ECHO ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($pk_array) [ T_VARIABLE($row) [ ] ] ) ) { T_ECHO . T_VARIABLE($field_name) . . ; } T_ELSE { T_ECHO . T_VARIABLE($field_name) . ; } T_ECHO ; T_ECHO . T_VARIABLE($type) . ; T_ECHO ; T_ECHO ( ( T_VARIABLE($row) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($row) [ ] T_IS_EQUAL ) ? T_STRING ( ) : T_STRING ( ) ) ; T_ECHO ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_ECHO T_VARIABLE($row) [ ] ; } T_ECHO ; T_IF ( T_VARIABLE($have_rel) ) { T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] ) ) { T_ECHO T_STRING ( T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] . . T_VARIABLE($res_rel) [ T_VARIABLE($field_name) ] [ ] ) ; } T_ECHO . ; } T_ECHO ; T_VARIABLE($comments) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_ISSET ( T_VARIABLE($comments) [ T_VARIABLE($field_name) ] ) ) { T_ECHO T_STRING ( T_VARIABLE($comments) [ T_VARIABLE($field_name) ] ) ; } T_ECHO . ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($mime_map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_STRING ) ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($field_name) ] ) ) { T_ECHO T_STRING ( T_STRING ( , , T_VARIABLE($mime_map) [ T_VARIABLE($field_name) ] [ ] ) ) ; } T_ECHO . ; } T_ECHO ; } T_ECHO ; T_ECHO ; T_IF ( ! T_VARIABLE($tbl_is_view) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($db) ) ) { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($db) , T_STRING ) ; T_IF ( T_VARIABLE($cfg) [ ] ) { T_VARIABLE($nonisam) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($showtable) [ ] ) ) { T_VARIABLE($nonisam) = T_STRING ; } T_IF ( T_VARIABLE($nonisam) T_IS_EQUAL T_STRING ) { T_VARIABLE($mergetable) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_LIST ( T_VARIABLE($data_size) , T_VARIABLE($data_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] ) ; T_IF ( T_VARIABLE($mergetable) T_IS_EQUAL T_STRING ) { T_LIST ( T_VARIABLE($index_size) , T_VARIABLE($index_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) T_BOOLEAN_AND T_VARIABLE($showtable) [ ] > T_LNUMBER ) { T_LIST ( T_VARIABLE($free_size) , T_VARIABLE($free_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] ) ; T_LIST ( T_VARIABLE($effect_size) , T_VARIABLE($effect_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] + T_VARIABLE($showtable) [ ] - T_VARIABLE($showtable) [ ] ) ; } T_ELSE { T_UNSET ( T_VARIABLE($free_size) ) ; T_UNSET ( T_VARIABLE($free_unit) ) ; T_LIST ( T_VARIABLE($effect_size) , T_VARIABLE($effect_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] + T_VARIABLE($showtable) [ ] ) ; } T_LIST ( T_VARIABLE($tot_size) , T_VARIABLE($tot_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] + T_VARIABLE($showtable) [ ] ) ; T_IF ( T_VARIABLE($num_rows) > T_LNUMBER ) { T_LIST ( T_VARIABLE($avg_size) , T_VARIABLE($avg_unit) ) = T_STRING T_DOUBLE_COLON T_STRING ( ( T_VARIABLE($showtable) [ ] + T_VARIABLE($showtable) [ ] ) / T_VARIABLE($showtable) [ ] , T_LNUMBER , T_LNUMBER ) ; } T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_VARIABLE($data_size) . ; T_ECHO . T_VARIABLE($data_unit) . ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($index_size) ) ) { T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_VARIABLE($index_size) . ; T_ECHO . T_VARIABLE($index_unit) . ; T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($free_size) ) ) { T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO ; T_ECHO . T_VARIABLE($free_size) . ; T_ECHO . T_VARIABLE($free_unit) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO T_STRING ( ) ; T_ECHO ; T_ECHO . T_VARIABLE($effect_size) . ; T_ECHO . T_VARIABLE($effect_unit) . ; T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($tot_size) ) T_BOOLEAN_AND T_VARIABLE($mergetable) T_IS_EQUAL T_STRING ) { T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_VARIABLE($tot_size) . ; T_ECHO . T_VARIABLE($tot_unit) . ; T_ECHO ; } T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) ) { T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_VARIABLE($cell_align_left) . ; T_IF ( T_VARIABLE($showtable) [ ] T_IS_EQUAL ) { T_ECHO T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($showtable) [ ] T_IS_EQUAL ) { T_ECHO T_STRING ( ) ; } T_ELSE { T_ECHO T_VARIABLE($showtable) [ ] ; } T_ECHO ; T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) ) { T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] , T_LNUMBER ) ; T_ECHO ; T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) T_BOOLEAN_AND T_VARIABLE($showtable) [ ] > T_LNUMBER ) { T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] , T_LNUMBER ) ; T_ECHO ; T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) T_BOOLEAN_AND T_VARIABLE($showtable) [ ] > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($mergetable) T_IS_EQUAL T_STRING ) { T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO T_VARIABLE($avg_size) . . T_VARIABLE($avg_unit) ; T_ECHO ; T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) ) { T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($showtable) [ ] , T_LNUMBER ) ; T_ECHO ; T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) ) { T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($showtable) [ ] ) ) ; T_ECHO ; T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) ) { T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($showtable) [ ] ) ) ; T_ECHO ; T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($showtable) [ ] ) ) { T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($showtable) [ ] ) ) ; T_ECHO ; T_ECHO ; } T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; } } } T_IF ( T_VARIABLE($multi_tables) ) { T_UNSET ( T_VARIABLE($num_rows) , T_VARIABLE($show_comment) ) ; T_ECHO . ; } T_ECHO . ; } T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_ECHO ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($post_params) = T_ARRAY ( , , , , , ) ; T_FOREACH ( T_VARIABLE($post_params) T_AS T_VARIABLE($one_post_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_post_param) ] = T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ; } } T_REQUIRE_ONCE ; T_VARIABLE($options_array) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($existrel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , , ) ; } T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tbl_storage_engine) ) ) { T_VARIABLE($existrel_foreign) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , , ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($disp) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_VARIABLE($multi_edit_columns_name) = T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : T_STRING ; T_VARIABLE($html_output) = ; T_IF ( T_ISSET ( T_VARIABLE($destination) ) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_FOREACH ( T_VARIABLE($destination) T_AS T_VARIABLE($master_field_md5) T_DOUBLE_ARROW T_VARIABLE($foreign_string) ) { T_VARIABLE($upd_query) = T_STRING ; T_VARIABLE($master_field) = T_VARIABLE($multi_edit_columns_name) [ T_VARIABLE($master_field_md5) ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($foreign_string) ) ) { T_VARIABLE($foreign_string) = T_STRING ( T_VARIABLE($foreign_string) , ) ; T_LIST ( T_VARIABLE($foreign_db) , T_VARIABLE($foreign_table) , T_VARIABLE($foreign_field) ) = T_STRING ( , T_VARIABLE($foreign_string) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($existrel) [ T_VARIABLE($master_field) ] ) ) { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($master_field) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_field) ) . ; } T_ELSEIF ( T_VARIABLE($existrel) [ T_VARIABLE($master_field) ] [ ] . . T_VARIABLE($existrel) [ T_VARIABLE($master_field) ] [ ] . . T_VARIABLE($existrel) [ T_VARIABLE($master_field) ] [ ] T_IS_NOT_EQUAL T_VARIABLE($foreign_string) ) { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($foreign_field) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($master_field) ) . ; } } T_ELSEIF ( T_ISSET ( T_VARIABLE($existrel) [ T_VARIABLE($master_field) ] ) ) { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($master_field) ) . ; } T_IF ( T_VARIABLE($upd_query) ) { T_STRING ( T_VARIABLE($upd_query) ) ; } } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($display_query) = ; T_VARIABLE($seen_error) = T_STRING ; T_FOREACH ( T_VARIABLE($_REQUEST) [ ] T_AS T_VARIABLE($master_field_md5) T_DOUBLE_ARROW T_VARIABLE($foreign_string) ) { T_VARIABLE($create) = T_STRING ; T_VARIABLE($drop) = T_STRING ; T_VARIABLE($master_field) = T_VARIABLE($multi_edit_columns_name) [ T_VARIABLE($master_field_md5) ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($foreign_string) ) ) { T_LIST ( T_VARIABLE($foreign_db) , T_VARIABLE($foreign_table) , T_VARIABLE($foreign_field) ) = T_STRING ( T_VARIABLE($foreign_string) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] ) ) { T_VARIABLE($create) = T_STRING ; } T_ELSEIF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] [ ] ) T_IS_NOT_EQUAL T_VARIABLE($foreign_db) T_BOOLEAN_OR T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] [ ] ) T_IS_NOT_EQUAL T_VARIABLE($foreign_table) T_BOOLEAN_OR T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] [ ] ) T_IS_NOT_EQUAL T_VARIABLE($foreign_field) T_BOOLEAN_OR T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($master_field_md5) ] T_IS_NOT_EQUAL T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] [ ] T_BOOLEAN_OR ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($master_field_md5) ] T_IS_NOT_EQUAL ( ! T_EMPTY ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] [ ] ) ? T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] [ ] : ) ) T_BOOLEAN_OR ( T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($master_field_md5) ] T_IS_NOT_EQUAL ( ! T_EMPTY ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] [ ] ) ? T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] [ ] : ) ) ) { T_VARIABLE($drop) = T_STRING ; T_VARIABLE($create) = T_STRING ; } } T_ELSEIF ( T_ISSET ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] ) ) { T_VARIABLE($drop) = T_STRING ; } T_VARIABLE($tmp_error_drop) = T_STRING ; T_IF ( T_VARIABLE($drop) ) { T_VARIABLE($drop_query) = T_STRING ( T_VARIABLE($table) , T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] [ ] ) ; T_VARIABLE($display_query) T_CONCAT_EQUAL T_VARIABLE($drop_query) . ; T_STRING ( T_VARIABLE($drop_query) ) ; T_VARIABLE($tmp_error_drop) = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($tmp_error_drop) ) ) { T_VARIABLE($seen_error) = T_STRING ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tmp_error_drop) , T_VARIABLE($drop_query) , T_STRING , , T_STRING ) ; T_CONTINUE ; } } T_VARIABLE($tmp_error_create) = T_STRING ; T_IF ( T_VARIABLE($create) ) { T_VARIABLE($create_query) = T_STRING ( T_VARIABLE($table) , T_VARIABLE($master_field) , T_VARIABLE($foreign_db) , T_VARIABLE($foreign_table) , T_VARIABLE($foreign_field) , T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($master_field_md5) ] , T_VARIABLE($options_array) [ T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($master_field_md5) ] ] , T_VARIABLE($options_array) [ T_VARIABLE($_REQUEST) [ ] [ T_VARIABLE($master_field_md5) ] ] ) ; T_VARIABLE($display_query) T_CONCAT_EQUAL T_VARIABLE($create_query) . ; T_STRING ( T_VARIABLE($create_query) ) ; T_VARIABLE($tmp_error_create) = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($tmp_error_create) ) ) { T_VARIABLE($seen_error) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($tmp_error_create) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($master_field) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tmp_error_create) , T_VARIABLE($create_query) , T_STRING , , T_STRING ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , ) . ; } T_IF ( T_VARIABLE($drop) T_BOOLEAN_AND T_VARIABLE($create) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($tmp_error_drop) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($tmp_error_create) ) ) { T_VARIABLE($sql_query_recreate) = . ; T_VARIABLE($sql_query_recreate) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($table) , T_VARIABLE($master_field) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] [ ] ) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] [ ] ) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] [ ] ) , T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] [ ] , T_VARIABLE($options_array) [ T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] [ ] ] , T_VARIABLE($options_array) [ T_VARIABLE($existrel_foreign) [ T_VARIABLE($master_field) ] [ ] ] ) ; T_VARIABLE($display_query) T_CONCAT_EQUAL T_VARIABLE($sql_query_recreate) . ; T_STRING ( T_VARIABLE($sql_query_recreate) ) ; } } } T_IF ( ! T_EMPTY ( T_VARIABLE($display_query) ) T_BOOLEAN_AND ! T_VARIABLE($seen_error) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , T_STRING , ) ; } } T_IF ( T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_ISSET ( T_VARIABLE($display_field) ) ) { T_VARIABLE($upd_query) = T_STRING ; T_IF ( T_VARIABLE($disp) ) { T_IF ( T_VARIABLE($display_field) T_IS_NOT_EQUAL ) { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($display_field) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; } T_ELSE { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; } } T_ELSEIF ( T_VARIABLE($display_field) T_IS_NOT_EQUAL ) { T_VARIABLE($upd_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($cfgRelation) [ ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($display_field) ) . ; } T_IF ( T_VARIABLE($upd_query) ) { T_STRING ( T_VARIABLE($upd_query) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($destination) ) T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($existrel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , , ) ; } T_IF ( T_ISSET ( T_VARIABLE($destination_foreign) ) T_BOOLEAN_AND T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tbl_storage_engine) ) ) { T_VARIABLE($existrel_foreign) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , , ) ; } T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($disp) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_OR T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tbl_storage_engine) ) ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tbl_storage_engine) ) ) { T_VARIABLE($tab_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; } T_ELSE { T_VARIABLE($tab_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) ; } T_VARIABLE($tab_rs) = T_STRING ( T_VARIABLE($tab_query) , T_STRING , T_STRING ) ; T_VARIABLE($selectboxall) [ ] = ; T_VARIABLE($selectboxall_foreign) [ ] = ; T_WHILE ( T_VARIABLE($curr_table) = T_STRING ( T_VARIABLE($tab_rs) ) ) { T_VARIABLE($current_table) = T_NEW T_STRING ( T_VARIABLE($curr_table) [ T_LNUMBER ] , T_VARIABLE($db) ) ; T_VARIABLE($selectboxall) = T_STRING ( T_VARIABLE($selectboxall) , T_VARIABLE($current_table) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($backquoted) = T_STRING ) ) ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tbl_storage_engine) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($curr_table) [ T_LNUMBER ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($curr_table) [ T_LNUMBER ] ) T_IS_EQUAL T_VARIABLE($tbl_storage_engine) ) { T_VARIABLE($selectboxall_foreign) = T_STRING ( T_VARIABLE($selectboxall_foreign) , T_VARIABLE($current_table) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($backquoted) = T_STRING ) ) ; } } } T_VARIABLE($columns) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_STRING ( T_VARIABLE($columns) ) > T_LNUMBER ) { T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($row) ) { T_VARIABLE($save_row) [ ] = T_VARIABLE($row) ; } T_VARIABLE($saved_row_cnt) = T_STRING ( T_VARIABLE($save_row) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . . . T_STRING ( ) . ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) ; T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tbl_storage_engine) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( . ) ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tbl_storage_engine) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) . . T_VARIABLE($tbl_storage_engine) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($odd_row) = T_STRING ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($saved_row_cnt) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($myfield) = T_VARIABLE($save_row) [ T_VARIABLE($i) ] [ ] ; T_VARIABLE($myfield_md5) = T_STRING ( T_VARIABLE($myfield) ) ; T_VARIABLE($myfield_html) = T_STRING ( T_VARIABLE($myfield) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ( T_VARIABLE($odd_row) ? : ) . . . . T_VARIABLE($myfield_html) . . . T_VARIABLE($myfield_md5) . . . T_VARIABLE($myfield_html) . . ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($myfield_md5) . ; T_IF ( T_ISSET ( T_VARIABLE($existrel) [ T_VARIABLE($myfield) ] ) ) { T_VARIABLE($foreign_field) = T_VARIABLE($existrel) [ T_VARIABLE($myfield) ] [ ] . . T_VARIABLE($existrel) [ T_VARIABLE($myfield) ] [ ] . . T_VARIABLE($existrel) [ T_VARIABLE($myfield) ] [ ] ; } T_ELSE { T_VARIABLE($foreign_field) = T_STRING ; } T_VARIABLE($seen_key) = T_STRING ; T_FOREACH ( T_VARIABLE($selectboxall) T_AS T_VARIABLE($value) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($value) ) . ; T_IF ( T_VARIABLE($foreign_field) T_BOOLEAN_AND T_VARIABLE($value) T_IS_EQUAL T_VARIABLE($foreign_field) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($seen_key) = T_STRING ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($value) ) . . ; } T_IF ( T_VARIABLE($foreign_field) T_BOOLEAN_AND ! T_VARIABLE($seen_key) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($foreign_field) ) . . . T_VARIABLE($foreign_field) . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; } T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tbl_storage_engine) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($save_row) [ T_VARIABLE($i) ] [ ] ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_VARIABLE($myfield_md5) . . ; T_IF ( T_ISSET ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($myfield) ] ) ) { T_VARIABLE($foreign_field) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($myfield) ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($myfield) ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($myfield) ] [ ] ) ; } T_ELSE { T_VARIABLE($foreign_field) = T_STRING ; } T_VARIABLE($found_foreign_field) = T_STRING ; T_FOREACH ( T_VARIABLE($selectboxall_foreign) T_AS T_VARIABLE($value) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($value) ) . ; T_IF ( T_VARIABLE($foreign_field) T_BOOLEAN_AND T_VARIABLE($value) T_IS_EQUAL T_VARIABLE($foreign_field) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($found_foreign_field) = T_STRING ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($value) ) . . ; } T_IF ( ! T_VARIABLE($found_foreign_field) T_BOOLEAN_AND T_VARIABLE($foreign_field) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($foreign_field) ) . . . . T_VARIABLE($foreign_field) . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($constraint_name) = T_ISSET ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($myfield) ] [ ] ) ? T_VARIABLE($existrel_foreign) [ T_VARIABLE($myfield) ] [ ] : ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . T_VARIABLE($myfield_md5) . . . T_VARIABLE($constraint_name) . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL ; T_VARIABLE($on_delete) = T_ISSET ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($myfield) ] [ ] ) ? T_VARIABLE($existrel_foreign) [ T_VARIABLE($myfield) ] [ ] : ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( , . T_VARIABLE($myfield_md5) . , T_VARIABLE($options_array) , T_VARIABLE($on_delete) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_VARIABLE($on_update) = T_ISSET ( T_VARIABLE($existrel_foreign) [ T_VARIABLE($myfield) ] [ ] ) ? T_VARIABLE($existrel_foreign) [ T_VARIABLE($myfield) ] [ ] : ; T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( , . T_VARIABLE($myfield_md5) . , T_VARIABLE($options_array) , T_VARIABLE($on_update) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . ; } T_ELSE { T_VARIABLE($html_output) T_CONCAT_EQUAL T_STRING ( ) ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_UNSET ( T_VARIABLE($myfield) , T_VARIABLE($myfield_md5) , T_VARIABLE($myfield_html) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . . ; T_IF ( T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($disp) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . . ; T_FOREACH ( T_VARIABLE($save_row) T_AS T_VARIABLE($row) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($row) [ ] ) . ; T_IF ( T_ISSET ( T_VARIABLE($disp) ) T_BOOLEAN_AND T_VARIABLE($row) [ ] T_IS_EQUAL T_VARIABLE($disp) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($row) [ ] ) . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . . T_STRING ( ) . . . ; } T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($tbl_storage_engine) ) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( ) ; } T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($html_output) ) ; T_FUNCTION(PMA_generateDropdown) ( T_VARIABLE($dropdown_question) , T_VARIABLE($select_name) , T_VARIABLE($choices) , T_VARIABLE($selected_value) ) { T_VARIABLE($html_output) = T_STRING ( T_VARIABLE($dropdown_question) ) . . . T_STRING ( T_VARIABLE($select_name) ) . . ; T_FOREACH ( T_VARIABLE($choices) T_AS T_VARIABLE($one_value) T_DOUBLE_ARROW T_VARIABLE($one_label) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($one_value) ) . ; T_IF ( T_VARIABLE($selected_value) T_IS_EQUAL T_VARIABLE($one_value) ) { T_VARIABLE($html_output) T_CONCAT_EQUAL ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($one_label) ) . . ; } T_VARIABLE($html_output) T_CONCAT_EQUAL . ; T_RETURN T_VARIABLE($html_output) ; } T_FUNCTION(PMA_backquoteSplit) ( T_VARIABLE($text) ) { T_VARIABLE($elements) = T_ARRAY ( ) ; T_VARIABLE($final_pos) = T_STRING ( T_VARIABLE($text) ) - T_LNUMBER ; T_VARIABLE($pos) = T_LNUMBER ; T_WHILE ( T_VARIABLE($pos) T_IS_SMALLER_OR_EQUAL T_VARIABLE($final_pos) ) { T_VARIABLE($first_backquote) = T_STRING ( T_VARIABLE($text) , , T_VARIABLE($pos) ) ; T_VARIABLE($second_backquote) = T_STRING ( T_VARIABLE($text) , , T_VARIABLE($first_backquote) + T_LNUMBER ) ; T_IF ( T_VARIABLE($second_backquote) < T_VARIABLE($final_pos) T_BOOLEAN_AND T_IS_EQUAL T_VARIABLE($text) [ T_VARIABLE($second_backquote) + T_LNUMBER ] ) { T_VARIABLE($second_backquote) = T_STRING ( T_VARIABLE($text) , , T_VARIABLE($second_backquote) + T_LNUMBER ) ; } T_IF ( T_STRING T_IS_IDENTICAL T_VARIABLE($first_backquote) T_BOOLEAN_OR T_STRING T_IS_IDENTICAL T_VARIABLE($second_backquote) ) { T_BREAK ; } T_VARIABLE($elements) [ ] = T_STRING ( T_VARIABLE($text) , T_VARIABLE($first_backquote) , T_VARIABLE($second_backquote) - T_VARIABLE($first_backquote) + T_LNUMBER ) ; T_VARIABLE($pos) = T_VARIABLE($second_backquote) + T_LNUMBER ; } T_RETURN ( T_VARIABLE($elements) ) ; } T_FUNCTION(PMA_getSQLToDropForeignKey) ( T_VARIABLE($table) , T_VARIABLE($fk) ) { T_RETURN . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($fk) ) . ; } T_FUNCTION(PMA_getSQLToCreateForeignKey) ( T_VARIABLE($table) , T_VARIABLE($field) , T_VARIABLE($foreignDb) , T_VARIABLE($foreignTable) , T_VARIABLE($foreignField) , T_VARIABLE($name) = T_STRING , T_VARIABLE($onDelete) = T_STRING , T_VARIABLE($onUpdate) = T_STRING ) { T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($name) ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($name) ) ; } T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($field) ) . . . T_VARIABLE($foreignDb) . . T_VARIABLE($foreignTable) . . T_VARIABLE($foreignField) . ; T_IF ( ! T_EMPTY ( T_VARIABLE($onDelete) ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($onDelete) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($onUpdate) ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($onUpdate) ; } T_VARIABLE($sql_query) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($sql_query) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING T_DOUBLE_COLON T_STRING ( T_ARRAY ( , , ) ) ; T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($goto_include) = T_STRING ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($after_insert_actions) = T_ARRAY ( , , ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($after_insert_actions) ) ) { T_VARIABLE($url_params) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_FOREACH ( T_VARIABLE($_REQUEST) [ ] T_AS T_VARIABLE($one_where_clause) ) { T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($url_params) [ ] [ ] = T_VARIABLE($one_where_clause) ; } T_ELSEIF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_STRING ( T_VARIABLE($one_where_clause) ) ; } } } } T_VARIABLE($goto_include) = T_STRING ( T_VARIABLE($goto_include) ) ; T_VARIABLE($err_url) = T_STRING ( T_VARIABLE($url_params) ) ; T_LIST ( T_VARIABLE($loop_array) , T_VARIABLE($using_key) , T_VARIABLE($is_insert) , T_VARIABLE($is_insertignore) ) = T_STRING ( ) ; T_VARIABLE($query) = T_ARRAY ( ) ; T_VARIABLE($value_sets) = T_ARRAY ( ) ; T_VARIABLE($func_no_param) = T_ARRAY ( , , , , , , , , , , , , , , , , , , , , ) ; T_VARIABLE($func_optional_param) = T_ARRAY ( , , ) ; T_VARIABLE($gis_from_text_functions) = T_ARRAY ( , , , , , , , , ) ; T_VARIABLE($gis_from_wkb_functions) = T_ARRAY ( , , , , , , , , ) ; T_REQUIRE_ONCE ; T_VARIABLE($query_fields) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($loop_array) T_AS T_VARIABLE($rownumber) T_DOUBLE_ARROW T_VARIABLE($where_clause) ) { T_IF ( ! T_VARIABLE($using_key) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_REQUEST) [ . T_VARIABLE($where_clause) ] ) ) { T_CONTINUE ; } T_VARIABLE($query_values) = T_ARRAY ( ) ; T_VARIABLE($multi_edit_colummns) = T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] ) ? T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] : T_ARRAY ( ) ; T_VARIABLE($multi_edit_columns_name) = T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] ) ? T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] : T_STRING ; T_VARIABLE($multi_edit_columns_prev) = T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] ) ? T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] : T_STRING ; T_VARIABLE($multi_edit_funcs) = T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] ) ? T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] : T_STRING ; T_VARIABLE($multi_edit_columns_type) = T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] ) ? T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] : T_STRING ; T_VARIABLE($multi_edit_columns_null) = T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] ) ? T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] : T_STRING ; T_VARIABLE($multi_edit_columns_null_prev) = T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] ) ? T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] : T_STRING ; T_VARIABLE($multi_edit_auto_increment) = T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] ) ? T_VARIABLE($_REQUEST) [ ] [ ] [ T_VARIABLE($rownumber) ] : T_STRING ; T_FOREACH ( T_VARIABLE($multi_edit_columns_name) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_IF ( ! T_ISSET ( T_VARIABLE($multi_edit_colummns) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($multi_edit_colummns) [ T_VARIABLE($key) ] = ; } } T_FOREACH ( T_VARIABLE($multi_edit_columns_name) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($colummn_name) ) { T_VARIABLE($current_value) = T_VARIABLE($multi_edit_colummns) [ T_VARIABLE($key) ] ; T_VARIABLE($file_to_insert) = T_NEW T_STRING ( ) ; T_VARIABLE($file_to_insert) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($key) , T_VARIABLE($rownumber) ) ; T_VARIABLE($possibly_uploaded_val) = T_VARIABLE($file_to_insert) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_VARIABLE($file_to_insert) T_OBJECT_OPERATOR T_STRING ( ) ) { T_VARIABLE($message) T_CONCAT_EQUAL T_VARIABLE($file_to_insert) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($file_to_insert) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($current_value) = T_STRING ( T_VARIABLE($possibly_uploaded_val) , T_VARIABLE($key) , T_VARIABLE($multi_edit_columns_type) , T_VARIABLE($current_value) , T_VARIABLE($multi_edit_auto_increment) , T_VARIABLE($rownumber) , T_VARIABLE($multi_edit_columns_name) , T_VARIABLE($multi_edit_columns_null) , T_VARIABLE($multi_edit_columns_null_prev) , T_VARIABLE($is_insert) , T_VARIABLE($using_key) , T_VARIABLE($where_clause) , T_VARIABLE($table) ) ; T_VARIABLE($current_value_as_an_array) = T_STRING ( T_VARIABLE($multi_edit_colummns) , T_VARIABLE($multi_edit_columns_name) , T_VARIABLE($multi_edit_funcs) , T_VARIABLE($gis_from_text_functions) , T_VARIABLE($current_value) , T_VARIABLE($gis_from_wkb_functions) , T_VARIABLE($func_optional_param) , T_VARIABLE($func_no_param) , T_VARIABLE($key) ) ; T_LIST ( T_VARIABLE($query_values) , T_VARIABLE($query_fields) ) = T_STRING ( T_VARIABLE($multi_edit_columns_name) , T_VARIABLE($multi_edit_columns_null) , T_VARIABLE($current_value) , T_VARIABLE($multi_edit_columns_prev) , T_VARIABLE($multi_edit_funcs) , T_VARIABLE($is_insert) , T_VARIABLE($query_values) , T_VARIABLE($query_fields) , T_VARIABLE($current_value_as_an_array) , T_VARIABLE($value_sets) , T_VARIABLE($key) , T_VARIABLE($multi_edit_columns_null_prev) ) ; } T_IF ( T_STRING ( T_VARIABLE($query_values) ) > T_LNUMBER ) { T_IF ( T_VARIABLE($is_insert) ) { T_VARIABLE($value_sets) [ ] = T_STRING ( , T_VARIABLE($query_values) ) ; } T_ELSE { T_VARIABLE($query) [ ] = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . T_STRING ( , T_VARIABLE($query_values) ) . . T_VARIABLE($where_clause) . ( T_VARIABLE($_REQUEST) [ ] ? : ) ; } } } T_UNSET ( T_VARIABLE($multi_edit_columns_name) , T_VARIABLE($multi_edit_columns_prev) , T_VARIABLE($multi_edit_funcs) , T_VARIABLE($multi_edit_columns_type) , T_VARIABLE($multi_edit_columns_null) , T_VARIABLE($func_no_param) , T_VARIABLE($multi_edit_auto_increment) , T_VARIABLE($current_value_as_an_array) , T_VARIABLE($key) , T_VARIABLE($current_value) , T_VARIABLE($loop_array) , T_VARIABLE($where_clause) , T_VARIABLE($using_key) , T_VARIABLE($multi_edit_columns_null_prev) ) ; T_IF ( T_VARIABLE($is_insert) T_BOOLEAN_AND T_STRING ( T_VARIABLE($value_sets) ) > T_LNUMBER ) { T_VARIABLE($query) = T_STRING ( T_VARIABLE($is_insertignore) , T_VARIABLE($query_fields) , T_VARIABLE($value_sets) ) ; } T_ELSEIF ( T_EMPTY ( T_VARIABLE($query) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($active_page) = T_VARIABLE($goto_include) ; T_INCLUDE . T_STRING ( T_VARIABLE($goto_include) ) ; T_EXIT ; } T_UNSET ( T_VARIABLE($multi_edit_colummns) , T_VARIABLE($is_insertignore) ) ; T_LIST ( T_VARIABLE($url_params) , T_VARIABLE($total_affected_rows) , T_VARIABLE($last_messages) , T_VARIABLE($warning_messages) , T_VARIABLE($error_messages) , T_VARIABLE($return_to_sql_query) ) = T_STRING ( T_VARIABLE($url_params) , T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($is_insert) T_BOOLEAN_AND T_STRING ( T_VARIABLE($value_sets) ) > T_LNUMBER ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($total_affected_rows) ) ; } T_ELSE { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($total_affected_rows) ) ; } T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($last_messages) , ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($warning_messages) ) ) { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($warning_messages) , ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($error_messages) ) ) { T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($error_messages) ) ; T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; } T_UNSET ( T_VARIABLE($error_messages) , T_VARIABLE($warning_messages) , T_VARIABLE($total_affected_rows) , T_VARIABLE($last_messages) , T_VARIABLE($last_message) ) ; T_IF ( T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , , ) ; T_VARIABLE($relation_fields) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($relation_fields) ) ; T_FOREACH ( T_VARIABLE($relation_fields) T_AS T_VARIABLE($cell_index) T_DOUBLE_ARROW T_VARIABLE($curr_cell_rel_field) ) { T_FOREACH ( T_VARIABLE($curr_cell_rel_field) T_AS T_VARIABLE($relation_field) T_DOUBLE_ARROW T_VARIABLE($relation_field_value) ) { T_VARIABLE($where_comparison) = . T_VARIABLE($relation_field_value) . ; T_VARIABLE($dispval) = T_STRING ( T_VARIABLE($where_comparison) , T_VARIABLE($relation_field_value) , T_VARIABLE($map) , T_VARIABLE($relation_field) ) ; T_VARIABLE($extra_data) [ ] [ T_VARIABLE($cell_index) ] = T_STRING ( T_VARIABLE($map) , T_VARIABLE($relation_field) , T_VARIABLE($where_comparison) , T_VARIABLE($dispval) , T_VARIABLE($relation_field_value) ) ; } } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_INCLUDE_ONCE ; T_VARIABLE($mime_map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($mime_map) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($mime_map) = T_ARRAY ( ) ; } T_VARIABLE($edited_values) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($edited_values) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($extra_data) ) ) { T_VARIABLE($extra_data) = T_ARRAY ( ) ; } T_FOREACH ( T_VARIABLE($mime_map) T_AS T_VARIABLE($transformation) ) { T_VARIABLE($file) = T_STRING ( T_VARIABLE($transformation) [ ] ) ; T_IF ( T_VARIABLE($file) T_IS_NOT_EQUAL ) { T_VARIABLE($column_name) = T_VARIABLE($transformation) [ ] ; T_VARIABLE($extra_data) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($transformation) , T_VARIABLE($edited_values) , T_VARIABLE($file) , T_VARIABLE($column_name) , T_VARIABLE($extra_data) ) ; } } } T_VARIABLE($column_name) = T_VARIABLE($_REQUEST) [ ] [ ] [ T_LNUMBER ] [ T_LNUMBER ] ; T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_VARIABLE($column_name) , T_VARIABLE($extra_data) ) ; T_VARIABLE($extra_data) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($extra_data) [ ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($message) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($extra_data) ) ; T_EXIT ; } T_IF ( ! T_EMPTY ( T_VARIABLE($return_to_sql_query) ) ) { T_VARIABLE($disp_query) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($disp_message) = T_VARIABLE($message) ; T_UNSET ( T_VARIABLE($message) ) ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($return_to_sql_query) ; } T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($active_page) = T_VARIABLE($goto_include) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_IS_EQUAL T_VARIABLE($_REQUEST) [ ] ) { T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_REQUIRE . T_STRING ( T_VARIABLE($goto_include) ) ; T_EXIT ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_IF ( ! T_STRING ( T_VARIABLE($_REQUEST) [ ] , ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($disp_message) = T_STRING ( ) ; T_VARIABLE($disp_query) = ; T_INCLUDE ; T_EXIT ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($submit_mult) = T_VARIABLE($_REQUEST) [ ] ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($submit_mult) = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($submit_mult) = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($submit_mult) = ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($submit_mult) = ; } T_SWITCH ( T_VARIABLE($submit_mult) ) { T_CASE : T_CASE : T_CASE : T_BREAK ; T_CASE : T_VARIABLE($submit_mult) = ; T_BREAK ; T_CASE : T_VARIABLE($submit_mult) = ; T_BREAK ; T_DEFAULT : T_CASE : T_VARIABLE($submit_mult) = ; T_BREAK ; } T_IF ( ! T_EMPTY ( T_VARIABLE($submit_mult) ) ) { T_SWITCH ( T_VARIABLE($submit_mult) ) { T_CASE : T_VARIABLE($where_clause) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($_REQUEST) [ ] T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($i_where_clause) ) { T_VARIABLE($where_clause) [ ] = T_STRING ( T_VARIABLE($i_where_clause) ) ; } T_VARIABLE($active_page) = ; T_INCLUDE ; T_BREAK ; T_CASE : T_VARIABLE($single_table) = T_STRING ; T_VARIABLE($where_clause) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($_REQUEST) [ ] T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($i_where_clause) ) { T_VARIABLE($where_clause) [ ] = T_STRING ( T_VARIABLE($i_where_clause) ) ; } T_VARIABLE($active_page) = ; T_INCLUDE ; T_BREAK ; T_CASE : T_DEFAULT : T_VARIABLE($action) = ; T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($original_sql_query) = T_VARIABLE($sql_query) ; T_IF ( ! T_EMPTY ( T_VARIABLE($url_query) ) ) { T_VARIABLE($original_url_query) = T_VARIABLE($url_query) ; } } T_INCLUDE ; T_VARIABLE($_url_params) = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($_url_params) [ ] = ; T_VARIABLE($url_query) = T_STRING ( T_VARIABLE($_url_params) ) ; T_IF ( ( ! T_EMPTY ( T_VARIABLE($submit_mult) ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($sql_query) ) ) { T_VARIABLE($disp_message) = T_STRING ( ) ; T_VARIABLE($disp_query) = T_VARIABLE($sql_query) ; } T_IF ( T_ISSET ( T_VARIABLE($original_sql_query) ) ) { T_VARIABLE($sql_query) = T_VARIABLE($original_sql_query) ; } T_IF ( T_ISSET ( T_VARIABLE($original_url_query) ) ) { T_VARIABLE($url_query) = T_VARIABLE($original_url_query) ; } T_UNSET ( T_VARIABLE($submit_mult) , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($active_page) = ; T_INCLUDE ; T_BREAK ; } } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($post_params) = T_ARRAY ( , ) ; T_FOREACH ( T_VARIABLE($post_params) T_AS T_VARIABLE($one_post_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_post_param) ] = T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ; } } T_VARIABLE($table_search) = T_NEW T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_INCLUDE_ONCE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_INCLUDE_ONCE ; T_IF ( ! T_ISSET ( T_VARIABLE($goto) ) ) { T_VARIABLE($goto) = T_VARIABLE($GLOBALS) [ ] [ ] ; } T_VARIABLE($err_url) = T_VARIABLE($goto) . . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($table_search) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($goto) ) ) ; } T_ELSE { T_VARIABLE($sql_query) = T_VARIABLE($table_search) T_OBJECT_OPERATOR T_STRING ( ) ; T_INCLUDE ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_REQUIRE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_REQUIRE_ONCE ; T_VARIABLE($err_url) = . T_VARIABLE($err_url) ; T_VARIABLE($goto) = ; T_VARIABLE($back) = ; T_REQUIRE_ONCE ; T_STRING ( T_STRING , T_STRING , T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_STRING ( T_VARIABLE($_REQUEST) [ ] ) : ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_EXIT ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_STRING , ) ; T_EXIT ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($regenerate) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($regenerate) ) { } T_ELSE { T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($submit_mult) = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($submit_mult) = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($submit_mult) = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($submit_mult) = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($submit_mult) = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($submit_mult) = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($submit_mult) = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($submit_mult) = ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($submit_mult) = T_VARIABLE($_REQUEST) [ ] ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ( ) ) { T_VARIABLE($submit_mult) = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($_REQUEST) [ ] ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($submit_mult) ) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($submit_mult) T_IS_EQUAL ) { T_VARIABLE($GLOBALS) [ ] = ; T_VARIABLE($sql_query) = ; T_FOREACH ( T_VARIABLE($_REQUEST) [ ] T_AS T_VARIABLE($idx) T_DOUBLE_ARROW T_VARIABLE($sval) ) { T_IF ( T_VARIABLE($sql_query) T_IS_EQUAL ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($sval) ) ; } T_ELSE { T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($sval) ) ; } } T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) ; T_INCLUDE ; T_EXIT ; } T_ELSE { T_VARIABLE($action) = ; T_INCLUDE ; T_IF ( T_EMPTY ( T_VARIABLE($message) ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; } } } T_ELSE { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING ( ) ) ; } } T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_REQUIRE_ONCE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_VARIABLE($url_params) [ ] = ; T_VARIABLE($url_params) [ ] = ; T_IF ( T_VARIABLE($cfg) [ ] T_IS_IDENTICAL T_STRING ) { T_VARIABLE($pma_table) = T_NEW T_STRING ( T_VARIABLE($table) , T_VARIABLE($db) ) ; T_VARIABLE($columns) = T_VARIABLE($pma_table) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($columns) ) ) { T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($column) ) { T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($column) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($msg) ) ; } } } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($primary) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($db) ) ; T_VARIABLE($columns_with_unique_index) = T_ARRAY ( ) ; T_FOREACH ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) , T_VARIABLE($db) ) T_AS T_VARIABLE($index) ) { T_IF ( T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) T_IS_EQUAL ) { T_VARIABLE($columns) = T_VARIABLE($index) T_OBJECT_OPERATOR T_STRING ( ) ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($column_name) T_DOUBLE_ARROW T_VARIABLE($dummy) ) { T_VARIABLE($columns_with_unique_index) [ T_VARIABLE($column_name) ] = T_LNUMBER ; } } } T_UNSET ( T_VARIABLE($index) , T_VARIABLE($columns) , T_VARIABLE($column_name) , T_VARIABLE($dummy) ) ; T_VARIABLE($fields) = T_ARRAY_CAST T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_STRING , T_STRING ) ; T_VARIABLE($show_create_table) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($db) ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($analyzed_sql) = T_STRING ( T_STRING ( T_VARIABLE($show_create_table) ) ) ; T_VARIABLE($titles) = T_STRING ( ) ; T_VARIABLE($hidden_titles) = T_STRING ( ) ; T_VARIABLE($HideStructureActions) = ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_VARIABLE($GLOBALS) [ ] [ ] T_IS_IDENTICAL T_STRING ) { T_VARIABLE($HideStructureActions) T_CONCAT_EQUAL ; } T_VARIABLE($html_form) = . . T_VARIABLE($HideStructureActions) . ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($html_form) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ) ; T_VARIABLE($tabletype) = ; T_IF ( T_VARIABLE($db_is_information_schema) ) { T_VARIABLE($tabletype) T_CONCAT_EQUAL ; } T_ELSE T_IF ( T_VARIABLE($tbl_is_view) ) { T_VARIABLE($tabletype) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($tabletype) T_CONCAT_EQUAL ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($tabletype) ) ; T_VARIABLE($tablestructure) = ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($tablestructure) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($db_is_information_schema) , T_VARIABLE($tbl_is_view) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($comments_map) = T_ARRAY ( ) ; T_VARIABLE($mime_map) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_INCLUDE_ONCE ; T_VARIABLE($comments_map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfg) [ ] ) { T_VARIABLE($mime_map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , T_STRING ) ; } } T_VARIABLE($rownum) = T_LNUMBER ; T_VARIABLE($columns_list) = T_ARRAY ( ) ; T_VARIABLE($save_row) = T_ARRAY ( ) ; T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($row) ) { T_VARIABLE($save_row) [ ] = T_VARIABLE($row) ; T_VARIABLE($rownum) T_INC ; T_VARIABLE($columns_list) [ ] = T_VARIABLE($row) [ ] ; T_VARIABLE($type) = T_VARIABLE($row) [ ] ; T_VARIABLE($extracted_columnspec) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($row) [ ] ) ; T_IF ( T_IS_EQUAL T_VARIABLE($extracted_columnspec) [ ] T_BOOLEAN_OR T_IS_EQUAL T_VARIABLE($extracted_columnspec) [ ] ) { T_VARIABLE($type_nowrap) = ; } T_ELSE { T_VARIABLE($type_nowrap) = ; } T_VARIABLE($type) = T_VARIABLE($extracted_columnspec) [ ] ; T_IF ( T_EMPTY ( T_VARIABLE($type) ) ) { T_VARIABLE($type) = ; } T_VARIABLE($field_charset) = ; T_IF ( T_VARIABLE($extracted_columnspec) [ ] T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($row) [ ] ) ) { T_VARIABLE($field_charset) = T_VARIABLE($row) [ ] ; } T_IF ( T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfg) [ ] T_BOOLEAN_AND T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($row) [ ] ] [ ] ) ) { T_VARIABLE($type_mime) = . T_STRING ( , , T_VARIABLE($mime_map) [ T_VARIABLE($row) [ ] ] [ ] ) ; } T_ELSE { T_VARIABLE($type_mime) = ; } T_VARIABLE($attribute) = T_VARIABLE($extracted_columnspec) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($row) [ ] ] ) ) { T_VARIABLE($tempField) = T_VARIABLE($analyzed_sql) [ T_LNUMBER ] [ ] [ T_VARIABLE($row) [ ] ] ; } T_ELSE { T_VARIABLE($tempField) = T_ARRAY ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($tempField) [ ] ) ) { T_VARIABLE($attribute) = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($tempField) [ ] ) T_BOOLEAN_AND T_VARIABLE($tempField) [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($tempField) [ ] ) { T_VARIABLE($row) [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_IF ( T_VARIABLE($row) [ ] T_IS_EQUAL ) { T_VARIABLE($row) [ ] = ; } } T_ELSE { T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($row) [ ] ) ; } T_VARIABLE($field_encoded) = T_STRING ( T_VARIABLE($row) [ ] ) ; T_VARIABLE($field_name) = T_STRING ( T_VARIABLE($row) [ ] ) ; T_VARIABLE($displayed_field_name) = T_VARIABLE($field_name) ; T_IF ( T_ISSET ( T_VARIABLE($comments_map) [ T_VARIABLE($row) [ ] ] ) ) { T_VARIABLE($displayed_field_name) = . T_STRING ( T_VARIABLE($comments_map) [ T_VARIABLE($row) [ ] ] ) . . T_VARIABLE($field_name) . ; } T_IF ( T_VARIABLE($primary) T_BOOLEAN_AND T_VARIABLE($primary) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($field_name) ) ) { T_VARIABLE($displayed_field_name) = . T_VARIABLE($field_name) . ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( . ( T_VARIABLE($odd_row) ? : ) . ) ; T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($row) , T_VARIABLE($rownum) , T_VARIABLE($displayed_field_name) , T_VARIABLE($type_nowrap) , T_VARIABLE($extracted_columnspec) , T_VARIABLE($type_mime) , T_VARIABLE($field_charset) , T_VARIABLE($attribute) , T_VARIABLE($tbl_is_view) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($url_query) , T_VARIABLE($field_encoded) , T_VARIABLE($titles) , T_VARIABLE($table) ) ) ; T_IF ( ! T_VARIABLE($tbl_is_view) T_BOOLEAN_AND ! T_VARIABLE($db_is_information_schema) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($type) , T_VARIABLE($tbl_storage_engine) , T_VARIABLE($primary) , T_VARIABLE($field_name) , T_VARIABLE($url_query) , T_VARIABLE($titles) , T_VARIABLE($row) , T_VARIABLE($rownum) , T_VARIABLE($hidden_titles) , T_VARIABLE($columns_with_unique_index) ) ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_UNSET ( T_VARIABLE($field_charset) ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($pmaThemeImage) , T_VARIABLE($text_dir) , T_VARIABLE($tbl_is_view) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($tbl_storage_engine) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; T_IF ( T_VARIABLE($tbl_is_view) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($url_params) ) ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($url_query) , T_VARIABLE($tbl_is_view) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($tbl_storage_engine) , T_VARIABLE($cfgRelation) ) ) ; T_IF ( ! T_VARIABLE($tbl_is_view) T_BOOLEAN_AND ! T_VARIABLE($db_is_information_schema) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($columns_list) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( ! T_VARIABLE($tbl_is_view) T_BOOLEAN_AND ! T_VARIABLE($db_is_information_schema) T_BOOLEAN_AND T_IS_NOT_EQUAL T_VARIABLE($tbl_storage_engine) ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( ) ) ; } T_IF ( T_VARIABLE($cfg) [ ] ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($showtable) , T_VARIABLE($table_info_num_rows) , T_VARIABLE($tbl_is_view) , T_VARIABLE($db_is_information_schema) , T_VARIABLE($tbl_storage_engine) , T_VARIABLE($url_query) , T_VARIABLE($tbl_collation) ) ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_STRING ( , T_STRING ) ; T_REQUIRE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_VARIABLE($url_params) [ ] = ; ; T_VARIABLE($url_params) [ ] = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($data) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($selection_schema) = T_STRING ; T_VARIABLE($selection_data) = T_STRING ; T_VARIABLE($selection_both) = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = ; } T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($selection_schema) = T_STRING ; } T_ELSEIF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($selection_data) = T_STRING ; } T_ELSE { T_VARIABLE($selection_both) = T_STRING ; } T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($data) [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($data) [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = ; } T_VARIABLE($filter_ts_from) = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($filter_ts_to) = T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($filter_users) = T_STRING ( , T_STRING ( , T_VARIABLE($_REQUEST) [ ] ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_FUNCTION(PMA_filter_tracking) ( T_VARIABLE($data) , T_VARIABLE($filter_ts_from) , T_VARIABLE($filter_ts_to) , T_VARIABLE($filter_users) ) { T_VARIABLE($tmp_entries) = T_ARRAY ( ) ; T_VARIABLE($id) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($entry) ) { T_VARIABLE($timestamp) = T_STRING ( T_VARIABLE($entry) [ ] ) ; T_IF ( T_VARIABLE($timestamp) T_IS_GREATER_OR_EQUAL T_VARIABLE($filter_ts_from) T_BOOLEAN_AND T_VARIABLE($timestamp) T_IS_SMALLER_OR_EQUAL T_VARIABLE($filter_ts_to) T_BOOLEAN_AND ( T_STRING ( , T_VARIABLE($filter_users) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($entry) [ ] , T_VARIABLE($filter_users) ) ) ) { T_VARIABLE($tmp_entries) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($id) , T_DOUBLE_ARROW T_VARIABLE($timestamp) , T_DOUBLE_ARROW T_VARIABLE($entry) [ ] , T_DOUBLE_ARROW T_VARIABLE($entry) [ ] ) ; } T_VARIABLE($id) T_INC ; } T_RETURN ( T_VARIABLE($tmp_entries) ) ; } T_VARIABLE($entries) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($entries) = T_STRING ( T_VARIABLE($entries) , T_STRING ( T_VARIABLE($data) [ ] , T_VARIABLE($filter_ts_from) , T_VARIABLE($filter_ts_to) , T_VARIABLE($filter_users) ) ) ; } T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($entries) = T_STRING ( T_VARIABLE($entries) , T_STRING ( T_VARIABLE($data) [ ] , T_VARIABLE($filter_ts_from) , T_VARIABLE($filter_ts_to) , T_VARIABLE($filter_users) ) ) ; } T_FOREACH ( T_VARIABLE($entries) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($row) ) { T_VARIABLE($ids) [ T_VARIABLE($key) ] = T_VARIABLE($row) [ ] ; T_VARIABLE($timestamps) [ T_VARIABLE($key) ] = T_VARIABLE($row) [ ] ; T_VARIABLE($usernames) [ T_VARIABLE($key) ] = T_VARIABLE($row) [ ] ; T_VARIABLE($statements) [ T_VARIABLE($key) ] = T_VARIABLE($row) [ ] ; } T_STRING ( T_VARIABLE($timestamps) , T_STRING , T_VARIABLE($ids) , T_STRING , T_VARIABLE($usernames) , T_STRING , T_VARIABLE($statements) , T_STRING , T_VARIABLE($entries) ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { @ T_STRING ( , ) ; T_VARIABLE($dump) = . T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) . . . T_STRING ( ) . ; T_FOREACH ( T_VARIABLE($entries) T_AS T_VARIABLE($entry) ) { T_VARIABLE($dump) T_CONCAT_EQUAL T_VARIABLE($entry) [ ] ; } T_VARIABLE($filename) = . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_STRING ( T_VARIABLE($filename) , , T_STRING ( T_VARIABLE($dump) ) ) ; T_ECHO T_VARIABLE($dump) ; T_EXIT ( ) ; } T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($tracking_set) = ; T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($tracking_set) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($tracking_set) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($tracking_set) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($tracking_set) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($tracking_set) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($tracking_set) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($tracking_set) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($tracking_set) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($tracking_set) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($tracking_set) T_CONCAT_EQUAL ; } T_VARIABLE($tracking_set) = T_STRING ( T_VARIABLE($tracking_set) , ) ; T_VARIABLE($versionCreated) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($tracking_set) , T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ) ; T_IF ( T_VARIABLE($versionCreated) ) { T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($_REQUEST) [ ] ) , T_STRING ( T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] ) ) ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($deactivated) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($_REQUEST) [ ] ) ; T_IF ( T_VARIABLE($deactivated) ) { T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] ) , T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($activated) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($_REQUEST) [ ] ) ; T_IF ( T_VARIABLE($activated) ) { T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] ) , T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_FOREACH ( T_VARIABLE($entries) T_AS T_VARIABLE($entry) ) { T_VARIABLE($sql_result) = T_STRING ( . T_VARIABLE($entry) [ ] ) ; } T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($new_query) = . T_STRING ( ) . . . T_STRING ( ) . . . . . ; T_FOREACH ( T_VARIABLE($entries) T_AS T_VARIABLE($entry) ) { T_VARIABLE($new_query) T_CONCAT_EQUAL T_VARIABLE($entry) [ ] ; } T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($db_temp) = T_VARIABLE($db) ; T_VARIABLE($table_temp) = T_VARIABLE($table) ; T_VARIABLE($db) = T_VARIABLE($table) = ; T_INCLUDE_ONCE ; T_STRING ( T_VARIABLE($new_query) , ) ; T_VARIABLE($db) = T_VARIABLE($db_temp) ; T_VARIABLE($table) = T_VARIABLE($table_temp) ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_ECHO . T_STRING ( ) . . T_VARIABLE($url_query) . . T_STRING ( ) . ; T_VARIABLE($data) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_REQUEST) [ ] ) ; T_VARIABLE($drop_create_statements) = T_VARIABLE($data) [ ] [ T_LNUMBER ] [ ] ; T_IF ( T_STRING ( T_VARIABLE($data) [ ] [ T_LNUMBER ] [ ] , ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($data) [ ] [ T_LNUMBER ] [ ] , ) ) { T_VARIABLE($drop_create_statements) T_CONCAT_EQUAL T_VARIABLE($data) [ ] [ T_LNUMBER ] [ ] ; } T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) , T_VARIABLE($drop_create_statements) ) ; T_VARIABLE($temp) = T_STRING ( T_VARIABLE($data) [ ] ) ; T_VARIABLE($columns) = T_VARIABLE($temp) [ ] ; T_VARIABLE($indexes) = T_VARIABLE($temp) [ ] ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_VARIABLE($style) = ; T_FOREACH ( T_VARIABLE($columns) T_AS T_VARIABLE($field_index) T_DOUBLE_ARROW T_VARIABLE($field) ) { T_ECHO . T_VARIABLE($style) . ; T_IF ( T_VARIABLE($field) [ ] T_IS_EQUAL ) { T_ECHO . T_STRING ( T_VARIABLE($field) [ ] ) . ; } T_ELSE { T_ECHO . T_STRING ( T_VARIABLE($field) [ ] ) . ; } T_ECHO ; T_ECHO . T_STRING ( T_VARIABLE($field) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($field) [ ] ) . ; T_ECHO . ( ( T_VARIABLE($field) [ ] T_IS_EQUAL ) ? T_STRING ( ) : T_STRING ( ) ) . ; T_ECHO ; T_IF ( T_ISSET ( T_VARIABLE($field) [ ] ) ) { T_VARIABLE($extracted_columnspec) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($field) [ ] ) ; T_IF ( T_VARIABLE($extracted_columnspec) [ ] T_IS_EQUAL ) { T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($field) [ ] ) ; } T_ELSE { T_ECHO T_STRING ( T_VARIABLE($field) [ ] ) ; } } T_ELSE { T_IF ( T_VARIABLE($field) [ ] T_IS_EQUAL ) { T_ECHO ; } T_ELSE { T_ECHO . T_STRING ( , ) . ; } } T_ECHO ; T_ECHO . T_STRING ( T_VARIABLE($field) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($field) [ ] ) . ; T_ECHO ; T_IF ( T_VARIABLE($style) T_IS_EQUAL ) { T_VARIABLE($style) = ; } T_ELSE { T_VARIABLE($style) = ; } } T_ECHO ; T_ECHO ; T_IF ( T_STRING ( T_VARIABLE($indexes) ) > T_LNUMBER ) { T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_VARIABLE($style) = ; T_FOREACH ( T_VARIABLE($indexes) T_AS T_VARIABLE($indexes_index) T_DOUBLE_ARROW T_VARIABLE($index) ) { T_IF ( T_VARIABLE($index) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($str_unique) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($str_unique) = T_STRING ( ) ; } T_IF ( T_VARIABLE($index) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($str_packed) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($str_packed) = T_STRING ( ) ; } T_ECHO . T_VARIABLE($style) . ; T_ECHO . T_STRING ( T_VARIABLE($index) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($index) [ ] ) . ; T_ECHO . T_VARIABLE($str_unique) . ; T_ECHO . T_VARIABLE($str_packed) . ; T_ECHO . T_STRING ( T_VARIABLE($index) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($index) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($index) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($index) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($index) [ ] ) . ; T_ECHO ; T_IF ( T_VARIABLE($style) T_IS_EQUAL ) { T_VARIABLE($style) = ; } T_ELSE { T_VARIABLE($style) = ; } } T_ECHO ; T_ECHO ; } T_ECHO ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($delete_id) = T_VARIABLE($_REQUEST) [ ] ; T_IF ( T_VARIABLE($delete_id) T_IS_EQUAL T_INT_CAST T_VARIABLE($delete_id) ) { T_UNSET ( T_VARIABLE($data) [ ] [ T_VARIABLE($delete_id) ] ) ; T_VARIABLE($successfullyDeleted) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_REQUEST) [ ] , , T_VARIABLE($data) [ ] ) ; T_IF ( T_VARIABLE($successfullyDeleted) ) { T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( ) ; } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($delete_id) = T_VARIABLE($_REQUEST) [ ] ; T_IF ( T_VARIABLE($delete_id) T_IS_EQUAL T_INT_CAST T_VARIABLE($delete_id) ) { T_UNSET ( T_VARIABLE($data) [ ] [ T_VARIABLE($delete_id) ] ) ; T_VARIABLE($successfullyDeleted) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($_REQUEST) [ ] , , T_VARIABLE($data) [ ] ) ; T_IF ( T_VARIABLE($successfullyDeleted) ) { T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( ) ; } } } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_ECHO . T_STRING ( ) . . T_VARIABLE($url_query) . . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . . T_STRING ( T_VARIABLE($data) [ ] ) . ; T_ECHO ; T_ECHO . T_STRING ( T_VARIABLE($url_params) + T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($_REQUEST) [ ] ) ) . ; T_VARIABLE($str1) = . . ( T_VARIABLE($selection_schema) ? : ) . . T_STRING ( ) . . . ( T_VARIABLE($selection_data) ? : ) . . T_STRING ( ) . . . ( T_VARIABLE($selection_both) ? : ) . . T_STRING ( ) . . ; T_VARIABLE($str2) = . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_VARIABLE($str3) = . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_VARIABLE($str4) = . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_VARIABLE($str5) = . . T_STRING ( ) . ; T_STRING ( T_STRING ( ) , T_VARIABLE($str1) , T_VARIABLE($str2) , T_VARIABLE($str3) , T_VARIABLE($str4) , T_VARIABLE($str5) ) ; T_VARIABLE($drop_image_or_text) = ; T_IF ( T_STRING T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($drop_image_or_text) T_CONCAT_EQUAL T_STRING T_DOUBLE_COLON T_STRING ( , T_STRING ( ) ) ; } T_IF ( T_IS_IDENTICAL T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_OR T_STRING T_IS_IDENTICAL T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($drop_image_or_text) T_CONCAT_EQUAL T_STRING ( ) ; } T_VARIABLE($i) = T_LNUMBER ; T_IF ( T_STRING ( T_VARIABLE($data) [ ] ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($data) [ ] ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($msg) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( ) ; } T_IF ( T_VARIABLE($selection_schema) T_BOOLEAN_OR T_VARIABLE($selection_both) T_BOOLEAN_AND T_STRING ( T_VARIABLE($data) [ ] ) > T_LNUMBER ) { T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_VARIABLE($style) = ; T_FOREACH ( T_VARIABLE($data) [ ] T_AS T_VARIABLE($entry) ) { T_IF ( T_STRING ( T_VARIABLE($entry) [ ] ) > T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($statement) = T_STRING ( T_VARIABLE($entry) [ ] , T_LNUMBER , T_VARIABLE($GLOBALS) [ ] [ ] ) . ; } T_ELSE { T_VARIABLE($statement) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($entry) [ ] ) ) ; } T_VARIABLE($timestamp) = T_STRING ( T_VARIABLE($entry) [ ] ) ; T_IF ( T_VARIABLE($timestamp) T_IS_GREATER_OR_EQUAL T_VARIABLE($filter_ts_from) T_BOOLEAN_AND T_VARIABLE($timestamp) T_IS_SMALLER_OR_EQUAL T_VARIABLE($filter_ts_to) T_BOOLEAN_AND ( T_STRING ( , T_VARIABLE($filter_users) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($entry) [ ] , T_VARIABLE($filter_users) ) ) ) { T_ECHO . T_VARIABLE($style) . ; T_ECHO . T_VARIABLE($i) . ; T_ECHO . T_STRING ( T_VARIABLE($entry) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($entry) [ ] ) . ; T_ECHO . T_VARIABLE($statement) . ; T_ECHO . T_VARIABLE($url_query) . . T_VARIABLE($version) [ ] . . ( T_VARIABLE($i) - T_LNUMBER ) . . T_VARIABLE($drop_image_or_text) . ; T_ECHO ; T_IF ( T_VARIABLE($style) T_IS_EQUAL ) { T_VARIABLE($style) = ; } T_ELSE { T_VARIABLE($style) = ; } T_VARIABLE($i) T_INC ; } } T_ECHO ; T_ECHO ; } T_VARIABLE($ddlog_count) = T_VARIABLE($i) ; T_IF ( ( T_VARIABLE($selection_data) T_BOOLEAN_OR T_VARIABLE($selection_both) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($data) [ ] ) > T_LNUMBER ) { T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_VARIABLE($style) = ; T_FOREACH ( T_VARIABLE($data) [ ] T_AS T_VARIABLE($entry) ) { T_IF ( T_STRING ( T_VARIABLE($entry) [ ] ) > T_VARIABLE($GLOBALS) [ ] [ ] ) { T_VARIABLE($statement) = T_STRING ( T_VARIABLE($entry) [ ] , T_LNUMBER , T_VARIABLE($GLOBALS) [ ] [ ] ) . ; } T_ELSE { T_VARIABLE($statement) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( T_VARIABLE($entry) [ ] ) ) ; } T_VARIABLE($timestamp) = T_STRING ( T_VARIABLE($entry) [ ] ) ; T_IF ( T_VARIABLE($timestamp) T_IS_GREATER_OR_EQUAL T_VARIABLE($filter_ts_from) T_BOOLEAN_AND T_VARIABLE($timestamp) T_IS_SMALLER_OR_EQUAL T_VARIABLE($filter_ts_to) T_BOOLEAN_AND ( T_STRING ( , T_VARIABLE($filter_users) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($entry) [ ] , T_VARIABLE($filter_users) ) ) ) { T_ECHO . T_VARIABLE($style) . ; T_ECHO . T_VARIABLE($i) . ; T_ECHO . T_STRING ( T_VARIABLE($entry) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($entry) [ ] ) . ; T_ECHO . T_VARIABLE($statement) . ; T_ECHO . T_VARIABLE($url_query) . . T_VARIABLE($version) [ ] . . ( T_VARIABLE($i) - T_VARIABLE($ddlog_count) ) . . T_VARIABLE($drop_image_or_text) . ; T_ECHO ; T_IF ( T_VARIABLE($style) T_IS_EQUAL ) { T_VARIABLE($style) = ; } T_ELSE { T_VARIABLE($style) = ; } T_VARIABLE($i) T_INC ; } } T_ECHO ; T_ECHO ; } T_ECHO ; T_ECHO . T_STRING ( T_VARIABLE($url_params) + T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($_REQUEST) [ ] ) ) . ; T_STRING ( T_STRING ( ) , T_VARIABLE($str1) , T_VARIABLE($str2) , T_VARIABLE($str3) , T_VARIABLE($str4) , T_VARIABLE($str5) ) ; T_VARIABLE($str_export1) = . . T_STRING ( ) . . . T_STRING ( ) . . . T_STRING ( T_STRING ( ) ) . . T_STRING ( ) . . ; T_VARIABLE($str_export2) = . . T_STRING ( ) . ; T_ECHO ; T_ECHO . T_STRING ( T_VARIABLE($url_params) + T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($_REQUEST) [ ] ) ) . ; T_ECHO . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . ; T_ECHO . T_STRING ( T_STRING ( ) , T_VARIABLE($str_export1) ) . T_VARIABLE($str_export2) . ; T_ECHO ; T_ECHO ; } T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] ) . . ; T_VARIABLE($sql_result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_IF ( T_STRING ( T_VARIABLE($sql_result) ) > T_LNUMBER ) { T_ECHO . T_VARIABLE($url_query) . ; T_ECHO ; T_WHILE ( T_VARIABLE($entries) = T_STRING ( T_VARIABLE($sql_result) ) ) { T_IF ( T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($entries) [ ] , T_VARIABLE($entries) [ ] ) ) { T_VARIABLE($status) = . T_STRING ( ) . ; } T_ELSE { T_VARIABLE($status) = . T_STRING ( ) . ; } T_IF ( T_VARIABLE($entries) [ ] T_IS_EQUAL T_VARIABLE($_REQUEST) [ ] ) { T_VARIABLE($s) = ; } T_ELSE { T_VARIABLE($s) = ; } T_ECHO . T_STRING ( T_VARIABLE($entries) [ ] ) . . T_VARIABLE($s) . . T_STRING ( T_VARIABLE($entries) [ ] ) . . T_STRING ( T_VARIABLE($entries) [ ] ) . T_VARIABLE($status) . . ; } T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; } T_ECHO ; T_VARIABLE($sql_query) = . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] ) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] ) . . ; T_VARIABLE($sql_result) = T_STRING ( T_VARIABLE($sql_query) ) ; T_VARIABLE($last_version) = T_LNUMBER ; T_VARIABLE($maxversion) = T_STRING ( T_VARIABLE($sql_result) ) ; T_VARIABLE($last_version) = T_VARIABLE($maxversion) [ ] ; T_IF ( T_VARIABLE($last_version) > T_LNUMBER ) { T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_VARIABLE($style) = ; T_STRING ( T_VARIABLE($sql_result) , T_LNUMBER ) ; T_WHILE ( T_VARIABLE($version) = T_STRING ( T_VARIABLE($sql_result) ) ) { T_IF ( T_VARIABLE($version) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($version_status) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($version_status) = T_STRING ( ) ; } T_IF ( T_VARIABLE($version) [ ] T_IS_EQUAL T_VARIABLE($last_version) ) { T_IF ( T_VARIABLE($version) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($tracking_active) = T_STRING ; } T_ELSE { T_VARIABLE($tracking_active) = T_STRING ; } } T_ECHO . T_VARIABLE($style) . ; T_ECHO . T_STRING ( T_VARIABLE($version) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($version) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($version) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($version) [ ] ) . ; T_ECHO . T_STRING ( T_VARIABLE($version) [ ] ) . ; T_ECHO . T_VARIABLE($version_status) . ; T_ECHO ; T_ECHO T_STRING ( T_VARIABLE($url_params) + T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($version) [ ] ) ) ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO T_STRING ( T_VARIABLE($url_params) + T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($version) [ ] ) ) ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_IF ( T_VARIABLE($style) T_IS_EQUAL ) { T_VARIABLE($style) = ; } T_ELSE { T_VARIABLE($style) = ; } } T_ECHO ; T_ECHO ; T_IF ( T_VARIABLE($tracking_active) ) { T_ECHO ; T_ECHO . T_VARIABLE($url_query) . ; T_ECHO ; T_ECHO ; T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] ) ) ; T_ECHO ; T_ECHO . T_VARIABLE($last_version) . ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; } T_ELSE { T_ECHO ; T_ECHO . T_VARIABLE($url_query) . ; T_ECHO ; T_ECHO ; T_STRING ( T_STRING ( ) , T_STRING ( T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] ) ) ; T_ECHO ; T_ECHO . T_VARIABLE($last_version) . ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; } } T_ECHO ; T_ECHO . T_VARIABLE($url_query) . ; T_ECHO T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_ECHO ; T_ECHO ; T_STRING ( T_STRING ( ) , ( T_VARIABLE($last_version) + T_LNUMBER ) , T_STRING ( T_VARIABLE($GLOBALS) [ ] . . T_VARIABLE($GLOBALS) [ ] ) ) ; T_ECHO ; T_ECHO . ( T_VARIABLE($last_version) + T_LNUMBER ) . ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO . T_STRING ( ) . ; T_ECHO ; T_ECHO ; T_ECHO ; T_ECHO ;',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_STRING T_IS_EQUAL T_BOOLEAN_AND T_STRING < T_LNUMBER ) { T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; } T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($post_params) = T_ARRAY ( , , ) ; T_FOREACH ( T_VARIABLE($post_params) T_AS T_VARIABLE($one_post_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_post_param) ] = T_VARIABLE($_POST) [ T_VARIABLE($one_post_param) ] ; } } T_VARIABLE($table_search) = T_NEW T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) , ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($extra_data) = T_ARRAY ( ) ; T_VARIABLE($row_info_query) = . T_VARIABLE($_REQUEST) [ ] . . T_VARIABLE($_REQUEST) [ ] . . T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($row_info_query) . , T_STRING , T_STRING ) ; T_VARIABLE($fields_meta) = T_STRING ( T_VARIABLE($result) ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($row) T_AS T_VARIABLE($col) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_IF ( T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($row) [ T_VARIABLE($col) ] = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($val) , T_VARIABLE($fields_meta) [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($i) T_INC ; } T_VARIABLE($extra_data) [ ] = T_VARIABLE($row) ; } T_STRING T_DOUBLE_COLON T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($extra_data) ) ; T_EXIT ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($field) = T_VARIABLE($_REQUEST) [ ] ; T_IF ( T_VARIABLE($field) T_IS_EQUAL ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , ) ; T_EXIT ; } T_VARIABLE($key) = T_STRING ( T_VARIABLE($field) , T_VARIABLE($table_search) T_OBJECT_OPERATOR T_STRING ( ) ) ; T_VARIABLE($properties) = T_VARIABLE($table_search) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] , T_VARIABLE($key) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($properties) [ ] ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($properties) [ ] ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($properties) [ ] ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($properties) [ ] ) ; T_EXIT ; } T_REQUIRE_ONCE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_REQUIRE_ONCE ; T_IF ( ! T_ISSET ( T_VARIABLE($goto) ) ) { T_VARIABLE($goto) = T_VARIABLE($GLOBALS) [ ] [ ] ; } T_VARIABLE($err_url) = T_VARIABLE($goto) . . T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_OR T_VARIABLE($_POST) [ ] T_IS_EQUAL ) { T_VARIABLE($dataLabel) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; } T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($table_search) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($goto) , T_VARIABLE($dataLabel) ) ) ; T_IF ( T_ISSET ( T_VARIABLE($zoom_submit) ) T_BOOLEAN_AND T_VARIABLE($_POST) [ ] [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($_POST) [ ] [ T_LNUMBER ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($_POST) [ ] [ T_LNUMBER ] T_IS_NOT_EQUAL T_VARIABLE($_POST) [ ] [ T_LNUMBER ] ) { T_VARIABLE($sql_query) = T_VARIABLE($table_search) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($sql_query) T_CONCAT_EQUAL . T_VARIABLE($maxPlotLimit) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql_query) . , T_STRING , T_STRING ) ; T_VARIABLE($fields_meta) = T_STRING ( T_VARIABLE($result) ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($tmpRow) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($row) T_AS T_VARIABLE($val) ) { T_VARIABLE($tmpRow) [ ] = T_VARIABLE($val) ; } T_VARIABLE($uniqueCondition) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($result) , T_STRING ( T_VARIABLE($table_search) T_OBJECT_OPERATOR T_STRING ( ) ) , T_VARIABLE($fields_meta) , T_VARIABLE($tmpRow) , T_STRING ) ; T_VARIABLE($row) [ ] = T_VARIABLE($uniqueCondition) [ T_LNUMBER ] ; T_VARIABLE($tmpData) = T_ARRAY ( T_VARIABLE($_POST) [ ] [ T_LNUMBER ] T_DOUBLE_ARROW T_VARIABLE($row) [ T_VARIABLE($_POST) [ ] [ T_LNUMBER ] ] , T_VARIABLE($_POST) [ ] [ T_LNUMBER ] T_DOUBLE_ARROW T_VARIABLE($row) [ T_VARIABLE($_POST) [ ] [ T_LNUMBER ] ] , T_DOUBLE_ARROW T_VARIABLE($uniqueCondition) [ T_LNUMBER ] ) ; T_VARIABLE($tmpData) [ T_VARIABLE($dataLabel) ] = ( T_VARIABLE($dataLabel) ) ? T_VARIABLE($row) [ T_VARIABLE($dataLabel) ] : ; T_VARIABLE($data) [ ] = T_VARIABLE($tmpData) ; } T_UNSET ( T_VARIABLE($tmpData) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($table_search) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($goto) , T_VARIABLE($data) ) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_EXIT ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] * T_DNUMBER ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] * T_DNUMBER ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_IS_NOT_EQUAL T_STRING ? : T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSE { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSE { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_EXIT ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_VARIABLE($theme_name) = ; T_VARIABLE($theme_full_version) = ; T_CLOSE_TAG',no
no
'T_OPEN_TAG T_FUNCTION(PMA_sprites) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( . T_STRING ( ) ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($hash) = . T_STRING ( , , T_STRING ) ; T_VARIABLE($url) = T_STRING ( ) . T_VARIABLE($hash) ; T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($url) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($output) ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_EXIT ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] * T_DNUMBER ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_EXIT ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] * T_DNUMBER ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($GLOBALS) [ ] [ ] * T_DNUMBER ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] [ ] ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSE { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_ELSE { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] T_IS_IDENTICAL ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_EXIT ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_EXIT ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_EXIT ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_EXIT ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($GLOBALS) [ ] [ ] ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_EXIT ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_EXIT ( ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_EXIT ( ) ; } T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_VARIABLE($theme_name) = ; T_VARIABLE($theme_full_version) = ; T_CLOSE_TAG',no
no
'T_OPEN_TAG T_FUNCTION(PMA_sprites) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_IF ( ! T_STRING ( ) ) { T_EXIT ( ) ; } T_VARIABLE($bg) = T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) . ; T_IF ( T_STRING ( T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) . ) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($bg) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_INCLUDE_ONCE T_VARIABLE($_SESSION) [ ] T_OBJECT_OPERATOR T_STRING ( ) . ; T_VARIABLE($sprites) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($sprites) = T_STRING ( ) ; } T_VARIABLE($template) = ; T_FOREACH ( T_VARIABLE($sprites) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($data) ) { T_VARIABLE($width) = ; T_VARIABLE($height) = ; T_IF ( T_VARIABLE($data) [ ] T_IS_NOT_EQUAL T_LNUMBER ) { T_VARIABLE($width) = . T_VARIABLE($data) [ ] . ; } T_IF ( T_VARIABLE($data) [ ] T_IS_NOT_EQUAL T_LNUMBER ) { T_VARIABLE($height) = . T_VARIABLE($data) [ ] . ; } T_STRING ( T_VARIABLE($template) , T_VARIABLE($name) , ( T_VARIABLE($data) [ ] * T_LNUMBER ) , T_VARIABLE($width) , T_VARIABLE($height) ) ; } T_VARIABLE($elements) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($template) = . ; T_FOREACH ( T_VARIABLE($elements) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_ISSET ( T_VARIABLE($sprites) [ T_VARIABLE($key) ] ) ) { T_STRING ( T_VARIABLE($template) , T_VARIABLE($value) , ( T_VARIABLE($sprites) [ T_VARIABLE($key) ] [ ] * T_LNUMBER ) , T_VARIABLE($sprites) [ T_VARIABLE($key) ] [ ] , T_VARIABLE($sprites) [ T_VARIABLE($key) ] [ ] ) ; } } } T_CLOSE_TAG',no
'T_OPEN_TAG T_STRING ( ) ; T_STRING ( . T_STRING ( , T_STRING ( ) + T_LNUMBER ) . ) ; T_FUNCTION(get_color) ( T_VARIABLE($get_name) , T_VARIABLE($default) ) { T_VARIABLE($opts) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_VARIABLE($color) = T_STRING ( T_STRING , T_VARIABLE($get_name) , T_STRING , T_VARIABLE($opts) ) ; T_IF ( T_STRING ( , T_VARIABLE($color) ) ) { T_RETURN . T_VARIABLE($color) ; } T_RETURN T_VARIABLE($color) ? T_VARIABLE($color) : T_VARIABLE($default) ; } T_CLOSE_TAG T_OPEN_TAG T_ECHO T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( , ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( , ) T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($types) = T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($types) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($mimetype) ) { T_IF ( T_ISSET ( T_VARIABLE($types) [ ] [ T_VARIABLE($mimetype) ] ) ) { T_ECHO . T_VARIABLE($mimetype) . ; } T_ELSE { T_ECHO T_VARIABLE($mimetype) . ; } } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( , ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($odd_row) = T_STRING ; T_FOREACH ( T_VARIABLE($types) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($transform) ) { T_VARIABLE($desc) = T_STRING ( T_VARIABLE($types) [ ] [ T_VARIABLE($key) ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($odd_row) ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($transform) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_VARIABLE($desc) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($odd_row) = ! T_VARIABLE($odd_row) ; } T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_STRING ( , T_STRING ) ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_VARIABLE($cfgRelation) = T_STRING ( ) ; T_REQUIRE_ONCE ; T_VARIABLE($request_params) = T_ARRAY ( , , , , , , , ) ; T_FOREACH ( T_VARIABLE($request_params) T_AS T_VARIABLE($one_request_param) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ T_VARIABLE($one_request_param) ] ) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($one_request_param) ] = T_VARIABLE($_REQUEST) [ T_VARIABLE($one_request_param) ] ; } } T_STRING ( T_VARIABLE($db) ) ; T_IF ( T_ISSET ( T_VARIABLE($where_clause) ) ) { T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . . T_VARIABLE($where_clause) . , T_STRING , T_STRING ) ; T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($table) ) . , T_STRING , T_STRING ) ; T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ; } T_IF ( ! T_VARIABLE($row) ) { T_EXIT ; } T_VARIABLE($default_ct) = ; T_IF ( T_VARIABLE($cfgRelation) [ ] T_BOOLEAN_AND T_VARIABLE($cfgRelation) [ ] ) { T_VARIABLE($mime_map) = T_STRING ( T_VARIABLE($db) , T_VARIABLE($table) ) ; T_VARIABLE($mime_options) = T_STRING ( T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($transform_key) ] [ ] ) ? T_VARIABLE($mime_map) [ T_VARIABLE($transform_key) ] [ ] : ) ; T_FOREACH ( T_VARIABLE($mime_options) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($option) ) { T_IF ( T_STRING ( T_VARIABLE($option) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($mime_options) [ ] = T_VARIABLE($option) ; } } } T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($ct) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($ct) ) ) { T_VARIABLE($mime_type) = T_VARIABLE($ct) ; } T_ELSE { T_VARIABLE($mime_type) = ( T_ISSET ( T_VARIABLE($mime_map) [ T_VARIABLE($transform_key) ] [ ] ) ? T_STRING ( , , T_VARIABLE($mime_map) [ T_VARIABLE($transform_key) ] [ ] ) : T_VARIABLE($default_ct) ) . ( T_ISSET ( T_VARIABLE($mime_options) [ ] ) ? T_VARIABLE($mime_options) [ ] : ) ; } T_STRING ( T_VARIABLE($cn) , T_VARIABLE($mime_type) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($resize) ) ) { T_ECHO T_VARIABLE($row) [ T_VARIABLE($transform_key) ] ; } T_ELSE { T_VARIABLE($srcImage) = T_STRING ( T_VARIABLE($row) [ T_VARIABLE($transform_key) ] ) ; T_VARIABLE($srcWidth) = T_STRING ( T_VARIABLE($srcImage) ) ; T_VARIABLE($srcHeight) = T_STRING ( T_VARIABLE($srcImage) ) ; T_VARIABLE($ratioWidth) = T_VARIABLE($srcWidth) / T_VARIABLE($newWidth) ; T_VARIABLE($ratioHeight) = T_VARIABLE($srcHeight) / T_VARIABLE($newHeight) ; T_IF ( T_VARIABLE($ratioWidth) < T_VARIABLE($ratioHeight) ) { T_VARIABLE($destWidth) = T_VARIABLE($srcWidth) / T_VARIABLE($ratioHeight) ; T_VARIABLE($destHeight) = T_VARIABLE($newHeight) ; } T_ELSE { T_VARIABLE($destWidth) = T_VARIABLE($newWidth) ; T_VARIABLE($destHeight) = T_VARIABLE($srcHeight) / T_VARIABLE($ratioWidth) ; } T_IF ( T_VARIABLE($resize) ) { T_VARIABLE($destImage) = T_STRING ( T_VARIABLE($destWidth) , T_VARIABLE($destHeight) ) ; } T_STRING ( T_VARIABLE($destImage) , T_VARIABLE($srcImage) , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_VARIABLE($destWidth) , T_VARIABLE($destHeight) , T_VARIABLE($srcWidth) , T_VARIABLE($srcHeight) ) ; T_IF ( T_VARIABLE($resize) T_IS_EQUAL ) { T_STRING ( T_VARIABLE($destImage) , T_STRING , T_LNUMBER ) ; } T_IF ( T_VARIABLE($resize) T_IS_EQUAL ) { T_STRING ( T_VARIABLE($destImage) ) ; } T_STRING ( T_VARIABLE($srcImage) ) ; T_STRING ( T_VARIABLE($destImage) ) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_IF ( ! T_STRING ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_OR ! T_STRING ( , T_VARIABLE($_GET) [ ] ) ) { T_STRING ( . T_VARIABLE($cfg) [ ] ) ; } T_ELSE { T_STRING ( . T_VARIABLE($_GET) [ ] ) ; } T_EXIT ( ) ; T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($header) = T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) = T_VARIABLE($header) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($scripts) T_OBJECT_OPERATOR T_STRING ( ) ; T_IF ( ! T_VARIABLE($cfg) [ ] ) { T_VARIABLE($cfg) [ ] = T_STRING ( ) ; } T_IF ( T_VARIABLE($cfg) [ ] [ ] T_IS_EQUAL T_BOOLEAN_OR ! T_VARIABLE($cfg) [ ] ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) T_OBJECT_OPERATOR T_STRING ( ) ; T_EXIT ; } T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_VARIABLE($_REQUEST) [ ] T_IS_EQUAL ) { T_VARIABLE($password) = ; } T_ELSE { T_VARIABLE($password) = T_VARIABLE($_REQUEST) [ ] ; } T_VARIABLE($change_password_message) = T_STRING ( ) ; T_VARIABLE($msg) = T_VARIABLE($change_password_message) [ ] ; T_IF ( ! T_VARIABLE($change_password_message) [ ] ) { T_STRING ( T_VARIABLE($password) , T_VARIABLE($msg) , T_VARIABLE($change_password_message) ) ; } T_ELSE { T_STRING ( T_VARIABLE($change_password_message) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($msg) ) ) { T_VARIABLE($msg) T_OBJECT_OPERATOR T_STRING ( ) ; T_UNSET ( T_VARIABLE($msg) ) ; } T_REQUIRE_ONCE ; T_ECHO T_STRING ( T_VARIABLE($username) , T_VARIABLE($hostname) ) ; T_EXIT ; T_FUNCTION(PMA_getChangePassMessage) ( T_VARIABLE($change_password_message) , T_VARIABLE($sql_query) = ) { T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_IF ( T_VARIABLE($change_password_message) [ ] ) { T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($change_password_message) [ ] ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; } T_ELSE { T_VARIABLE($sql_query) = T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($change_password_message) [ ] , T_VARIABLE($sql_query) , ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_VARIABLE($sql_query) ) ; } T_EXIT ; } } T_FUNCTION(PMA_setChangePasswordMsg) ( ) { T_VARIABLE($error) = T_STRING ; T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_IF ( ( T_VARIABLE($_REQUEST) [ ] T_IS_NOT_EQUAL ) ) { T_IF ( T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($error) = T_STRING ; } T_ELSEIF ( T_VARIABLE($_REQUEST) [ ] T_IS_NOT_EQUAL T_VARIABLE($_REQUEST) [ ] ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; T_VARIABLE($error) = T_STRING ; } } T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($error) , T_DOUBLE_ARROW T_VARIABLE($message) ) ; } T_FUNCTION(PMA_changePassword) ( T_VARIABLE($password) , T_VARIABLE($message) , T_VARIABLE($change_password_message) ) { T_VARIABLE($_url_params) = T_ARRAY ( ) ; T_VARIABLE($hashing_function) = T_STRING ( ) ; T_VARIABLE($sql_query) = . ( ( T_VARIABLE($password) T_IS_EQUAL ) ? : T_VARIABLE($hashing_function) . ) ; T_STRING ( T_VARIABLE($password) , T_VARIABLE($_url_params) , T_VARIABLE($sql_query) , T_VARIABLE($hashing_function) ) ; T_VARIABLE($new_url_params) = T_STRING ( T_VARIABLE($_url_params) , T_VARIABLE($password) ) ; T_STRING ( T_VARIABLE($change_password_message) , T_VARIABLE($sql_query) ) ; T_STRING ( T_VARIABLE($message) , T_VARIABLE($sql_query) , T_VARIABLE($new_url_params) ) ; } T_FUNCTION(PMA_changePassHashingFunction) ( ) { T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , , ) ) { T_VARIABLE($hashing_function) = ; } T_ELSE { T_VARIABLE($hashing_function) = ; } T_RETURN T_VARIABLE($hashing_function) ; } T_FUNCTION(PMA_ChangePassUrlParamsAndSubmitQuery) ( T_VARIABLE($password) , T_VARIABLE($_url_params) , T_VARIABLE($sql_query) , T_VARIABLE($hashing_function) ) { T_VARIABLE($err_url) = . T_STRING ( T_VARIABLE($_url_params) ) ; T_VARIABLE($local_query) = . ( ( T_VARIABLE($password) T_IS_EQUAL ) ? : T_VARIABLE($hashing_function) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($password) ) . ) ; T_IF ( ! @ T_STRING ( T_VARIABLE($local_query) ) ) { T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) , T_VARIABLE($sql_query) , T_STRING , T_VARIABLE($err_url) ) ; } } T_FUNCTION(PMA_changePassAuthType) ( T_VARIABLE($_url_params) , T_VARIABLE($password) ) { T_GLOBAL T_VARIABLE($auth_plugin) ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] T_IS_EQUAL ) { T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( . T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($auth_plugin) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($password) , T_VARIABLE($GLOBALS) [ ] [ ] ) ) ; } T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] [ ] T_IS_EQUAL ) { T_VARIABLE($_url_params) [ ] = ; } T_RETURN T_VARIABLE($_url_params) ; } T_FUNCTION(PMA_changePassDisplayPage) ( T_VARIABLE($message) , T_VARIABLE($sql_query) , T_VARIABLE($_url_params) ) { T_ECHO . T_STRING ( ) . . ; T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($message) , T_VARIABLE($sql_query) , ) ; T_ECHO . T_STRING ( T_VARIABLE($_url_params) ) . . . . T_STRING ( ) . ; T_EXIT ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_STRING ( , T_STRING ) ; T_REQUIRE_ONCE ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) T_BOOLEAN_AND T_STRING ( ) < T_VARIABLE($_SESSION) [ ] [ ] [ ] + T_LNUMBER * T_LNUMBER ) { T_VARIABLE($save) = T_STRING ; T_VARIABLE($response) = T_VARIABLE($_SESSION) [ ] [ ] [ ] ; } T_ELSE { T_VARIABLE($save) = T_STRING ; T_VARIABLE($file) = ; T_IF ( T_STRING ( ) ) { T_VARIABLE($response) = T_STRING ( T_VARIABLE($file) ) ; } T_ELSE T_IF ( T_STRING ( ) ) { T_VARIABLE($curl_handle) = T_STRING ( T_VARIABLE($file) ) ; T_STRING ( T_VARIABLE($curl_handle) , T_STRING , T_LNUMBER ) ; T_VARIABLE($response) = T_STRING ( T_VARIABLE($curl_handle) ) ; } } T_STRING ( ) ; T_VARIABLE($data) = T_STRING ( T_VARIABLE($response) ) ; T_IF ( T_STRING ( T_VARIABLE($data) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( T_VARIABLE($save) ) { T_VARIABLE($_SESSION) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($response) , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_ECHO T_VARIABLE($response) ; } T_CLOSE_TAG',no
'T_OPEN_TAG T_REQUIRE_ONCE ; T_REQUIRE ; T_VARIABLE($url_params) [ ] = T_VARIABLE($cfg) [ ] ; T_VARIABLE($url_params) [ ] = ; T_VARIABLE($view_algorithm_options) = T_ARRAY ( , , , ) ; T_VARIABLE($view_with_options) = T_ARRAY ( , ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($sep) = ; T_VARIABLE($sql_query) = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ ] ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL ; } T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] [ ] , T_VARIABLE($view_algorithm_options) ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($sep) . . T_VARIABLE($_REQUEST) [ ] [ ] ; } T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($sep) . . T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_REQUEST) [ ] [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_REQUEST) [ ] [ ] ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($sep) . . T_VARIABLE($_REQUEST) [ ] [ ] . ; } T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($sep) . . T_VARIABLE($_REQUEST) [ ] [ ] ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ ] ) ) { T_VARIABLE($options) = T_STRING ( T_VARIABLE($_REQUEST) [ ] [ ] , T_VARIABLE($view_with_options) ) ; T_IF ( T_STRING ( T_VARIABLE($options) ) ) { T_VARIABLE($sql_query) T_CONCAT_EQUAL T_VARIABLE($sep) . . T_STRING ( , T_VARIABLE($options) ) ; } } T_IF ( T_STRING ( T_VARIABLE($sql_query) ) ) { T_INCLUDE_ONCE ; T_VARIABLE($view_columns) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ ] ) ) { T_VARIABLE($view_columns) = T_STRING ( , T_VARIABLE($_REQUEST) [ ] [ ] ) ; } T_VARIABLE($column_map) = T_STRING ( T_VARIABLE($_REQUEST) [ ] [ ] , T_VARIABLE($view_columns) ) ; T_VARIABLE($pma_tranformation_data) = T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_VARIABLE($pma_tranformation_data) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($new_transformations_sql) = T_STRING ( T_VARIABLE($pma_tranformation_data) , T_VARIABLE($column_map) , T_VARIABLE($_REQUEST) [ ] [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_IF ( T_VARIABLE($new_transformations_sql) T_IS_NOT_EQUAL ) { T_STRING ( T_VARIABLE($new_transformations_sql) ) ; } } T_UNSET ( T_VARIABLE($pma_tranformation_data) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_INCLUDE . T_VARIABLE($cfg) [ ] ; } T_ELSE { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_STRING T_DOUBLE_COLON T_STRING ( ) , T_VARIABLE($sql_query) ) ) ; } T_EXIT ; } T_ELSE { T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($message) = T_STRING T_DOUBLE_COLON T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($response) = T_STRING T_DOUBLE_COLON T_STRING ( ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( , T_STRING T_DOUBLE_COLON T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($sql_query) T_ENCAPSED_AND_WHITESPACE . T_STRING ( ) ) ) ; T_VARIABLE($response) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_EXIT ; } } } T_VARIABLE($view) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($sql_query) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_IF ( T_STRING ( T_VARIABLE($_REQUEST) [ ] , ) ) { T_VARIABLE($view) = T_STRING ( T_VARIABLE($view) , T_VARIABLE($_REQUEST) [ ] ) ; } T_VARIABLE($url_params) [ ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($url_params) [ ] = T_LNUMBER ; T_VARIABLE($htmlString) = . . . T_STRING ( T_VARIABLE($url_params) ) . . . T_STRING ( ) . T_STRING T_DOUBLE_COLON T_STRING ( , ) . . . . ; T_IF ( T_VARIABLE($view) [ ] ) { T_VARIABLE($htmlString) T_CONCAT_EQUAL ; } T_VARIABLE($htmlString) T_CONCAT_EQUAL . . . . . ; T_FOREACH ( T_VARIABLE($view_algorithm_options) T_AS T_VARIABLE($option) ) { T_VARIABLE($htmlString) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($option) ) . ; T_IF ( T_VARIABLE($view) [ ] T_IS_IDENTICAL T_VARIABLE($option) ) { T_VARIABLE($htmlString) T_CONCAT_EQUAL ; } T_VARIABLE($htmlString) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($option) ) . ; } T_VARIABLE($htmlString) T_CONCAT_EQUAL . . . . T_STRING ( ) . . . . T_STRING ( T_VARIABLE($view) [ ] ) . . . . . T_STRING ( ) . . . . . T_STRING ( T_VARIABLE($view) [ ] ) . . . . . . . T_VARIABLE($cfg) [ ] . . . T_VARIABLE($cfg) [ ] . . . T_VARIABLE($text_dir) . ; T_IF ( T_VARIABLE($GLOBALS) [ ] [ ] T_BOOLEAN_OR T_STRING ) { T_VARIABLE($htmlString) T_CONCAT_EQUAL ; } T_VARIABLE($htmlString) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($view) [ ] ) . . . . . ; T_FOREACH ( T_VARIABLE($view_with_options) T_AS T_VARIABLE($option) ) { T_VARIABLE($htmlString) T_CONCAT_EQUAL ; T_IF ( T_STRING ( T_VARIABLE($option) , T_VARIABLE($view) [ ] ) ) { T_VARIABLE($htmlString) T_CONCAT_EQUAL ; } T_VARIABLE($htmlString) T_CONCAT_EQUAL . T_STRING ( , , T_STRING ( T_VARIABLE($option) ) ) . . . T_STRING ( T_VARIABLE($option) ) . . . T_STRING ( , , T_STRING ( T_VARIABLE($option) ) ) . . T_STRING ( T_VARIABLE($option) ) . ; } T_VARIABLE($htmlString) T_CONCAT_EQUAL . . . ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($htmlString) T_CONCAT_EQUAL . . T_STRING ( ) . . ; } T_ELSE { T_VARIABLE($htmlString) T_CONCAT_EQUAL . ; } T_VARIABLE($htmlString) T_CONCAT_EQUAL . ; T_ECHO T_VARIABLE($htmlString) ;',yes
'T_OPEN_TAG T_REQUIRE_ONCE ; T_VARIABLE($pma_table) = T_NEW T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_REQUIRE ; T_VARIABLE($url_query) T_CONCAT_EQUAL ; T_VARIABLE($url_params) [ ] = T_VARIABLE($url_params) [ ] = ; T_REQUIRE ; T_VARIABLE($reread_info) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_message) = ; T_VARIABLE($warning_messages) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_IF ( T_VARIABLE($pma_table) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_message) T_CONCAT_EQUAL T_VARIABLE($pma_table) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($result) = T_STRING ; T_VARIABLE($GLOBALS) [ ] = T_VARIABLE($pma_table) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($reread_info) = T_STRING ; T_VARIABLE($reload) = T_STRING ; } T_ELSE { T_VARIABLE($_message) T_CONCAT_EQUAL T_VARIABLE($pma_table) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($result) = T_STRING ; } } } T_IF ( T_ISSET ( T_VARIABLE($result) ) ) { T_VARIABLE($_type) = ; T_IF ( T_EMPTY ( T_VARIABLE($_message) ) ) { T_VARIABLE($_message) = T_VARIABLE($result) ? T_STRING ( ) : T_STRING ( ) ; T_VARIABLE($_type) = T_VARIABLE($result) ? : ; } T_IF ( ! T_EMPTY ( T_VARIABLE($warning_messages) ) ) { T_VARIABLE($_message) = T_NEW T_STRING ; T_VARIABLE($_message) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($warning_messages) ) ; T_VARIABLE($_message) T_OBJECT_OPERATOR T_STRING ( T_STRING ) ; T_UNSET ( T_VARIABLE($warning_messages) ) ; } T_ECHO T_STRING T_DOUBLE_COLON T_STRING ( T_VARIABLE($_message) , T_VARIABLE($sql_query) , T_VARIABLE($_type) , T_VARIABLE($is_view) = T_STRING ) ; T_UNSET ( T_VARIABLE($_message) , T_VARIABLE($_type) ) ; } T_VARIABLE($url_params) [ ] = ; T_VARIABLE($url_params) [ ] = ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( T_VARIABLE($GLOBALS) [ ] ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ECHO T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML',no
'T_OPEN_TAG T_STRING ( , T_STRING ) ; T_REQUIRE ; T_REQUIRE ; T_VARIABLE($parameters) = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($_SERVER) [ ] , T_DOUBLE_ARROW T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($icon) = ; T_VARIABLE($name) = ; T_VARIABLE($ini_file) = ; T_FOREACH ( T_VARIABLE($parameters) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($ini_file) T_CONCAT_EQUAL T_VARIABLE($key) . . T_VARIABLE($value) . ; } T_STRING ( T_VARIABLE($name) , , T_LNUMBER , T_STRING ) ; T_VARIABLE($zip) = T_NEW T_STRING ; T_VARIABLE($zip) T_OBJECT_OPERATOR T_STRING ( ) ; T_VARIABLE($zip) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($ini_file) , ) ; T_VARIABLE($zip) T_OBJECT_OPERATOR T_STRING ( T_STRING ( T_VARIABLE($icon) ) , ) ; T_VARIABLE($zip) T_OBJECT_OPERATOR T_STRING ( ) ; T_CLOSE_TAG',no
